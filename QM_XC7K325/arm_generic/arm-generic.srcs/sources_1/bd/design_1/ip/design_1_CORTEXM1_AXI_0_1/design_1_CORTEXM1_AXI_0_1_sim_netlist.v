// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2019.1 (win64) Build 2552052 Fri May 24 14:49:42 MDT 2019
// Date        : Tue Mar 14 18:01:54 2023
// Host        : DESKTOP-R8BVPM7 running 64-bit major release  (build 9200)
// Command     : write_verilog -force -mode funcsim
//               c:/Users/george/Documents/Workspace/Xilinx/XC7K325/arm-generic/arm-generic.srcs/sources_1/bd/design_1/ip/design_1_CORTEXM1_AXI_0_1/design_1_CORTEXM1_AXI_0_1_sim_netlist.v
// Design      : design_1_CORTEXM1_AXI_0_1
// Purpose     : This verilog netlist is a functional simulation representation of the design and should not be modified
//               or synthesized. This netlist cannot be used for SDF annotated simulation.
// Device      : xc7k325tffg676-1
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

(* CHECK_LICENSE_TYPE = "design_1_CORTEXM1_AXI_0_1,CortexM1DbgAXI,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* IP_DEFINITION_SOURCE = "package_project" *) 
(* X_CORE_INFO = "CortexM1DbgAXI,Vivado 2019.1" *) 
(* NotValidForBitStream *)
module design_1_CORTEXM1_AXI_0_1
   (SYSRESETREQ,
    LOCKUP,
    HWDATA,
    HCLK,
    SYSRESETn,
    IRQ,
    NMI,
    CFGITCMEN,
    HRDATA,
    AWADDR,
    AWLEN,
    AWSIZE,
    AWBURST,
    AWLOCK,
    AWCACHE,
    AWPROT,
    AWUSER,
    AWVALID,
    AWREADY,
    WSTRB,
    WLAST,
    WVALID,
    WREADY,
    BRESP,
    BVALID,
    BREADY,
    ARADDR,
    ARLEN,
    ARSIZE,
    ARBURST,
    ARLOCK,
    ARCACHE,
    ARPROT,
    ARUSER,
    ARVALID,
    ARREADY,
    RRESP,
    RLAST,
    RVALID,
    RREADY);
  output SYSRESETREQ;
  output LOCKUP;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 CM1_AXI3 WDATA" *) output [31:0]HWDATA;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 HCLK CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME HCLK, ASSOCIATED_BUSIF CM1_AXI3, ASSOCIATED_RESET SYSRESETn, FREQ_HZ 50000000, PHASE 0.0, CLK_DOMAIN /clk_wiz_1_clk_out1, INSERT_VIP 0" *) input HCLK;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 SYSRESETn RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME SYSRESETn, POLARITY ACTIVE_LOW, INSERT_VIP 0" *) input SYSRESETn;
  (* X_INTERFACE_INFO = "xilinx.com:signal:interrupt:1.0 IRQ INTERRUPT" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME IRQ, PortWidth 1" *) input [0:0]IRQ;
  (* X_INTERFACE_INFO = "xilinx.com:signal:interrupt:1.0 NMI INTERRUPT" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME NMI, SENSITIVITY LEVEL_HIGH, PortWidth 1" *) input NMI;
  input [1:0]CFGITCMEN;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 CM1_AXI3 RDATA" *) input [31:0]HRDATA;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 CM1_AXI3 AWADDR" *) output [31:0]AWADDR;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 CM1_AXI3 AWLEN" *) output [3:0]AWLEN;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 CM1_AXI3 AWSIZE" *) output [2:0]AWSIZE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 CM1_AXI3 AWBURST" *) output [1:0]AWBURST;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 CM1_AXI3 AWLOCK" *) output [1:0]AWLOCK;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 CM1_AXI3 AWCACHE" *) output [3:0]AWCACHE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 CM1_AXI3 AWPROT" *) output [2:0]AWPROT;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 CM1_AXI3 AWUSER" *) output [0:0]AWUSER;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 CM1_AXI3 AWVALID" *) output AWVALID;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 CM1_AXI3 AWREADY" *) input AWREADY;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 CM1_AXI3 WSTRB" *) output [3:0]WSTRB;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 CM1_AXI3 WLAST" *) output WLAST;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 CM1_AXI3 WVALID" *) output WVALID;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 CM1_AXI3 WREADY" *) input WREADY;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 CM1_AXI3 BRESP" *) input [1:0]BRESP;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 CM1_AXI3 BVALID" *) input BVALID;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 CM1_AXI3 BREADY" *) output BREADY;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 CM1_AXI3 ARADDR" *) output [31:0]ARADDR;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 CM1_AXI3 ARLEN" *) output [3:0]ARLEN;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 CM1_AXI3 ARSIZE" *) output [2:0]ARSIZE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 CM1_AXI3 ARBURST" *) output [1:0]ARBURST;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 CM1_AXI3 ARLOCK" *) output [1:0]ARLOCK;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 CM1_AXI3 ARCACHE" *) output [3:0]ARCACHE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 CM1_AXI3 ARPROT" *) output [2:0]ARPROT;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 CM1_AXI3 ARUSER" *) output [0:0]ARUSER;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 CM1_AXI3 ARVALID" *) output ARVALID;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 CM1_AXI3 ARREADY" *) input ARREADY;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 CM1_AXI3 RRESP" *) input [1:0]RRESP;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 CM1_AXI3 RLAST" *) input RLAST;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 CM1_AXI3 RVALID" *) input RVALID;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 CM1_AXI3 RREADY" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME CM1_AXI3, PROTOCOL AXI3, DATA_WIDTH 32, FREQ_HZ 50000000, ID_WIDTH 0, ADDR_WIDTH 32, AWUSER_WIDTH 1, ARUSER_WIDTH 1, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 1, HAS_LOCK 1, HAS_PROT 1, HAS_CACHE 1, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 1, NUM_READ_OUTSTANDING 2, NUM_WRITE_OUTSTANDING 2, MAX_BURST_LENGTH 16, PHASE 0.0, CLK_DOMAIN /clk_wiz_1_clk_out1, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0" *) output RREADY;

  wire [31:0]ARADDR;
  wire [1:0]ARBURST;
  wire [3:0]ARCACHE;
  wire [3:0]ARLEN;
  wire [1:0]ARLOCK;
  wire [2:0]ARPROT;
  wire ARREADY;
  wire [2:0]ARSIZE;
  wire [0:0]ARUSER;
  wire ARVALID;
  wire [31:0]AWADDR;
  wire [1:0]AWBURST;
  wire [3:0]AWCACHE;
  wire [3:0]AWLEN;
  wire [1:0]AWLOCK;
  wire [2:0]AWPROT;
  wire AWREADY;
  wire [2:0]AWSIZE;
  wire [0:0]AWUSER;
  wire AWVALID;
  wire BREADY;
  wire [1:0]BRESP;
  wire BVALID;
  wire [1:0]CFGITCMEN;
  wire HCLK;
  wire [31:0]HRDATA;
  wire [31:0]HWDATA;
  wire [0:0]IRQ;
  wire LOCKUP;
  wire NMI;
  wire RLAST;
  wire RREADY;
  wire [1:0]RRESP;
  wire RVALID;
  wire SYSRESETREQ;
  wire SYSRESETn;
  wire WLAST;
  wire WREADY;
  wire [3:0]WSTRB;
  wire WVALID;
  wire NLW_inst_DBGRESTARTED_UNCONNECTED;
  wire NLW_inst_HALTED_UNCONNECTED;
  wire NLW_inst_JTAGNSW_UNCONNECTED;
  wire NLW_inst_JTAGTOP_UNCONNECTED;
  wire NLW_inst_SWDO_UNCONNECTED;
  wire NLW_inst_SWDOEN_UNCONNECTED;
  wire NLW_inst_TDO_UNCONNECTED;
  wire NLW_inst_nTDOEN_UNCONNECTED;

  (* AUSER_MAX = "0" *) 
  (* AUSER_WIDTH = "1" *) 
  (* BE8 = "1'b0" *) 
  (* DEBUG_SEL = "3" *) 
  (* DTCM_ADDR_WIDTH = "13" *) 
  (* DTCM_INIT_FILE = "" *) 
  (* DTCM_INIT_RAM = "1'b0" *) 
  (* DTCM_SIZE = "4'b0110" *) 
  (* ITCM_ADDR_WIDTH = "13" *) 
  (* ITCM_INIT_FILE = "" *) 
  (* ITCM_INIT_RAM = "1'b0" *) 
  (* ITCM_SIZE = "4'b0110" *) 
  (* JTAG = "0" *) 
  (* NUM_IRQ = "1" *) 
  (* OS = "1'b1" *) 
  (* SMALL_DEBUG = "1'b1" *) 
  (* SMALL_MUL = "1'b0" *) 
  (* STRB_MAX = "3" *) 
  (* STRB_WIDTH = "4" *) 
  (* SW = "0" *) 
  design_1_CORTEXM1_AXI_0_1_CortexM1DbgAXI inst
       (.ARADDR(ARADDR),
        .ARBURST(ARBURST),
        .ARCACHE(ARCACHE),
        .ARLEN(ARLEN),
        .ARLOCK(ARLOCK),
        .ARPROT(ARPROT),
        .ARREADY(ARREADY),
        .ARSIZE(ARSIZE),
        .ARUSER(ARUSER),
        .ARVALID(ARVALID),
        .AWADDR(AWADDR),
        .AWBURST(AWBURST),
        .AWCACHE(AWCACHE),
        .AWLEN(AWLEN),
        .AWLOCK(AWLOCK),
        .AWPROT(AWPROT),
        .AWREADY(AWREADY),
        .AWSIZE(AWSIZE),
        .AWUSER(AWUSER),
        .AWVALID(AWVALID),
        .BREADY(BREADY),
        .BRESP(BRESP),
        .BVALID(BVALID),
        .CFGITCMEN(CFGITCMEN),
        .DBGRESETn(1'b1),
        .DBGRESTART(1'b0),
        .DBGRESTARTED(NLW_inst_DBGRESTARTED_UNCONNECTED),
        .EDBGRQ(1'b0),
        .HALTED(NLW_inst_HALTED_UNCONNECTED),
        .HCLK(HCLK),
        .HRDATA(HRDATA),
        .HWDATA(HWDATA),
        .IRQ(IRQ),
        .JTAGNSW(NLW_inst_JTAGNSW_UNCONNECTED),
        .JTAGTOP(NLW_inst_JTAGTOP_UNCONNECTED),
        .LOCKUP(LOCKUP),
        .NMI(NMI),
        .RLAST(RLAST),
        .RREADY(RREADY),
        .RRESP(RRESP),
        .RVALID(RVALID),
        .SWCLKTCK(1'b0),
        .SWDITMS(1'b0),
        .SWDO(NLW_inst_SWDO_UNCONNECTED),
        .SWDOEN(NLW_inst_SWDOEN_UNCONNECTED),
        .SYSRESETREQ(SYSRESETREQ),
        .SYSRESETn(SYSRESETn),
        .TDI(1'b0),
        .TDO(NLW_inst_TDO_UNCONNECTED),
        .WLAST(WLAST),
        .WREADY(WREADY),
        .WSTRB(WSTRB),
        .WVALID(WVALID),
        .nTDOEN(NLW_inst_nTDOEN_UNCONNECTED),
        .nTRST(1'b1));
endmodule

(* ORIG_REF_NAME = "A11AhbLiteMToAxi" *) 
module design_1_CORTEXM1_AXI_0_1_A11AhbLiteMToAxi
   (HREADY,
    iRREADY_reg_0,
    ARPROT,
    iWLAST_reg_0,
    AhbDataValid,
    HReadyReg_reg_0,
    AWVALID,
    ARVALID,
    ARADDR,
    ARSIZE,
    WSTRB,
    HCLK,
    \ADDR_reg[31]_0 ,
    NewAddr,
    HWRITE,
    AProtNxt,
    WValidNxt,
    AhbDataValid_reg_0,
    RVALID,
    RLAST,
    BVALID,
    AWREADY,
    ARREADY,
    RRESP,
    BRESP,
    Q,
    \ASIZE_reg[1]_0 ,
    E,
    D);
  output HREADY;
  output iRREADY_reg_0;
  output [1:0]ARPROT;
  output iWLAST_reg_0;
  output AhbDataValid;
  output HReadyReg_reg_0;
  output AWVALID;
  output ARVALID;
  output [31:0]ARADDR;
  output [1:0]ARSIZE;
  output [3:0]WSTRB;
  input HCLK;
  input \ADDR_reg[31]_0 ;
  input NewAddr;
  input HWRITE;
  input [0:0]AProtNxt;
  input WValidNxt;
  input AhbDataValid_reg_0;
  input RVALID;
  input RLAST;
  input BVALID;
  input AWREADY;
  input ARREADY;
  input [0:0]RRESP;
  input [0:0]BRESP;
  input [31:0]Q;
  input [1:0]\ASIZE_reg[1]_0 ;
  input [0:0]E;
  input [3:0]D;

  wire \ADDR_reg[31]_0 ;
  wire [0:0]AProtNxt;
  wire [31:0]ARADDR;
  wire [1:0]ARPROT;
  wire ARREADY;
  wire [1:0]ARSIZE;
  wire ARVALID;
  wire [1:0]\ASIZE_reg[1]_0 ;
  wire AVALID;
  wire AVALID_i_1_n_0;
  wire AValidNxt;
  wire AWREADY;
  wire AWRITE;
  wire AWVALID;
  wire AhbDataValid;
  wire AhbDataValid_reg_0;
  wire [0:0]BRESP;
  wire BRespWait;
  wire BRespWaitNxt;
  wire BVALID;
  wire [3:0]D;
  wire [0:0]E;
  wire HCLK;
  wire HREADY;
  wire HReadyReg;
  wire HReadyReg_i_2_n_0;
  wire HReadyReg_i_3_n_0;
  wire HReadyReg_reg_0;
  wire [0:0]HRespReg;
  wire \HRespReg[0]_i_2_n_0 ;
  wire HWRITE;
  wire MissedAddr;
  wire MissedAddr_i_1_n_0;
  wire NewAddr;
  wire [31:0]Q;
  wire RLAST;
  wire [0:0]RRESP;
  wire RVALID;
  wire ReadErrorMidBurst;
  wire ReadErrorMidBurstNxt;
  wire ReadTerminate;
  wire ReadTerminateNxt;
  wire ReadXfer;
  wire ReadXfer_i_1_n_0;
  wire [3:0]WSTRB;
  wire WValidNxt;
  wire [0:0]axi_hresp;
  wire iRREADY_i_1_n_0;
  wire iRREADY_reg_0;
  wire iWLAST_reg_0;

  FDCE \ABURST_reg[0] 
       (.C(HCLK),
        .CE(NewAddr),
        .CLR(\ADDR_reg[31]_0 ),
        .D(1'b1),
        .Q(ARPROT[0]));
  FDCE \ADDR_reg[0] 
       (.C(HCLK),
        .CE(NewAddr),
        .CLR(\ADDR_reg[31]_0 ),
        .D(Q[0]),
        .Q(ARADDR[0]));
  FDCE \ADDR_reg[10] 
       (.C(HCLK),
        .CE(NewAddr),
        .CLR(\ADDR_reg[31]_0 ),
        .D(Q[10]),
        .Q(ARADDR[10]));
  FDCE \ADDR_reg[11] 
       (.C(HCLK),
        .CE(NewAddr),
        .CLR(\ADDR_reg[31]_0 ),
        .D(Q[11]),
        .Q(ARADDR[11]));
  FDCE \ADDR_reg[12] 
       (.C(HCLK),
        .CE(NewAddr),
        .CLR(\ADDR_reg[31]_0 ),
        .D(Q[12]),
        .Q(ARADDR[12]));
  FDCE \ADDR_reg[13] 
       (.C(HCLK),
        .CE(NewAddr),
        .CLR(\ADDR_reg[31]_0 ),
        .D(Q[13]),
        .Q(ARADDR[13]));
  FDCE \ADDR_reg[14] 
       (.C(HCLK),
        .CE(NewAddr),
        .CLR(\ADDR_reg[31]_0 ),
        .D(Q[14]),
        .Q(ARADDR[14]));
  FDCE \ADDR_reg[15] 
       (.C(HCLK),
        .CE(NewAddr),
        .CLR(\ADDR_reg[31]_0 ),
        .D(Q[15]),
        .Q(ARADDR[15]));
  FDCE \ADDR_reg[16] 
       (.C(HCLK),
        .CE(NewAddr),
        .CLR(\ADDR_reg[31]_0 ),
        .D(Q[16]),
        .Q(ARADDR[16]));
  FDCE \ADDR_reg[17] 
       (.C(HCLK),
        .CE(NewAddr),
        .CLR(\ADDR_reg[31]_0 ),
        .D(Q[17]),
        .Q(ARADDR[17]));
  FDCE \ADDR_reg[18] 
       (.C(HCLK),
        .CE(NewAddr),
        .CLR(\ADDR_reg[31]_0 ),
        .D(Q[18]),
        .Q(ARADDR[18]));
  FDCE \ADDR_reg[19] 
       (.C(HCLK),
        .CE(NewAddr),
        .CLR(\ADDR_reg[31]_0 ),
        .D(Q[19]),
        .Q(ARADDR[19]));
  FDCE \ADDR_reg[1] 
       (.C(HCLK),
        .CE(NewAddr),
        .CLR(\ADDR_reg[31]_0 ),
        .D(Q[1]),
        .Q(ARADDR[1]));
  FDCE \ADDR_reg[20] 
       (.C(HCLK),
        .CE(NewAddr),
        .CLR(\ADDR_reg[31]_0 ),
        .D(Q[20]),
        .Q(ARADDR[20]));
  FDCE \ADDR_reg[21] 
       (.C(HCLK),
        .CE(NewAddr),
        .CLR(\ADDR_reg[31]_0 ),
        .D(Q[21]),
        .Q(ARADDR[21]));
  FDCE \ADDR_reg[22] 
       (.C(HCLK),
        .CE(NewAddr),
        .CLR(\ADDR_reg[31]_0 ),
        .D(Q[22]),
        .Q(ARADDR[22]));
  FDCE \ADDR_reg[23] 
       (.C(HCLK),
        .CE(NewAddr),
        .CLR(\ADDR_reg[31]_0 ),
        .D(Q[23]),
        .Q(ARADDR[23]));
  FDCE \ADDR_reg[24] 
       (.C(HCLK),
        .CE(NewAddr),
        .CLR(\ADDR_reg[31]_0 ),
        .D(Q[24]),
        .Q(ARADDR[24]));
  FDCE \ADDR_reg[25] 
       (.C(HCLK),
        .CE(NewAddr),
        .CLR(\ADDR_reg[31]_0 ),
        .D(Q[25]),
        .Q(ARADDR[25]));
  FDCE \ADDR_reg[26] 
       (.C(HCLK),
        .CE(NewAddr),
        .CLR(\ADDR_reg[31]_0 ),
        .D(Q[26]),
        .Q(ARADDR[26]));
  FDCE \ADDR_reg[27] 
       (.C(HCLK),
        .CE(NewAddr),
        .CLR(\ADDR_reg[31]_0 ),
        .D(Q[27]),
        .Q(ARADDR[27]));
  FDCE \ADDR_reg[28] 
       (.C(HCLK),
        .CE(NewAddr),
        .CLR(\ADDR_reg[31]_0 ),
        .D(Q[28]),
        .Q(ARADDR[28]));
  FDCE \ADDR_reg[29] 
       (.C(HCLK),
        .CE(NewAddr),
        .CLR(\ADDR_reg[31]_0 ),
        .D(Q[29]),
        .Q(ARADDR[29]));
  FDCE \ADDR_reg[2] 
       (.C(HCLK),
        .CE(NewAddr),
        .CLR(\ADDR_reg[31]_0 ),
        .D(Q[2]),
        .Q(ARADDR[2]));
  FDCE \ADDR_reg[30] 
       (.C(HCLK),
        .CE(NewAddr),
        .CLR(\ADDR_reg[31]_0 ),
        .D(Q[30]),
        .Q(ARADDR[30]));
  FDCE \ADDR_reg[31] 
       (.C(HCLK),
        .CE(NewAddr),
        .CLR(\ADDR_reg[31]_0 ),
        .D(Q[31]),
        .Q(ARADDR[31]));
  FDCE \ADDR_reg[3] 
       (.C(HCLK),
        .CE(NewAddr),
        .CLR(\ADDR_reg[31]_0 ),
        .D(Q[3]),
        .Q(ARADDR[3]));
  FDCE \ADDR_reg[4] 
       (.C(HCLK),
        .CE(NewAddr),
        .CLR(\ADDR_reg[31]_0 ),
        .D(Q[4]),
        .Q(ARADDR[4]));
  FDCE \ADDR_reg[5] 
       (.C(HCLK),
        .CE(NewAddr),
        .CLR(\ADDR_reg[31]_0 ),
        .D(Q[5]),
        .Q(ARADDR[5]));
  FDCE \ADDR_reg[6] 
       (.C(HCLK),
        .CE(NewAddr),
        .CLR(\ADDR_reg[31]_0 ),
        .D(Q[6]),
        .Q(ARADDR[6]));
  FDCE \ADDR_reg[7] 
       (.C(HCLK),
        .CE(NewAddr),
        .CLR(\ADDR_reg[31]_0 ),
        .D(Q[7]),
        .Q(ARADDR[7]));
  FDCE \ADDR_reg[8] 
       (.C(HCLK),
        .CE(NewAddr),
        .CLR(\ADDR_reg[31]_0 ),
        .D(Q[8]),
        .Q(ARADDR[8]));
  FDCE \ADDR_reg[9] 
       (.C(HCLK),
        .CE(NewAddr),
        .CLR(\ADDR_reg[31]_0 ),
        .D(Q[9]),
        .Q(ARADDR[9]));
  FDCE \APROT_reg[2] 
       (.C(HCLK),
        .CE(NewAddr),
        .CLR(\ADDR_reg[31]_0 ),
        .D(AProtNxt),
        .Q(ARPROT[1]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT2 #(
    .INIT(4'h2)) 
    ARVALID_INST_0
       (.I0(AVALID),
        .I1(AWRITE),
        .O(ARVALID));
  FDCE \ASIZE_reg[0] 
       (.C(HCLK),
        .CE(NewAddr),
        .CLR(\ADDR_reg[31]_0 ),
        .D(\ASIZE_reg[1]_0 [0]),
        .Q(ARSIZE[0]));
  FDCE \ASIZE_reg[1] 
       (.C(HCLK),
        .CE(NewAddr),
        .CLR(\ADDR_reg[31]_0 ),
        .D(\ASIZE_reg[1]_0 [1]),
        .Q(ARSIZE[1]));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT5 #(
    .INIT(32'hFF1DFF00)) 
    AVALID_i_1
       (.I0(ARREADY),
        .I1(AWRITE),
        .I2(AWREADY),
        .I3(AValidNxt),
        .I4(AVALID),
        .O(AVALID_i_1_n_0));
  LUT5 #(
    .INIT(32'hF4444444)) 
    AVALID_i_2
       (.I0(ReadTerminateNxt),
        .I1(NewAddr),
        .I2(RVALID),
        .I3(RLAST),
        .I4(MissedAddr),
        .O(AValidNxt));
  FDCE AVALID_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\ADDR_reg[31]_0 ),
        .D(AVALID_i_1_n_0),
        .Q(AVALID));
  FDCE AWRITE_reg
       (.C(HCLK),
        .CE(NewAddr),
        .CLR(\ADDR_reg[31]_0 ),
        .D(HWRITE),
        .Q(AWRITE));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT2 #(
    .INIT(4'h8)) 
    AWVALID_INST_0
       (.I0(AWRITE),
        .I1(AVALID),
        .O(AWVALID));
  FDCE AhbDataValid_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\ADDR_reg[31]_0 ),
        .D(AhbDataValid_reg_0),
        .Q(AhbDataValid));
  LUT3 #(
    .INIT(8'hBA)) 
    BRespWait_i_1
       (.I0(iWLAST_reg_0),
        .I1(BVALID),
        .I2(BRespWait),
        .O(BRespWaitNxt));
  FDCE BRespWait_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\ADDR_reg[31]_0 ),
        .D(BRespWaitNxt),
        .Q(BRespWait));
  LUT5 #(
    .INIT(32'h0B00FFFF)) 
    HReadyReg_i_1
       (.I0(HReadyReg_i_2_n_0),
        .I1(AVALID),
        .I2(HReadyReg_i_3_n_0),
        .I3(\HRespReg[0]_i_2_n_0 ),
        .I4(AhbDataValid),
        .O(HREADY));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    HReadyReg_i_2
       (.I0(AWREADY),
        .I1(AWRITE),
        .I2(ARREADY),
        .O(HReadyReg_i_2_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFF2F2FFF2)) 
    HReadyReg_i_3
       (.I0(BRespWait),
        .I1(BVALID),
        .I2(iWLAST_reg_0),
        .I3(ReadXfer),
        .I4(RVALID),
        .I5(ReadTerminate),
        .O(HReadyReg_i_3_n_0));
  FDPE HReadyReg_reg
       (.C(HCLK),
        .CE(1'b1),
        .D(HREADY),
        .PRE(\ADDR_reg[31]_0 ),
        .Q(HReadyReg));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT4 #(
    .INIT(16'h11F1)) 
    \HRespReg[0]_i_1 
       (.I0(ReadTerminate),
        .I1(\HRespReg[0]_i_2_n_0 ),
        .I2(HRespReg),
        .I3(HReadyReg),
        .O(axi_hresp));
  LUT5 #(
    .INIT(32'h07777777)) 
    \HRespReg[0]_i_2 
       (.I0(BRESP),
        .I1(BVALID),
        .I2(RVALID),
        .I3(iRREADY_reg_0),
        .I4(RRESP),
        .O(\HRespReg[0]_i_2_n_0 ));
  FDCE \HRespReg_reg[0] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\ADDR_reg[31]_0 ),
        .D(axi_hresp),
        .Q(HRespReg));
  LUT6 #(
    .INIT(64'hFF7F7F7FFF000000)) 
    MissedAddr_i_1
       (.I0(RVALID),
        .I1(iRREADY_reg_0),
        .I2(RLAST),
        .I3(ReadTerminateNxt),
        .I4(NewAddr),
        .I5(MissedAddr),
        .O(MissedAddr_i_1_n_0));
  FDCE MissedAddr_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\ADDR_reg[31]_0 ),
        .D(MissedAddr_i_1_n_0),
        .Q(MissedAddr));
  LUT5 #(
    .INIT(32'h00000080)) 
    ReadErrorMidBurst_i_1
       (.I0(RVALID),
        .I1(iRREADY_reg_0),
        .I2(RRESP),
        .I3(ReadTerminate),
        .I4(RLAST),
        .O(ReadErrorMidBurstNxt));
  FDCE ReadErrorMidBurst_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\ADDR_reg[31]_0 ),
        .D(ReadErrorMidBurstNxt),
        .Q(ReadErrorMidBurst));
  LUT5 #(
    .INIT(32'hBFFFAAAA)) 
    ReadTerminate_i_1
       (.I0(ReadErrorMidBurst),
        .I1(RLAST),
        .I2(iRREADY_reg_0),
        .I3(RVALID),
        .I4(ReadTerminate),
        .O(ReadTerminateNxt));
  FDCE ReadTerminate_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\ADDR_reg[31]_0 ),
        .D(ReadTerminateNxt),
        .Q(ReadTerminate));
  LUT6 #(
    .INIT(64'hFFFF4FFF44444444)) 
    ReadXfer_i_1
       (.I0(HWRITE),
        .I1(NewAddr),
        .I2(RVALID),
        .I3(iRREADY_reg_0),
        .I4(ReadTerminate),
        .I5(ReadXfer),
        .O(ReadXfer_i_1_n_0));
  FDCE ReadXfer_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\ADDR_reg[31]_0 ),
        .D(ReadXfer_i_1_n_0),
        .Q(ReadXfer));
  LUT2 #(
    .INIT(4'hE)) 
    iRREADY_i_1
       (.I0(HREADY),
        .I1(HReadyReg_reg_0),
        .O(iRREADY_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT4 #(
    .INIT(16'hBBB0)) 
    iRREADY_i_2
       (.I0(HReadyReg),
        .I1(HRespReg),
        .I2(\HRespReg[0]_i_2_n_0 ),
        .I3(ReadTerminate),
        .O(HReadyReg_reg_0));
  FDCE iRREADY_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\ADDR_reg[31]_0 ),
        .D(iRREADY_i_1_n_0),
        .Q(iRREADY_reg_0));
  FDCE iWLAST_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\ADDR_reg[31]_0 ),
        .D(WValidNxt),
        .Q(iWLAST_reg_0));
  FDCE \iWSTRB_reg[0] 
       (.C(HCLK),
        .CE(E),
        .CLR(\ADDR_reg[31]_0 ),
        .D(D[0]),
        .Q(WSTRB[0]));
  FDCE \iWSTRB_reg[1] 
       (.C(HCLK),
        .CE(E),
        .CLR(\ADDR_reg[31]_0 ),
        .D(D[1]),
        .Q(WSTRB[1]));
  FDCE \iWSTRB_reg[2] 
       (.C(HCLK),
        .CE(E),
        .CLR(\ADDR_reg[31]_0 ),
        .D(D[2]),
        .Q(WSTRB[2]));
  FDCE \iWSTRB_reg[3] 
       (.C(HCLK),
        .CE(E),
        .CLR(\ADDR_reg[31]_0 ),
        .D(D[3]),
        .Q(WSTRB[3]));
endmodule

(* ORIG_REF_NAME = "AhbSToAxi" *) 
module design_1_CORTEXM1_AXI_0_1_AhbSToAxi
   (HREADY,
    iRREADY_reg,
    ARPROT,
    iWLAST_reg,
    AhbDataValid,
    HReadyReg_reg,
    AWVALID,
    ARVALID,
    ARADDR,
    ARSIZE,
    WSTRB,
    HCLK,
    \ADDR_reg[31] ,
    NewAddr,
    HWRITE,
    AProtNxt,
    WValidNxt,
    AhbDataValid_reg,
    RVALID,
    RLAST,
    BVALID,
    AWREADY,
    ARREADY,
    RRESP,
    BRESP,
    Q,
    \ASIZE_reg[1] ,
    E,
    D);
  output HREADY;
  output iRREADY_reg;
  output [1:0]ARPROT;
  output iWLAST_reg;
  output AhbDataValid;
  output HReadyReg_reg;
  output AWVALID;
  output ARVALID;
  output [31:0]ARADDR;
  output [1:0]ARSIZE;
  output [3:0]WSTRB;
  input HCLK;
  input \ADDR_reg[31] ;
  input NewAddr;
  input HWRITE;
  input [0:0]AProtNxt;
  input WValidNxt;
  input AhbDataValid_reg;
  input RVALID;
  input RLAST;
  input BVALID;
  input AWREADY;
  input ARREADY;
  input [0:0]RRESP;
  input [0:0]BRESP;
  input [31:0]Q;
  input [1:0]\ASIZE_reg[1] ;
  input [0:0]E;
  input [3:0]D;

  wire \ADDR_reg[31] ;
  wire [0:0]AProtNxt;
  wire [31:0]ARADDR;
  wire [1:0]ARPROT;
  wire ARREADY;
  wire [1:0]ARSIZE;
  wire ARVALID;
  wire [1:0]\ASIZE_reg[1] ;
  wire AWREADY;
  wire AWVALID;
  wire AhbDataValid;
  wire AhbDataValid_reg;
  wire [0:0]BRESP;
  wire BVALID;
  wire [3:0]D;
  wire [0:0]E;
  wire HCLK;
  wire HREADY;
  wire HReadyReg_reg;
  wire HWRITE;
  wire NewAddr;
  wire [31:0]Q;
  wire RLAST;
  wire [0:0]RRESP;
  wire RVALID;
  wire [3:0]WSTRB;
  wire WValidNxt;
  wire iRREADY_reg;
  wire iWLAST_reg;

  design_1_CORTEXM1_AXI_0_1_A11AhbLiteMToAxi uA11AhbLiteMToAxi
       (.\ADDR_reg[31]_0 (\ADDR_reg[31] ),
        .AProtNxt(AProtNxt),
        .ARADDR(ARADDR),
        .ARPROT(ARPROT),
        .ARREADY(ARREADY),
        .ARSIZE(ARSIZE),
        .ARVALID(ARVALID),
        .\ASIZE_reg[1]_0 (\ASIZE_reg[1] ),
        .AWREADY(AWREADY),
        .AWVALID(AWVALID),
        .AhbDataValid(AhbDataValid),
        .AhbDataValid_reg_0(AhbDataValid_reg),
        .BRESP(BRESP),
        .BVALID(BVALID),
        .D(D),
        .E(E),
        .HCLK(HCLK),
        .HREADY(HREADY),
        .HReadyReg_reg_0(HReadyReg_reg),
        .HWRITE(HWRITE),
        .NewAddr(NewAddr),
        .Q(Q),
        .RLAST(RLAST),
        .RRESP(RRESP),
        .RVALID(RVALID),
        .WSTRB(WSTRB),
        .WValidNxt(WValidNxt),
        .iRREADY_reg_0(iRREADY_reg),
        .iWLAST_reg_0(iWLAST_reg));
endmodule

(* ORIG_REF_NAME = "CortexM1Dbg" *) 
module design_1_CORTEXM1_AXI_0_1_CortexM1Dbg
   (WValidNxt,
    NewAddr,
    HWRITE,
    E,
    D,
    HADDR,
    HSIZE,
    \ahb_addr_state_0x_reg[1] ,
    AProtNxt,
    SYSRESETn_0,
    HWDATA,
    SYSRESETREQ,
    LOCKUP,
    p_1_in2_in,
    ADDRARDADDR,
    DTCMBYTEWR,
    ITCMBYTEWR,
    WREADY,
    WLAST,
    HREADY,
    AhbDataValid,
    i_biu_wfault_reg,
    nxt_mult_out0_carry__2,
    HCLK,
    CFGITCMEN,
    NMI,
    IRQ,
    doutA,
    SYSRESETn,
    \hold_reg1[7]_i_7 ,
    HRDATA);
  output WValidNxt;
  output NewAddr;
  output HWRITE;
  output [0:0]E;
  output [3:0]D;
  output [31:0]HADDR;
  output [1:0]HSIZE;
  output \ahb_addr_state_0x_reg[1] ;
  output [0:0]AProtNxt;
  output SYSRESETn_0;
  output [31:0]HWDATA;
  output SYSRESETREQ;
  output LOCKUP;
  output [31:0]p_1_in2_in;
  output [12:0]ADDRARDADDR;
  output [3:0]DTCMBYTEWR;
  output [3:0]ITCMBYTEWR;
  input WREADY;
  input WLAST;
  input HREADY;
  input AhbDataValid;
  input i_biu_wfault_reg;
  input nxt_mult_out0_carry__2;
  input HCLK;
  input [1:0]CFGITCMEN;
  input NMI;
  input [0:0]IRQ;
  input [31:0]doutA;
  input SYSRESETn;
  input [31:0]\hold_reg1[7]_i_7 ;
  input [31:0]HRDATA;

  wire [12:0]ADDRARDADDR;
  wire [0:0]AProtNxt;
  wire AhbDataValid;
  wire [1:0]CFGITCMEN;
  wire [3:0]D;
  wire [3:0]DTCMBYTEWR;
  wire [0:0]E;
  wire [31:0]HADDR;
  wire HCLK;
  wire [31:0]HRDATA;
  wire HREADY;
  wire [1:0]HSIZE;
  wire [31:0]HWDATA;
  wire HWRITE;
  wire [0:0]IRQ;
  wire [3:0]ITCMBYTEWR;
  wire LOCKUP;
  wire NMI;
  wire NewAddr;
  wire SYSRESETREQ;
  wire SYSRESETn;
  wire SYSRESETn_0;
  wire WLAST;
  wire WREADY;
  wire WValidNxt;
  wire \ahb_addr_state_0x_reg[1] ;
  wire ahb_rd_en;
  wire ahb_wr_en;
  wire [31:0]biu_addr;
  wire biu_commit;
  wire biu_commit_reg;
  wire biu_drack;
  wire biu_dreq;
  wire biu_dsb;
  wire biu_irack;
  wire [31:0]biu_rdata;
  wire biu_rdy;
  wire biu_rfault;
  wire [1:0]biu_size;
  wire biu_wfault;
  wire biu_write;
  wire [1:0]cfgitcmen_sync2;
  wire [31:0]doutA;
  wire dreq_wr_ex;
  wire dsel_ppb;
  wire [1:0]en_itcm;
  wire [1:0]en_itcm_core;
  wire en_itcm_wr;
  wire fetch_internal;
  wire hdf_actv;
  wire hi_pre_fetch_addr;
  wire [31:0]\hold_reg1[7]_i_7 ;
  wire hold_reg2_mask;
  wire i_biu_wfault_reg;
  wire [9:2]i_haddr_q;
  wire int_actv;
  wire [1:0]int_actv_lvl;
  wire [5:0]int_prev;
  wire [1:0]irq_lvl;
  wire irq_pri_lvl_wr_en;
  wire nmi_actv;
  wire nvic_excpt_fault_req;
  wire [4:0]nvic_excpt_num;
  wire nvic_excpt_pend;
  wire [4:0]nvic_excpt_pend_num;
  wire nvic_excpt_svc_valid;
  wire nvic_excpt_taken;
  wire nvic_lockup;
  wire nvic_primask;
  wire nxt_ahb_rd_en;
  wire nxt_ahb_wr_en;
  wire [31:0]nxt_biu_rdata;
  wire nxt_mult_out0_carry__2;
  wire [5:2]nxt_o_hrdata;
  wire [3:0]nxt_pend_state;
  wire [15:0]p_1_in;
  wire [31:0]p_1_in2_in;
  wire pend_hdf;
  wire pend_nmi;
  wire [3:3]pend_sys;
  wire [1:0]psv_lvl_0;
  wire [15:0]rdata_fe;
  wire reset_sync;
  wire rst_fptr_align_ex;
  wire [1:0]svc_lvl_0;
  wire [1:0]tck_lvl_0;
  wire u_ahb_n_0;
  wire u_ahb_n_159;
  wire u_ahb_n_163;
  wire u_ahb_n_33;
  wire u_ahb_n_34;
  wire u_ahb_n_35;
  wire u_ahb_n_36;
  wire u_ahb_n_38;
  wire u_ahb_n_39;
  wire u_ahb_n_88;
  wire u_core_n_108;
  wire u_core_n_109;
  wire u_core_n_115;
  wire u_core_n_116;
  wire u_core_n_117;
  wire u_core_n_119;
  wire u_core_n_123;
  wire u_core_n_16;
  wire u_core_n_17;
  wire u_core_n_48;
  wire u_core_n_55;
  wire u_core_n_56;
  wire u_core_n_57;
  wire u_core_n_58;
  wire u_core_n_59;
  wire u_core_n_96;
  wire u_core_n_97;
  wire \u_ctrl/adv_de_to_ex ;
  wire \u_ctrl/excpt_isb_de ;
  wire \u_ctrl/first32_ex ;
  wire \u_ctrl/instr_faulted ;
  wire \u_ctrl/pc_ex0 ;
  wire \u_ctrl/pf_fault_fe ;
  wire \u_ctrl/u_excpt/int_fault_ex ;
  wire \u_ctrl/u_excpt/nxt_instr_faulted ;
  wire \u_dp/u_mem_ctl/irack ;
  wire \u_dp/u_mem_ctl/nxt_drack ;
  wire \u_dp/u_mem_ctl/nxt_dwack ;
  wire u_fault;
  wire \u_fetch/buf_wr_en ;
  wire \u_main/r_hdf_actv ;
  wire \u_main/r_nmi_actv ;
  wire u_nvic_n_14;
  wire u_nvic_n_27;
  wire u_nvic_n_29;
  wire u_nvic_n_30;
  wire u_nvic_n_37;
  wire u_nvic_n_40;
  wire u_nvic_n_43;
  wire u_nvic_n_44;
  wire u_nvic_n_45;

  design_1_CORTEXM1_AXI_0_1_cm1_ahb u_ahb
       (.AProtNxt(AProtNxt),
        .AhbDataValid(AhbDataValid),
        .D({biu_addr[31:15],ADDRARDADDR,u_core_n_48,biu_addr[0]}),
        .E(E),
        .\HADDR_reg[31]_0 (HADDR),
        .HCLK(HCLK),
        .HREADY(HREADY),
        .HWDATA(HWDATA),
        .\HWDATA_reg[27]_0 (nxt_pend_state[3]),
        .\HWDATA_reg[31]_0 (SYSRESETn_0),
        .\HWDATA_reg[6]_0 (u_ahb_n_35),
        .\HWDATA_reg[7]_0 (u_ahb_n_34),
        .O({u_core_n_55,u_core_n_56}),
        .Q(cfgitcmen_sync2),
        .SYSRESETREQ(SYSRESETREQ),
        .SYSRESETREQ_reg(u_nvic_n_40),
        .SYSRESETREQ_reg_0({i_haddr_q[9],i_haddr_q[5:2]}),
        .SYSRESETREQ_reg_1(u_nvic_n_43),
        .WLAST(WLAST),
        .WREADY(WREADY),
        .WValidNxt(WValidNxt),
        .adv_de_to_ex(\u_ctrl/adv_de_to_ex ),
        .\ahb_addr_state_0x_reg[1]_0 (\ahb_addr_state_0x_reg[1] ),
        .ahb_rd_en(ahb_rd_en),
        .ahb_wr_en(ahb_wr_en),
        .asel_write_reg_0(HWRITE),
        .asel_write_reg_1(D),
        .biu_commit(biu_commit),
        .biu_commit_reg(biu_commit_reg),
        .biu_commit_reg_reg_0(NewAddr),
        .biu_drack(biu_drack),
        .biu_dreq(biu_dreq),
        .biu_dsb(biu_dsb),
        .biu_irack(biu_irack),
        .\biu_rdata_reg[31]_0 (biu_rdata),
        .\biu_rdata_reg[31]_1 (p_1_in),
        .\biu_rdata_reg[31]_2 (nxt_biu_rdata),
        .biu_rdy(biu_rdy),
        .biu_rfault(biu_rfault),
        .biu_wfault(biu_wfault),
        .biu_write(biu_write),
        .\cfgitcmen_sync2_reg[0] (u_ahb_n_33),
        .\cfgitcmen_sync2_reg[1] (u_ahb_n_0),
        .\core_req_state_1x_reg[0]_0 (u_core_n_123),
        .doutA(doutA),
        .dreq_wr_ex(dreq_wr_ex),
        .dsel_ppb(dsel_ppb),
        .en_itcm(en_itcm),
        .en_itcm_core(en_itcm_core),
        .\en_itcm_core_reg[1] (u_core_n_16),
        .\en_itcm_core_reg[1]_0 (u_core_n_59),
        .\en_itcm_reg[0] (u_ahb_n_38),
        .\en_itcm_reg[1] (u_ahb_n_36),
        .en_itcm_wr(en_itcm_wr),
        .excpt_isb_de(\u_ctrl/excpt_isb_de ),
        .\excpt_state_reg[4] (u_core_n_17),
        .fetch_internal(fetch_internal),
        .fetch_internal_reg(\u_fetch/buf_wr_en ),
        .first32_ex(\u_ctrl/first32_ex ),
        .first32_ex_reg(\u_ctrl/pc_ex0 ),
        .hi_pre_fetch_addr(hi_pre_fetch_addr),
        .hold_reg2_mask(hold_reg2_mask),
        .\hsize_1_0_reg[1]_0 (HSIZE),
        .\hsize_1_0_reg[1]_1 (biu_size),
        .i_biu_wfault_reg_0(i_biu_wfault_reg),
        .\i_haddr_q_reg[9] (u_ahb_n_39),
        .\i_pend_state_reg[3] (pend_sys),
        .\i_pend_state_reg[3]_0 (u_core_n_116),
        .\i_pend_state_reg[3]_1 (u_nvic_n_30),
        .instr_faulted(\u_ctrl/instr_faulted ),
        .irack(\u_dp/u_mem_ctl/irack ),
        .irq_lvl(irq_lvl),
        .irq_pri_lvl_wr_en(irq_pri_lvl_wr_en),
        .last_uncond_phase_ex_reg(u_ahb_n_159),
        .\mem_held_addr_reg[31]_i_1 (u_ahb_n_163),
        .nvic_excpt_taken(nvic_excpt_taken),
        .nxt_ahb_rd_en(nxt_ahb_rd_en),
        .nxt_ahb_wr_en(nxt_ahb_wr_en),
        .nxt_drack(\u_dp/u_mem_ctl/nxt_drack ),
        .nxt_dwack(\u_dp/u_mem_ctl/nxt_dwack ),
        .nxt_instr_faulted(\u_ctrl/u_excpt/nxt_instr_faulted ),
        .p_1_in2_in(p_1_in2_in),
        .pf_fault_fe(\u_ctrl/pf_fault_fe ),
        .rdata_fe(rdata_fe),
        .reset_sync(reset_sync),
        .rst_fptr_align_ex(rst_fptr_align_ex),
        .rst_fptr_align_ex_reg(u_ahb_n_88),
        .u_fault(u_fault));
  design_1_CORTEXM1_AXI_0_1_cm1_core u_core
       (.D({biu_addr[31:15],ADDRARDADDR,u_core_n_48,biu_addr[0]}),
        .DTCMBYTEWR(DTCMBYTEWR),
        .E(nvic_excpt_pend),
        .HCLK(HCLK),
        .\HRDATA_reg[2] (u_nvic_n_44),
        .\HRDATA_reg[5] (u_nvic_n_14),
        .\HRDATA_reg[5]_0 (u_nvic_n_37),
        .IRQ(IRQ),
        .IRQ_0_sp_1(u_core_n_108),
        .ITCMBYTEWR(ITCMBYTEWR),
        .NMI(NMI),
        .O({u_core_n_55,u_core_n_56,u_core_n_57,u_core_n_58}),
        .Q({pend_hdf,pend_nmi}),
        .SYSRESETn(SYSRESETn),
        .SYSRESETn_0(SYSRESETn_0),
        .adv_de_to_ex(\u_ctrl/adv_de_to_ex ),
        .bcc_first_ex_reg(u_core_n_17),
        .biu_commit(biu_commit),
        .biu_commit_reg(biu_commit_reg),
        .biu_commit_reg_reg(u_nvic_n_29),
        .biu_drack(biu_drack),
        .biu_dreq(biu_dreq),
        .biu_dsb(biu_dsb),
        .biu_irack(biu_irack),
        .biu_rdy(biu_rdy),
        .biu_rfault(biu_rfault),
        .biu_wfault(biu_wfault),
        .biu_write(biu_write),
        .biu_write_reg(u_core_n_123),
        .doutA(doutA),
        .\dp_ipsr_7to2_reg[4] (u_core_n_115),
        .\dp_ipsr_7to2_reg[4]_0 (u_core_n_117),
        .\dp_ipsr_7to2_reg[6] ({nvic_excpt_num[4:3],nvic_excpt_num[1:0]}),
        .\dp_ipsr_7to2_reg[7] (u_core_n_109),
        .\dp_ipsr_7to2_reg[7]_0 (u_core_n_116),
        .\dp_ipsr_7to2_reg[7]_1 ({nxt_o_hrdata[5],nxt_o_hrdata[2]}),
        .dreq_wr_ex(dreq_wr_ex),
        .en_itcm_core(en_itcm_core),
        .excpt_isb_de(\u_ctrl/excpt_isb_de ),
        .fetch_internal(fetch_internal),
        .first32_ex(\u_ctrl/first32_ex ),
        .first32_ex_reg(u_core_n_59),
        .hdf_actv(hdf_actv),
        .hi_pre_fetch_addr(hi_pre_fetch_addr),
        .\hold_reg1[7]_i_7 (\hold_reg1[7]_i_7 ),
        .\hold_reg1[7]_i_7_0 (biu_rdata),
        .\hold_reg1_reg[31] (u_ahb_n_88),
        .hold_reg2_mask(hold_reg2_mask),
        .i_dbg_wdata_sel_de_reg(u_ahb_n_159),
        .i_nvic_excpt_svc_valid_reg(u_core_n_119),
        .\i_pend_state_reg[0] (u_nvic_n_30),
        .\i_pend_state_reg[0]_0 (HWDATA[31]),
        .\i_pend_state_reg[1] (u_nvic_n_45),
        .\i_svc_lvl_reg[1] (int_actv_lvl),
        .instr_faulted(\u_ctrl/instr_faulted ),
        .int_actv(int_actv),
        .int_fault_ex(\u_ctrl/u_excpt/int_fault_ex ),
        .int_fault_ex_reg(u_nvic_n_27),
        .int_prev({int_prev[5],int_prev[0]}),
        .irack(\u_dp/u_mem_ctl/irack ),
        .irq_lvl(irq_lvl),
        .itcm_sel_i_6(u_core_n_96),
        .\latched_excpt_num_reg[4] (nvic_excpt_pend_num),
        .locked_up_reg(LOCKUP),
        .ls_half_ex_reg(biu_size),
        .\mem_held_addr_reg[19]_i_1 (u_core_n_97),
        .micro_code_de_reg(u_core_n_16),
        .nmi_actv(nmi_actv),
        .nvic_excpt_fault_req(nvic_excpt_fault_req),
        .nvic_excpt_svc_valid(nvic_excpt_svc_valid),
        .nvic_excpt_taken(nvic_excpt_taken),
        .nvic_lockup(nvic_lockup),
        .nvic_primask(nvic_primask),
        .nxt_drack(\u_dp/u_mem_ctl/nxt_drack ),
        .nxt_dwack(\u_dp/u_mem_ctl/nxt_dwack ),
        .nxt_instr_faulted(\u_ctrl/u_excpt/nxt_instr_faulted ),
        .nxt_mult_out0_carry__2(nxt_mult_out0_carry__2),
        .p_1_in2_in(p_1_in2_in),
        .\pc_ex_reg[0] (\u_ctrl/pc_ex0 ),
        .pf_fault_fe(\u_ctrl/pf_fault_fe ),
        .r_hdf_actv(\u_main/r_hdf_actv ),
        .r_hdf_actv_reg(nxt_pend_state[1:0]),
        .\r_int_actv_lvl_reg[1] (psv_lvl_0),
        .\r_int_actv_lvl_reg[1]_0 (tck_lvl_0),
        .r_nmi_actv(\u_main/r_nmi_actv ),
        .rdata_fe(rdata_fe),
        .rst_fptr_align_ex(rst_fptr_align_ex),
        .svc_lvl_0(svc_lvl_0),
        .u_fault(u_fault),
        .\uhalf_instr_reg[0] (\u_fetch/buf_wr_en ),
        .\uhalf_instr_reg[15] (p_1_in),
        .z_flag_mux_reg(u_ahb_n_163));
  design_1_CORTEXM1_AXI_0_1_cm1_nvic u_nvic
       (.CFGITCMEN(CFGITCMEN),
        .D({nxt_pend_state[3],nxt_pend_state[1:0]}),
        .E(nvic_excpt_pend),
        .HADDR(HADDR[11:2]),
        .HCLK(HCLK),
        .HRDATA(HRDATA),
        .\HRDATA[4]_i_2 ({nvic_excpt_num[4:3],nvic_excpt_num[1:0]}),
        .\HRDATA_reg[31] (nxt_biu_rdata),
        .\HRDATA_reg[5] ({nxt_o_hrdata[5],nxt_o_hrdata[2]}),
        .HWDATA({HWDATA[31:30],HWDATA[26:25],HWDATA[23:0]}),
        .IRQ(IRQ),
        .LOCKUP(LOCKUP),
        .NMI(NMI),
        .O({u_core_n_57,u_core_n_58}),
        .Q({i_haddr_q[9],i_haddr_q[5:2]}),
        .SYSRESETREQ(SYSRESETREQ),
        .SYSRESETREQ_reg(u_ahb_n_39),
        .ahb_rd_en(ahb_rd_en),
        .ahb_wr_en(ahb_wr_en),
        .biu_commit_reg_reg(u_ahb_n_163),
        .biu_commit_reg_reg_0(u_core_n_96),
        .biu_commit_reg_reg_1(u_core_n_97),
        .biu_wfault(biu_wfault),
        .\cfgitcmen_sync2_reg[1] (cfgitcmen_sync2),
        .dsel_ppb(dsel_ppb),
        .en_itcm(en_itcm),
        .en_itcm_core(en_itcm_core),
        .\en_itcm_core_reg[0] (u_ahb_n_38),
        .\en_itcm_core_reg[1] (u_nvic_n_29),
        .\en_itcm_core_reg[1]_0 (u_ahb_n_36),
        .\en_itcm_reg[0] (u_ahb_n_33),
        .\en_itcm_reg[1] (u_ahb_n_0),
        .en_itcm_wr(en_itcm_wr),
        .hdf_actv(hdf_actv),
        .\high_lvl1_reg[0] (SYSRESETn_0),
        .\i_haddr_q_reg[11] (u_nvic_n_40),
        .\i_haddr_q_reg[2] (u_nvic_n_14),
        .\i_haddr_q_reg[2]_0 (u_nvic_n_30),
        .\i_haddr_q_reg[2]_1 (u_nvic_n_44),
        .\i_haddr_q_reg[6] (u_nvic_n_43),
        .\i_irq_lvl_reg[0] (u_ahb_n_35),
        .\i_irq_lvl_reg[1] (u_ahb_n_34),
        .\i_pend_state_reg[2] (u_core_n_115),
        .\i_pend_state_reg[3] ({pend_sys,pend_hdf,pend_nmi}),
        .\i_pend_state_reg[4] (u_core_n_117),
        .\i_pend_state_reg[5] (u_core_n_108),
        .\i_pend_state_reg[5]_0 (u_core_n_109),
        .\i_psv_lvl_reg[1] (psv_lvl_0),
        .\i_tck_lvl_reg[1] (tck_lvl_0),
        .instr_faulted(\u_ctrl/instr_faulted ),
        .int_actv(int_actv),
        .int_fault_ex(\u_ctrl/u_excpt/int_fault_ex ),
        .int_prev({int_prev[5],int_prev[0]}),
        .irq_lvl(irq_lvl),
        .irq_pri_lvl_wr_en(irq_pri_lvl_wr_en),
        .lockup_pend_reg(u_core_n_119),
        .nmi_actv(nmi_actv),
        .nvic_excpt_fault_req(nvic_excpt_fault_req),
        .nvic_excpt_svc_valid(nvic_excpt_svc_valid),
        .nvic_excpt_taken(nvic_excpt_taken),
        .nvic_lockup(nvic_lockup),
        .nvic_primask(nvic_primask),
        .nxt_ahb_rd_en(nxt_ahb_rd_en),
        .nxt_ahb_wr_en(nxt_ahb_wr_en),
        .\pend_lvl_num_reg[4] (nvic_excpt_pend_num),
        .primask_reg(u_nvic_n_27),
        .r_hdf_actv(\u_main/r_hdf_actv ),
        .r_hdf_actv_reg(u_nvic_n_45),
        .\r_int_actv_lvl_reg[1] (int_actv_lvl),
        .r_nmi_actv(\u_main/r_nmi_actv ),
        .reset_sync(reset_sync),
        .svc_lvl_0(svc_lvl_0),
        .\tck_reload_reg[5] (u_nvic_n_37));
endmodule

(* AUSER_MAX = "0" *) (* AUSER_WIDTH = "1" *) (* BE8 = "1'b0" *) 
(* DEBUG_SEL = "3" *) (* DTCM_ADDR_WIDTH = "13" *) (* DTCM_INIT_FILE = "" *) 
(* DTCM_INIT_RAM = "1'b0" *) (* DTCM_SIZE = "4'b0110" *) (* ITCM_ADDR_WIDTH = "13" *) 
(* ITCM_INIT_FILE = "" *) (* ITCM_INIT_RAM = "1'b0" *) (* ITCM_SIZE = "4'b0110" *) 
(* JTAG = "0" *) (* NUM_IRQ = "1" *) (* ORIG_REF_NAME = "CortexM1DbgAXI" *) 
(* OS = "1'b1" *) (* SMALL_DEBUG = "1'b1" *) (* SMALL_MUL = "1'b0" *) 
(* STRB_MAX = "3" *) (* STRB_WIDTH = "4" *) (* SW = "0" *) 
module design_1_CORTEXM1_AXI_0_1_CortexM1DbgAXI
   (DBGRESTARTED,
    JTAGNSW,
    JTAGTOP,
    TDO,
    nTDOEN,
    SWDO,
    SWDOEN,
    LOCKUP,
    HALTED,
    SYSRESETREQ,
    HWDATA,
    HCLK,
    SYSRESETn,
    IRQ,
    NMI,
    DBGRESETn,
    EDBGRQ,
    DBGRESTART,
    nTRST,
    SWCLKTCK,
    SWDITMS,
    TDI,
    HRDATA,
    CFGITCMEN,
    AWADDR,
    AWLEN,
    AWSIZE,
    AWBURST,
    AWLOCK,
    AWCACHE,
    AWPROT,
    AWUSER,
    AWVALID,
    AWREADY,
    WSTRB,
    WLAST,
    WVALID,
    WREADY,
    BRESP,
    BVALID,
    BREADY,
    ARADDR,
    ARLEN,
    ARSIZE,
    ARBURST,
    ARLOCK,
    ARCACHE,
    ARPROT,
    ARUSER,
    ARVALID,
    ARREADY,
    RRESP,
    RLAST,
    RVALID,
    RREADY);
  output DBGRESTARTED;
  output JTAGNSW;
  output JTAGTOP;
  output TDO;
  output nTDOEN;
  output SWDO;
  output SWDOEN;
  output LOCKUP;
  output HALTED;
  output SYSRESETREQ;
  output [31:0]HWDATA;
  input HCLK;
  input SYSRESETn;
  input [0:0]IRQ;
  input NMI;
  input DBGRESETn;
  input EDBGRQ;
  input DBGRESTART;
  input nTRST;
  input SWCLKTCK;
  input SWDITMS;
  input TDI;
  input [31:0]HRDATA;
  input [1:0]CFGITCMEN;
  output [31:0]AWADDR;
  output [3:0]AWLEN;
  output [2:0]AWSIZE;
  output [1:0]AWBURST;
  output [1:0]AWLOCK;
  output [3:0]AWCACHE;
  output [2:0]AWPROT;
  output [0:0]AWUSER;
  output AWVALID;
  input AWREADY;
  output [3:0]WSTRB;
  output WLAST;
  output WVALID;
  input WREADY;
  input [1:0]BRESP;
  input BVALID;
  output BREADY;
  output [31:0]ARADDR;
  output [3:0]ARLEN;
  output [2:0]ARSIZE;
  output [1:0]ARBURST;
  output [1:0]ARLOCK;
  output [3:0]ARCACHE;
  output [2:0]ARPROT;
  output [0:0]ARUSER;
  output ARVALID;
  input ARREADY;
  input [1:0]RRESP;
  input RLAST;
  input RVALID;
  output RREADY;

  wire \<const0> ;
  wire \<const1> ;
  wire [2:2]AProtNxt;
  wire [31:0]ARADDR;
  wire [2:2]\^ARPROT ;
  wire ARREADY;
  wire [1:0]\^ARSIZE ;
  wire ARVALID;
  wire [0:0]\^AWPROT ;
  wire AWREADY;
  wire AWVALID;
  wire [1:0]BRESP;
  wire BVALID;
  wire [1:0]CFGITCMEN;
  wire [3:0]DTCMBYTEWR;
  wire [31:0]DTCMRDATA;
  wire [31:0]HADDR;
  wire HCLK;
  wire [31:0]HRDATA;
  wire HREADY;
  wire [1:0]HSIZE;
  wire [31:0]HWDATA;
  wire HWRITE;
  wire [0:0]IRQ;
  wire [12:0]ITCMADDR;
  wire [3:0]ITCMBYTEWR;
  wire [31:0]ITCMRDATA;
  wire [31:0]ITCMWDATA;
  wire LOCKUP;
  wire NMI;
  wire RLAST;
  wire RREADY;
  wire [1:0]RRESP;
  wire RVALID;
  wire SYSRESETREQ;
  wire SYSRESETn;
  wire WLAST;
  wire WREADY;
  wire [3:0]WSTRB;
  wire nxt_mult_out0_carry_i_7_n_0;
  wire \uA11AhbLiteMToAxi/AhbDataValid ;
  wire \uA11AhbLiteMToAxi/NewAddr ;
  wire [3:0]\uA11AhbLiteMToAxi/WStrbNxt ;
  wire \uA11AhbLiteMToAxi/WValidNxt ;
  wire u_AhbSToAxi_n_6;
  wire u_cortexm1_n_3;
  wire u_cortexm1_n_42;
  wire u_cortexm1_n_44;

  assign ARBURST[1] = \<const0> ;
  assign ARBURST[0] = \^AWPROT [0];
  assign ARCACHE[3] = \<const0> ;
  assign ARCACHE[2] = \<const0> ;
  assign ARCACHE[1] = \<const0> ;
  assign ARCACHE[0] = \<const0> ;
  assign ARLEN[3] = \<const0> ;
  assign ARLEN[2] = \<const0> ;
  assign ARLEN[1] = \<const0> ;
  assign ARLEN[0] = \<const0> ;
  assign ARLOCK[1] = \<const0> ;
  assign ARLOCK[0] = \<const0> ;
  assign ARPROT[2] = \^ARPROT [2];
  assign ARPROT[1] = \<const0> ;
  assign ARPROT[0] = \^AWPROT [0];
  assign ARSIZE[2] = \<const0> ;
  assign ARSIZE[1:0] = \^ARSIZE [1:0];
  assign ARUSER[0] = \<const0> ;
  assign AWADDR[31:0] = ARADDR;
  assign AWBURST[1] = \<const0> ;
  assign AWBURST[0] = \^AWPROT [0];
  assign AWCACHE[3] = \<const0> ;
  assign AWCACHE[2] = \<const0> ;
  assign AWCACHE[1] = \<const0> ;
  assign AWCACHE[0] = \<const0> ;
  assign AWLEN[3] = \<const0> ;
  assign AWLEN[2] = \<const0> ;
  assign AWLEN[1] = \<const0> ;
  assign AWLEN[0] = \<const0> ;
  assign AWLOCK[1] = \<const0> ;
  assign AWLOCK[0] = \<const0> ;
  assign AWPROT[2] = \^ARPROT [2];
  assign AWPROT[1] = \<const0> ;
  assign AWPROT[0] = \^AWPROT [0];
  assign AWSIZE[2] = \<const0> ;
  assign AWSIZE[1:0] = \^ARSIZE [1:0];
  assign AWUSER[0] = \<const0> ;
  assign BREADY = \<const1> ;
  assign DBGRESTARTED = \<const1> ;
  assign HALTED = \<const0> ;
  assign JTAGNSW = \<const0> ;
  assign JTAGTOP = \<const0> ;
  assign SWDO = \<const0> ;
  assign SWDOEN = \<const0> ;
  assign TDO = \<const0> ;
  assign WVALID = WLAST;
  assign nTDOEN = \<const0> ;
  GND GND
       (.G(\<const0> ));
  VCC VCC
       (.P(\<const1> ));
  design_1_CORTEXM1_AXI_0_1_X_TCMDBG \gb_DTCM.u_x_dtcm 
       (.ADDRARDADDR(ITCMADDR),
        .DTCMBYTEWR(DTCMBYTEWR),
        .HCLK(HCLK),
        .doutA(DTCMRDATA),
        .p_1_in2_in(ITCMWDATA));
  FDCE nxt_mult_out0_carry_i_7
       (.C(HCLK),
        .CE(1'b1),
        .CLR(u_cortexm1_n_44),
        .D(1'b1),
        .Q(nxt_mult_out0_carry_i_7_n_0));
  design_1_CORTEXM1_AXI_0_1_AhbSToAxi u_AhbSToAxi
       (.\ADDR_reg[31] (u_cortexm1_n_44),
        .AProtNxt(AProtNxt),
        .ARADDR(ARADDR),
        .ARPROT({\^ARPROT ,\^AWPROT }),
        .ARREADY(ARREADY),
        .ARSIZE(\^ARSIZE ),
        .ARVALID(ARVALID),
        .\ASIZE_reg[1] (HSIZE),
        .AWREADY(AWREADY),
        .AWVALID(AWVALID),
        .AhbDataValid(\uA11AhbLiteMToAxi/AhbDataValid ),
        .AhbDataValid_reg(u_cortexm1_n_42),
        .BRESP(BRESP[1]),
        .BVALID(BVALID),
        .D(\uA11AhbLiteMToAxi/WStrbNxt ),
        .E(u_cortexm1_n_3),
        .HCLK(HCLK),
        .HREADY(HREADY),
        .HReadyReg_reg(u_AhbSToAxi_n_6),
        .HWRITE(HWRITE),
        .NewAddr(\uA11AhbLiteMToAxi/NewAddr ),
        .Q(HADDR),
        .RLAST(RLAST),
        .RRESP(RRESP[1]),
        .RVALID(RVALID),
        .WSTRB(WSTRB),
        .WValidNxt(\uA11AhbLiteMToAxi/WValidNxt ),
        .iRREADY_reg(RREADY),
        .iWLAST_reg(WLAST));
  design_1_CORTEXM1_AXI_0_1_CortexM1Dbg u_cortexm1
       (.ADDRARDADDR(ITCMADDR),
        .AProtNxt(AProtNxt),
        .AhbDataValid(\uA11AhbLiteMToAxi/AhbDataValid ),
        .CFGITCMEN(CFGITCMEN),
        .D(\uA11AhbLiteMToAxi/WStrbNxt ),
        .DTCMBYTEWR(DTCMBYTEWR),
        .E(u_cortexm1_n_3),
        .HADDR(HADDR),
        .HCLK(HCLK),
        .HRDATA(HRDATA),
        .HREADY(HREADY),
        .HSIZE(HSIZE),
        .HWDATA(HWDATA),
        .HWRITE(HWRITE),
        .IRQ(IRQ),
        .ITCMBYTEWR(ITCMBYTEWR),
        .LOCKUP(LOCKUP),
        .NMI(NMI),
        .NewAddr(\uA11AhbLiteMToAxi/NewAddr ),
        .SYSRESETREQ(SYSRESETREQ),
        .SYSRESETn(SYSRESETn),
        .SYSRESETn_0(u_cortexm1_n_44),
        .WLAST(WLAST),
        .WREADY(WREADY),
        .WValidNxt(\uA11AhbLiteMToAxi/WValidNxt ),
        .\ahb_addr_state_0x_reg[1] (u_cortexm1_n_42),
        .doutA(ITCMRDATA),
        .\hold_reg1[7]_i_7 (DTCMRDATA),
        .i_biu_wfault_reg(u_AhbSToAxi_n_6),
        .nxt_mult_out0_carry__2(nxt_mult_out0_carry_i_7_n_0),
        .p_1_in2_in(ITCMWDATA));
  design_1_CORTEXM1_AXI_0_1_X_TCMDBG_0 u_x_itcm
       (.ADDRARDADDR(ITCMADDR),
        .HCLK(HCLK),
        .ITCMBYTEWR(ITCMBYTEWR),
        .doutA(ITCMRDATA),
        .p_1_in2_in(ITCMWDATA));
endmodule

(* ORIG_REF_NAME = "X_TCMDBG" *) 
module design_1_CORTEXM1_AXI_0_1_X_TCMDBG
   (doutA,
    HCLK,
    ADDRARDADDR,
    p_1_in2_in,
    DTCMBYTEWR);
  output [31:0]doutA;
  input HCLK;
  input [12:0]ADDRARDADDR;
  input [31:0]p_1_in2_in;
  input [3:0]DTCMBYTEWR;

  wire [12:0]ADDRARDADDR;
  wire [3:0]DTCMBYTEWR;
  wire HCLK;
  wire [31:0]doutA;
  wire \genblk3[1].ram_block_reg_0_0_n_64 ;
  wire \genblk3[1].ram_block_reg_0_0_n_65 ;
  wire \genblk3[1].ram_block_reg_0_0_n_66 ;
  wire \genblk3[1].ram_block_reg_0_0_n_67 ;
  wire \genblk3[1].ram_block_reg_0_1_n_64 ;
  wire \genblk3[1].ram_block_reg_0_1_n_65 ;
  wire \genblk3[1].ram_block_reg_0_1_n_66 ;
  wire \genblk3[1].ram_block_reg_0_1_n_67 ;
  wire \genblk3[1].ram_block_reg_1_0_n_64 ;
  wire \genblk3[1].ram_block_reg_1_0_n_65 ;
  wire \genblk3[1].ram_block_reg_1_0_n_66 ;
  wire \genblk3[1].ram_block_reg_1_0_n_67 ;
  wire \genblk3[1].ram_block_reg_1_1_n_64 ;
  wire \genblk3[1].ram_block_reg_1_1_n_65 ;
  wire \genblk3[1].ram_block_reg_1_1_n_66 ;
  wire \genblk3[1].ram_block_reg_1_1_n_67 ;
  wire \genblk3[1].ram_block_reg_2_0_n_64 ;
  wire \genblk3[1].ram_block_reg_2_0_n_65 ;
  wire \genblk3[1].ram_block_reg_2_0_n_66 ;
  wire \genblk3[1].ram_block_reg_2_0_n_67 ;
  wire \genblk3[1].ram_block_reg_2_1_n_64 ;
  wire \genblk3[1].ram_block_reg_2_1_n_65 ;
  wire \genblk3[1].ram_block_reg_2_1_n_66 ;
  wire \genblk3[1].ram_block_reg_2_1_n_67 ;
  wire \genblk3[1].ram_block_reg_3_0_n_64 ;
  wire \genblk3[1].ram_block_reg_3_0_n_65 ;
  wire \genblk3[1].ram_block_reg_3_0_n_66 ;
  wire \genblk3[1].ram_block_reg_3_0_n_67 ;
  wire \genblk3[1].ram_block_reg_3_1_n_64 ;
  wire \genblk3[1].ram_block_reg_3_1_n_65 ;
  wire \genblk3[1].ram_block_reg_3_1_n_66 ;
  wire \genblk3[1].ram_block_reg_3_1_n_67 ;
  wire [31:0]p_1_in2_in;
  wire \NLW_genblk3[1].ram_block_reg_0_0_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_0_0_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_0_0_DBITERR_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_0_0_INJECTDBITERR_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_0_0_INJECTSBITERR_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_0_0_SBITERR_UNCONNECTED ;
  wire [31:4]\NLW_genblk3[1].ram_block_reg_0_0_DOADO_UNCONNECTED ;
  wire [31:4]\NLW_genblk3[1].ram_block_reg_0_0_DOBDO_UNCONNECTED ;
  wire [3:0]\NLW_genblk3[1].ram_block_reg_0_0_DOPADOP_UNCONNECTED ;
  wire [3:0]\NLW_genblk3[1].ram_block_reg_0_0_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_genblk3[1].ram_block_reg_0_0_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_genblk3[1].ram_block_reg_0_0_RDADDRECC_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_0_1_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_0_1_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_0_1_DBITERR_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_0_1_INJECTDBITERR_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_0_1_INJECTSBITERR_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_0_1_SBITERR_UNCONNECTED ;
  wire [31:4]\NLW_genblk3[1].ram_block_reg_0_1_DOADO_UNCONNECTED ;
  wire [31:4]\NLW_genblk3[1].ram_block_reg_0_1_DOBDO_UNCONNECTED ;
  wire [3:0]\NLW_genblk3[1].ram_block_reg_0_1_DOPADOP_UNCONNECTED ;
  wire [3:0]\NLW_genblk3[1].ram_block_reg_0_1_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_genblk3[1].ram_block_reg_0_1_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_genblk3[1].ram_block_reg_0_1_RDADDRECC_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_1_0_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_1_0_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_1_0_DBITERR_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_1_0_INJECTDBITERR_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_1_0_INJECTSBITERR_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_1_0_SBITERR_UNCONNECTED ;
  wire [31:4]\NLW_genblk3[1].ram_block_reg_1_0_DOADO_UNCONNECTED ;
  wire [31:4]\NLW_genblk3[1].ram_block_reg_1_0_DOBDO_UNCONNECTED ;
  wire [3:0]\NLW_genblk3[1].ram_block_reg_1_0_DOPADOP_UNCONNECTED ;
  wire [3:0]\NLW_genblk3[1].ram_block_reg_1_0_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_genblk3[1].ram_block_reg_1_0_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_genblk3[1].ram_block_reg_1_0_RDADDRECC_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_1_1_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_1_1_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_1_1_DBITERR_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_1_1_INJECTDBITERR_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_1_1_INJECTSBITERR_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_1_1_SBITERR_UNCONNECTED ;
  wire [31:4]\NLW_genblk3[1].ram_block_reg_1_1_DOADO_UNCONNECTED ;
  wire [31:4]\NLW_genblk3[1].ram_block_reg_1_1_DOBDO_UNCONNECTED ;
  wire [3:0]\NLW_genblk3[1].ram_block_reg_1_1_DOPADOP_UNCONNECTED ;
  wire [3:0]\NLW_genblk3[1].ram_block_reg_1_1_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_genblk3[1].ram_block_reg_1_1_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_genblk3[1].ram_block_reg_1_1_RDADDRECC_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_2_0_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_2_0_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_2_0_DBITERR_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_2_0_INJECTDBITERR_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_2_0_INJECTSBITERR_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_2_0_SBITERR_UNCONNECTED ;
  wire [31:4]\NLW_genblk3[1].ram_block_reg_2_0_DOADO_UNCONNECTED ;
  wire [31:4]\NLW_genblk3[1].ram_block_reg_2_0_DOBDO_UNCONNECTED ;
  wire [3:0]\NLW_genblk3[1].ram_block_reg_2_0_DOPADOP_UNCONNECTED ;
  wire [3:0]\NLW_genblk3[1].ram_block_reg_2_0_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_genblk3[1].ram_block_reg_2_0_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_genblk3[1].ram_block_reg_2_0_RDADDRECC_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_2_1_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_2_1_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_2_1_DBITERR_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_2_1_INJECTDBITERR_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_2_1_INJECTSBITERR_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_2_1_SBITERR_UNCONNECTED ;
  wire [31:4]\NLW_genblk3[1].ram_block_reg_2_1_DOADO_UNCONNECTED ;
  wire [31:4]\NLW_genblk3[1].ram_block_reg_2_1_DOBDO_UNCONNECTED ;
  wire [3:0]\NLW_genblk3[1].ram_block_reg_2_1_DOPADOP_UNCONNECTED ;
  wire [3:0]\NLW_genblk3[1].ram_block_reg_2_1_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_genblk3[1].ram_block_reg_2_1_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_genblk3[1].ram_block_reg_2_1_RDADDRECC_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_3_0_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_3_0_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_3_0_DBITERR_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_3_0_INJECTDBITERR_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_3_0_INJECTSBITERR_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_3_0_SBITERR_UNCONNECTED ;
  wire [31:4]\NLW_genblk3[1].ram_block_reg_3_0_DOADO_UNCONNECTED ;
  wire [31:4]\NLW_genblk3[1].ram_block_reg_3_0_DOBDO_UNCONNECTED ;
  wire [3:0]\NLW_genblk3[1].ram_block_reg_3_0_DOPADOP_UNCONNECTED ;
  wire [3:0]\NLW_genblk3[1].ram_block_reg_3_0_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_genblk3[1].ram_block_reg_3_0_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_genblk3[1].ram_block_reg_3_0_RDADDRECC_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_3_1_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_3_1_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_3_1_DBITERR_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_3_1_INJECTDBITERR_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_3_1_INJECTSBITERR_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_3_1_SBITERR_UNCONNECTED ;
  wire [31:4]\NLW_genblk3[1].ram_block_reg_3_1_DOADO_UNCONNECTED ;
  wire [31:4]\NLW_genblk3[1].ram_block_reg_3_1_DOBDO_UNCONNECTED ;
  wire [3:0]\NLW_genblk3[1].ram_block_reg_3_1_DOPADOP_UNCONNECTED ;
  wire [3:0]\NLW_genblk3[1].ram_block_reg_3_1_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_genblk3[1].ram_block_reg_3_1_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_genblk3[1].ram_block_reg_3_1_RDADDRECC_UNCONNECTED ;

  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d4" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d4" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-15 {cell *THIS*} {string {address width (13) is more than optimal threshold of 12. Implementing using BWWE will require more logic and timing would be suboptimal. Please use attribute \"ram_decomp = power\" if BWWE is desired.}}} {SYNTH-6 {cell *THIS*}} {SYNTH-7 {cell *THIS*}}" *) 
  (* RTL_RAM_BITS = "262144" *) 
  (* RTL_RAM_NAME = "genblk3[1].ram_block" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "8191" *) 
  (* bram_slice_begin = "0" *) 
  (* bram_slice_end = "3" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "8191" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "3" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(4),
    .READ_WIDTH_B(4),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(4),
    .WRITE_WIDTH_B(4)) 
    \genblk3[1].ram_block_reg_0_0 
       (.ADDRARDADDR({1'b1,ADDRARDADDR,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1}),
        .CASCADEINA(1'b1),
        .CASCADEINB(1'b1),
        .CASCADEOUTA(\NLW_genblk3[1].ram_block_reg_0_0_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_genblk3[1].ram_block_reg_0_0_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(HCLK),
        .CLKBWRCLK(HCLK),
        .DBITERR(\NLW_genblk3[1].ram_block_reg_0_0_DBITERR_UNCONNECTED ),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,p_1_in2_in[3:0]}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO({\NLW_genblk3[1].ram_block_reg_0_0_DOADO_UNCONNECTED [31:4],doutA[3:0]}),
        .DOBDO({\NLW_genblk3[1].ram_block_reg_0_0_DOBDO_UNCONNECTED [31:4],\genblk3[1].ram_block_reg_0_0_n_64 ,\genblk3[1].ram_block_reg_0_0_n_65 ,\genblk3[1].ram_block_reg_0_0_n_66 ,\genblk3[1].ram_block_reg_0_0_n_67 }),
        .DOPADOP(\NLW_genblk3[1].ram_block_reg_0_0_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP(\NLW_genblk3[1].ram_block_reg_0_0_DOPBDOP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_genblk3[1].ram_block_reg_0_0_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(1'b1),
        .ENBWREN(1'b1),
        .INJECTDBITERR(\NLW_genblk3[1].ram_block_reg_0_0_INJECTDBITERR_UNCONNECTED ),
        .INJECTSBITERR(\NLW_genblk3[1].ram_block_reg_0_0_INJECTSBITERR_UNCONNECTED ),
        .RDADDRECC(\NLW_genblk3[1].ram_block_reg_0_0_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_genblk3[1].ram_block_reg_0_0_SBITERR_UNCONNECTED ),
        .WEA({DTCMBYTEWR[0],DTCMBYTEWR[0],DTCMBYTEWR[0],DTCMBYTEWR[0]}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d4" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d4" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-15 {cell *THIS*} {string {address width (13) is more than optimal threshold of 12. Implementing using BWWE will require more logic and timing would be suboptimal. Please use attribute \"ram_decomp = power\" if BWWE is desired.}}} {SYNTH-6 {cell *THIS*}} {SYNTH-7 {cell *THIS*}}" *) 
  (* RTL_RAM_BITS = "262144" *) 
  (* RTL_RAM_NAME = "genblk3[1].ram_block" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "8191" *) 
  (* bram_slice_begin = "4" *) 
  (* bram_slice_end = "7" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "8191" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "4" *) 
  (* ram_slice_end = "7" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(4),
    .READ_WIDTH_B(4),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(4),
    .WRITE_WIDTH_B(4)) 
    \genblk3[1].ram_block_reg_0_1 
       (.ADDRARDADDR({1'b1,ADDRARDADDR,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1}),
        .CASCADEINA(1'b1),
        .CASCADEINB(1'b1),
        .CASCADEOUTA(\NLW_genblk3[1].ram_block_reg_0_1_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_genblk3[1].ram_block_reg_0_1_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(HCLK),
        .CLKBWRCLK(HCLK),
        .DBITERR(\NLW_genblk3[1].ram_block_reg_0_1_DBITERR_UNCONNECTED ),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,p_1_in2_in[7:4]}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO({\NLW_genblk3[1].ram_block_reg_0_1_DOADO_UNCONNECTED [31:4],doutA[7:4]}),
        .DOBDO({\NLW_genblk3[1].ram_block_reg_0_1_DOBDO_UNCONNECTED [31:4],\genblk3[1].ram_block_reg_0_1_n_64 ,\genblk3[1].ram_block_reg_0_1_n_65 ,\genblk3[1].ram_block_reg_0_1_n_66 ,\genblk3[1].ram_block_reg_0_1_n_67 }),
        .DOPADOP(\NLW_genblk3[1].ram_block_reg_0_1_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP(\NLW_genblk3[1].ram_block_reg_0_1_DOPBDOP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_genblk3[1].ram_block_reg_0_1_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(1'b1),
        .ENBWREN(1'b1),
        .INJECTDBITERR(\NLW_genblk3[1].ram_block_reg_0_1_INJECTDBITERR_UNCONNECTED ),
        .INJECTSBITERR(\NLW_genblk3[1].ram_block_reg_0_1_INJECTSBITERR_UNCONNECTED ),
        .RDADDRECC(\NLW_genblk3[1].ram_block_reg_0_1_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_genblk3[1].ram_block_reg_0_1_SBITERR_UNCONNECTED ),
        .WEA({DTCMBYTEWR[0],DTCMBYTEWR[0],DTCMBYTEWR[0],DTCMBYTEWR[0]}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d4" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d4" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-15 {cell *THIS*} {string {address width (13) is more than optimal threshold of 12. Implementing using BWWE will require more logic and timing would be suboptimal. Please use attribute \"ram_decomp = power\" if BWWE is desired.}}} {SYNTH-6 {cell *THIS*}} {SYNTH-7 {cell *THIS*}}" *) 
  (* RTL_RAM_BITS = "262144" *) 
  (* RTL_RAM_NAME = "genblk3[1].ram_block" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "8191" *) 
  (* bram_slice_begin = "8" *) 
  (* bram_slice_end = "11" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "8191" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "8" *) 
  (* ram_slice_end = "11" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(4),
    .READ_WIDTH_B(4),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(4),
    .WRITE_WIDTH_B(4)) 
    \genblk3[1].ram_block_reg_1_0 
       (.ADDRARDADDR({1'b1,ADDRARDADDR,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1}),
        .CASCADEINA(1'b1),
        .CASCADEINB(1'b1),
        .CASCADEOUTA(\NLW_genblk3[1].ram_block_reg_1_0_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_genblk3[1].ram_block_reg_1_0_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(HCLK),
        .CLKBWRCLK(HCLK),
        .DBITERR(\NLW_genblk3[1].ram_block_reg_1_0_DBITERR_UNCONNECTED ),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,p_1_in2_in[11:8]}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO({\NLW_genblk3[1].ram_block_reg_1_0_DOADO_UNCONNECTED [31:4],doutA[11:8]}),
        .DOBDO({\NLW_genblk3[1].ram_block_reg_1_0_DOBDO_UNCONNECTED [31:4],\genblk3[1].ram_block_reg_1_0_n_64 ,\genblk3[1].ram_block_reg_1_0_n_65 ,\genblk3[1].ram_block_reg_1_0_n_66 ,\genblk3[1].ram_block_reg_1_0_n_67 }),
        .DOPADOP(\NLW_genblk3[1].ram_block_reg_1_0_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP(\NLW_genblk3[1].ram_block_reg_1_0_DOPBDOP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_genblk3[1].ram_block_reg_1_0_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(1'b1),
        .ENBWREN(1'b1),
        .INJECTDBITERR(\NLW_genblk3[1].ram_block_reg_1_0_INJECTDBITERR_UNCONNECTED ),
        .INJECTSBITERR(\NLW_genblk3[1].ram_block_reg_1_0_INJECTSBITERR_UNCONNECTED ),
        .RDADDRECC(\NLW_genblk3[1].ram_block_reg_1_0_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_genblk3[1].ram_block_reg_1_0_SBITERR_UNCONNECTED ),
        .WEA({DTCMBYTEWR[1],DTCMBYTEWR[1],DTCMBYTEWR[1],DTCMBYTEWR[1]}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d4" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d4" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-15 {cell *THIS*} {string {address width (13) is more than optimal threshold of 12. Implementing using BWWE will require more logic and timing would be suboptimal. Please use attribute \"ram_decomp = power\" if BWWE is desired.}}} {SYNTH-6 {cell *THIS*}} {SYNTH-7 {cell *THIS*}}" *) 
  (* RTL_RAM_BITS = "262144" *) 
  (* RTL_RAM_NAME = "genblk3[1].ram_block" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "8191" *) 
  (* bram_slice_begin = "12" *) 
  (* bram_slice_end = "15" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "8191" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "12" *) 
  (* ram_slice_end = "15" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(4),
    .READ_WIDTH_B(4),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(4),
    .WRITE_WIDTH_B(4)) 
    \genblk3[1].ram_block_reg_1_1 
       (.ADDRARDADDR({1'b1,ADDRARDADDR,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1}),
        .CASCADEINA(1'b1),
        .CASCADEINB(1'b1),
        .CASCADEOUTA(\NLW_genblk3[1].ram_block_reg_1_1_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_genblk3[1].ram_block_reg_1_1_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(HCLK),
        .CLKBWRCLK(HCLK),
        .DBITERR(\NLW_genblk3[1].ram_block_reg_1_1_DBITERR_UNCONNECTED ),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,p_1_in2_in[15:12]}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO({\NLW_genblk3[1].ram_block_reg_1_1_DOADO_UNCONNECTED [31:4],doutA[15:12]}),
        .DOBDO({\NLW_genblk3[1].ram_block_reg_1_1_DOBDO_UNCONNECTED [31:4],\genblk3[1].ram_block_reg_1_1_n_64 ,\genblk3[1].ram_block_reg_1_1_n_65 ,\genblk3[1].ram_block_reg_1_1_n_66 ,\genblk3[1].ram_block_reg_1_1_n_67 }),
        .DOPADOP(\NLW_genblk3[1].ram_block_reg_1_1_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP(\NLW_genblk3[1].ram_block_reg_1_1_DOPBDOP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_genblk3[1].ram_block_reg_1_1_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(1'b1),
        .ENBWREN(1'b1),
        .INJECTDBITERR(\NLW_genblk3[1].ram_block_reg_1_1_INJECTDBITERR_UNCONNECTED ),
        .INJECTSBITERR(\NLW_genblk3[1].ram_block_reg_1_1_INJECTSBITERR_UNCONNECTED ),
        .RDADDRECC(\NLW_genblk3[1].ram_block_reg_1_1_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_genblk3[1].ram_block_reg_1_1_SBITERR_UNCONNECTED ),
        .WEA({DTCMBYTEWR[1],DTCMBYTEWR[1],DTCMBYTEWR[1],DTCMBYTEWR[1]}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d4" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d4" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-15 {cell *THIS*} {string {address width (13) is more than optimal threshold of 12. Implementing using BWWE will require more logic and timing would be suboptimal. Please use attribute \"ram_decomp = power\" if BWWE is desired.}}} {SYNTH-6 {cell *THIS*}} {SYNTH-7 {cell *THIS*}}" *) 
  (* RTL_RAM_BITS = "262144" *) 
  (* RTL_RAM_NAME = "genblk3[1].ram_block" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "8191" *) 
  (* bram_slice_begin = "16" *) 
  (* bram_slice_end = "19" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "8191" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "16" *) 
  (* ram_slice_end = "19" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(4),
    .READ_WIDTH_B(4),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(4),
    .WRITE_WIDTH_B(4)) 
    \genblk3[1].ram_block_reg_2_0 
       (.ADDRARDADDR({1'b1,ADDRARDADDR,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1}),
        .CASCADEINA(1'b1),
        .CASCADEINB(1'b1),
        .CASCADEOUTA(\NLW_genblk3[1].ram_block_reg_2_0_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_genblk3[1].ram_block_reg_2_0_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(HCLK),
        .CLKBWRCLK(HCLK),
        .DBITERR(\NLW_genblk3[1].ram_block_reg_2_0_DBITERR_UNCONNECTED ),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,p_1_in2_in[19:16]}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO({\NLW_genblk3[1].ram_block_reg_2_0_DOADO_UNCONNECTED [31:4],doutA[19:16]}),
        .DOBDO({\NLW_genblk3[1].ram_block_reg_2_0_DOBDO_UNCONNECTED [31:4],\genblk3[1].ram_block_reg_2_0_n_64 ,\genblk3[1].ram_block_reg_2_0_n_65 ,\genblk3[1].ram_block_reg_2_0_n_66 ,\genblk3[1].ram_block_reg_2_0_n_67 }),
        .DOPADOP(\NLW_genblk3[1].ram_block_reg_2_0_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP(\NLW_genblk3[1].ram_block_reg_2_0_DOPBDOP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_genblk3[1].ram_block_reg_2_0_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(1'b1),
        .ENBWREN(1'b1),
        .INJECTDBITERR(\NLW_genblk3[1].ram_block_reg_2_0_INJECTDBITERR_UNCONNECTED ),
        .INJECTSBITERR(\NLW_genblk3[1].ram_block_reg_2_0_INJECTSBITERR_UNCONNECTED ),
        .RDADDRECC(\NLW_genblk3[1].ram_block_reg_2_0_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_genblk3[1].ram_block_reg_2_0_SBITERR_UNCONNECTED ),
        .WEA({DTCMBYTEWR[2],DTCMBYTEWR[2],DTCMBYTEWR[2],DTCMBYTEWR[2]}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d4" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d4" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-15 {cell *THIS*} {string {address width (13) is more than optimal threshold of 12. Implementing using BWWE will require more logic and timing would be suboptimal. Please use attribute \"ram_decomp = power\" if BWWE is desired.}}} {SYNTH-6 {cell *THIS*}} {SYNTH-7 {cell *THIS*}}" *) 
  (* RTL_RAM_BITS = "262144" *) 
  (* RTL_RAM_NAME = "genblk3[1].ram_block" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "8191" *) 
  (* bram_slice_begin = "20" *) 
  (* bram_slice_end = "23" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "8191" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "20" *) 
  (* ram_slice_end = "23" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(4),
    .READ_WIDTH_B(4),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(4),
    .WRITE_WIDTH_B(4)) 
    \genblk3[1].ram_block_reg_2_1 
       (.ADDRARDADDR({1'b1,ADDRARDADDR,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1}),
        .CASCADEINA(1'b1),
        .CASCADEINB(1'b1),
        .CASCADEOUTA(\NLW_genblk3[1].ram_block_reg_2_1_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_genblk3[1].ram_block_reg_2_1_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(HCLK),
        .CLKBWRCLK(HCLK),
        .DBITERR(\NLW_genblk3[1].ram_block_reg_2_1_DBITERR_UNCONNECTED ),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,p_1_in2_in[23:20]}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO({\NLW_genblk3[1].ram_block_reg_2_1_DOADO_UNCONNECTED [31:4],doutA[23:20]}),
        .DOBDO({\NLW_genblk3[1].ram_block_reg_2_1_DOBDO_UNCONNECTED [31:4],\genblk3[1].ram_block_reg_2_1_n_64 ,\genblk3[1].ram_block_reg_2_1_n_65 ,\genblk3[1].ram_block_reg_2_1_n_66 ,\genblk3[1].ram_block_reg_2_1_n_67 }),
        .DOPADOP(\NLW_genblk3[1].ram_block_reg_2_1_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP(\NLW_genblk3[1].ram_block_reg_2_1_DOPBDOP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_genblk3[1].ram_block_reg_2_1_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(1'b1),
        .ENBWREN(1'b1),
        .INJECTDBITERR(\NLW_genblk3[1].ram_block_reg_2_1_INJECTDBITERR_UNCONNECTED ),
        .INJECTSBITERR(\NLW_genblk3[1].ram_block_reg_2_1_INJECTSBITERR_UNCONNECTED ),
        .RDADDRECC(\NLW_genblk3[1].ram_block_reg_2_1_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_genblk3[1].ram_block_reg_2_1_SBITERR_UNCONNECTED ),
        .WEA({DTCMBYTEWR[2],DTCMBYTEWR[2],DTCMBYTEWR[2],DTCMBYTEWR[2]}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d4" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d4" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-15 {cell *THIS*} {string {address width (13) is more than optimal threshold of 12. Implementing using BWWE will require more logic and timing would be suboptimal. Please use attribute \"ram_decomp = power\" if BWWE is desired.}}} {SYNTH-6 {cell *THIS*}} {SYNTH-7 {cell *THIS*}}" *) 
  (* RTL_RAM_BITS = "262144" *) 
  (* RTL_RAM_NAME = "genblk3[1].ram_block" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "8191" *) 
  (* bram_slice_begin = "24" *) 
  (* bram_slice_end = "27" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "8191" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "24" *) 
  (* ram_slice_end = "27" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(4),
    .READ_WIDTH_B(4),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(4),
    .WRITE_WIDTH_B(4)) 
    \genblk3[1].ram_block_reg_3_0 
       (.ADDRARDADDR({1'b1,ADDRARDADDR,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1}),
        .CASCADEINA(1'b1),
        .CASCADEINB(1'b1),
        .CASCADEOUTA(\NLW_genblk3[1].ram_block_reg_3_0_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_genblk3[1].ram_block_reg_3_0_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(HCLK),
        .CLKBWRCLK(HCLK),
        .DBITERR(\NLW_genblk3[1].ram_block_reg_3_0_DBITERR_UNCONNECTED ),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,p_1_in2_in[27:24]}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO({\NLW_genblk3[1].ram_block_reg_3_0_DOADO_UNCONNECTED [31:4],doutA[27:24]}),
        .DOBDO({\NLW_genblk3[1].ram_block_reg_3_0_DOBDO_UNCONNECTED [31:4],\genblk3[1].ram_block_reg_3_0_n_64 ,\genblk3[1].ram_block_reg_3_0_n_65 ,\genblk3[1].ram_block_reg_3_0_n_66 ,\genblk3[1].ram_block_reg_3_0_n_67 }),
        .DOPADOP(\NLW_genblk3[1].ram_block_reg_3_0_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP(\NLW_genblk3[1].ram_block_reg_3_0_DOPBDOP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_genblk3[1].ram_block_reg_3_0_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(1'b1),
        .ENBWREN(1'b1),
        .INJECTDBITERR(\NLW_genblk3[1].ram_block_reg_3_0_INJECTDBITERR_UNCONNECTED ),
        .INJECTSBITERR(\NLW_genblk3[1].ram_block_reg_3_0_INJECTSBITERR_UNCONNECTED ),
        .RDADDRECC(\NLW_genblk3[1].ram_block_reg_3_0_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_genblk3[1].ram_block_reg_3_0_SBITERR_UNCONNECTED ),
        .WEA({DTCMBYTEWR[3],DTCMBYTEWR[3],DTCMBYTEWR[3],DTCMBYTEWR[3]}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d4" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d4" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-15 {cell *THIS*} {string {address width (13) is more than optimal threshold of 12. Implementing using BWWE will require more logic and timing would be suboptimal. Please use attribute \"ram_decomp = power\" if BWWE is desired.}}} {SYNTH-6 {cell *THIS*}} {SYNTH-7 {cell *THIS*}}" *) 
  (* RTL_RAM_BITS = "262144" *) 
  (* RTL_RAM_NAME = "genblk3[1].ram_block" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "8191" *) 
  (* bram_slice_begin = "28" *) 
  (* bram_slice_end = "31" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "8191" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "28" *) 
  (* ram_slice_end = "31" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(4),
    .READ_WIDTH_B(4),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(4),
    .WRITE_WIDTH_B(4)) 
    \genblk3[1].ram_block_reg_3_1 
       (.ADDRARDADDR({1'b1,ADDRARDADDR,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1}),
        .CASCADEINA(1'b1),
        .CASCADEINB(1'b1),
        .CASCADEOUTA(\NLW_genblk3[1].ram_block_reg_3_1_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_genblk3[1].ram_block_reg_3_1_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(HCLK),
        .CLKBWRCLK(HCLK),
        .DBITERR(\NLW_genblk3[1].ram_block_reg_3_1_DBITERR_UNCONNECTED ),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,p_1_in2_in[31:28]}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO({\NLW_genblk3[1].ram_block_reg_3_1_DOADO_UNCONNECTED [31:4],doutA[31:28]}),
        .DOBDO({\NLW_genblk3[1].ram_block_reg_3_1_DOBDO_UNCONNECTED [31:4],\genblk3[1].ram_block_reg_3_1_n_64 ,\genblk3[1].ram_block_reg_3_1_n_65 ,\genblk3[1].ram_block_reg_3_1_n_66 ,\genblk3[1].ram_block_reg_3_1_n_67 }),
        .DOPADOP(\NLW_genblk3[1].ram_block_reg_3_1_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP(\NLW_genblk3[1].ram_block_reg_3_1_DOPBDOP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_genblk3[1].ram_block_reg_3_1_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(1'b1),
        .ENBWREN(1'b1),
        .INJECTDBITERR(\NLW_genblk3[1].ram_block_reg_3_1_INJECTDBITERR_UNCONNECTED ),
        .INJECTSBITERR(\NLW_genblk3[1].ram_block_reg_3_1_INJECTSBITERR_UNCONNECTED ),
        .RDADDRECC(\NLW_genblk3[1].ram_block_reg_3_1_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_genblk3[1].ram_block_reg_3_1_SBITERR_UNCONNECTED ),
        .WEA({DTCMBYTEWR[3],DTCMBYTEWR[3],DTCMBYTEWR[3],DTCMBYTEWR[3]}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "X_TCMDBG" *) 
module design_1_CORTEXM1_AXI_0_1_X_TCMDBG_0
   (doutA,
    HCLK,
    ADDRARDADDR,
    p_1_in2_in,
    ITCMBYTEWR);
  output [31:0]doutA;
  input HCLK;
  input [12:0]ADDRARDADDR;
  input [31:0]p_1_in2_in;
  input [3:0]ITCMBYTEWR;

  wire [12:0]ADDRARDADDR;
  wire HCLK;
  wire [3:0]ITCMBYTEWR;
  wire [31:0]doutA;
  wire \genblk3[1].ram_block_reg_0_0_n_64 ;
  wire \genblk3[1].ram_block_reg_0_0_n_65 ;
  wire \genblk3[1].ram_block_reg_0_0_n_66 ;
  wire \genblk3[1].ram_block_reg_0_0_n_67 ;
  wire \genblk3[1].ram_block_reg_0_1_n_64 ;
  wire \genblk3[1].ram_block_reg_0_1_n_65 ;
  wire \genblk3[1].ram_block_reg_0_1_n_66 ;
  wire \genblk3[1].ram_block_reg_0_1_n_67 ;
  wire \genblk3[1].ram_block_reg_1_0_n_64 ;
  wire \genblk3[1].ram_block_reg_1_0_n_65 ;
  wire \genblk3[1].ram_block_reg_1_0_n_66 ;
  wire \genblk3[1].ram_block_reg_1_0_n_67 ;
  wire \genblk3[1].ram_block_reg_1_1_n_64 ;
  wire \genblk3[1].ram_block_reg_1_1_n_65 ;
  wire \genblk3[1].ram_block_reg_1_1_n_66 ;
  wire \genblk3[1].ram_block_reg_1_1_n_67 ;
  wire \genblk3[1].ram_block_reg_2_0_n_64 ;
  wire \genblk3[1].ram_block_reg_2_0_n_65 ;
  wire \genblk3[1].ram_block_reg_2_0_n_66 ;
  wire \genblk3[1].ram_block_reg_2_0_n_67 ;
  wire \genblk3[1].ram_block_reg_2_1_n_64 ;
  wire \genblk3[1].ram_block_reg_2_1_n_65 ;
  wire \genblk3[1].ram_block_reg_2_1_n_66 ;
  wire \genblk3[1].ram_block_reg_2_1_n_67 ;
  wire \genblk3[1].ram_block_reg_3_0_n_64 ;
  wire \genblk3[1].ram_block_reg_3_0_n_65 ;
  wire \genblk3[1].ram_block_reg_3_0_n_66 ;
  wire \genblk3[1].ram_block_reg_3_0_n_67 ;
  wire \genblk3[1].ram_block_reg_3_1_n_64 ;
  wire \genblk3[1].ram_block_reg_3_1_n_65 ;
  wire \genblk3[1].ram_block_reg_3_1_n_66 ;
  wire \genblk3[1].ram_block_reg_3_1_n_67 ;
  wire [31:0]p_1_in2_in;
  wire \NLW_genblk3[1].ram_block_reg_0_0_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_0_0_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_0_0_DBITERR_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_0_0_INJECTDBITERR_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_0_0_INJECTSBITERR_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_0_0_SBITERR_UNCONNECTED ;
  wire [31:4]\NLW_genblk3[1].ram_block_reg_0_0_DOADO_UNCONNECTED ;
  wire [31:4]\NLW_genblk3[1].ram_block_reg_0_0_DOBDO_UNCONNECTED ;
  wire [3:0]\NLW_genblk3[1].ram_block_reg_0_0_DOPADOP_UNCONNECTED ;
  wire [3:0]\NLW_genblk3[1].ram_block_reg_0_0_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_genblk3[1].ram_block_reg_0_0_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_genblk3[1].ram_block_reg_0_0_RDADDRECC_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_0_1_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_0_1_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_0_1_DBITERR_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_0_1_INJECTDBITERR_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_0_1_INJECTSBITERR_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_0_1_SBITERR_UNCONNECTED ;
  wire [31:4]\NLW_genblk3[1].ram_block_reg_0_1_DOADO_UNCONNECTED ;
  wire [31:4]\NLW_genblk3[1].ram_block_reg_0_1_DOBDO_UNCONNECTED ;
  wire [3:0]\NLW_genblk3[1].ram_block_reg_0_1_DOPADOP_UNCONNECTED ;
  wire [3:0]\NLW_genblk3[1].ram_block_reg_0_1_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_genblk3[1].ram_block_reg_0_1_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_genblk3[1].ram_block_reg_0_1_RDADDRECC_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_1_0_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_1_0_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_1_0_DBITERR_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_1_0_INJECTDBITERR_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_1_0_INJECTSBITERR_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_1_0_SBITERR_UNCONNECTED ;
  wire [31:4]\NLW_genblk3[1].ram_block_reg_1_0_DOADO_UNCONNECTED ;
  wire [31:4]\NLW_genblk3[1].ram_block_reg_1_0_DOBDO_UNCONNECTED ;
  wire [3:0]\NLW_genblk3[1].ram_block_reg_1_0_DOPADOP_UNCONNECTED ;
  wire [3:0]\NLW_genblk3[1].ram_block_reg_1_0_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_genblk3[1].ram_block_reg_1_0_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_genblk3[1].ram_block_reg_1_0_RDADDRECC_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_1_1_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_1_1_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_1_1_DBITERR_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_1_1_INJECTDBITERR_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_1_1_INJECTSBITERR_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_1_1_SBITERR_UNCONNECTED ;
  wire [31:4]\NLW_genblk3[1].ram_block_reg_1_1_DOADO_UNCONNECTED ;
  wire [31:4]\NLW_genblk3[1].ram_block_reg_1_1_DOBDO_UNCONNECTED ;
  wire [3:0]\NLW_genblk3[1].ram_block_reg_1_1_DOPADOP_UNCONNECTED ;
  wire [3:0]\NLW_genblk3[1].ram_block_reg_1_1_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_genblk3[1].ram_block_reg_1_1_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_genblk3[1].ram_block_reg_1_1_RDADDRECC_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_2_0_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_2_0_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_2_0_DBITERR_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_2_0_INJECTDBITERR_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_2_0_INJECTSBITERR_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_2_0_SBITERR_UNCONNECTED ;
  wire [31:4]\NLW_genblk3[1].ram_block_reg_2_0_DOADO_UNCONNECTED ;
  wire [31:4]\NLW_genblk3[1].ram_block_reg_2_0_DOBDO_UNCONNECTED ;
  wire [3:0]\NLW_genblk3[1].ram_block_reg_2_0_DOPADOP_UNCONNECTED ;
  wire [3:0]\NLW_genblk3[1].ram_block_reg_2_0_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_genblk3[1].ram_block_reg_2_0_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_genblk3[1].ram_block_reg_2_0_RDADDRECC_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_2_1_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_2_1_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_2_1_DBITERR_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_2_1_INJECTDBITERR_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_2_1_INJECTSBITERR_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_2_1_SBITERR_UNCONNECTED ;
  wire [31:4]\NLW_genblk3[1].ram_block_reg_2_1_DOADO_UNCONNECTED ;
  wire [31:4]\NLW_genblk3[1].ram_block_reg_2_1_DOBDO_UNCONNECTED ;
  wire [3:0]\NLW_genblk3[1].ram_block_reg_2_1_DOPADOP_UNCONNECTED ;
  wire [3:0]\NLW_genblk3[1].ram_block_reg_2_1_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_genblk3[1].ram_block_reg_2_1_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_genblk3[1].ram_block_reg_2_1_RDADDRECC_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_3_0_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_3_0_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_3_0_DBITERR_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_3_0_INJECTDBITERR_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_3_0_INJECTSBITERR_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_3_0_SBITERR_UNCONNECTED ;
  wire [31:4]\NLW_genblk3[1].ram_block_reg_3_0_DOADO_UNCONNECTED ;
  wire [31:4]\NLW_genblk3[1].ram_block_reg_3_0_DOBDO_UNCONNECTED ;
  wire [3:0]\NLW_genblk3[1].ram_block_reg_3_0_DOPADOP_UNCONNECTED ;
  wire [3:0]\NLW_genblk3[1].ram_block_reg_3_0_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_genblk3[1].ram_block_reg_3_0_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_genblk3[1].ram_block_reg_3_0_RDADDRECC_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_3_1_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_3_1_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_3_1_DBITERR_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_3_1_INJECTDBITERR_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_3_1_INJECTSBITERR_UNCONNECTED ;
  wire \NLW_genblk3[1].ram_block_reg_3_1_SBITERR_UNCONNECTED ;
  wire [31:4]\NLW_genblk3[1].ram_block_reg_3_1_DOADO_UNCONNECTED ;
  wire [31:4]\NLW_genblk3[1].ram_block_reg_3_1_DOBDO_UNCONNECTED ;
  wire [3:0]\NLW_genblk3[1].ram_block_reg_3_1_DOPADOP_UNCONNECTED ;
  wire [3:0]\NLW_genblk3[1].ram_block_reg_3_1_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_genblk3[1].ram_block_reg_3_1_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_genblk3[1].ram_block_reg_3_1_RDADDRECC_UNCONNECTED ;

  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d4" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d4" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-15 {cell *THIS*} {string {address width (13) is more than optimal threshold of 12. Implementing using BWWE will require more logic and timing would be suboptimal. Please use attribute \"ram_decomp = power\" if BWWE is desired.}}} {SYNTH-6 {cell *THIS*}} {SYNTH-7 {cell *THIS*}}" *) 
  (* RTL_RAM_BITS = "262144" *) 
  (* RTL_RAM_NAME = "genblk3[1].ram_block" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "8191" *) 
  (* bram_slice_begin = "0" *) 
  (* bram_slice_end = "3" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "8191" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "3" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(4),
    .READ_WIDTH_B(4),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(4),
    .WRITE_WIDTH_B(4)) 
    \genblk3[1].ram_block_reg_0_0 
       (.ADDRARDADDR({1'b1,ADDRARDADDR,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1}),
        .CASCADEINA(1'b1),
        .CASCADEINB(1'b1),
        .CASCADEOUTA(\NLW_genblk3[1].ram_block_reg_0_0_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_genblk3[1].ram_block_reg_0_0_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(HCLK),
        .CLKBWRCLK(HCLK),
        .DBITERR(\NLW_genblk3[1].ram_block_reg_0_0_DBITERR_UNCONNECTED ),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,p_1_in2_in[3:0]}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO({\NLW_genblk3[1].ram_block_reg_0_0_DOADO_UNCONNECTED [31:4],doutA[3:0]}),
        .DOBDO({\NLW_genblk3[1].ram_block_reg_0_0_DOBDO_UNCONNECTED [31:4],\genblk3[1].ram_block_reg_0_0_n_64 ,\genblk3[1].ram_block_reg_0_0_n_65 ,\genblk3[1].ram_block_reg_0_0_n_66 ,\genblk3[1].ram_block_reg_0_0_n_67 }),
        .DOPADOP(\NLW_genblk3[1].ram_block_reg_0_0_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP(\NLW_genblk3[1].ram_block_reg_0_0_DOPBDOP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_genblk3[1].ram_block_reg_0_0_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(1'b1),
        .ENBWREN(1'b1),
        .INJECTDBITERR(\NLW_genblk3[1].ram_block_reg_0_0_INJECTDBITERR_UNCONNECTED ),
        .INJECTSBITERR(\NLW_genblk3[1].ram_block_reg_0_0_INJECTSBITERR_UNCONNECTED ),
        .RDADDRECC(\NLW_genblk3[1].ram_block_reg_0_0_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_genblk3[1].ram_block_reg_0_0_SBITERR_UNCONNECTED ),
        .WEA({ITCMBYTEWR[0],ITCMBYTEWR[0],ITCMBYTEWR[0],ITCMBYTEWR[0]}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d4" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d4" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-15 {cell *THIS*} {string {address width (13) is more than optimal threshold of 12. Implementing using BWWE will require more logic and timing would be suboptimal. Please use attribute \"ram_decomp = power\" if BWWE is desired.}}} {SYNTH-6 {cell *THIS*}} {SYNTH-7 {cell *THIS*}}" *) 
  (* RTL_RAM_BITS = "262144" *) 
  (* RTL_RAM_NAME = "genblk3[1].ram_block" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "8191" *) 
  (* bram_slice_begin = "4" *) 
  (* bram_slice_end = "7" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "8191" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "4" *) 
  (* ram_slice_end = "7" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(4),
    .READ_WIDTH_B(4),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(4),
    .WRITE_WIDTH_B(4)) 
    \genblk3[1].ram_block_reg_0_1 
       (.ADDRARDADDR({1'b1,ADDRARDADDR,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1}),
        .CASCADEINA(1'b1),
        .CASCADEINB(1'b1),
        .CASCADEOUTA(\NLW_genblk3[1].ram_block_reg_0_1_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_genblk3[1].ram_block_reg_0_1_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(HCLK),
        .CLKBWRCLK(HCLK),
        .DBITERR(\NLW_genblk3[1].ram_block_reg_0_1_DBITERR_UNCONNECTED ),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,p_1_in2_in[7:4]}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO({\NLW_genblk3[1].ram_block_reg_0_1_DOADO_UNCONNECTED [31:4],doutA[7:4]}),
        .DOBDO({\NLW_genblk3[1].ram_block_reg_0_1_DOBDO_UNCONNECTED [31:4],\genblk3[1].ram_block_reg_0_1_n_64 ,\genblk3[1].ram_block_reg_0_1_n_65 ,\genblk3[1].ram_block_reg_0_1_n_66 ,\genblk3[1].ram_block_reg_0_1_n_67 }),
        .DOPADOP(\NLW_genblk3[1].ram_block_reg_0_1_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP(\NLW_genblk3[1].ram_block_reg_0_1_DOPBDOP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_genblk3[1].ram_block_reg_0_1_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(1'b1),
        .ENBWREN(1'b1),
        .INJECTDBITERR(\NLW_genblk3[1].ram_block_reg_0_1_INJECTDBITERR_UNCONNECTED ),
        .INJECTSBITERR(\NLW_genblk3[1].ram_block_reg_0_1_INJECTSBITERR_UNCONNECTED ),
        .RDADDRECC(\NLW_genblk3[1].ram_block_reg_0_1_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_genblk3[1].ram_block_reg_0_1_SBITERR_UNCONNECTED ),
        .WEA({ITCMBYTEWR[0],ITCMBYTEWR[0],ITCMBYTEWR[0],ITCMBYTEWR[0]}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d4" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d4" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-15 {cell *THIS*} {string {address width (13) is more than optimal threshold of 12. Implementing using BWWE will require more logic and timing would be suboptimal. Please use attribute \"ram_decomp = power\" if BWWE is desired.}}} {SYNTH-6 {cell *THIS*}} {SYNTH-7 {cell *THIS*}}" *) 
  (* RTL_RAM_BITS = "262144" *) 
  (* RTL_RAM_NAME = "genblk3[1].ram_block" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "8191" *) 
  (* bram_slice_begin = "8" *) 
  (* bram_slice_end = "11" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "8191" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "8" *) 
  (* ram_slice_end = "11" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(4),
    .READ_WIDTH_B(4),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(4),
    .WRITE_WIDTH_B(4)) 
    \genblk3[1].ram_block_reg_1_0 
       (.ADDRARDADDR({1'b1,ADDRARDADDR,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1}),
        .CASCADEINA(1'b1),
        .CASCADEINB(1'b1),
        .CASCADEOUTA(\NLW_genblk3[1].ram_block_reg_1_0_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_genblk3[1].ram_block_reg_1_0_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(HCLK),
        .CLKBWRCLK(HCLK),
        .DBITERR(\NLW_genblk3[1].ram_block_reg_1_0_DBITERR_UNCONNECTED ),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,p_1_in2_in[11:8]}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO({\NLW_genblk3[1].ram_block_reg_1_0_DOADO_UNCONNECTED [31:4],doutA[11:8]}),
        .DOBDO({\NLW_genblk3[1].ram_block_reg_1_0_DOBDO_UNCONNECTED [31:4],\genblk3[1].ram_block_reg_1_0_n_64 ,\genblk3[1].ram_block_reg_1_0_n_65 ,\genblk3[1].ram_block_reg_1_0_n_66 ,\genblk3[1].ram_block_reg_1_0_n_67 }),
        .DOPADOP(\NLW_genblk3[1].ram_block_reg_1_0_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP(\NLW_genblk3[1].ram_block_reg_1_0_DOPBDOP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_genblk3[1].ram_block_reg_1_0_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(1'b1),
        .ENBWREN(1'b1),
        .INJECTDBITERR(\NLW_genblk3[1].ram_block_reg_1_0_INJECTDBITERR_UNCONNECTED ),
        .INJECTSBITERR(\NLW_genblk3[1].ram_block_reg_1_0_INJECTSBITERR_UNCONNECTED ),
        .RDADDRECC(\NLW_genblk3[1].ram_block_reg_1_0_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_genblk3[1].ram_block_reg_1_0_SBITERR_UNCONNECTED ),
        .WEA({ITCMBYTEWR[1],ITCMBYTEWR[1],ITCMBYTEWR[1],ITCMBYTEWR[1]}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d4" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d4" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-15 {cell *THIS*} {string {address width (13) is more than optimal threshold of 12. Implementing using BWWE will require more logic and timing would be suboptimal. Please use attribute \"ram_decomp = power\" if BWWE is desired.}}} {SYNTH-6 {cell *THIS*}} {SYNTH-7 {cell *THIS*}}" *) 
  (* RTL_RAM_BITS = "262144" *) 
  (* RTL_RAM_NAME = "genblk3[1].ram_block" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "8191" *) 
  (* bram_slice_begin = "12" *) 
  (* bram_slice_end = "15" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "8191" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "12" *) 
  (* ram_slice_end = "15" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(4),
    .READ_WIDTH_B(4),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(4),
    .WRITE_WIDTH_B(4)) 
    \genblk3[1].ram_block_reg_1_1 
       (.ADDRARDADDR({1'b1,ADDRARDADDR,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1}),
        .CASCADEINA(1'b1),
        .CASCADEINB(1'b1),
        .CASCADEOUTA(\NLW_genblk3[1].ram_block_reg_1_1_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_genblk3[1].ram_block_reg_1_1_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(HCLK),
        .CLKBWRCLK(HCLK),
        .DBITERR(\NLW_genblk3[1].ram_block_reg_1_1_DBITERR_UNCONNECTED ),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,p_1_in2_in[15:12]}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO({\NLW_genblk3[1].ram_block_reg_1_1_DOADO_UNCONNECTED [31:4],doutA[15:12]}),
        .DOBDO({\NLW_genblk3[1].ram_block_reg_1_1_DOBDO_UNCONNECTED [31:4],\genblk3[1].ram_block_reg_1_1_n_64 ,\genblk3[1].ram_block_reg_1_1_n_65 ,\genblk3[1].ram_block_reg_1_1_n_66 ,\genblk3[1].ram_block_reg_1_1_n_67 }),
        .DOPADOP(\NLW_genblk3[1].ram_block_reg_1_1_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP(\NLW_genblk3[1].ram_block_reg_1_1_DOPBDOP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_genblk3[1].ram_block_reg_1_1_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(1'b1),
        .ENBWREN(1'b1),
        .INJECTDBITERR(\NLW_genblk3[1].ram_block_reg_1_1_INJECTDBITERR_UNCONNECTED ),
        .INJECTSBITERR(\NLW_genblk3[1].ram_block_reg_1_1_INJECTSBITERR_UNCONNECTED ),
        .RDADDRECC(\NLW_genblk3[1].ram_block_reg_1_1_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_genblk3[1].ram_block_reg_1_1_SBITERR_UNCONNECTED ),
        .WEA({ITCMBYTEWR[1],ITCMBYTEWR[1],ITCMBYTEWR[1],ITCMBYTEWR[1]}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d4" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d4" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-15 {cell *THIS*} {string {address width (13) is more than optimal threshold of 12. Implementing using BWWE will require more logic and timing would be suboptimal. Please use attribute \"ram_decomp = power\" if BWWE is desired.}}} {SYNTH-6 {cell *THIS*}} {SYNTH-7 {cell *THIS*}}" *) 
  (* RTL_RAM_BITS = "262144" *) 
  (* RTL_RAM_NAME = "genblk3[1].ram_block" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "8191" *) 
  (* bram_slice_begin = "16" *) 
  (* bram_slice_end = "19" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "8191" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "16" *) 
  (* ram_slice_end = "19" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(4),
    .READ_WIDTH_B(4),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(4),
    .WRITE_WIDTH_B(4)) 
    \genblk3[1].ram_block_reg_2_0 
       (.ADDRARDADDR({1'b1,ADDRARDADDR,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1}),
        .CASCADEINA(1'b1),
        .CASCADEINB(1'b1),
        .CASCADEOUTA(\NLW_genblk3[1].ram_block_reg_2_0_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_genblk3[1].ram_block_reg_2_0_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(HCLK),
        .CLKBWRCLK(HCLK),
        .DBITERR(\NLW_genblk3[1].ram_block_reg_2_0_DBITERR_UNCONNECTED ),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,p_1_in2_in[19:16]}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO({\NLW_genblk3[1].ram_block_reg_2_0_DOADO_UNCONNECTED [31:4],doutA[19:16]}),
        .DOBDO({\NLW_genblk3[1].ram_block_reg_2_0_DOBDO_UNCONNECTED [31:4],\genblk3[1].ram_block_reg_2_0_n_64 ,\genblk3[1].ram_block_reg_2_0_n_65 ,\genblk3[1].ram_block_reg_2_0_n_66 ,\genblk3[1].ram_block_reg_2_0_n_67 }),
        .DOPADOP(\NLW_genblk3[1].ram_block_reg_2_0_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP(\NLW_genblk3[1].ram_block_reg_2_0_DOPBDOP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_genblk3[1].ram_block_reg_2_0_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(1'b1),
        .ENBWREN(1'b1),
        .INJECTDBITERR(\NLW_genblk3[1].ram_block_reg_2_0_INJECTDBITERR_UNCONNECTED ),
        .INJECTSBITERR(\NLW_genblk3[1].ram_block_reg_2_0_INJECTSBITERR_UNCONNECTED ),
        .RDADDRECC(\NLW_genblk3[1].ram_block_reg_2_0_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_genblk3[1].ram_block_reg_2_0_SBITERR_UNCONNECTED ),
        .WEA({ITCMBYTEWR[2],ITCMBYTEWR[2],ITCMBYTEWR[2],ITCMBYTEWR[2]}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d4" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d4" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-15 {cell *THIS*} {string {address width (13) is more than optimal threshold of 12. Implementing using BWWE will require more logic and timing would be suboptimal. Please use attribute \"ram_decomp = power\" if BWWE is desired.}}} {SYNTH-6 {cell *THIS*}} {SYNTH-7 {cell *THIS*}}" *) 
  (* RTL_RAM_BITS = "262144" *) 
  (* RTL_RAM_NAME = "genblk3[1].ram_block" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "8191" *) 
  (* bram_slice_begin = "20" *) 
  (* bram_slice_end = "23" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "8191" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "20" *) 
  (* ram_slice_end = "23" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(4),
    .READ_WIDTH_B(4),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(4),
    .WRITE_WIDTH_B(4)) 
    \genblk3[1].ram_block_reg_2_1 
       (.ADDRARDADDR({1'b1,ADDRARDADDR,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1}),
        .CASCADEINA(1'b1),
        .CASCADEINB(1'b1),
        .CASCADEOUTA(\NLW_genblk3[1].ram_block_reg_2_1_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_genblk3[1].ram_block_reg_2_1_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(HCLK),
        .CLKBWRCLK(HCLK),
        .DBITERR(\NLW_genblk3[1].ram_block_reg_2_1_DBITERR_UNCONNECTED ),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,p_1_in2_in[23:20]}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO({\NLW_genblk3[1].ram_block_reg_2_1_DOADO_UNCONNECTED [31:4],doutA[23:20]}),
        .DOBDO({\NLW_genblk3[1].ram_block_reg_2_1_DOBDO_UNCONNECTED [31:4],\genblk3[1].ram_block_reg_2_1_n_64 ,\genblk3[1].ram_block_reg_2_1_n_65 ,\genblk3[1].ram_block_reg_2_1_n_66 ,\genblk3[1].ram_block_reg_2_1_n_67 }),
        .DOPADOP(\NLW_genblk3[1].ram_block_reg_2_1_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP(\NLW_genblk3[1].ram_block_reg_2_1_DOPBDOP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_genblk3[1].ram_block_reg_2_1_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(1'b1),
        .ENBWREN(1'b1),
        .INJECTDBITERR(\NLW_genblk3[1].ram_block_reg_2_1_INJECTDBITERR_UNCONNECTED ),
        .INJECTSBITERR(\NLW_genblk3[1].ram_block_reg_2_1_INJECTSBITERR_UNCONNECTED ),
        .RDADDRECC(\NLW_genblk3[1].ram_block_reg_2_1_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_genblk3[1].ram_block_reg_2_1_SBITERR_UNCONNECTED ),
        .WEA({ITCMBYTEWR[2],ITCMBYTEWR[2],ITCMBYTEWR[2],ITCMBYTEWR[2]}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d4" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d4" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-15 {cell *THIS*} {string {address width (13) is more than optimal threshold of 12. Implementing using BWWE will require more logic and timing would be suboptimal. Please use attribute \"ram_decomp = power\" if BWWE is desired.}}} {SYNTH-6 {cell *THIS*}} {SYNTH-7 {cell *THIS*}}" *) 
  (* RTL_RAM_BITS = "262144" *) 
  (* RTL_RAM_NAME = "genblk3[1].ram_block" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "8191" *) 
  (* bram_slice_begin = "24" *) 
  (* bram_slice_end = "27" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "8191" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "24" *) 
  (* ram_slice_end = "27" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(4),
    .READ_WIDTH_B(4),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(4),
    .WRITE_WIDTH_B(4)) 
    \genblk3[1].ram_block_reg_3_0 
       (.ADDRARDADDR({1'b1,ADDRARDADDR,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1}),
        .CASCADEINA(1'b1),
        .CASCADEINB(1'b1),
        .CASCADEOUTA(\NLW_genblk3[1].ram_block_reg_3_0_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_genblk3[1].ram_block_reg_3_0_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(HCLK),
        .CLKBWRCLK(HCLK),
        .DBITERR(\NLW_genblk3[1].ram_block_reg_3_0_DBITERR_UNCONNECTED ),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,p_1_in2_in[27:24]}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO({\NLW_genblk3[1].ram_block_reg_3_0_DOADO_UNCONNECTED [31:4],doutA[27:24]}),
        .DOBDO({\NLW_genblk3[1].ram_block_reg_3_0_DOBDO_UNCONNECTED [31:4],\genblk3[1].ram_block_reg_3_0_n_64 ,\genblk3[1].ram_block_reg_3_0_n_65 ,\genblk3[1].ram_block_reg_3_0_n_66 ,\genblk3[1].ram_block_reg_3_0_n_67 }),
        .DOPADOP(\NLW_genblk3[1].ram_block_reg_3_0_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP(\NLW_genblk3[1].ram_block_reg_3_0_DOPBDOP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_genblk3[1].ram_block_reg_3_0_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(1'b1),
        .ENBWREN(1'b1),
        .INJECTDBITERR(\NLW_genblk3[1].ram_block_reg_3_0_INJECTDBITERR_UNCONNECTED ),
        .INJECTSBITERR(\NLW_genblk3[1].ram_block_reg_3_0_INJECTSBITERR_UNCONNECTED ),
        .RDADDRECC(\NLW_genblk3[1].ram_block_reg_3_0_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_genblk3[1].ram_block_reg_3_0_SBITERR_UNCONNECTED ),
        .WEA({ITCMBYTEWR[3],ITCMBYTEWR[3],ITCMBYTEWR[3],ITCMBYTEWR[3]}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d4" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d4" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-15 {cell *THIS*} {string {address width (13) is more than optimal threshold of 12. Implementing using BWWE will require more logic and timing would be suboptimal. Please use attribute \"ram_decomp = power\" if BWWE is desired.}}} {SYNTH-6 {cell *THIS*}} {SYNTH-7 {cell *THIS*}}" *) 
  (* RTL_RAM_BITS = "262144" *) 
  (* RTL_RAM_NAME = "genblk3[1].ram_block" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "8191" *) 
  (* bram_slice_begin = "28" *) 
  (* bram_slice_end = "31" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "8191" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "28" *) 
  (* ram_slice_end = "31" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(4),
    .READ_WIDTH_B(4),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(4),
    .WRITE_WIDTH_B(4)) 
    \genblk3[1].ram_block_reg_3_1 
       (.ADDRARDADDR({1'b1,ADDRARDADDR,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1}),
        .CASCADEINA(1'b1),
        .CASCADEINB(1'b1),
        .CASCADEOUTA(\NLW_genblk3[1].ram_block_reg_3_1_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_genblk3[1].ram_block_reg_3_1_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(HCLK),
        .CLKBWRCLK(HCLK),
        .DBITERR(\NLW_genblk3[1].ram_block_reg_3_1_DBITERR_UNCONNECTED ),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,p_1_in2_in[31:28]}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO({\NLW_genblk3[1].ram_block_reg_3_1_DOADO_UNCONNECTED [31:4],doutA[31:28]}),
        .DOBDO({\NLW_genblk3[1].ram_block_reg_3_1_DOBDO_UNCONNECTED [31:4],\genblk3[1].ram_block_reg_3_1_n_64 ,\genblk3[1].ram_block_reg_3_1_n_65 ,\genblk3[1].ram_block_reg_3_1_n_66 ,\genblk3[1].ram_block_reg_3_1_n_67 }),
        .DOPADOP(\NLW_genblk3[1].ram_block_reg_3_1_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP(\NLW_genblk3[1].ram_block_reg_3_1_DOPBDOP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_genblk3[1].ram_block_reg_3_1_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(1'b1),
        .ENBWREN(1'b1),
        .INJECTDBITERR(\NLW_genblk3[1].ram_block_reg_3_1_INJECTDBITERR_UNCONNECTED ),
        .INJECTSBITERR(\NLW_genblk3[1].ram_block_reg_3_1_INJECTSBITERR_UNCONNECTED ),
        .RDADDRECC(\NLW_genblk3[1].ram_block_reg_3_1_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_genblk3[1].ram_block_reg_3_1_SBITERR_UNCONNECTED ),
        .WEA({ITCMBYTEWR[3],ITCMBYTEWR[3],ITCMBYTEWR[3],ITCMBYTEWR[3]}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "cm1_adder" *) 
module design_1_CORTEXM1_AXI_0_1_cm1_adder
   (S,
    \pc_reg[30] ,
    \mem_held_addr_reg[31] ,
    \mem_held_addr_reg[31]_0 );
  output [0:0]S;
  output [0:0]\pc_reg[30] ;
  input [1:0]\mem_held_addr_reg[31] ;
  input [1:0]\mem_held_addr_reg[31]_0 ;

  wire [0:0]S;
  wire [1:0]\mem_held_addr_reg[31] ;
  wire [1:0]\mem_held_addr_reg[31]_0 ;
  wire [0:0]\pc_reg[30] ;

  LUT2 #(
    .INIT(4'h6)) 
    \mem_held_addr[27]_i_7 
       (.I0(\mem_held_addr_reg[31] [0]),
        .I1(\mem_held_addr_reg[31]_0 [0]),
        .O(S));
  LUT2 #(
    .INIT(4'h6)) 
    \mem_held_addr[31]_i_7 
       (.I0(\mem_held_addr_reg[31] [1]),
        .I1(\mem_held_addr_reg[31]_0 [1]),
        .O(\pc_reg[30] ));
endmodule

(* ORIG_REF_NAME = "cm1_ahb" *) 
module design_1_CORTEXM1_AXI_0_1_cm1_ahb
   (\cfgitcmen_sync2_reg[1] ,
    HWDATA,
    \cfgitcmen_sync2_reg[0] ,
    \HWDATA_reg[7]_0 ,
    \HWDATA_reg[6]_0 ,
    \en_itcm_reg[1] ,
    adv_de_to_ex,
    \en_itcm_reg[0] ,
    \i_haddr_q_reg[9] ,
    asel_write_reg_0,
    biu_commit_reg,
    biu_rfault,
    biu_irack,
    biu_drack,
    biu_wfault,
    dsel_ppb,
    WValidNxt,
    biu_commit_reg_reg_0,
    E,
    asel_write_reg_1,
    \HADDR_reg[31]_0 ,
    \hsize_1_0_reg[1]_0 ,
    rst_fptr_align_ex_reg,
    biu_rdy,
    \ahb_addr_state_0x_reg[1]_0 ,
    AProtNxt,
    fetch_internal_reg,
    rdata_fe,
    \biu_rdata_reg[31]_0 ,
    \biu_rdata_reg[31]_1 ,
    first32_ex_reg,
    nxt_instr_faulted,
    last_uncond_phase_ex_reg,
    pf_fault_fe,
    nxt_drack,
    nxt_dwack,
    \mem_held_addr_reg[31]_i_1 ,
    \HWDATA_reg[27]_0 ,
    nxt_ahb_rd_en,
    nxt_ahb_wr_en,
    Q,
    reset_sync,
    en_itcm_wr,
    en_itcm,
    irq_pri_lvl_wr_en,
    irq_lvl,
    excpt_isb_de,
    \en_itcm_core_reg[1] ,
    \en_itcm_core_reg[1]_0 ,
    en_itcm_core,
    SYSRESETREQ_reg,
    SYSRESETREQ_reg_0,
    SYSRESETREQ,
    D,
    HCLK,
    \HWDATA_reg[31]_0 ,
    biu_write,
    biu_commit,
    biu_dreq,
    WREADY,
    WLAST,
    HREADY,
    rst_fptr_align_ex,
    AhbDataValid,
    i_biu_wfault_reg_0,
    biu_dsb,
    fetch_internal,
    irack,
    doutA,
    hi_pre_fetch_addr,
    first32_ex,
    instr_faulted,
    u_fault,
    \excpt_state_reg[4] ,
    hold_reg2_mask,
    dreq_wr_ex,
    O,
    \i_pend_state_reg[3] ,
    \i_pend_state_reg[3]_0 ,
    nvic_excpt_taken,
    \i_pend_state_reg[3]_1 ,
    \core_req_state_1x_reg[0]_0 ,
    ahb_rd_en,
    ahb_wr_en,
    SYSRESETREQ_reg_1,
    p_1_in2_in,
    \hsize_1_0_reg[1]_1 ,
    \biu_rdata_reg[31]_2 );
  output \cfgitcmen_sync2_reg[1] ;
  output [31:0]HWDATA;
  output \cfgitcmen_sync2_reg[0] ;
  output \HWDATA_reg[7]_0 ;
  output \HWDATA_reg[6]_0 ;
  output \en_itcm_reg[1] ;
  output adv_de_to_ex;
  output \en_itcm_reg[0] ;
  output \i_haddr_q_reg[9] ;
  output asel_write_reg_0;
  output biu_commit_reg;
  output biu_rfault;
  output biu_irack;
  output biu_drack;
  output biu_wfault;
  output dsel_ppb;
  output WValidNxt;
  output biu_commit_reg_reg_0;
  output [0:0]E;
  output [3:0]asel_write_reg_1;
  output [31:0]\HADDR_reg[31]_0 ;
  output [1:0]\hsize_1_0_reg[1]_0 ;
  output [0:0]rst_fptr_align_ex_reg;
  output biu_rdy;
  output \ahb_addr_state_0x_reg[1]_0 ;
  output [0:0]AProtNxt;
  output [0:0]fetch_internal_reg;
  output [15:0]rdata_fe;
  output [31:0]\biu_rdata_reg[31]_0 ;
  output [15:0]\biu_rdata_reg[31]_1 ;
  output [0:0]first32_ex_reg;
  output nxt_instr_faulted;
  output last_uncond_phase_ex_reg;
  output pf_fault_fe;
  output nxt_drack;
  output nxt_dwack;
  output \mem_held_addr_reg[31]_i_1 ;
  output [0:0]\HWDATA_reg[27]_0 ;
  output nxt_ahb_rd_en;
  output nxt_ahb_wr_en;
  input [1:0]Q;
  input reset_sync;
  input en_itcm_wr;
  input [1:0]en_itcm;
  input irq_pri_lvl_wr_en;
  input [1:0]irq_lvl;
  input excpt_isb_de;
  input \en_itcm_core_reg[1] ;
  input \en_itcm_core_reg[1]_0 ;
  input [1:0]en_itcm_core;
  input SYSRESETREQ_reg;
  input [4:0]SYSRESETREQ_reg_0;
  input SYSRESETREQ;
  input [31:0]D;
  input HCLK;
  input \HWDATA_reg[31]_0 ;
  input biu_write;
  input biu_commit;
  input biu_dreq;
  input WREADY;
  input WLAST;
  input HREADY;
  input rst_fptr_align_ex;
  input AhbDataValid;
  input i_biu_wfault_reg_0;
  input biu_dsb;
  input fetch_internal;
  input irack;
  input [31:0]doutA;
  input hi_pre_fetch_addr;
  input first32_ex;
  input instr_faulted;
  input u_fault;
  input \excpt_state_reg[4] ;
  input hold_reg2_mask;
  input dreq_wr_ex;
  input [1:0]O;
  input [0:0]\i_pend_state_reg[3] ;
  input \i_pend_state_reg[3]_0 ;
  input nvic_excpt_taken;
  input \i_pend_state_reg[3]_1 ;
  input \core_req_state_1x_reg[0]_0 ;
  input ahb_rd_en;
  input ahb_wr_en;
  input SYSRESETREQ_reg_1;
  input [31:0]p_1_in2_in;
  input [1:0]\hsize_1_0_reg[1]_1 ;
  input [31:0]\biu_rdata_reg[31]_2 ;

  wire \ADDR[31]_i_2_n_0 ;
  wire [0:0]AProtNxt;
  wire AhbDataValid;
  wire [31:0]D;
  wire [0:0]E;
  wire [31:0]\HADDR_reg[31]_0 ;
  wire HCLK;
  wire [0:0]HPROT;
  wire HREADY;
  wire [31:0]HWDATA;
  wire \HWDATA[31]_i_1_n_0 ;
  wire \HWDATA[31]_i_2_n_0 ;
  wire [0:0]\HWDATA_reg[27]_0 ;
  wire \HWDATA_reg[31]_0 ;
  wire \HWDATA_reg[6]_0 ;
  wire \HWDATA_reg[7]_0 ;
  wire [1:0]O;
  wire [1:0]Q;
  wire SYSRESETREQ;
  wire SYSRESETREQ_i_3_n_0;
  wire SYSRESETREQ_i_4_n_0;
  wire SYSRESETREQ_i_5_n_0;
  wire SYSRESETREQ_i_6_n_0;
  wire SYSRESETREQ_i_8_n_0;
  wire SYSRESETREQ_reg;
  wire [4:0]SYSRESETREQ_reg_0;
  wire SYSRESETREQ_reg_1;
  wire WLAST;
  wire WREADY;
  wire WValidNxt;
  wire adv_de_to_ex;
  wire [1:0]ahb_addr_state_0x;
  wire \ahb_addr_state_0x[1]_i_2_n_0 ;
  wire \ahb_addr_state_0x_reg[1]_0 ;
  wire [1:0]ahb_addr_state_10;
  wire \ahb_addr_state_10[0]_i_2_n_0 ;
  wire \ahb_addr_state_10[0]_i_3_n_0 ;
  wire [1:0]ahb_addr_state_11;
  wire \ahb_addr_state_11[0]_i_2_n_0 ;
  wire \ahb_addr_state_11[1]_i_2_n_0 ;
  wire \ahb_data_state[0]_i_2_n_0 ;
  wire \ahb_data_state_reg_n_0_[0] ;
  wire ahb_rd_en;
  wire ahb_wr_en;
  wire asel_ppb;
  wire asel_ppb_reg;
  wire asel_write_reg_0;
  wire [3:0]asel_write_reg_1;
  wire biu_ack;
  wire [31:29]biu_addr_31_29_reg;
  wire biu_commit;
  wire biu_commit_reg;
  wire biu_commit_reg_reg_0;
  wire biu_drack;
  wire biu_dreq;
  wire biu_dsb;
  wire biu_irack;
  wire [31:0]\biu_rdata_reg[31]_0 ;
  wire [15:0]\biu_rdata_reg[31]_1 ;
  wire [31:0]\biu_rdata_reg[31]_2 ;
  wire biu_rdy;
  wire biu_rfault;
  wire biu_wfault;
  wire biu_write;
  wire \cfgitcmen_sync2_reg[0] ;
  wire \cfgitcmen_sync2_reg[1] ;
  wire core_req_state_0x;
  wire core_req_state_1x;
  wire \core_req_state_1x[0]_i_2_n_0 ;
  wire \core_req_state_1x_reg[0]_0 ;
  wire [31:0]doutA;
  wire dreq_wr_ex;
  wire dsel_dside;
  wire dsel_dside_i_1_n_0;
  wire dsel_ppb;
  wire dsel_ppb_i_1_n_0;
  wire dsel_write;
  wire dsel_write_i_1_n_0;
  wire [1:0]en_itcm;
  wire [1:0]en_itcm_core;
  wire \en_itcm_core_reg[1] ;
  wire \en_itcm_core_reg[1]_0 ;
  wire \en_itcm_reg[0] ;
  wire \en_itcm_reg[1] ;
  wire en_itcm_wr;
  wire excpt_isb_de;
  wire \excpt_state_reg[4] ;
  wire fetch_internal;
  wire [0:0]fetch_internal_reg;
  wire first32_ex;
  wire [0:0]first32_ex_reg;
  wire haddr_en;
  wire haddr_en_reg;
  wire hi_pre_fetch_addr;
  wire hold_reg2_mask;
  wire [1:0]\hsize_1_0_reg[1]_0 ;
  wire [1:0]\hsize_1_0_reg[1]_1 ;
  wire i_ahb_wr_en_i_2_n_0;
  wire i_ahb_wr_en_i_3_n_0;
  wire i_ahb_wr_en_i_4_n_0;
  wire i_ahb_wr_en_i_5_n_0;
  wire i_ahb_wr_en_i_6_n_0;
  wire i_ahb_wr_en_i_7_n_0;
  wire i_biu_rfault_i_1_n_0;
  wire i_biu_wfault_reg_0;
  wire \i_haddr_q_reg[9] ;
  wire [0:0]\i_pend_state_reg[3] ;
  wire \i_pend_state_reg[3]_0 ;
  wire \i_pend_state_reg[3]_1 ;
  wire instr_faulted;
  wire irack;
  wire [1:0]irq_lvl;
  wire irq_pri_lvl_wr_en;
  wire last_uncond_phase_ex_reg;
  wire locked_up_i_11_n_0;
  wire locked_up_i_4_n_0;
  wire locked_up_i_5_n_0;
  wire locked_up_i_6_n_0;
  wire locked_up_i_7_n_0;
  wire locked_up_i_9_n_0;
  wire \mem_held_addr_reg[31]_i_1 ;
  wire nvic_excpt_taken;
  wire [1:0]nxt_ahb_addr_state_0x;
  wire [1:0]nxt_ahb_addr_state_10;
  wire [1:0]nxt_ahb_addr_state_11;
  wire nxt_ahb_data_state;
  wire nxt_ahb_rd_en;
  wire nxt_ahb_wr_en;
  wire nxt_biu_ack;
  wire nxt_biu_drack;
  wire nxt_biu_irack;
  wire nxt_biu_wfault;
  wire nxt_core_req_state_0x;
  wire nxt_core_req_state_1x;
  wire nxt_drack;
  wire nxt_dwack;
  wire nxt_instr_faulted;
  wire [31:0]p_1_in2_in;
  wire pf_fault_fe;
  wire [15:0]rdata_fe;
  wire reset_sync;
  wire rst_fptr_align_ex;
  wire [0:0]rst_fptr_align_ex_reg;
  wire u_fault;
  wire [31:0]wdata;

  LUT5 #(
    .INIT(32'h45400000)) 
    \ADDR[31]_i_1 
       (.I0(asel_ppb),
        .I1(\ADDR[31]_i_2_n_0 ),
        .I2(biu_commit_reg),
        .I3(ahb_addr_state_0x[1]),
        .I4(HREADY),
        .O(biu_commit_reg_reg_0));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \ADDR[31]_i_2 
       (.I0(ahb_addr_state_11[1]),
        .I1(biu_addr_31_29_reg[29]),
        .I2(biu_addr_31_29_reg[30]),
        .I3(biu_addr_31_29_reg[31]),
        .I4(ahb_addr_state_10[1]),
        .O(\ADDR[31]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \APROT[2]_i_1 
       (.I0(HPROT),
        .O(AProtNxt));
  LUT6 #(
    .INIT(64'h00E2FFFF00E20000)) 
    AhbDataValid_i_1
       (.I0(ahb_addr_state_0x[1]),
        .I1(biu_commit_reg),
        .I2(\ADDR[31]_i_2_n_0 ),
        .I3(asel_ppb),
        .I4(HREADY),
        .I5(AhbDataValid),
        .O(\ahb_addr_state_0x_reg[1]_0 ));
  FDCE \HADDR_reg[0] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(D[0]),
        .Q(\HADDR_reg[31]_0 [0]));
  FDCE \HADDR_reg[10] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(D[10]),
        .Q(\HADDR_reg[31]_0 [10]));
  FDCE \HADDR_reg[11] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(D[11]),
        .Q(\HADDR_reg[31]_0 [11]));
  FDCE \HADDR_reg[12] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(D[12]),
        .Q(\HADDR_reg[31]_0 [12]));
  FDCE \HADDR_reg[13] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(D[13]),
        .Q(\HADDR_reg[31]_0 [13]));
  FDCE \HADDR_reg[14] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(D[14]),
        .Q(\HADDR_reg[31]_0 [14]));
  FDCE \HADDR_reg[15] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(D[15]),
        .Q(\HADDR_reg[31]_0 [15]));
  FDCE \HADDR_reg[16] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(D[16]),
        .Q(\HADDR_reg[31]_0 [16]));
  FDCE \HADDR_reg[17] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(D[17]),
        .Q(\HADDR_reg[31]_0 [17]));
  FDCE \HADDR_reg[18] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(D[18]),
        .Q(\HADDR_reg[31]_0 [18]));
  FDCE \HADDR_reg[19] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(D[19]),
        .Q(\HADDR_reg[31]_0 [19]));
  FDCE \HADDR_reg[1] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(D[1]),
        .Q(\HADDR_reg[31]_0 [1]));
  FDCE \HADDR_reg[20] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(D[20]),
        .Q(\HADDR_reg[31]_0 [20]));
  FDCE \HADDR_reg[21] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(D[21]),
        .Q(\HADDR_reg[31]_0 [21]));
  FDCE \HADDR_reg[22] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(D[22]),
        .Q(\HADDR_reg[31]_0 [22]));
  FDCE \HADDR_reg[23] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(D[23]),
        .Q(\HADDR_reg[31]_0 [23]));
  FDCE \HADDR_reg[24] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(D[24]),
        .Q(\HADDR_reg[31]_0 [24]));
  FDCE \HADDR_reg[25] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(D[25]),
        .Q(\HADDR_reg[31]_0 [25]));
  FDCE \HADDR_reg[26] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(D[26]),
        .Q(\HADDR_reg[31]_0 [26]));
  FDCE \HADDR_reg[27] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(D[27]),
        .Q(\HADDR_reg[31]_0 [27]));
  FDCE \HADDR_reg[28] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(D[28]),
        .Q(\HADDR_reg[31]_0 [28]));
  FDCE \HADDR_reg[29] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(D[29]),
        .Q(\HADDR_reg[31]_0 [29]));
  FDCE \HADDR_reg[2] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(D[2]),
        .Q(\HADDR_reg[31]_0 [2]));
  FDCE \HADDR_reg[30] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(D[30]),
        .Q(\HADDR_reg[31]_0 [30]));
  FDCE \HADDR_reg[31] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(D[31]),
        .Q(\HADDR_reg[31]_0 [31]));
  FDCE \HADDR_reg[3] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(D[3]),
        .Q(\HADDR_reg[31]_0 [3]));
  FDCE \HADDR_reg[4] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(D[4]),
        .Q(\HADDR_reg[31]_0 [4]));
  FDCE \HADDR_reg[5] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(D[5]),
        .Q(\HADDR_reg[31]_0 [5]));
  FDCE \HADDR_reg[6] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(D[6]),
        .Q(\HADDR_reg[31]_0 [6]));
  FDCE \HADDR_reg[7] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(D[7]),
        .Q(\HADDR_reg[31]_0 [7]));
  FDCE \HADDR_reg[8] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(D[8]),
        .Q(\HADDR_reg[31]_0 [8]));
  FDCE \HADDR_reg[9] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(D[9]),
        .Q(\HADDR_reg[31]_0 [9]));
  LUT2 #(
    .INIT(4'h8)) 
    \HWDATA[31]_i_1 
       (.I0(\HWDATA[31]_i_2_n_0 ),
        .I1(locked_up_i_5_n_0),
        .O(\HWDATA[31]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h757F4540)) 
    \HWDATA[31]_i_2 
       (.I0(ahb_rd_en),
        .I1(dsel_ppb),
        .I2(\ahb_data_state_reg_n_0_[0] ),
        .I3(asel_ppb),
        .I4(HREADY),
        .O(\HWDATA[31]_i_2_n_0 ));
  FDCE \HWDATA_reg[0] 
       (.C(HCLK),
        .CE(\HWDATA[31]_i_1_n_0 ),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(wdata[0]),
        .Q(HWDATA[0]));
  FDCE \HWDATA_reg[10] 
       (.C(HCLK),
        .CE(\HWDATA[31]_i_1_n_0 ),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(wdata[10]),
        .Q(HWDATA[10]));
  FDCE \HWDATA_reg[11] 
       (.C(HCLK),
        .CE(\HWDATA[31]_i_1_n_0 ),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(wdata[11]),
        .Q(HWDATA[11]));
  FDCE \HWDATA_reg[12] 
       (.C(HCLK),
        .CE(\HWDATA[31]_i_1_n_0 ),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(wdata[12]),
        .Q(HWDATA[12]));
  FDCE \HWDATA_reg[13] 
       (.C(HCLK),
        .CE(\HWDATA[31]_i_1_n_0 ),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(wdata[13]),
        .Q(HWDATA[13]));
  FDCE \HWDATA_reg[14] 
       (.C(HCLK),
        .CE(\HWDATA[31]_i_1_n_0 ),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(wdata[14]),
        .Q(HWDATA[14]));
  FDCE \HWDATA_reg[15] 
       (.C(HCLK),
        .CE(\HWDATA[31]_i_1_n_0 ),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(wdata[15]),
        .Q(HWDATA[15]));
  FDCE \HWDATA_reg[16] 
       (.C(HCLK),
        .CE(\HWDATA[31]_i_1_n_0 ),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(wdata[16]),
        .Q(HWDATA[16]));
  FDCE \HWDATA_reg[17] 
       (.C(HCLK),
        .CE(\HWDATA[31]_i_1_n_0 ),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(wdata[17]),
        .Q(HWDATA[17]));
  FDCE \HWDATA_reg[18] 
       (.C(HCLK),
        .CE(\HWDATA[31]_i_1_n_0 ),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(wdata[18]),
        .Q(HWDATA[18]));
  FDCE \HWDATA_reg[19] 
       (.C(HCLK),
        .CE(\HWDATA[31]_i_1_n_0 ),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(wdata[19]),
        .Q(HWDATA[19]));
  FDCE \HWDATA_reg[1] 
       (.C(HCLK),
        .CE(\HWDATA[31]_i_1_n_0 ),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(wdata[1]),
        .Q(HWDATA[1]));
  FDCE \HWDATA_reg[20] 
       (.C(HCLK),
        .CE(\HWDATA[31]_i_1_n_0 ),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(wdata[20]),
        .Q(HWDATA[20]));
  FDCE \HWDATA_reg[21] 
       (.C(HCLK),
        .CE(\HWDATA[31]_i_1_n_0 ),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(wdata[21]),
        .Q(HWDATA[21]));
  FDCE \HWDATA_reg[22] 
       (.C(HCLK),
        .CE(\HWDATA[31]_i_1_n_0 ),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(wdata[22]),
        .Q(HWDATA[22]));
  FDCE \HWDATA_reg[23] 
       (.C(HCLK),
        .CE(\HWDATA[31]_i_1_n_0 ),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(wdata[23]),
        .Q(HWDATA[23]));
  FDCE \HWDATA_reg[24] 
       (.C(HCLK),
        .CE(\HWDATA[31]_i_1_n_0 ),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(wdata[24]),
        .Q(HWDATA[24]));
  FDCE \HWDATA_reg[25] 
       (.C(HCLK),
        .CE(\HWDATA[31]_i_1_n_0 ),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(wdata[25]),
        .Q(HWDATA[25]));
  FDCE \HWDATA_reg[26] 
       (.C(HCLK),
        .CE(\HWDATA[31]_i_1_n_0 ),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(wdata[26]),
        .Q(HWDATA[26]));
  FDCE \HWDATA_reg[27] 
       (.C(HCLK),
        .CE(\HWDATA[31]_i_1_n_0 ),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(wdata[27]),
        .Q(HWDATA[27]));
  FDCE \HWDATA_reg[28] 
       (.C(HCLK),
        .CE(\HWDATA[31]_i_1_n_0 ),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(wdata[28]),
        .Q(HWDATA[28]));
  FDCE \HWDATA_reg[29] 
       (.C(HCLK),
        .CE(\HWDATA[31]_i_1_n_0 ),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(wdata[29]),
        .Q(HWDATA[29]));
  FDCE \HWDATA_reg[2] 
       (.C(HCLK),
        .CE(\HWDATA[31]_i_1_n_0 ),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(wdata[2]),
        .Q(HWDATA[2]));
  FDCE \HWDATA_reg[30] 
       (.C(HCLK),
        .CE(\HWDATA[31]_i_1_n_0 ),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(wdata[30]),
        .Q(HWDATA[30]));
  FDCE \HWDATA_reg[31] 
       (.C(HCLK),
        .CE(\HWDATA[31]_i_1_n_0 ),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(wdata[31]),
        .Q(HWDATA[31]));
  FDCE \HWDATA_reg[3] 
       (.C(HCLK),
        .CE(\HWDATA[31]_i_1_n_0 ),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(wdata[3]),
        .Q(HWDATA[3]));
  FDCE \HWDATA_reg[4] 
       (.C(HCLK),
        .CE(\HWDATA[31]_i_1_n_0 ),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(wdata[4]),
        .Q(HWDATA[4]));
  FDCE \HWDATA_reg[5] 
       (.C(HCLK),
        .CE(\HWDATA[31]_i_1_n_0 ),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(wdata[5]),
        .Q(HWDATA[5]));
  FDCE \HWDATA_reg[6] 
       (.C(HCLK),
        .CE(\HWDATA[31]_i_1_n_0 ),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(wdata[6]),
        .Q(HWDATA[6]));
  FDCE \HWDATA_reg[7] 
       (.C(HCLK),
        .CE(\HWDATA[31]_i_1_n_0 ),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(wdata[7]),
        .Q(HWDATA[7]));
  FDCE \HWDATA_reg[8] 
       (.C(HCLK),
        .CE(\HWDATA[31]_i_1_n_0 ),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(wdata[8]),
        .Q(HWDATA[8]));
  FDCE \HWDATA_reg[9] 
       (.C(HCLK),
        .CE(\HWDATA[31]_i_1_n_0 ),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(wdata[9]),
        .Q(HWDATA[9]));
  LUT5 #(
    .INIT(32'hFFFF0200)) 
    SYSRESETREQ_i_1
       (.I0(SYSRESETREQ_reg),
        .I1(SYSRESETREQ_reg_0[4]),
        .I2(SYSRESETREQ_i_3_n_0),
        .I3(SYSRESETREQ_i_4_n_0),
        .I4(SYSRESETREQ),
        .O(\i_haddr_q_reg[9] ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEFF)) 
    SYSRESETREQ_i_3
       (.I0(SYSRESETREQ_i_5_n_0),
        .I1(SYSRESETREQ_i_6_n_0),
        .I2(SYSRESETREQ_reg_0[2]),
        .I3(SYSRESETREQ_reg_0[0]),
        .I4(HWDATA[16]),
        .I5(HWDATA[27]),
        .O(SYSRESETREQ_i_3_n_0));
  LUT6 #(
    .INIT(64'h0000000000010000)) 
    SYSRESETREQ_i_4
       (.I0(SYSRESETREQ_reg_1),
        .I1(SYSRESETREQ_reg_0[3]),
        .I2(SYSRESETREQ_i_8_n_0),
        .I3(HWDATA[29]),
        .I4(HWDATA[17]),
        .I5(HWDATA[31]),
        .O(SYSRESETREQ_i_4_n_0));
  LUT6 #(
    .INIT(64'hFFF7FFFFFFFFFFFF)) 
    SYSRESETREQ_i_5
       (.I0(SYSRESETREQ_reg_0[1]),
        .I1(ahb_wr_en),
        .I2(HWDATA[28]),
        .I3(HWDATA[18]),
        .I4(HWDATA[26]),
        .I5(HWDATA[22]),
        .O(SYSRESETREQ_i_5_n_0));
  LUT4 #(
    .INIT(16'hDFFF)) 
    SYSRESETREQ_i_6
       (.I0(HWDATA[20]),
        .I1(HWDATA[25]),
        .I2(HWDATA[21]),
        .I3(HWDATA[2]),
        .O(SYSRESETREQ_i_6_n_0));
  LUT4 #(
    .INIT(16'hDFFF)) 
    SYSRESETREQ_i_8
       (.I0(HWDATA[19]),
        .I1(HWDATA[30]),
        .I2(HWDATA[23]),
        .I3(HWDATA[24]),
        .O(SYSRESETREQ_i_8_n_0));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \ahb_addr_state_0x[0]_i_1 
       (.I0(\ahb_addr_state_10[0]_i_3_n_0 ),
        .O(nxt_ahb_addr_state_0x[0]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT4 #(
    .INIT(16'hAAAE)) 
    \ahb_addr_state_0x[1]_i_1 
       (.I0(\ahb_addr_state_0x[1]_i_2_n_0 ),
        .I1(locked_up_i_5_n_0),
        .I2(\ahb_data_state[0]_i_2_n_0 ),
        .I3(\HWDATA[31]_i_2_n_0 ),
        .O(nxt_ahb_addr_state_0x[1]));
  LUT6 #(
    .INIT(64'h00000000F9FF0000)) 
    \ahb_addr_state_0x[1]_i_2 
       (.I0(dsel_ppb),
        .I1(asel_ppb),
        .I2(\HWDATA[31]_i_2_n_0 ),
        .I3(\ahb_data_state_reg_n_0_[0] ),
        .I4(locked_up_i_6_n_0),
        .I5(\ahb_data_state[0]_i_2_n_0 ),
        .O(\ahb_addr_state_0x[1]_i_2_n_0 ));
  FDCE \ahb_addr_state_0x_reg[0] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(nxt_ahb_addr_state_0x[0]),
        .Q(ahb_addr_state_0x[0]));
  FDCE \ahb_addr_state_0x_reg[1] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(nxt_ahb_addr_state_0x[1]),
        .Q(ahb_addr_state_0x[1]));
  LUT5 #(
    .INIT(32'hF800FB33)) 
    \ahb_addr_state_10[0]_i_1 
       (.I0(asel_ppb),
        .I1(locked_up_i_5_n_0),
        .I2(\ahb_addr_state_10[0]_i_2_n_0 ),
        .I3(\core_req_state_1x[0]_i_2_n_0 ),
        .I4(\ahb_addr_state_10[0]_i_3_n_0 ),
        .O(nxt_ahb_addr_state_10[0]));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \ahb_addr_state_10[0]_i_2 
       (.I0(dsel_ppb),
        .I1(\ahb_data_state_reg_n_0_[0] ),
        .I2(\HWDATA[31]_i_2_n_0 ),
        .O(\ahb_addr_state_10[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFF9FFFFFF)) 
    \ahb_addr_state_10[0]_i_3 
       (.I0(dsel_ppb),
        .I1(asel_ppb),
        .I2(\HWDATA[31]_i_2_n_0 ),
        .I3(\ahb_data_state_reg_n_0_[0] ),
        .I4(locked_up_i_6_n_0),
        .I5(\ahb_data_state[0]_i_2_n_0 ),
        .O(\ahb_addr_state_10[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hCFC0DFDFCFC0CFC0)) 
    \ahb_addr_state_10[1]_i_1 
       (.I0(asel_ppb),
        .I1(\ahb_addr_state_11[1]_i_2_n_0 ),
        .I2(locked_up_i_5_n_0),
        .I3(\ahb_addr_state_0x[1]_i_2_n_0 ),
        .I4(\ahb_addr_state_10[0]_i_2_n_0 ),
        .I5(\core_req_state_1x[0]_i_2_n_0 ),
        .O(nxt_ahb_addr_state_10[1]));
  FDCE \ahb_addr_state_10_reg[0] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(nxt_ahb_addr_state_10[0]),
        .Q(ahb_addr_state_10[0]));
  FDCE \ahb_addr_state_10_reg[1] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(nxt_ahb_addr_state_10[1]),
        .Q(ahb_addr_state_10[1]));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT5 #(
    .INIT(32'h74007733)) 
    \ahb_addr_state_11[0]_i_1 
       (.I0(asel_ppb),
        .I1(locked_up_i_5_n_0),
        .I2(\ahb_addr_state_11[0]_i_2_n_0 ),
        .I3(\core_req_state_1x[0]_i_2_n_0 ),
        .I4(\ahb_addr_state_10[0]_i_3_n_0 ),
        .O(nxt_ahb_addr_state_11[0]));
  LUT3 #(
    .INIT(8'h04)) 
    \ahb_addr_state_11[0]_i_2 
       (.I0(dsel_ppb),
        .I1(\ahb_data_state_reg_n_0_[0] ),
        .I2(\HWDATA[31]_i_2_n_0 ),
        .O(\ahb_addr_state_11[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0EFEFAFA0AFA0)) 
    \ahb_addr_state_11[1]_i_1 
       (.I0(\ahb_addr_state_11[1]_i_2_n_0 ),
        .I1(asel_ppb),
        .I2(locked_up_i_5_n_0),
        .I3(\ahb_addr_state_0x[1]_i_2_n_0 ),
        .I4(\ahb_addr_state_11[0]_i_2_n_0 ),
        .I5(\core_req_state_1x[0]_i_2_n_0 ),
        .O(nxt_ahb_addr_state_11[1]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \ahb_addr_state_11[1]_i_2 
       (.I0(\ahb_data_state[0]_i_2_n_0 ),
        .I1(\HWDATA[31]_i_2_n_0 ),
        .O(\ahb_addr_state_11[1]_i_2_n_0 ));
  FDCE \ahb_addr_state_11_reg[0] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(nxt_ahb_addr_state_11[0]),
        .Q(ahb_addr_state_11[0]));
  FDCE \ahb_addr_state_11_reg[1] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(nxt_ahb_addr_state_11[1]),
        .Q(ahb_addr_state_11[1]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT4 #(
    .INIT(16'h5D08)) 
    \ahb_data_state[0]_i_1 
       (.I0(\HWDATA[31]_i_2_n_0 ),
        .I1(locked_up_i_5_n_0),
        .I2(\ahb_data_state[0]_i_2_n_0 ),
        .I3(\ahb_data_state_reg_n_0_[0] ),
        .O(nxt_ahb_data_state));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT4 #(
    .INIT(16'h0004)) 
    \ahb_data_state[0]_i_2 
       (.I0(dsel_write),
        .I1(\ahb_data_state_reg_n_0_[0] ),
        .I2(dsel_ppb),
        .I3(i_biu_wfault_reg_0),
        .O(\ahb_data_state[0]_i_2_n_0 ));
  FDCE \ahb_data_state_reg[0] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(nxt_ahb_data_state),
        .Q(\ahb_data_state_reg_n_0_[0] ));
  FDCE asel_dside_reg
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(biu_dreq),
        .Q(HPROT));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT5 #(
    .INIT(32'h80FF8000)) 
    asel_ppb_reg_i_1
       (.I0(biu_addr_31_29_reg[29]),
        .I1(biu_addr_31_29_reg[30]),
        .I2(biu_addr_31_29_reg[31]),
        .I3(haddr_en_reg),
        .I4(asel_ppb_reg),
        .O(asel_ppb));
  FDCE asel_ppb_reg_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(asel_ppb),
        .Q(asel_ppb_reg));
  LUT3 #(
    .INIT(8'h0D)) 
    asel_write_i_1
       (.I0(locked_up_i_5_n_0),
        .I1(\HWDATA[31]_i_2_n_0 ),
        .I2(locked_up_i_6_n_0),
        .O(haddr_en));
  FDCE asel_write_reg
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(biu_write),
        .Q(asel_write_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT4 #(
    .INIT(16'hB000)) 
    biu_ack_i_1
       (.I0(dsel_ppb),
        .I1(dsel_write),
        .I2(\HWDATA[31]_i_2_n_0 ),
        .I3(\ahb_data_state_reg_n_0_[0] ),
        .O(nxt_biu_ack));
  FDCE biu_ack_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(nxt_biu_ack),
        .Q(biu_ack));
  FDCE \biu_addr_31_29_reg_reg[29] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(D[29]),
        .Q(biu_addr_31_29_reg[29]));
  FDCE \biu_addr_31_29_reg_reg[30] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(D[30]),
        .Q(biu_addr_31_29_reg[30]));
  FDCE \biu_addr_31_29_reg_reg[31] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(D[31]),
        .Q(biu_addr_31_29_reg[31]));
  FDCE biu_commit_reg_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(biu_commit),
        .Q(biu_commit_reg));
  FDCE \biu_rdata_reg[0] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(\biu_rdata_reg[31]_2 [0]),
        .Q(\biu_rdata_reg[31]_0 [0]));
  FDCE \biu_rdata_reg[10] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(\biu_rdata_reg[31]_2 [10]),
        .Q(\biu_rdata_reg[31]_0 [10]));
  FDCE \biu_rdata_reg[11] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(\biu_rdata_reg[31]_2 [11]),
        .Q(\biu_rdata_reg[31]_0 [11]));
  FDCE \biu_rdata_reg[12] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(\biu_rdata_reg[31]_2 [12]),
        .Q(\biu_rdata_reg[31]_0 [12]));
  FDCE \biu_rdata_reg[13] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(\biu_rdata_reg[31]_2 [13]),
        .Q(\biu_rdata_reg[31]_0 [13]));
  FDCE \biu_rdata_reg[14] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(\biu_rdata_reg[31]_2 [14]),
        .Q(\biu_rdata_reg[31]_0 [14]));
  FDCE \biu_rdata_reg[15] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(\biu_rdata_reg[31]_2 [15]),
        .Q(\biu_rdata_reg[31]_0 [15]));
  FDCE \biu_rdata_reg[16] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(\biu_rdata_reg[31]_2 [16]),
        .Q(\biu_rdata_reg[31]_0 [16]));
  FDCE \biu_rdata_reg[17] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(\biu_rdata_reg[31]_2 [17]),
        .Q(\biu_rdata_reg[31]_0 [17]));
  FDCE \biu_rdata_reg[18] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(\biu_rdata_reg[31]_2 [18]),
        .Q(\biu_rdata_reg[31]_0 [18]));
  FDCE \biu_rdata_reg[19] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(\biu_rdata_reg[31]_2 [19]),
        .Q(\biu_rdata_reg[31]_0 [19]));
  FDCE \biu_rdata_reg[1] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(\biu_rdata_reg[31]_2 [1]),
        .Q(\biu_rdata_reg[31]_0 [1]));
  FDCE \biu_rdata_reg[20] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(\biu_rdata_reg[31]_2 [20]),
        .Q(\biu_rdata_reg[31]_0 [20]));
  FDCE \biu_rdata_reg[21] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(\biu_rdata_reg[31]_2 [21]),
        .Q(\biu_rdata_reg[31]_0 [21]));
  FDCE \biu_rdata_reg[22] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(\biu_rdata_reg[31]_2 [22]),
        .Q(\biu_rdata_reg[31]_0 [22]));
  FDCE \biu_rdata_reg[23] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(\biu_rdata_reg[31]_2 [23]),
        .Q(\biu_rdata_reg[31]_0 [23]));
  FDCE \biu_rdata_reg[24] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(\biu_rdata_reg[31]_2 [24]),
        .Q(\biu_rdata_reg[31]_0 [24]));
  FDCE \biu_rdata_reg[25] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(\biu_rdata_reg[31]_2 [25]),
        .Q(\biu_rdata_reg[31]_0 [25]));
  FDCE \biu_rdata_reg[26] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(\biu_rdata_reg[31]_2 [26]),
        .Q(\biu_rdata_reg[31]_0 [26]));
  FDCE \biu_rdata_reg[27] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(\biu_rdata_reg[31]_2 [27]),
        .Q(\biu_rdata_reg[31]_0 [27]));
  FDCE \biu_rdata_reg[28] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(\biu_rdata_reg[31]_2 [28]),
        .Q(\biu_rdata_reg[31]_0 [28]));
  FDCE \biu_rdata_reg[29] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(\biu_rdata_reg[31]_2 [29]),
        .Q(\biu_rdata_reg[31]_0 [29]));
  FDCE \biu_rdata_reg[2] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(\biu_rdata_reg[31]_2 [2]),
        .Q(\biu_rdata_reg[31]_0 [2]));
  FDCE \biu_rdata_reg[30] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(\biu_rdata_reg[31]_2 [30]),
        .Q(\biu_rdata_reg[31]_0 [30]));
  FDCE \biu_rdata_reg[31] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(\biu_rdata_reg[31]_2 [31]),
        .Q(\biu_rdata_reg[31]_0 [31]));
  FDCE \biu_rdata_reg[3] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(\biu_rdata_reg[31]_2 [3]),
        .Q(\biu_rdata_reg[31]_0 [3]));
  FDCE \biu_rdata_reg[4] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(\biu_rdata_reg[31]_2 [4]),
        .Q(\biu_rdata_reg[31]_0 [4]));
  FDCE \biu_rdata_reg[5] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(\biu_rdata_reg[31]_2 [5]),
        .Q(\biu_rdata_reg[31]_0 [5]));
  FDCE \biu_rdata_reg[6] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(\biu_rdata_reg[31]_2 [6]),
        .Q(\biu_rdata_reg[31]_0 [6]));
  FDCE \biu_rdata_reg[7] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(\biu_rdata_reg[31]_2 [7]),
        .Q(\biu_rdata_reg[31]_0 [7]));
  FDCE \biu_rdata_reg[8] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(\biu_rdata_reg[31]_2 [8]),
        .Q(\biu_rdata_reg[31]_0 [8]));
  FDCE \biu_rdata_reg[9] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(\biu_rdata_reg[31]_2 [9]),
        .Q(\biu_rdata_reg[31]_0 [9]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT5 #(
    .INIT(32'h00004540)) 
    \core_req_state_0x[0]_i_1 
       (.I0(biu_rdy),
        .I1(core_req_state_1x),
        .I2(biu_commit_reg),
        .I3(core_req_state_0x),
        .I4(\ahb_data_state[0]_i_2_n_0 ),
        .O(nxt_core_req_state_0x));
  FDCE \core_req_state_0x_reg[0] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(nxt_core_req_state_0x),
        .Q(core_req_state_0x));
  LUT6 #(
    .INIT(64'h00000000FFFF5404)) 
    \core_req_state_1x[0]_i_1 
       (.I0(\ahb_data_state[0]_i_2_n_0 ),
        .I1(core_req_state_0x),
        .I2(biu_commit_reg),
        .I3(core_req_state_1x),
        .I4(\core_req_state_1x[0]_i_2_n_0 ),
        .I5(biu_rdy),
        .O(nxt_core_req_state_1x));
  LUT6 #(
    .INIT(64'h00000000000002A2)) 
    \core_req_state_1x[0]_i_2 
       (.I0(haddr_en),
        .I1(core_req_state_0x),
        .I2(biu_commit_reg),
        .I3(core_req_state_1x),
        .I4(\core_req_state_1x_reg[0]_0 ),
        .I5(\ahb_data_state[0]_i_2_n_0 ),
        .O(\core_req_state_1x[0]_i_2_n_0 ));
  FDCE \core_req_state_1x_reg[0] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(nxt_core_req_state_1x),
        .Q(core_req_state_1x));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT2 #(
    .INIT(4'h2)) 
    drack_i_1
       (.I0(biu_rdy),
        .I1(dreq_wr_ex),
        .O(nxt_drack));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT5 #(
    .INIT(32'hFFF70080)) 
    dsel_dside_i_1
       (.I0(\HWDATA[31]_i_2_n_0 ),
        .I1(locked_up_i_5_n_0),
        .I2(HPROT),
        .I3(\ahb_data_state[0]_i_2_n_0 ),
        .I4(dsel_dside),
        .O(dsel_dside_i_1_n_0));
  FDCE dsel_dside_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(dsel_dside_i_1_n_0),
        .Q(dsel_dside));
  LUT5 #(
    .INIT(32'hFFF70080)) 
    dsel_ppb_i_1
       (.I0(\HWDATA[31]_i_2_n_0 ),
        .I1(locked_up_i_5_n_0),
        .I2(asel_ppb),
        .I3(\ahb_data_state[0]_i_2_n_0 ),
        .I4(dsel_ppb),
        .O(dsel_ppb_i_1_n_0));
  FDCE dsel_ppb_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(dsel_ppb_i_1_n_0),
        .Q(dsel_ppb));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT5 #(
    .INIT(32'hFFF70080)) 
    dsel_write_i_1
       (.I0(\HWDATA[31]_i_2_n_0 ),
        .I1(locked_up_i_5_n_0),
        .I2(asel_write_reg_0),
        .I3(\ahb_data_state[0]_i_2_n_0 ),
        .I4(dsel_write),
        .O(dsel_write_i_1_n_0));
  FDCE dsel_write_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(dsel_write_i_1_n_0),
        .Q(dsel_write));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT2 #(
    .INIT(4'h8)) 
    dwack_i_1
       (.I0(biu_rdy),
        .I1(dreq_wr_ex),
        .O(nxt_dwack));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \en_itcm[0]_i_1 
       (.I0(Q[0]),
        .I1(reset_sync),
        .I2(HWDATA[3]),
        .I3(en_itcm_wr),
        .I4(en_itcm[0]),
        .O(\cfgitcmen_sync2_reg[0] ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \en_itcm[1]_i_1 
       (.I0(Q[1]),
        .I1(reset_sync),
        .I2(HWDATA[4]),
        .I3(en_itcm_wr),
        .I4(en_itcm[1]),
        .O(\cfgitcmen_sync2_reg[1] ));
  LUT6 #(
    .INIT(64'hBFBBBFBF80888080)) 
    \en_itcm_core[0]_i_1 
       (.I0(en_itcm[0]),
        .I1(adv_de_to_ex),
        .I2(excpt_isb_de),
        .I3(\en_itcm_core_reg[1] ),
        .I4(\en_itcm_core_reg[1]_0 ),
        .I5(en_itcm_core[0]),
        .O(\en_itcm_reg[0] ));
  LUT6 #(
    .INIT(64'hBFBBBFBF80888080)) 
    \en_itcm_core[1]_i_1 
       (.I0(en_itcm[1]),
        .I1(adv_de_to_ex),
        .I2(excpt_isb_de),
        .I3(\en_itcm_core_reg[1] ),
        .I4(\en_itcm_core_reg[1]_0 ),
        .I5(en_itcm_core[1]),
        .O(\en_itcm_reg[1] ));
  FDCE haddr_en_reg_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(haddr_en),
        .Q(haddr_en_reg));
  LUT6 #(
    .INIT(64'hFFFF00E000E000E0)) 
    held_fault0_i_1
       (.I0(biu_addr_31_29_reg[29]),
        .I1(biu_addr_31_29_reg[30]),
        .I2(irack),
        .I3(biu_commit_reg),
        .I4(biu_irack),
        .I5(biu_rfault),
        .O(pf_fault_fe));
  LUT6 #(
    .INIT(64'hAFA0AFA0CFCFC0C0)) 
    \held_instr0[0]_i_2 
       (.I0(\biu_rdata_reg[31]_0 [16]),
        .I1(doutA[16]),
        .I2(hi_pre_fetch_addr),
        .I3(\biu_rdata_reg[31]_0 [0]),
        .I4(doutA[0]),
        .I5(biu_irack),
        .O(rdata_fe[0]));
  LUT6 #(
    .INIT(64'hAFA0AFA0CFCFC0C0)) 
    \held_instr0[10]_i_2 
       (.I0(\biu_rdata_reg[31]_0 [26]),
        .I1(doutA[26]),
        .I2(hi_pre_fetch_addr),
        .I3(\biu_rdata_reg[31]_0 [10]),
        .I4(doutA[10]),
        .I5(biu_irack),
        .O(rdata_fe[10]));
  LUT6 #(
    .INIT(64'hAFA0AFA0CFCFC0C0)) 
    \held_instr0[11]_i_2 
       (.I0(\biu_rdata_reg[31]_0 [27]),
        .I1(doutA[27]),
        .I2(hi_pre_fetch_addr),
        .I3(\biu_rdata_reg[31]_0 [11]),
        .I4(doutA[11]),
        .I5(biu_irack),
        .O(rdata_fe[11]));
  LUT6 #(
    .INIT(64'hAFA0AFA0CFCFC0C0)) 
    \held_instr0[12]_i_2 
       (.I0(\biu_rdata_reg[31]_0 [28]),
        .I1(doutA[28]),
        .I2(hi_pre_fetch_addr),
        .I3(\biu_rdata_reg[31]_0 [12]),
        .I4(doutA[12]),
        .I5(biu_irack),
        .O(rdata_fe[12]));
  LUT6 #(
    .INIT(64'hAFA0AFA0CFCFC0C0)) 
    \held_instr0[13]_i_2 
       (.I0(\biu_rdata_reg[31]_0 [29]),
        .I1(doutA[29]),
        .I2(hi_pre_fetch_addr),
        .I3(\biu_rdata_reg[31]_0 [13]),
        .I4(doutA[13]),
        .I5(biu_irack),
        .O(rdata_fe[13]));
  LUT6 #(
    .INIT(64'hAFA0AFA0CFCFC0C0)) 
    \held_instr0[14]_i_2 
       (.I0(\biu_rdata_reg[31]_0 [30]),
        .I1(doutA[30]),
        .I2(hi_pre_fetch_addr),
        .I3(\biu_rdata_reg[31]_0 [14]),
        .I4(doutA[14]),
        .I5(biu_irack),
        .O(rdata_fe[14]));
  LUT6 #(
    .INIT(64'hAFA0AFA0CFCFC0C0)) 
    \held_instr0[15]_i_4 
       (.I0(\biu_rdata_reg[31]_0 [31]),
        .I1(doutA[31]),
        .I2(hi_pre_fetch_addr),
        .I3(\biu_rdata_reg[31]_0 [15]),
        .I4(doutA[15]),
        .I5(biu_irack),
        .O(rdata_fe[15]));
  LUT6 #(
    .INIT(64'hAFA0AFA0CFCFC0C0)) 
    \held_instr0[1]_i_2 
       (.I0(\biu_rdata_reg[31]_0 [17]),
        .I1(doutA[17]),
        .I2(hi_pre_fetch_addr),
        .I3(\biu_rdata_reg[31]_0 [1]),
        .I4(doutA[1]),
        .I5(biu_irack),
        .O(rdata_fe[1]));
  LUT6 #(
    .INIT(64'hAFA0AFA0CFCFC0C0)) 
    \held_instr0[2]_i_2 
       (.I0(\biu_rdata_reg[31]_0 [18]),
        .I1(doutA[18]),
        .I2(hi_pre_fetch_addr),
        .I3(\biu_rdata_reg[31]_0 [2]),
        .I4(doutA[2]),
        .I5(biu_irack),
        .O(rdata_fe[2]));
  LUT6 #(
    .INIT(64'hAFA0AFA0CFCFC0C0)) 
    \held_instr0[3]_i_2 
       (.I0(\biu_rdata_reg[31]_0 [19]),
        .I1(doutA[19]),
        .I2(hi_pre_fetch_addr),
        .I3(\biu_rdata_reg[31]_0 [3]),
        .I4(doutA[3]),
        .I5(biu_irack),
        .O(rdata_fe[3]));
  LUT6 #(
    .INIT(64'hAFA0AFA0CFCFC0C0)) 
    \held_instr0[4]_i_2 
       (.I0(\biu_rdata_reg[31]_0 [20]),
        .I1(doutA[20]),
        .I2(hi_pre_fetch_addr),
        .I3(\biu_rdata_reg[31]_0 [4]),
        .I4(doutA[4]),
        .I5(biu_irack),
        .O(rdata_fe[4]));
  LUT6 #(
    .INIT(64'hAFA0AFA0CFCFC0C0)) 
    \held_instr0[5]_i_2 
       (.I0(\biu_rdata_reg[31]_0 [21]),
        .I1(doutA[21]),
        .I2(hi_pre_fetch_addr),
        .I3(\biu_rdata_reg[31]_0 [5]),
        .I4(doutA[5]),
        .I5(biu_irack),
        .O(rdata_fe[5]));
  LUT6 #(
    .INIT(64'hAFA0AFA0CFCFC0C0)) 
    \held_instr0[6]_i_2 
       (.I0(\biu_rdata_reg[31]_0 [22]),
        .I1(doutA[22]),
        .I2(hi_pre_fetch_addr),
        .I3(\biu_rdata_reg[31]_0 [6]),
        .I4(doutA[6]),
        .I5(biu_irack),
        .O(rdata_fe[6]));
  LUT6 #(
    .INIT(64'hAFA0AFA0CFCFC0C0)) 
    \held_instr0[7]_i_2 
       (.I0(\biu_rdata_reg[31]_0 [23]),
        .I1(doutA[23]),
        .I2(hi_pre_fetch_addr),
        .I3(\biu_rdata_reg[31]_0 [7]),
        .I4(doutA[7]),
        .I5(biu_irack),
        .O(rdata_fe[7]));
  LUT6 #(
    .INIT(64'hAFA0AFA0CFCFC0C0)) 
    \held_instr0[8]_i_2 
       (.I0(\biu_rdata_reg[31]_0 [24]),
        .I1(doutA[24]),
        .I2(hi_pre_fetch_addr),
        .I3(\biu_rdata_reg[31]_0 [8]),
        .I4(doutA[8]),
        .I5(biu_irack),
        .O(rdata_fe[8]));
  LUT6 #(
    .INIT(64'hAFA0AFA0CFCFC0C0)) 
    \held_instr0[9]_i_2 
       (.I0(\biu_rdata_reg[31]_0 [25]),
        .I1(doutA[25]),
        .I2(hi_pre_fetch_addr),
        .I3(\biu_rdata_reg[31]_0 [9]),
        .I4(doutA[9]),
        .I5(biu_irack),
        .O(rdata_fe[9]));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \hold_reg1[31]_i_1 
       (.I0(biu_rdy),
        .I1(rst_fptr_align_ex),
        .O(rst_fptr_align_ex_reg));
  FDCE \hsize_1_0_reg[0] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(\hsize_1_0_reg[1]_1 [0]),
        .Q(\hsize_1_0_reg[1]_0 [0]));
  FDCE \hsize_1_0_reg[1] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(\hsize_1_0_reg[1]_1 [1]),
        .Q(\hsize_1_0_reg[1]_0 [1]));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT4 #(
    .INIT(16'hF444)) 
    iWLAST_i_1
       (.I0(WREADY),
        .I1(WLAST),
        .I2(biu_commit_reg_reg_0),
        .I3(asel_write_reg_0),
        .O(WValidNxt));
  LUT6 #(
    .INIT(64'h8888888808000808)) 
    \iWSTRB[0]_i_1 
       (.I0(biu_commit_reg_reg_0),
        .I1(asel_write_reg_0),
        .I2(\HADDR_reg[31]_0 [1]),
        .I3(\hsize_1_0_reg[1]_0 [0]),
        .I4(\HADDR_reg[31]_0 [0]),
        .I5(\hsize_1_0_reg[1]_0 [1]),
        .O(asel_write_reg_1[0]));
  LUT6 #(
    .INIT(64'h8888888808080800)) 
    \iWSTRB[1]_i_1 
       (.I0(biu_commit_reg_reg_0),
        .I1(asel_write_reg_0),
        .I2(\HADDR_reg[31]_0 [1]),
        .I3(\hsize_1_0_reg[1]_0 [0]),
        .I4(\HADDR_reg[31]_0 [0]),
        .I5(\hsize_1_0_reg[1]_0 [1]),
        .O(asel_write_reg_1[1]));
  LUT6 #(
    .INIT(64'h8888888880008080)) 
    \iWSTRB[2]_i_1 
       (.I0(biu_commit_reg_reg_0),
        .I1(asel_write_reg_0),
        .I2(\HADDR_reg[31]_0 [1]),
        .I3(\hsize_1_0_reg[1]_0 [0]),
        .I4(\HADDR_reg[31]_0 [0]),
        .I5(\hsize_1_0_reg[1]_0 [1]),
        .O(asel_write_reg_1[2]));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT4 #(
    .INIT(16'hF8FF)) 
    \iWSTRB[3]_i_1 
       (.I0(biu_commit_reg_reg_0),
        .I1(asel_write_reg_0),
        .I2(WREADY),
        .I3(WLAST),
        .O(E));
  LUT6 #(
    .INIT(64'h8888888880808000)) 
    \iWSTRB[3]_i_2 
       (.I0(biu_commit_reg_reg_0),
        .I1(asel_write_reg_0),
        .I2(\HADDR_reg[31]_0 [1]),
        .I3(\hsize_1_0_reg[1]_0 [0]),
        .I4(\HADDR_reg[31]_0 [0]),
        .I5(\hsize_1_0_reg[1]_0 [1]),
        .O(asel_write_reg_1[3]));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT2 #(
    .INIT(4'h1)) 
    i_ahb_rd_en_i_1
       (.I0(asel_write_reg_0),
        .I1(i_ahb_wr_en_i_2_n_0),
        .O(nxt_ahb_rd_en));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT2 #(
    .INIT(4'h2)) 
    i_ahb_wr_en_i_1
       (.I0(asel_write_reg_0),
        .I1(i_ahb_wr_en_i_2_n_0),
        .O(nxt_ahb_wr_en));
  LUT6 #(
    .INIT(64'hFFFFFF1DFFFFFFFF)) 
    i_ahb_wr_en_i_2
       (.I0(ahb_addr_state_0x[1]),
        .I1(biu_commit_reg),
        .I2(\ADDR[31]_i_2_n_0 ),
        .I3(i_ahb_wr_en_i_3_n_0),
        .I4(i_ahb_wr_en_i_4_n_0),
        .I5(asel_ppb),
        .O(i_ahb_wr_en_i_2_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFDFFFFFFFF)) 
    i_ahb_wr_en_i_3
       (.I0(\HADDR_reg[31]_0 [31]),
        .I1(\HADDR_reg[31]_0 [17]),
        .I2(\HADDR_reg[31]_0 [18]),
        .I3(\HADDR_reg[31]_0 [20]),
        .I4(\HADDR_reg[31]_0 [27]),
        .I5(\HADDR_reg[31]_0 [13]),
        .O(i_ahb_wr_en_i_3_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFFFF)) 
    i_ahb_wr_en_i_4
       (.I0(i_ahb_wr_en_i_5_n_0),
        .I1(i_ahb_wr_en_i_6_n_0),
        .I2(i_ahb_wr_en_i_7_n_0),
        .I3(\HADDR_reg[31]_0 [16]),
        .I4(\HADDR_reg[31]_0 [14]),
        .I5(\HADDR_reg[31]_0 [23]),
        .O(i_ahb_wr_en_i_4_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    i_ahb_wr_en_i_5
       (.I0(\HADDR_reg[31]_0 [28]),
        .I1(\HADDR_reg[31]_0 [12]),
        .I2(\HADDR_reg[31]_0 [19]),
        .I3(ahb_rd_en),
        .O(i_ahb_wr_en_i_5_n_0));
  LUT4 #(
    .INIT(16'hEFFF)) 
    i_ahb_wr_en_i_6
       (.I0(\HADDR_reg[31]_0 [24]),
        .I1(\HADDR_reg[31]_0 [22]),
        .I2(\HADDR_reg[31]_0 [15]),
        .I3(\HADDR_reg[31]_0 [30]),
        .O(i_ahb_wr_en_i_6_n_0));
  LUT4 #(
    .INIT(16'hFFFD)) 
    i_ahb_wr_en_i_7
       (.I0(\HADDR_reg[31]_0 [29]),
        .I1(\HADDR_reg[31]_0 [26]),
        .I2(\HADDR_reg[31]_0 [25]),
        .I3(\HADDR_reg[31]_0 [21]),
        .O(i_ahb_wr_en_i_7_n_0));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    i_biu_drack_i_1
       (.I0(dsel_dside),
        .I1(\ahb_data_state_reg_n_0_[0] ),
        .I2(\HWDATA[31]_i_2_n_0 ),
        .I3(dsel_write),
        .O(nxt_biu_drack));
  FDCE i_biu_drack_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(nxt_biu_drack),
        .Q(biu_drack));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT4 #(
    .INIT(16'h0040)) 
    i_biu_irack_i_1
       (.I0(dsel_dside),
        .I1(\ahb_data_state_reg_n_0_[0] ),
        .I2(\HWDATA[31]_i_2_n_0 ),
        .I3(dsel_write),
        .O(nxt_biu_irack));
  FDCE i_biu_irack_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(nxt_biu_irack),
        .Q(biu_irack));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT2 #(
    .INIT(4'h8)) 
    i_biu_rfault_i_1
       (.I0(\HWDATA[31]_i_2_n_0 ),
        .I1(\ahb_data_state[0]_i_2_n_0 ),
        .O(i_biu_rfault_i_1_n_0));
  FDCE i_biu_rfault_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(i_biu_rfault_i_1_n_0),
        .Q(biu_rfault));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT5 #(
    .INIT(32'h00001000)) 
    i_biu_wfault_i_1
       (.I0(i_biu_wfault_reg_0),
        .I1(dsel_ppb),
        .I2(\ahb_data_state_reg_n_0_[0] ),
        .I3(dsel_write),
        .I4(\HWDATA[31]_i_2_n_0 ),
        .O(nxt_biu_wfault));
  FDCE i_biu_wfault_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(nxt_biu_wfault),
        .Q(biu_wfault));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \i_irq_lvl[0]_i_1 
       (.I0(HWDATA[6]),
        .I1(irq_pri_lvl_wr_en),
        .I2(irq_lvl[0]),
        .O(\HWDATA_reg[6]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \i_irq_lvl[1]_i_1 
       (.I0(HWDATA[7]),
        .I1(irq_pri_lvl_wr_en),
        .I2(irq_lvl[1]),
        .O(\HWDATA_reg[7]_0 ));
  LUT6 #(
    .INIT(64'h0CCCFFFF0CCC0444)) 
    \i_pend_state[3]_i_1 
       (.I0(HWDATA[27]),
        .I1(\i_pend_state_reg[3] ),
        .I2(\i_pend_state_reg[3]_0 ),
        .I3(nvic_excpt_taken),
        .I4(\i_pend_state_reg[3]_1 ),
        .I5(HWDATA[28]),
        .O(\HWDATA_reg[27]_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \imm_held[10]_i_1 
       (.I0(last_uncond_phase_ex_reg),
        .I1(\excpt_state_reg[4] ),
        .O(adv_de_to_ex));
  LUT5 #(
    .INIT(32'h0000FFF8)) 
    instr_faulted_i_1
       (.I0(biu_rfault),
        .I1(biu_drack),
        .I2(instr_faulted),
        .I3(u_fault),
        .I4(adv_de_to_ex),
        .O(nxt_instr_faulted));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT2 #(
    .INIT(4'h8)) 
    load_xpsr_de_i_1
       (.I0(biu_rdy),
        .I1(hold_reg2_mask),
        .O(last_uncond_phase_ex_reg));
  LUT6 #(
    .INIT(64'h5454545544444444)) 
    locked_up_i_1
       (.I0(biu_rfault),
        .I1(biu_ack),
        .I2(locked_up_i_4_n_0),
        .I3(locked_up_i_5_n_0),
        .I4(locked_up_i_6_n_0),
        .I5(locked_up_i_7_n_0),
        .O(biu_rdy));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT3 #(
    .INIT(8'h80)) 
    locked_up_i_11
       (.I0(biu_addr_31_29_reg[29]),
        .I1(biu_addr_31_29_reg[30]),
        .I2(biu_addr_31_29_reg[31]),
        .O(locked_up_i_11_n_0));
  LUT6 #(
    .INIT(64'hABBBAAAAAAAAAAAA)) 
    locked_up_i_4
       (.I0(locked_up_i_9_n_0),
        .I1(asel_ppb),
        .I2(HPROT),
        .I3(biu_dsb),
        .I4(\core_req_state_1x_reg[0]_0 ),
        .I5(asel_write_reg_0),
        .O(locked_up_i_4_n_0));
  LUT5 #(
    .INIT(32'hB8B8FF00)) 
    locked_up_i_5
       (.I0(ahb_addr_state_11[1]),
        .I1(locked_up_i_11_n_0),
        .I2(ahb_addr_state_10[1]),
        .I3(ahb_addr_state_0x[1]),
        .I4(biu_commit_reg),
        .O(locked_up_i_5_n_0));
  LUT5 #(
    .INIT(32'hB8B8FF00)) 
    locked_up_i_6
       (.I0(ahb_addr_state_11[0]),
        .I1(locked_up_i_11_n_0),
        .I2(ahb_addr_state_10[0]),
        .I3(ahb_addr_state_0x[0]),
        .I4(biu_commit_reg),
        .O(locked_up_i_6_n_0));
  LUT5 #(
    .INIT(32'h0070FFFF)) 
    locked_up_i_7
       (.I0(dsel_dside),
        .I1(biu_dsb),
        .I2(dsel_write),
        .I3(dsel_ppb),
        .I4(\ahb_data_state_reg_n_0_[0] ),
        .O(locked_up_i_7_n_0));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    locked_up_i_9
       (.I0(core_req_state_1x),
        .I1(biu_commit_reg),
        .I2(core_req_state_0x),
        .O(locked_up_i_9_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    \pc_ex[31]_i_1 
       (.I0(adv_de_to_ex),
        .I1(first32_ex),
        .O(first32_ex_reg));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \uhalf_instr[0]_i_1 
       (.I0(\biu_rdata_reg[31]_0 [16]),
        .I1(doutA[16]),
        .I2(biu_irack),
        .O(\biu_rdata_reg[31]_1 [0]));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \uhalf_instr[10]_i_1 
       (.I0(\biu_rdata_reg[31]_0 [26]),
        .I1(doutA[26]),
        .I2(biu_irack),
        .O(\biu_rdata_reg[31]_1 [10]));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \uhalf_instr[11]_i_1 
       (.I0(\biu_rdata_reg[31]_0 [27]),
        .I1(doutA[27]),
        .I2(biu_irack),
        .O(\biu_rdata_reg[31]_1 [11]));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \uhalf_instr[12]_i_1 
       (.I0(\biu_rdata_reg[31]_0 [28]),
        .I1(doutA[28]),
        .I2(biu_irack),
        .O(\biu_rdata_reg[31]_1 [12]));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \uhalf_instr[13]_i_1 
       (.I0(\biu_rdata_reg[31]_0 [29]),
        .I1(doutA[29]),
        .I2(biu_irack),
        .O(\biu_rdata_reg[31]_1 [13]));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \uhalf_instr[14]_i_1 
       (.I0(\biu_rdata_reg[31]_0 [30]),
        .I1(doutA[30]),
        .I2(biu_irack),
        .O(\biu_rdata_reg[31]_1 [14]));
  LUT6 #(
    .INIT(64'h8888888888888A88)) 
    \uhalf_instr[15]_i_1 
       (.I0(fetch_internal),
        .I1(biu_irack),
        .I2(biu_commit_reg),
        .I3(irack),
        .I4(biu_addr_31_29_reg[30]),
        .I5(biu_addr_31_29_reg[29]),
        .O(fetch_internal_reg));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \uhalf_instr[15]_i_2 
       (.I0(\biu_rdata_reg[31]_0 [31]),
        .I1(doutA[31]),
        .I2(biu_irack),
        .O(\biu_rdata_reg[31]_1 [15]));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \uhalf_instr[1]_i_1 
       (.I0(\biu_rdata_reg[31]_0 [17]),
        .I1(doutA[17]),
        .I2(biu_irack),
        .O(\biu_rdata_reg[31]_1 [1]));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \uhalf_instr[2]_i_1 
       (.I0(\biu_rdata_reg[31]_0 [18]),
        .I1(doutA[18]),
        .I2(biu_irack),
        .O(\biu_rdata_reg[31]_1 [2]));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \uhalf_instr[3]_i_1 
       (.I0(\biu_rdata_reg[31]_0 [19]),
        .I1(doutA[19]),
        .I2(biu_irack),
        .O(\biu_rdata_reg[31]_1 [3]));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \uhalf_instr[4]_i_1 
       (.I0(\biu_rdata_reg[31]_0 [20]),
        .I1(doutA[20]),
        .I2(biu_irack),
        .O(\biu_rdata_reg[31]_1 [4]));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \uhalf_instr[5]_i_1 
       (.I0(\biu_rdata_reg[31]_0 [21]),
        .I1(doutA[21]),
        .I2(biu_irack),
        .O(\biu_rdata_reg[31]_1 [5]));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \uhalf_instr[6]_i_1 
       (.I0(\biu_rdata_reg[31]_0 [22]),
        .I1(doutA[22]),
        .I2(biu_irack),
        .O(\biu_rdata_reg[31]_1 [6]));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \uhalf_instr[7]_i_1 
       (.I0(\biu_rdata_reg[31]_0 [23]),
        .I1(doutA[23]),
        .I2(biu_irack),
        .O(\biu_rdata_reg[31]_1 [7]));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \uhalf_instr[8]_i_1 
       (.I0(\biu_rdata_reg[31]_0 [24]),
        .I1(doutA[24]),
        .I2(biu_irack),
        .O(\biu_rdata_reg[31]_1 [8]));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \uhalf_instr[9]_i_1 
       (.I0(\biu_rdata_reg[31]_0 [25]),
        .I1(doutA[25]),
        .I2(biu_irack),
        .O(\biu_rdata_reg[31]_1 [9]));
  FDCE \wdata_reg[0] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(p_1_in2_in[0]),
        .Q(wdata[0]));
  FDCE \wdata_reg[10] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(p_1_in2_in[10]),
        .Q(wdata[10]));
  FDCE \wdata_reg[11] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(p_1_in2_in[11]),
        .Q(wdata[11]));
  FDCE \wdata_reg[12] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(p_1_in2_in[12]),
        .Q(wdata[12]));
  FDCE \wdata_reg[13] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(p_1_in2_in[13]),
        .Q(wdata[13]));
  FDCE \wdata_reg[14] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(p_1_in2_in[14]),
        .Q(wdata[14]));
  FDCE \wdata_reg[15] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(p_1_in2_in[15]),
        .Q(wdata[15]));
  FDCE \wdata_reg[16] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(p_1_in2_in[16]),
        .Q(wdata[16]));
  FDCE \wdata_reg[17] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(p_1_in2_in[17]),
        .Q(wdata[17]));
  FDCE \wdata_reg[18] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(p_1_in2_in[18]),
        .Q(wdata[18]));
  FDCE \wdata_reg[19] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(p_1_in2_in[19]),
        .Q(wdata[19]));
  FDCE \wdata_reg[1] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(p_1_in2_in[1]),
        .Q(wdata[1]));
  FDCE \wdata_reg[20] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(p_1_in2_in[20]),
        .Q(wdata[20]));
  FDCE \wdata_reg[21] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(p_1_in2_in[21]),
        .Q(wdata[21]));
  FDCE \wdata_reg[22] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(p_1_in2_in[22]),
        .Q(wdata[22]));
  FDCE \wdata_reg[23] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(p_1_in2_in[23]),
        .Q(wdata[23]));
  FDCE \wdata_reg[24] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(p_1_in2_in[24]),
        .Q(wdata[24]));
  FDCE \wdata_reg[25] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(p_1_in2_in[25]),
        .Q(wdata[25]));
  FDCE \wdata_reg[26] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(p_1_in2_in[26]),
        .Q(wdata[26]));
  FDCE \wdata_reg[27] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(p_1_in2_in[27]),
        .Q(wdata[27]));
  FDCE \wdata_reg[28] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(p_1_in2_in[28]),
        .Q(wdata[28]));
  FDCE \wdata_reg[29] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(p_1_in2_in[29]),
        .Q(wdata[29]));
  FDCE \wdata_reg[2] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(p_1_in2_in[2]),
        .Q(wdata[2]));
  FDCE \wdata_reg[30] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(p_1_in2_in[30]),
        .Q(wdata[30]));
  FDCE \wdata_reg[31] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(p_1_in2_in[31]),
        .Q(wdata[31]));
  FDCE \wdata_reg[3] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(p_1_in2_in[3]),
        .Q(wdata[3]));
  FDCE \wdata_reg[4] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(p_1_in2_in[4]),
        .Q(wdata[4]));
  FDCE \wdata_reg[5] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(p_1_in2_in[5]),
        .Q(wdata[5]));
  FDCE \wdata_reg[6] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(p_1_in2_in[6]),
        .Q(wdata[6]));
  FDCE \wdata_reg[7] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(p_1_in2_in[7]),
        .Q(wdata[7]));
  FDCE \wdata_reg[8] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(p_1_in2_in[8]),
        .Q(wdata[8]));
  FDCE \wdata_reg[9] 
       (.C(HCLK),
        .CE(haddr_en),
        .CLR(\HWDATA_reg[31]_0 ),
        .D(p_1_in2_in[9]),
        .Q(wdata[9]));
  LUT2 #(
    .INIT(4'hE)) 
    z_flag_mux_i_9
       (.I0(O[1]),
        .I1(O[0]),
        .O(\mem_held_addr_reg[31]_i_1 ));
endmodule

(* ORIG_REF_NAME = "cm1_alu_dec" *) 
module design_1_CORTEXM1_AXI_0_1_cm1_alu_dec
   (S,
    \pc_reg[30] ,
    \mem_held_addr_reg[31] ,
    \mem_held_addr_reg[31]_0 );
  output [0:0]S;
  output [0:0]\pc_reg[30] ;
  input [1:0]\mem_held_addr_reg[31] ;
  input [1:0]\mem_held_addr_reg[31]_0 ;

  wire [0:0]S;
  wire [1:0]\mem_held_addr_reg[31] ;
  wire [1:0]\mem_held_addr_reg[31]_0 ;
  wire [0:0]\pc_reg[30] ;

  design_1_CORTEXM1_AXI_0_1_cm1_adder u_adder
       (.S(S),
        .\mem_held_addr_reg[31] (\mem_held_addr_reg[31] ),
        .\mem_held_addr_reg[31]_0 (\mem_held_addr_reg[31]_0 ),
        .\pc_reg[30] (\pc_reg[30] ));
endmodule

(* ORIG_REF_NAME = "cm1_core" *) 
module design_1_CORTEXM1_AXI_0_1_cm1_core
   (fetch_internal,
    SYSRESETn_0,
    hi_pre_fetch_addr,
    locked_up_reg,
    nvic_excpt_taken,
    instr_faulted,
    int_fault_ex,
    nvic_excpt_svc_valid,
    excpt_isb_de,
    rst_fptr_align_ex,
    hold_reg2_mask,
    first32_ex,
    dreq_wr_ex,
    biu_write,
    biu_dsb,
    irack,
    micro_code_de_reg,
    bcc_first_ex_reg,
    D,
    \dp_ipsr_7to2_reg[6] ,
    nvic_primask,
    O,
    first32_ex_reg,
    biu_dreq,
    nvic_excpt_fault_req,
    p_1_in2_in,
    biu_commit,
    u_fault,
    itcm_sel_i_6,
    \mem_held_addr_reg[19]_i_1 ,
    ls_half_ex_reg,
    DTCMBYTEWR,
    ITCMBYTEWR,
    IRQ_0_sp_1,
    \dp_ipsr_7to2_reg[7] ,
    r_hdf_actv_reg,
    nmi_actv,
    \i_svc_lvl_reg[1] ,
    \dp_ipsr_7to2_reg[4] ,
    \dp_ipsr_7to2_reg[7]_0 ,
    \dp_ipsr_7to2_reg[4]_0 ,
    int_actv,
    i_nvic_excpt_svc_valid_reg,
    hdf_actv,
    \dp_ipsr_7to2_reg[7]_1 ,
    biu_write_reg,
    biu_rdy,
    HCLK,
    i_dbg_wdata_sel_de_reg,
    adv_de_to_ex,
    nxt_instr_faulted,
    pf_fault_fe,
    nxt_drack,
    nxt_dwack,
    nxt_mult_out0_carry__2,
    rdata_fe,
    SYSRESETn,
    nvic_lockup,
    int_fault_ex_reg,
    E,
    biu_rfault,
    biu_drack,
    biu_wfault,
    biu_irack,
    biu_commit_reg,
    biu_commit_reg_reg,
    en_itcm_core,
    z_flag_mux_reg,
    \hold_reg1[7]_i_7 ,
    doutA,
    \hold_reg1[7]_i_7_0 ,
    IRQ,
    int_prev,
    \i_pend_state_reg[0] ,
    \i_pend_state_reg[0]_0 ,
    NMI,
    Q,
    irq_lvl,
    svc_lvl_0,
    \r_int_actv_lvl_reg[1] ,
    \r_int_actv_lvl_reg[1]_0 ,
    r_hdf_actv,
    r_nmi_actv,
    \HRDATA_reg[5] ,
    \HRDATA_reg[5]_0 ,
    \HRDATA_reg[2] ,
    \i_pend_state_reg[1] ,
    \uhalf_instr_reg[0] ,
    \uhalf_instr_reg[15] ,
    \latched_excpt_num_reg[4] ,
    \pc_ex_reg[0] ,
    \hold_reg1_reg[31] );
  output fetch_internal;
  output SYSRESETn_0;
  output hi_pre_fetch_addr;
  output locked_up_reg;
  output nvic_excpt_taken;
  output instr_faulted;
  output int_fault_ex;
  output nvic_excpt_svc_valid;
  output excpt_isb_de;
  output rst_fptr_align_ex;
  output hold_reg2_mask;
  output first32_ex;
  output dreq_wr_ex;
  output biu_write;
  output biu_dsb;
  output irack;
  output micro_code_de_reg;
  output bcc_first_ex_reg;
  output [31:0]D;
  output [3:0]\dp_ipsr_7to2_reg[6] ;
  output nvic_primask;
  output [3:0]O;
  output first32_ex_reg;
  output biu_dreq;
  output nvic_excpt_fault_req;
  output [31:0]p_1_in2_in;
  output biu_commit;
  output u_fault;
  output itcm_sel_i_6;
  output \mem_held_addr_reg[19]_i_1 ;
  output [1:0]ls_half_ex_reg;
  output [3:0]DTCMBYTEWR;
  output [3:0]ITCMBYTEWR;
  output IRQ_0_sp_1;
  output \dp_ipsr_7to2_reg[7] ;
  output [1:0]r_hdf_actv_reg;
  output nmi_actv;
  output [1:0]\i_svc_lvl_reg[1] ;
  output \dp_ipsr_7to2_reg[4] ;
  output \dp_ipsr_7to2_reg[7]_0 ;
  output \dp_ipsr_7to2_reg[4]_0 ;
  output int_actv;
  output i_nvic_excpt_svc_valid_reg;
  output hdf_actv;
  output [1:0]\dp_ipsr_7to2_reg[7]_1 ;
  output biu_write_reg;
  input biu_rdy;
  input HCLK;
  input i_dbg_wdata_sel_de_reg;
  input adv_de_to_ex;
  input nxt_instr_faulted;
  input pf_fault_fe;
  input nxt_drack;
  input nxt_dwack;
  input nxt_mult_out0_carry__2;
  input [15:0]rdata_fe;
  input SYSRESETn;
  input nvic_lockup;
  input int_fault_ex_reg;
  input [0:0]E;
  input biu_rfault;
  input biu_drack;
  input biu_wfault;
  input biu_irack;
  input biu_commit_reg;
  input biu_commit_reg_reg;
  input [1:0]en_itcm_core;
  input z_flag_mux_reg;
  input [31:0]\hold_reg1[7]_i_7 ;
  input [31:0]doutA;
  input [31:0]\hold_reg1[7]_i_7_0 ;
  input [0:0]IRQ;
  input [1:0]int_prev;
  input \i_pend_state_reg[0] ;
  input [0:0]\i_pend_state_reg[0]_0 ;
  input NMI;
  input [1:0]Q;
  input [1:0]irq_lvl;
  input [1:0]svc_lvl_0;
  input [1:0]\r_int_actv_lvl_reg[1] ;
  input [1:0]\r_int_actv_lvl_reg[1]_0 ;
  input r_hdf_actv;
  input r_nmi_actv;
  input \HRDATA_reg[5] ;
  input \HRDATA_reg[5]_0 ;
  input \HRDATA_reg[2] ;
  input \i_pend_state_reg[1] ;
  input [0:0]\uhalf_instr_reg[0] ;
  input [15:0]\uhalf_instr_reg[15] ;
  input [4:0]\latched_excpt_num_reg[4] ;
  input [0:0]\pc_ex_reg[0] ;
  input [0:0]\hold_reg1_reg[31] ;

  wire [31:0]D;
  wire [3:0]DTCMBYTEWR;
  wire [0:0]E;
  wire HCLK;
  wire \HRDATA_reg[2] ;
  wire \HRDATA_reg[5] ;
  wire \HRDATA_reg[5]_0 ;
  wire [0:0]IRQ;
  wire IRQ_0_sn_1;
  wire [3:0]ITCMBYTEWR;
  wire NMI;
  wire [3:0]O;
  wire [1:0]Q;
  wire SYSRESETn;
  wire SYSRESETn_0;
  wire [31:0]a_reg_0;
  wire adv_de_to_ex;
  wire au_a_use_pc_ex;
  wire au_carry;
  wire [30:11]au_in_a;
  wire bcc_first_ex_reg;
  wire [2:2]biu_addr_mux_ctl_ex;
  wire biu_commit;
  wire biu_commit_reg;
  wire biu_commit_reg_reg;
  wire biu_drack;
  wire biu_dreq;
  wire biu_dsb;
  wire biu_irack;
  wire biu_rdy;
  wire biu_rfault;
  wire biu_wfault;
  wire biu_write;
  wire biu_write_reg;
  wire c_flag;
  wire c_flag_mux;
  wire c_flag_wf;
  wire dbg_wdata_sel_ex;
  wire [31:0]doutA;
  wire \dp_ipsr_7to2_reg[4] ;
  wire \dp_ipsr_7to2_reg[4]_0 ;
  wire [3:0]\dp_ipsr_7to2_reg[6] ;
  wire \dp_ipsr_7to2_reg[7] ;
  wire \dp_ipsr_7to2_reg[7]_0 ;
  wire [1:0]\dp_ipsr_7to2_reg[7]_1 ;
  wire dreq_wr_ex;
  wire [1:0]en_itcm_core;
  wire excpt_isb_de;
  wire fetch_internal;
  wire first32_ex;
  wire first32_ex_reg;
  wire force_c_in_ex;
  wire fptr_align;
  wire fptr_wdata;
  wire hdf_actv;
  wire hi_pre_fetch_addr;
  wire [31:0]hold_reg1;
  wire [31:0]\hold_reg1[7]_i_7 ;
  wire [31:0]\hold_reg1[7]_i_7_0 ;
  wire [0:0]\hold_reg1_reg[31] ;
  wire [31:0]hold_reg2;
  wire hold_reg20;
  wire hold_reg2_mask;
  wire i_dbg_wdata_sel_de_reg;
  wire i_nvic_excpt_svc_valid_reg;
  wire \i_pend_state_reg[0] ;
  wire [0:0]\i_pend_state_reg[0]_0 ;
  wire \i_pend_state_reg[1] ;
  wire [1:0]\i_svc_lvl_reg[1] ;
  wire [0:0]imm_ex;
  wire instr_faulted;
  wire [15:0]instr_fe;
  wire int_actv;
  wire int_fault_ex;
  wire int_fault_ex_reg;
  wire [1:0]int_prev;
  wire irack;
  wire ireq_ldpc;
  wire [1:0]irq_lvl;
  wire itcm_sel_i_6;
  wire [4:0]\latched_excpt_num_reg[4] ;
  wire load_fptr;
  wire locked_up_reg;
  wire ls_byte_ex;
  wire ls_half_ex;
  wire [1:0]ls_half_ex_reg;
  wire \mem_held_addr_reg[19]_i_1 ;
  wire [25:8]mem_r_data_s;
  wire [7:0]mem_r_data_u;
  wire micro_code_de_reg;
  wire micro_code_fe;
  wire mode;
  wire [31:16]mult_out;
  wire n_flag;
  wire nmi_actv;
  wire nvic_excpt_fault_req;
  wire nvic_excpt_svc_valid;
  wire nvic_excpt_taken;
  wire nvic_lockup;
  wire nvic_primask;
  wire nxt_drack;
  wire nxt_dwack;
  wire nxt_fetch_internal;
  wire nxt_instr_faulted;
  wire nxt_int_rack;
  wire nxt_mult_out0_carry__2;
  wire [3:0]nxt_rptr_a_ex;
  wire [3:0]nxt_rptr_b_ex;
  wire nxt_z_flag_mux;
  wire [23:2]p_0_in__0;
  wire [31:0]p_1_in2_in;
  wire [0:0]p_1_out;
  wire [0:0]\pc_ex_reg[0] ;
  wire pf_fault_fe;
  wire pre_fetch_addr_1;
  wire r_hdf_actv;
  wire [1:0]r_hdf_actv_reg;
  wire [1:0]\r_int_actv_lvl_reg[1] ;
  wire [1:0]\r_int_actv_lvl_reg[1]_0 ;
  wire r_nmi_actv;
  wire rd_mux_a_ex;
  wire [15:0]rdata_fe;
  wire [1:0]rf0_mux_ctl_ex;
  wire [2:2]rf_mux_ctl_ex;
  wire [1:0]rf_wdata;
  wire rst_fptr_align_ex;
  wire se_half_wb;
  wire sel_wf_c;
  wire sel_wf_v;
  wire [23:1]seq_fetch_addr;
  wire [1:0]svc_lvl_0;
  wire [1:0]swz_ctl_ex;
  wire [31:10]\u_alu_dec/au_in_b ;
  wire u_ctrl_n_127;
  wire u_ctrl_n_128;
  wire u_ctrl_n_129;
  wire u_ctrl_n_130;
  wire u_ctrl_n_132;
  wire u_ctrl_n_133;
  wire u_ctrl_n_134;
  wire u_ctrl_n_135;
  wire u_ctrl_n_136;
  wire u_ctrl_n_137;
  wire u_ctrl_n_138;
  wire u_ctrl_n_139;
  wire u_ctrl_n_161;
  wire u_ctrl_n_179;
  wire u_ctrl_n_180;
  wire u_ctrl_n_181;
  wire u_ctrl_n_182;
  wire u_ctrl_n_183;
  wire u_ctrl_n_184;
  wire u_ctrl_n_185;
  wire u_ctrl_n_186;
  wire u_ctrl_n_187;
  wire u_ctrl_n_188;
  wire u_ctrl_n_189;
  wire u_ctrl_n_190;
  wire u_ctrl_n_191;
  wire u_ctrl_n_192;
  wire u_ctrl_n_193;
  wire u_ctrl_n_194;
  wire u_ctrl_n_195;
  wire u_ctrl_n_196;
  wire u_ctrl_n_197;
  wire u_ctrl_n_198;
  wire u_ctrl_n_199;
  wire u_ctrl_n_200;
  wire u_ctrl_n_201;
  wire u_ctrl_n_202;
  wire u_ctrl_n_203;
  wire u_ctrl_n_204;
  wire u_ctrl_n_205;
  wire u_ctrl_n_206;
  wire u_ctrl_n_207;
  wire u_ctrl_n_208;
  wire u_ctrl_n_211;
  wire u_ctrl_n_212;
  wire u_ctrl_n_213;
  wire u_ctrl_n_214;
  wire u_ctrl_n_215;
  wire u_ctrl_n_216;
  wire u_ctrl_n_217;
  wire u_ctrl_n_218;
  wire u_ctrl_n_219;
  wire u_ctrl_n_220;
  wire u_ctrl_n_221;
  wire u_ctrl_n_222;
  wire u_ctrl_n_223;
  wire u_ctrl_n_224;
  wire u_ctrl_n_225;
  wire u_ctrl_n_226;
  wire u_ctrl_n_227;
  wire u_ctrl_n_228;
  wire u_ctrl_n_229;
  wire u_ctrl_n_230;
  wire u_ctrl_n_231;
  wire u_ctrl_n_232;
  wire u_ctrl_n_233;
  wire u_ctrl_n_234;
  wire u_ctrl_n_235;
  wire u_ctrl_n_236;
  wire u_ctrl_n_237;
  wire u_ctrl_n_238;
  wire u_ctrl_n_239;
  wire u_ctrl_n_240;
  wire u_ctrl_n_241;
  wire u_ctrl_n_243;
  wire u_ctrl_n_244;
  wire u_ctrl_n_245;
  wire u_ctrl_n_246;
  wire u_ctrl_n_247;
  wire u_ctrl_n_248;
  wire u_ctrl_n_249;
  wire u_ctrl_n_250;
  wire u_ctrl_n_251;
  wire u_ctrl_n_259;
  wire u_ctrl_n_271;
  wire u_ctrl_n_272;
  wire u_ctrl_n_273;
  wire u_ctrl_n_274;
  wire u_ctrl_n_275;
  wire u_ctrl_n_277;
  wire u_ctrl_n_278;
  wire u_ctrl_n_279;
  wire u_ctrl_n_280;
  wire u_ctrl_n_281;
  wire u_ctrl_n_282;
  wire u_ctrl_n_283;
  wire u_ctrl_n_284;
  wire u_ctrl_n_285;
  wire u_ctrl_n_286;
  wire u_ctrl_n_287;
  wire u_ctrl_n_288;
  wire u_ctrl_n_289;
  wire u_ctrl_n_290;
  wire u_ctrl_n_307;
  wire u_ctrl_n_308;
  wire u_ctrl_n_309;
  wire u_ctrl_n_310;
  wire u_ctrl_n_311;
  wire u_ctrl_n_312;
  wire u_ctrl_n_313;
  wire u_ctrl_n_315;
  wire u_ctrl_n_316;
  wire u_ctrl_n_317;
  wire u_ctrl_n_318;
  wire u_ctrl_n_319;
  wire u_ctrl_n_320;
  wire u_ctrl_n_321;
  wire u_ctrl_n_322;
  wire u_ctrl_n_33;
  wire u_ctrl_n_63;
  wire u_ctrl_n_64;
  wire u_ctrl_n_65;
  wire u_ctrl_n_66;
  wire u_ctrl_n_77;
  wire u_ctrl_n_78;
  wire u_ctrl_n_79;
  wire u_ctrl_n_81;
  wire u_ctrl_n_82;
  wire u_ctrl_n_83;
  wire u_ctrl_n_84;
  wire u_ctrl_n_85;
  wire u_ctrl_n_86;
  wire u_ctrl_n_87;
  wire u_ctrl_n_89;
  wire u_ctrl_n_90;
  wire u_ctrl_n_93;
  wire u_ctrl_n_94;
  wire u_ctrl_n_95;
  wire u_ctrl_n_98;
  wire u_ctrl_n_99;
  wire u_dp_n_100;
  wire u_dp_n_101;
  wire u_dp_n_102;
  wire u_dp_n_103;
  wire u_dp_n_104;
  wire u_dp_n_105;
  wire u_dp_n_106;
  wire u_dp_n_107;
  wire u_dp_n_108;
  wire u_dp_n_109;
  wire u_dp_n_110;
  wire u_dp_n_111;
  wire u_dp_n_112;
  wire u_dp_n_113;
  wire u_dp_n_114;
  wire u_dp_n_138;
  wire u_dp_n_139;
  wire u_dp_n_140;
  wire u_dp_n_141;
  wire u_dp_n_142;
  wire u_dp_n_147;
  wire u_dp_n_148;
  wire u_dp_n_166;
  wire u_dp_n_167;
  wire u_dp_n_168;
  wire u_dp_n_169;
  wire u_dp_n_170;
  wire u_dp_n_171;
  wire u_dp_n_172;
  wire u_dp_n_173;
  wire u_dp_n_174;
  wire u_dp_n_175;
  wire u_dp_n_176;
  wire u_dp_n_177;
  wire u_dp_n_178;
  wire u_dp_n_179;
  wire u_dp_n_180;
  wire u_dp_n_181;
  wire u_dp_n_182;
  wire u_dp_n_183;
  wire u_dp_n_184;
  wire u_dp_n_185;
  wire u_dp_n_186;
  wire u_dp_n_187;
  wire u_dp_n_188;
  wire u_dp_n_189;
  wire u_dp_n_190;
  wire u_dp_n_191;
  wire u_dp_n_192;
  wire u_dp_n_193;
  wire u_dp_n_194;
  wire u_dp_n_195;
  wire u_dp_n_196;
  wire u_dp_n_197;
  wire u_dp_n_198;
  wire u_dp_n_199;
  wire u_dp_n_2;
  wire u_dp_n_200;
  wire u_dp_n_201;
  wire u_dp_n_202;
  wire u_dp_n_203;
  wire u_dp_n_204;
  wire u_dp_n_205;
  wire u_dp_n_206;
  wire u_dp_n_207;
  wire u_dp_n_208;
  wire u_dp_n_209;
  wire u_dp_n_210;
  wire u_dp_n_211;
  wire u_dp_n_212;
  wire u_dp_n_213;
  wire u_dp_n_214;
  wire u_dp_n_215;
  wire u_dp_n_216;
  wire u_dp_n_217;
  wire u_dp_n_218;
  wire u_dp_n_219;
  wire u_dp_n_227;
  wire u_dp_n_228;
  wire u_dp_n_229;
  wire u_dp_n_230;
  wire u_dp_n_231;
  wire u_dp_n_232;
  wire u_dp_n_233;
  wire u_dp_n_234;
  wire u_dp_n_235;
  wire u_dp_n_236;
  wire u_dp_n_237;
  wire u_dp_n_238;
  wire u_dp_n_239;
  wire u_dp_n_240;
  wire u_dp_n_241;
  wire u_dp_n_242;
  wire u_dp_n_243;
  wire u_dp_n_244;
  wire u_dp_n_245;
  wire u_dp_n_246;
  wire u_dp_n_247;
  wire u_dp_n_250;
  wire u_dp_n_251;
  wire u_dp_n_252;
  wire u_dp_n_253;
  wire u_dp_n_254;
  wire u_dp_n_256;
  wire u_dp_n_257;
  wire u_dp_n_258;
  wire u_dp_n_259;
  wire u_dp_n_260;
  wire u_dp_n_261;
  wire u_dp_n_262;
  wire u_dp_n_263;
  wire u_dp_n_264;
  wire u_dp_n_266;
  wire u_dp_n_267;
  wire u_dp_n_268;
  wire u_dp_n_269;
  wire u_dp_n_270;
  wire u_dp_n_271;
  wire u_dp_n_272;
  wire u_dp_n_273;
  wire u_dp_n_274;
  wire u_dp_n_275;
  wire u_dp_n_276;
  wire u_dp_n_277;
  wire u_dp_n_278;
  wire u_dp_n_279;
  wire u_dp_n_280;
  wire u_dp_n_281;
  wire u_dp_n_282;
  wire u_dp_n_283;
  wire u_dp_n_284;
  wire u_dp_n_285;
  wire u_dp_n_3;
  wire u_dp_n_322;
  wire u_dp_n_323;
  wire u_dp_n_324;
  wire u_dp_n_325;
  wire u_dp_n_326;
  wire u_dp_n_327;
  wire u_dp_n_336;
  wire u_dp_n_337;
  wire u_dp_n_338;
  wire u_dp_n_339;
  wire u_dp_n_340;
  wire u_dp_n_341;
  wire u_dp_n_342;
  wire u_dp_n_343;
  wire u_dp_n_344;
  wire u_dp_n_345;
  wire u_dp_n_346;
  wire u_dp_n_347;
  wire u_dp_n_348;
  wire u_dp_n_349;
  wire u_dp_n_350;
  wire u_dp_n_351;
  wire u_dp_n_352;
  wire u_dp_n_353;
  wire u_dp_n_354;
  wire u_dp_n_355;
  wire u_dp_n_356;
  wire u_dp_n_357;
  wire u_dp_n_358;
  wire u_dp_n_359;
  wire u_dp_n_360;
  wire u_dp_n_361;
  wire u_dp_n_362;
  wire u_dp_n_363;
  wire u_dp_n_364;
  wire u_dp_n_365;
  wire u_dp_n_366;
  wire u_dp_n_367;
  wire u_dp_n_368;
  wire u_dp_n_369;
  wire u_dp_n_370;
  wire u_dp_n_371;
  wire u_dp_n_372;
  wire u_dp_n_373;
  wire u_dp_n_374;
  wire u_dp_n_375;
  wire u_dp_n_376;
  wire u_dp_n_377;
  wire u_dp_n_378;
  wire u_dp_n_379;
  wire u_dp_n_380;
  wire u_dp_n_381;
  wire u_dp_n_382;
  wire u_dp_n_383;
  wire u_dp_n_384;
  wire u_dp_n_385;
  wire u_dp_n_386;
  wire u_dp_n_387;
  wire u_dp_n_388;
  wire u_dp_n_389;
  wire u_dp_n_390;
  wire u_dp_n_391;
  wire u_dp_n_392;
  wire u_dp_n_393;
  wire u_dp_n_394;
  wire u_dp_n_395;
  wire u_dp_n_396;
  wire u_dp_n_397;
  wire u_dp_n_398;
  wire u_dp_n_399;
  wire u_dp_n_400;
  wire u_dp_n_401;
  wire u_dp_n_402;
  wire u_dp_n_403;
  wire u_dp_n_404;
  wire u_dp_n_405;
  wire u_dp_n_406;
  wire u_dp_n_407;
  wire u_dp_n_408;
  wire u_dp_n_409;
  wire u_dp_n_410;
  wire u_dp_n_415;
  wire u_dp_n_53;
  wire u_dp_n_62;
  wire u_dp_n_63;
  wire u_dp_n_64;
  wire u_dp_n_65;
  wire u_dp_n_66;
  wire u_dp_n_67;
  wire u_dp_n_68;
  wire u_dp_n_69;
  wire u_dp_n_70;
  wire u_dp_n_71;
  wire u_dp_n_72;
  wire u_dp_n_73;
  wire u_dp_n_78;
  wire u_dp_n_79;
  wire u_dp_n_80;
  wire u_dp_n_81;
  wire u_dp_n_82;
  wire u_dp_n_83;
  wire u_dp_n_84;
  wire u_dp_n_85;
  wire u_dp_n_86;
  wire u_dp_n_87;
  wire u_dp_n_88;
  wire u_dp_n_89;
  wire u_dp_n_90;
  wire u_dp_n_91;
  wire u_dp_n_92;
  wire u_dp_n_93;
  wire u_dp_n_94;
  wire u_dp_n_95;
  wire u_dp_n_96;
  wire u_dp_n_97;
  wire u_dp_n_98;
  wire u_dp_n_99;
  wire \u_excpt/load_xpsr_ex ;
  wire u_fault;
  wire u_fetch_n_18;
  wire \u_mem_ctl/nxt_dtcm_sel ;
  wire \u_mem_ctl/nxt_irack ;
  wire \u_mem_ctl/nxt_itcm_sel ;
  wire [4:0]\u_mul_shft/u_shft/m_amt ;
  wire \u_mul_shft/u_shft/m_ext ;
  wire \u_mul_shft/u_shft/m_invert ;
  wire \u_r_bank/reg_file_a ;
  wire [0:0]\uhalf_instr_reg[0] ;
  wire [15:0]\uhalf_instr_reg[15] ;
  wire update_n_ex;
  wire update_pc;
  wire use_c_flag_ex;
  wire use_imm_ex;
  wire v_flag;
  wire v_flag_au;
  wire v_flag_wf;
  wire w_enable_ex;
  wire [3:0]wptr_ex;
  wire write_flags_ex;
  wire z_flag;
  wire z_flag_mux_reg;
  wire ze_half_wb;
  wire zero_a_ex;

  assign IRQ_0_sp_1 = IRQ_0_sn_1;
  design_1_CORTEXM1_AXI_0_1_cm1_ctl u_ctrl
       (.CO(u_ctrl_n_284),
        .D({D[30],D[27:0]}),
        .E(E),
        .\HADDR_reg[0] (u_dp_n_2),
        .\HADDR_reg[15] (u_dp_n_182),
        .\HADDR_reg[16] (u_dp_n_186),
        .\HADDR_reg[17] (u_dp_n_180),
        .\HADDR_reg[18] (u_dp_n_181),
        .\HADDR_reg[19] (u_dp_n_184),
        .\HADDR_reg[20] (u_dp_n_179),
        .\HADDR_reg[21] (u_dp_n_185),
        .\HADDR_reg[22] (u_dp_n_183),
        .\HADDR_reg[23] (u_dp_n_187),
        .\HADDR_reg[24] (u_dp_n_142),
        .\HADDR_reg[25] (u_dp_n_141),
        .\HADDR_reg[26] (u_dp_n_140),
        .\HADDR_reg[27] ({u_dp_n_78,u_dp_n_79,u_dp_n_80,u_dp_n_81}),
        .\HADDR_reg[27]_0 (u_dp_n_139),
        .HCLK(HCLK),
        .\HRDATA_reg[2] (\HRDATA_reg[2] ),
        .\HRDATA_reg[5] (\HRDATA_reg[5] ),
        .\HRDATA_reg[5]_0 (\HRDATA_reg[5]_0 ),
        .IRQ(IRQ),
        .IRQ_0_sp_1(IRQ_0_sn_1),
        .NMI(NMI),
        .O({u_ctrl_n_63,u_ctrl_n_64,u_ctrl_n_65,u_ctrl_n_66}),
        .Q({u_dp_n_84,u_dp_n_85,u_dp_n_86,u_dp_n_87,u_dp_n_88,u_dp_n_89,u_dp_n_90,u_dp_n_91,u_dp_n_92,u_dp_n_93,u_dp_n_94,u_dp_n_95,u_dp_n_96,u_dp_n_97,u_dp_n_98,u_dp_n_99,u_dp_n_100,u_dp_n_101,u_dp_n_102,u_dp_n_103,u_dp_n_104,u_dp_n_105,u_dp_n_106,u_dp_n_107,u_dp_n_108,u_dp_n_109,u_dp_n_110,u_dp_n_111,u_dp_n_112,u_dp_n_113,u_dp_n_114}),
        .S(u_ctrl_n_79),
        .SYSRESETn(SYSRESETn),
        .SYSRESETn_0(SYSRESETn_0),
        .a_reg_0({a_reg_0[31:28],a_reg_0[25:16],a_reg_0[14:13],a_reg_0[11:3],a_reg_0[1:0]}),
        .adv_de_to_ex(adv_de_to_ex),
        .au_a_use_pc_ex(au_a_use_pc_ex),
        .b_reg_0({u_dp_n_188,u_dp_n_189,u_dp_n_190,u_dp_n_191,u_dp_n_192,u_dp_n_193,u_dp_n_194,u_dp_n_195,u_dp_n_196,u_dp_n_197,u_dp_n_198,u_dp_n_199,u_dp_n_200,u_dp_n_201,u_dp_n_202,u_dp_n_203,u_dp_n_204,u_dp_n_205,u_dp_n_206,u_dp_n_207,u_dp_n_208,u_dp_n_209,u_dp_n_210,u_dp_n_211,u_dp_n_212,u_dp_n_213,u_dp_n_214,u_dp_n_215,u_dp_n_216,u_dp_n_217,u_dp_n_218,u_dp_n_219}),
        .bcc_first_ex_reg_0(bcc_first_ex_reg),
        .\biu_addr_31_29_reg_reg[30] (u_dp_n_138),
        .biu_addr_mux_ctl_ex(biu_addr_mux_ctl_ex),
        .biu_dreq(biu_dreq),
        .biu_dsb(biu_dsb),
        .biu_rdy(biu_rdy),
        .biu_wfault(biu_wfault),
        .biu_write_reg_0(biu_write),
        .biu_write_reg_1(biu_write_reg),
        .c_flag(c_flag),
        .c_flag_mux(c_flag_mux),
        .c_flag_mux_reg(au_carry),
        .c_flag_mux_reg_0(u_dp_n_147),
        .c_flag_wf(c_flag_wf),
        .c_flag_wf_reg(u_ctrl_n_287),
        .dbg_wdata_sel_ex(dbg_wdata_sel_ex),
        .\dp_ipsr_1to0[1]_i_7 (u_dp_n_391),
        .\dp_ipsr_1to0_reg[0] (u_dp_n_392),
        .\dp_ipsr_1to0_reg[1] (u_dp_n_283),
        .\dp_ipsr_1to0_reg[1]_0 (u_dp_n_259),
        .\dp_ipsr_1to0_reg[1]_1 (u_dp_n_367),
        .\dp_ipsr_7to2_reg[2] (u_dp_n_359),
        .\dp_ipsr_7to2_reg[3] (u_dp_n_360),
        .\dp_ipsr_7to2_reg[4] (\dp_ipsr_7to2_reg[4] ),
        .\dp_ipsr_7to2_reg[4]_0 (\dp_ipsr_7to2_reg[4]_0 ),
        .\dp_ipsr_7to2_reg[4]_1 (u_dp_n_368),
        .\dp_ipsr_7to2_reg[5] (\dp_ipsr_7to2_reg[6] [2:1]),
        .\dp_ipsr_7to2_reg[5]_0 (u_dp_n_369),
        .\dp_ipsr_7to2_reg[6] (\dp_ipsr_7to2_reg[6] [3]),
        .\dp_ipsr_7to2_reg[6]_0 (u_dp_n_336),
        .\dp_ipsr_7to2_reg[7] (\dp_ipsr_7to2_reg[7] ),
        .\dp_ipsr_7to2_reg[7]_0 (\dp_ipsr_7to2_reg[7]_0 ),
        .\dp_ipsr_7to2_reg[7]_1 (\dp_ipsr_7to2_reg[7]_1 ),
        .\dp_ipsr_7to2_reg[7]_2 ({mem_r_data_u[7:2],mem_r_data_u[0]}),
        .\dp_ipsr_7to2_reg[7]_3 (u_dp_n_337),
        .dreq_rd_ex_reg_0(u_ctrl_n_251),
        .dreq_wr_ex_reg_0(dreq_wr_ex),
        .dtcm_sel_reg(itcm_sel_i_6),
        .dtcm_sel_reg_0(\mem_held_addr_reg[19]_i_1 ),
        .en_itcm_core(en_itcm_core),
        .excpt_isb_de(excpt_isb_de),
        .excpt_ret_de_reg_0(u_dp_n_83),
        .fetch_internal_reg(fetch_internal),
        .first32_ex_reg_0(first32_ex),
        .first32_ex_reg_1(first32_ex_reg),
        .first_ex_phase_reg_0(u_ctrl_n_33),
        .first_ex_phase_reg_1(u_ctrl_n_161),
        .first_ex_phase_reg_2(hold_reg20),
        .force_c_in_ex(force_c_in_ex),
        .force_hf_reg(\dp_ipsr_7to2_reg[6] [0]),
        .fptr_align(fptr_align),
        .fptr_align_reg(u_dp_n_415),
        .fptr_wdata(fptr_wdata),
        .hdf_actv(hdf_actv),
        .\held_instr0_reg[15]_0 (instr_fe),
        .hi_pre_fetch_addr_reg(u_dp_n_148),
        .\hold_reg1_reg[15] (u_dp_n_231),
        .\hold_reg1_reg[6] (u_dp_n_3),
        .\hold_reg2_reg[0] (u_dp_n_252),
        .\hold_reg2_reg[10] (u_dp_n_261),
        .\hold_reg2_reg[11] (u_dp_n_266),
        .\hold_reg2_reg[12] (u_dp_n_270),
        .\hold_reg2_reg[13] (u_dp_n_274),
        .\hold_reg2_reg[14] (u_dp_n_278),
        .\hold_reg2_reg[15] (u_dp_n_227),
        .\hold_reg2_reg[16] (u_dp_n_251),
        .\hold_reg2_reg[17] (u_dp_n_256),
        .\hold_reg2_reg[18] (u_dp_n_262),
        .\hold_reg2_reg[19] (u_dp_n_267),
        .\hold_reg2_reg[1] (u_dp_n_257),
        .\hold_reg2_reg[20] (u_dp_n_271),
        .\hold_reg2_reg[21] (u_dp_n_275),
        .\hold_reg2_reg[22] (u_dp_n_279),
        .\hold_reg2_reg[23] (u_dp_n_228),
        .\hold_reg2_reg[24] (u_dp_n_253),
        .\hold_reg2_reg[25] (u_dp_n_258),
        .\hold_reg2_reg[26] (u_dp_n_264),
        .\hold_reg2_reg[27] (u_dp_n_269),
        .\hold_reg2_reg[28] (u_dp_n_273),
        .\hold_reg2_reg[29] (u_dp_n_277),
        .\hold_reg2_reg[2] (u_dp_n_263),
        .\hold_reg2_reg[30] (u_dp_n_281),
        .\hold_reg2_reg[31] (u_dp_n_230),
        .\hold_reg2_reg[3] (u_dp_n_268),
        .\hold_reg2_reg[4] (u_dp_n_272),
        .\hold_reg2_reg[5] (u_dp_n_276),
        .\hold_reg2_reg[6] (u_dp_n_280),
        .\hold_reg2_reg[7] (u_dp_n_229),
        .\hold_reg2_reg[8] (u_dp_n_250),
        .i_dbg_wdata_sel_de_reg(i_dbg_wdata_sel_de_reg),
        .i_dbg_wdata_sel_ex_reg(u_ctrl_n_282),
        .i_nvic_excpt_svc_valid_reg(i_nvic_excpt_svc_valid_reg),
        .\i_pend_state_reg[0] (\i_pend_state_reg[0] ),
        .\i_pend_state_reg[0]_0 (\i_pend_state_reg[0]_0 ),
        .\i_pend_state_reg[1] (Q),
        .\i_pend_state_reg[1]_0 (\i_pend_state_reg[1] ),
        .\i_svc_lvl_reg[1] (\i_svc_lvl_reg[1] ),
        .\imm_ex_reg[0]_0 (imm_ex),
        .instr_faulted_reg(instr_faulted),
        .int_actv(int_actv),
        .int_fault_ex_reg(int_fault_ex),
        .int_fault_ex_reg_0(int_fault_ex_reg),
        .int_prev(int_prev),
        .invert_b_ex_reg_0({\u_alu_dec/au_in_b [31:29],\u_alu_dec/au_in_b [26:25],\u_alu_dec/au_in_b [23],\u_alu_dec/au_in_b [19],\u_alu_dec/au_in_b [10]}),
        .invert_b_ex_reg_1(u_ctrl_n_81),
        .invert_b_ex_reg_2(u_ctrl_n_82),
        .invert_b_ex_reg_3(u_ctrl_n_83),
        .invert_b_ex_reg_4(u_ctrl_n_84),
        .invert_b_ex_reg_5(u_ctrl_n_85),
        .invert_b_ex_reg_6(u_ctrl_n_86),
        .invert_b_ex_reg_7(u_ctrl_n_87),
        .invert_b_ex_reg_8({u_ctrl_n_243,u_ctrl_n_244,u_ctrl_n_245,u_ctrl_n_246}),
        .invert_b_ex_reg_9({u_ctrl_n_247,u_ctrl_n_248,u_ctrl_n_249,u_ctrl_n_250}),
        .ireq_ldpc(ireq_ldpc),
        .irq_lvl(irq_lvl),
        .itcm_sel_reg(u_dp_n_73),
        .last_uncond_phase_ex_reg_0(hold_reg2_mask),
        .last_uncond_phase_ex_reg_1(nxt_rptr_a_ex),
        .last_uncond_phase_ex_reg_2(nxt_rptr_b_ex),
        .\latched_excpt_num_reg[4] (\latched_excpt_num_reg[4] ),
        .load_fptr(load_fptr),
        .load_xpsr_ex(\u_excpt/load_xpsr_ex ),
        .locked_up_reg(locked_up_reg),
        .locked_up_reg_0(update_pc),
        .ls_byte_ex(ls_byte_ex),
        .ls_byte_ex_reg_0(u_ctrl_n_99),
        .ls_half_ex(ls_half_ex),
        .ls_half_ex_reg_0(ls_half_ex_reg),
        .ls_half_ex_reg_1(u_ctrl_n_279),
        .m_ext(\u_mul_shft/u_shft/m_ext ),
        .m_invert(\u_mul_shft/u_shft/m_invert ),
        .\mem_held_addr_reg[0] (u_ctrl_n_95),
        .\mem_held_addr_reg[0]_0 (u_ctrl_n_281),
        .\mem_held_addr_reg[11] ({u_dp_n_70,u_dp_n_71}),
        .\mem_held_addr_reg[15] ({u_dp_n_67,u_dp_n_68}),
        .\mem_held_addr_reg[19] (u_dp_n_65),
        .\mem_held_addr_reg[1] (u_ctrl_n_77),
        .\mem_held_addr_reg[1]_0 (u_ctrl_n_78),
        .\mem_held_addr_reg[1]_1 (u_ctrl_n_271),
        .\mem_held_addr_reg[1]_2 (u_ctrl_n_278),
        .\mem_held_addr_reg[23] (u_dp_n_63),
        .micro_code_de_reg(micro_code_de_reg),
        .micro_code_fe(micro_code_fe),
        .mode(mode),
        .mult_out(mult_out),
        .n_flag(n_flag),
        .nmi_actv(nmi_actv),
        .nvic_excpt_fault_req(nvic_excpt_fault_req),
        .nvic_excpt_svc_valid(nvic_excpt_svc_valid),
        .nvic_excpt_taken(nvic_excpt_taken),
        .nvic_lockup(nvic_lockup),
        .nvic_primask(nvic_primask),
        .nxt_dtcm_sel(\u_mem_ctl/nxt_dtcm_sel ),
        .nxt_fetch_internal(nxt_fetch_internal),
        .nxt_instr_faulted(nxt_instr_faulted),
        .nxt_int_rack(nxt_int_rack),
        .nxt_irack(\u_mem_ctl/nxt_irack ),
        .nxt_itcm_sel(\u_mem_ctl/nxt_itcm_sel ),
        .nxt_z_flag_mux(nxt_z_flag_mux),
        .p_1_in2_in({p_1_in2_in[31:24],p_1_in2_in[9],p_1_in2_in[7:0]}),
        .\pc_ex_reg[0]_0 (\pc_ex_reg[0] ),
        .\pc_reg[10] (u_dp_n_174),
        .\pc_reg[11] ({u_ctrl_n_132,u_ctrl_n_133,u_ctrl_n_134,u_ctrl_n_135}),
        .\pc_reg[11]_0 (u_dp_n_175),
        .\pc_reg[12] (u_dp_n_176),
        .\pc_reg[13] (u_dp_n_177),
        .\pc_reg[14] (u_dp_n_178),
        .\pc_reg[15] ({u_ctrl_n_127,u_ctrl_n_128,u_ctrl_n_129,u_ctrl_n_130}),
        .\pc_reg[23] ({p_0_in__0,pre_fetch_addr_1}),
        .\pc_reg[2] (u_dp_n_166),
        .\pc_reg[31] ({u_ctrl_n_211,u_ctrl_n_212,u_ctrl_n_213,u_ctrl_n_214,u_ctrl_n_215,u_ctrl_n_216,u_ctrl_n_217,u_ctrl_n_218,u_ctrl_n_219,u_ctrl_n_220,u_ctrl_n_221,u_ctrl_n_222,u_ctrl_n_223,u_ctrl_n_224,u_ctrl_n_225,u_ctrl_n_226,u_ctrl_n_227,u_ctrl_n_228,u_ctrl_n_229,u_ctrl_n_230,u_ctrl_n_231,u_ctrl_n_232,u_ctrl_n_233,u_ctrl_n_234,u_ctrl_n_235,u_ctrl_n_236,u_ctrl_n_237,u_ctrl_n_238,u_ctrl_n_239,u_ctrl_n_240,u_ctrl_n_241,p_1_out}),
        .\pc_reg[3] (u_dp_n_167),
        .\pc_reg[4] (u_dp_n_168),
        .\pc_reg[5] (u_dp_n_169),
        .\pc_reg[6] (u_dp_n_170),
        .\pc_reg[7] (u_dp_n_171),
        .\pc_reg[8] (u_dp_n_172),
        .\pc_reg[9] (u_dp_n_173),
        .pf_fault_fe(pf_fault_fe),
        .pre_update_c_ex_reg_0(u_ctrl_n_286),
        .pre_update_v_ex_reg_0(u_ctrl_n_285),
        .primask_i_3(u_dp_n_352),
        .r_hdf_actv(r_hdf_actv),
        .r_hdf_actv_reg(r_hdf_actv_reg),
        .\r_int_actv_lvl_reg[1] (\r_int_actv_lvl_reg[1] ),
        .\r_int_actv_lvl_reg[1]_0 (\r_int_actv_lvl_reg[1]_0 ),
        .r_nmi_actv(r_nmi_actv),
        .rd_mux_a_ex(rd_mux_a_ex),
        .\reg_file_a[15][10]_i_2 (u_dp_n_361),
        .\reg_file_a[15][16]_i_2 (u_dp_n_370),
        .\reg_file_a[15][17]_i_2 (u_dp_n_353),
        .\reg_file_a[15][23]_i_2 (u_dp_n_354),
        .\reg_file_a[15][24]_i_2 (u_dp_n_374),
        .\reg_file_a[15][25]_i_2 (u_dp_n_373),
        .\reg_file_a[15][28]_i_2 (u_dp_n_372),
        .\reg_file_a[15][29]_i_2 (u_dp_n_371),
        .\reg_file_a[15][30]_i_2 (u_dp_n_366),
        .\reg_file_a[15][31]_i_3 (u_dp_n_365),
        .\reg_file_a_reg[0][0] (u_dp_n_254),
        .\reg_file_a_reg[0][0]_0 (u_dp_n_284),
        .\reg_file_a_reg[0][0]_1 (u_dp_n_282),
        .\reg_file_a_reg[0][25] (u_dp_n_364),
        .\reg_file_a_reg[0][25]_0 (u_dp_n_285),
        .\reg_file_a_reg[0][25]_1 (u_dp_n_260),
        .\reg_file_a_reg[15][10] (u_dp_n_72),
        .\reg_file_a_reg[15][11] (u_dp_n_339),
        .\reg_file_a_reg[15][12] (u_dp_n_69),
        .\reg_file_a_reg[15][12]_0 (u_dp_n_340),
        .\reg_file_a_reg[15][13] (u_dp_n_341),
        .\reg_file_a_reg[15][14] (u_dp_n_342),
        .\reg_file_a_reg[15][15] ({u_dp_n_393,u_dp_n_394,u_dp_n_395,u_dp_n_396,u_dp_n_397,u_dp_n_398,u_dp_n_399,u_dp_n_400,u_dp_n_401,u_dp_n_402,u_dp_n_403,u_dp_n_404,u_dp_n_405,u_dp_n_406,u_dp_n_407,u_dp_n_408}),
        .\reg_file_a_reg[15][15]_0 (u_dp_n_343),
        .\reg_file_a_reg[15][16] (u_dp_n_232),
        .\reg_file_a_reg[15][17] (u_dp_n_233),
        .\reg_file_a_reg[15][18] (u_dp_n_234),
        .\reg_file_a_reg[15][18]_0 (u_dp_n_344),
        .\reg_file_a_reg[15][19] (u_dp_n_235),
        .\reg_file_a_reg[15][19]_0 (u_dp_n_66),
        .\reg_file_a_reg[15][19]_1 (u_dp_n_345),
        .\reg_file_a_reg[15][20] (u_dp_n_236),
        .\reg_file_a_reg[15][20]_0 (u_dp_n_346),
        .\reg_file_a_reg[15][21] (u_dp_n_237),
        .\reg_file_a_reg[15][21]_0 (u_dp_n_347),
        .\reg_file_a_reg[15][22] (u_dp_n_238),
        .\reg_file_a_reg[15][22]_0 (u_dp_n_348),
        .\reg_file_a_reg[15][23] (u_dp_n_239),
        .\reg_file_a_reg[15][23]_0 (u_dp_n_64),
        .\reg_file_a_reg[15][24] (u_dp_n_240),
        .\reg_file_a_reg[15][24]_0 (u_dp_n_363),
        .\reg_file_a_reg[15][26] (u_dp_n_241),
        .\reg_file_a_reg[15][26]_0 (u_dp_n_349),
        .\reg_file_a_reg[15][27] (u_dp_n_242),
        .\reg_file_a_reg[15][27]_0 (u_dp_n_350),
        .\reg_file_a_reg[15][28] (u_dp_n_243),
        .\reg_file_a_reg[15][28]_0 (u_dp_n_357),
        .\reg_file_a_reg[15][29] (u_dp_n_244),
        .\reg_file_a_reg[15][29]_0 (u_dp_n_358),
        .\reg_file_a_reg[15][30] (u_dp_n_245),
        .\reg_file_a_reg[15][30]_0 (u_dp_n_355),
        .\reg_file_a_reg[15][31] ({hold_reg1[31:28],hold_reg1[25:23],hold_reg1[17:16],hold_reg1[10:9],hold_reg1[5:0]}),
        .\reg_file_a_reg[15][31]_0 (O),
        .\reg_file_a_reg[15][31]_1 (u_dp_n_246),
        .\reg_file_a_reg[15][31]_2 (u_dp_n_356),
        .\reg_file_a_reg[15][8] (u_dp_n_338),
        .\reg_file_a_reg[15][9] (u_dp_n_362),
        .rf0_mux_ctl_ex(rf0_mux_ctl_ex),
        .\rf0_mux_ctl_ex_reg[1]_0 (u_ctrl_n_283),
        .rf_mux_ctl_ex(rf_mux_ctl_ex),
        .\rf_mux_ctl_ex_reg[2]_0 (u_ctrl_n_288),
        .rf_wdata({u_ctrl_n_179,u_ctrl_n_180,u_ctrl_n_181,u_ctrl_n_182,u_ctrl_n_183,u_ctrl_n_184,u_ctrl_n_185,u_ctrl_n_186,u_ctrl_n_187,u_ctrl_n_188,u_ctrl_n_189,u_ctrl_n_190,u_ctrl_n_191,u_ctrl_n_192,u_ctrl_n_193,u_ctrl_n_194,u_ctrl_n_195,u_ctrl_n_196,u_ctrl_n_197,u_ctrl_n_198,u_ctrl_n_199,u_ctrl_n_200,u_ctrl_n_201,u_ctrl_n_202,u_ctrl_n_203,u_ctrl_n_204,u_ctrl_n_205,u_ctrl_n_206,u_ctrl_n_207,u_ctrl_n_208,rf_wdata}),
        .rst_fptr_align_ex(rst_fptr_align_ex),
        .se_half_wb(se_half_wb),
        .se_half_wb_reg_0({mem_r_data_s[25],mem_r_data_s[15:8]}),
        .sel_wf_c(sel_wf_c),
        .sel_wf_v(sel_wf_v),
        .seq_fetch_addr(seq_fetch_addr),
        .\shift_op_reg[0]_0 (u_ctrl_n_280),
        .svc_lvl_0(svc_lvl_0),
        .\swz_ctl_ex_reg[0]_0 (u_ctrl_n_98),
        .\swz_ctl_ex_reg[1]_0 (swz_ctl_ex),
        .\swz_ctl_ex_reg[1]_1 (u_ctrl_n_277),
        .u_fault(u_fault),
        .update_n_ex(update_n_ex),
        .use_c_flag_ex(use_c_flag_ex),
        .use_dp_tbit_reg(u_dp_n_82),
        .use_imm_ex(use_imm_ex),
        .use_imm_ex_reg_0({\u_mul_shft/u_shft/m_amt [4],u_ctrl_n_89,u_ctrl_n_90,\u_mul_shft/u_shft/m_amt [1:0]}),
        .use_imm_ex_reg_1(u_ctrl_n_93),
        .use_imm_ex_reg_2(u_ctrl_n_94),
        .use_imm_ex_reg_3(u_ctrl_n_272),
        .use_imm_ex_reg_4(u_ctrl_n_273),
        .use_imm_ex_reg_5(u_ctrl_n_274),
        .use_imm_ex_reg_6(u_ctrl_n_275),
        .v_flag(v_flag),
        .v_flag_au(v_flag_au),
        .v_flag_au_reg(u_ctrl_n_290),
        .v_flag_wf(v_flag_wf),
        .v_flag_wf_reg(u_ctrl_n_289),
        .w_enable_ex(w_enable_ex),
        .\wdata_mux_ctl_ex_reg[0]_0 (u_ctrl_n_259),
        .\wdata_reg[24] (u_dp_n_322),
        .\wdata_reg[25] (u_dp_n_410),
        .\wdata_reg[26] (u_dp_n_323),
        .\wdata_reg[27] (u_dp_n_324),
        .\wdata_reg[28] (u_dp_n_325),
        .\wdata_reg[29] (u_dp_n_326),
        .\wdata_reg[30] (u_dp_n_409),
        .\wdata_reg[31] ({hold_reg2[31:23],hold_reg2[17:16],hold_reg2[10:9],hold_reg2[7:0]}),
        .\wdata_reg[31]_0 (u_dp_n_327),
        .wptr_ex(wptr_ex),
        .\wptr_ex_reg[0]_0 (u_ctrl_n_321),
        .\wptr_ex_reg[1]_0 (u_ctrl_n_307),
        .\wptr_ex_reg[1]_1 (u_ctrl_n_308),
        .\wptr_ex_reg[1]_2 (u_ctrl_n_310),
        .\wptr_ex_reg[1]_3 (u_ctrl_n_312),
        .\wptr_ex_reg[1]_4 (\u_r_bank/reg_file_a ),
        .\wptr_ex_reg[1]_5 (u_ctrl_n_315),
        .\wptr_ex_reg[1]_6 (u_ctrl_n_318),
        .\wptr_ex_reg[1]_7 (u_ctrl_n_320),
        .\wptr_ex_reg[1]_8 (u_ctrl_n_322),
        .\wptr_ex_reg[2]_0 (u_ctrl_n_309),
        .\wptr_ex_reg[2]_1 (u_ctrl_n_316),
        .\wptr_ex_reg[2]_2 (u_ctrl_n_319),
        .\wptr_ex_reg[3]_0 (u_ctrl_n_311),
        .\wptr_ex_reg[3]_1 (u_ctrl_n_313),
        .\wptr_ex_reg[3]_2 (u_ctrl_n_317),
        .\write_addr_reg[1]_0 (u_fetch_n_18),
        .write_flags_ex(write_flags_ex),
        .z_flag(z_flag),
        .z_flag_mux_i_11_0(u_dp_n_385),
        .z_flag_mux_i_11_1(u_dp_n_386),
        .z_flag_mux_i_11_2(u_dp_n_383),
        .z_flag_mux_i_11_3(u_dp_n_384),
        .z_flag_mux_i_16_0(u_dp_n_387),
        .z_flag_mux_i_16_1(u_dp_n_388),
        .z_flag_mux_i_16_2(u_dp_n_389),
        .z_flag_mux_i_16_3(u_dp_n_390),
        .z_flag_mux_i_21_0(u_dp_n_380),
        .z_flag_mux_i_21_1(u_dp_n_381),
        .z_flag_mux_i_21_2(u_dp_n_379),
        .z_flag_mux_i_21_3(u_dp_n_382),
        .z_flag_mux_i_22_0(u_dp_n_376),
        .z_flag_mux_i_22_1(u_dp_n_377),
        .z_flag_mux_i_22_2(u_dp_n_378),
        .z_flag_mux_i_22_3(u_dp_n_375),
        .z_flag_mux_i_6_0({au_in_a[30],au_in_a[28:26],au_in_a[24],au_in_a[15],au_in_a[12:11]}),
        .z_flag_mux_i_6_1(u_dp_n_53),
        .z_flag_mux_i_6_2(u_dp_n_62),
        .z_flag_mux_reg(u_dp_n_247),
        .z_flag_mux_reg_0(u_dp_n_351),
        .ze_half_wb(ze_half_wb),
        .zero_a_ex(zero_a_ex),
        .zero_a_ex_reg_0({u_ctrl_n_136,u_ctrl_n_137,u_ctrl_n_138,u_ctrl_n_139}));
  design_1_CORTEXM1_AXI_0_1_cm1_dp u_dp
       (.CO(u_ctrl_n_284),
        .D({O,u_dp_n_78,u_dp_n_79,u_dp_n_80,u_dp_n_81}),
        .DTCMBYTEWR(DTCMBYTEWR),
        .E(\u_r_bank/reg_file_a ),
        .HCLK(HCLK),
        .ITCMBYTEWR(ITCMBYTEWR),
        .O({u_ctrl_n_63,u_ctrl_n_64,u_ctrl_n_65,u_ctrl_n_66}),
        .Q({u_dp_n_84,u_dp_n_85,u_dp_n_86,u_dp_n_87,u_dp_n_88,u_dp_n_89,u_dp_n_90,u_dp_n_91,u_dp_n_92,u_dp_n_93,u_dp_n_94,u_dp_n_95,u_dp_n_96,u_dp_n_97,u_dp_n_98,u_dp_n_99,u_dp_n_100,u_dp_n_101,u_dp_n_102,u_dp_n_103,u_dp_n_104,u_dp_n_105,u_dp_n_106,u_dp_n_107,u_dp_n_108,u_dp_n_109,u_dp_n_110,u_dp_n_111,u_dp_n_112,u_dp_n_113,u_dp_n_114}),
        .S(u_ctrl_n_79),
        .au_a_use_pc_ex(au_a_use_pc_ex),
        .b_reg_0({u_dp_n_188,u_dp_n_189,u_dp_n_190,u_dp_n_191,u_dp_n_192,u_dp_n_193,u_dp_n_194,u_dp_n_195,u_dp_n_196,u_dp_n_197,u_dp_n_198,u_dp_n_199,u_dp_n_200,u_dp_n_201,u_dp_n_202,u_dp_n_203,u_dp_n_204,u_dp_n_205,u_dp_n_206,u_dp_n_207,u_dp_n_208,u_dp_n_209,u_dp_n_210,u_dp_n_211,u_dp_n_212,u_dp_n_213,u_dp_n_214,u_dp_n_215,u_dp_n_216,u_dp_n_217,u_dp_n_218,u_dp_n_219}),
        .\biu_addr_31_29_reg_reg[29] (biu_write),
        .biu_addr_mux_ctl_ex(biu_addr_mux_ctl_ex),
        .biu_commit(biu_commit),
        .biu_commit_reg_reg(biu_commit_reg_reg),
        .biu_commit_reg_reg_0(u_ctrl_n_251),
        .biu_drack(biu_drack),
        .biu_dreq(biu_dreq),
        .biu_rdy(biu_rdy),
        .biu_rfault(biu_rfault),
        .c_flag(c_flag),
        .c_flag_mux(c_flag_mux),
        .c_flag_mux_i_4(u_ctrl_n_280),
        .c_flag_mux_reg_0(u_ctrl_n_288),
        .c_flag_mux_reg_1(u_ctrl_n_275),
        .c_flag_mux_reg_2(u_ctrl_n_274),
        .c_flag_wf(c_flag_wf),
        .c_flag_wf_reg_0(u_ctrl_n_287),
        .dbg_wdata_sel_ex(dbg_wdata_sel_ex),
        .doutA(doutA),
        .\dp_ipsr_1to0_reg[1] (u_ctrl_n_271),
        .\dp_ipsr_1to0_reg[1]_0 (u_ctrl_n_77),
        .\dp_ipsr_1to0_reg[1]_1 (u_ctrl_n_95),
        .\dp_ipsr_1to0_reg[1]_2 (u_ctrl_n_78),
        .en_itcm_core(en_itcm_core),
        .force_c_in_ex(force_c_in_ex),
        .fptr_align(fptr_align),
        .fptr_align_reg(u_dp_n_415),
        .fptr_align_reg_0(u_ctrl_n_161),
        .fptr_wdata(fptr_wdata),
        .\genblk3[1].ram_block_reg_3_0 (u_dp_n_260),
        .\hold_reg1[7]_i_7 (\hold_reg1[7]_i_7 ),
        .\hold_reg1[7]_i_7_0 (\hold_reg1[7]_i_7_0 ),
        .\hold_reg1_reg[11]_0 (u_dp_n_339),
        .\hold_reg1_reg[12]_0 (u_dp_n_340),
        .\hold_reg1_reg[13]_0 (u_dp_n_177),
        .\hold_reg1_reg[13]_1 (u_dp_n_341),
        .\hold_reg1_reg[14]_0 (u_dp_n_342),
        .\hold_reg1_reg[15]_0 (u_dp_n_343),
        .\hold_reg1_reg[16]_0 (u_dp_n_186),
        .\hold_reg1_reg[17]_0 (u_dp_n_180),
        .\hold_reg1_reg[18]_0 (u_dp_n_181),
        .\hold_reg1_reg[18]_1 (u_dp_n_344),
        .\hold_reg1_reg[19]_0 (u_dp_n_345),
        .\hold_reg1_reg[20]_0 (u_dp_n_346),
        .\hold_reg1_reg[21]_0 (u_dp_n_347),
        .\hold_reg1_reg[22]_0 (u_dp_n_183),
        .\hold_reg1_reg[22]_1 (u_dp_n_348),
        .\hold_reg1_reg[25]_0 ({mem_r_data_s[25],mem_r_data_s[15:8]}),
        .\hold_reg1_reg[26]_0 (u_dp_n_349),
        .\hold_reg1_reg[27]_0 (u_dp_n_350),
        .\hold_reg1_reg[30]_0 (u_dp_n_138),
        .\hold_reg1_reg[30]_1 (swz_ctl_ex),
        .\hold_reg1_reg[31]_0 ({D[31],D[29:28]}),
        .\hold_reg1_reg[31]_1 ({hold_reg1[31:28],hold_reg1[25:23],hold_reg1[17:16],hold_reg1[10:9],hold_reg1[5:0]}),
        .\hold_reg1_reg[31]_2 (u_ctrl_n_278),
        .\hold_reg1_reg[31]_3 (u_ctrl_n_281),
        .\hold_reg1_reg[31]_4 (\hold_reg1_reg[31] ),
        .\hold_reg1_reg[6]_0 (u_dp_n_336),
        .\hold_reg1_reg[6]_1 (u_ctrl_n_98),
        .\hold_reg1_reg[6]_2 (u_ctrl_n_277),
        .\hold_reg1_reg[7]_0 (u_dp_n_337),
        .\hold_reg1_reg[8]_0 (u_dp_n_338),
        .\hold_reg2_reg[1]_0 (u_dp_n_391),
        .\hold_reg2_reg[31]_0 ({hold_reg2[31:23],hold_reg2[17:16],hold_reg2[10:9],hold_reg2[7:0]}),
        .\hold_reg2_reg[31]_1 (hold_reg20),
        .\hold_reg2_reg[31]_2 ({u_ctrl_n_211,u_ctrl_n_212,u_ctrl_n_213,u_ctrl_n_214,u_ctrl_n_215,u_ctrl_n_216,u_ctrl_n_217,u_ctrl_n_218,u_ctrl_n_219,u_ctrl_n_220,u_ctrl_n_221,u_ctrl_n_222,u_ctrl_n_223,u_ctrl_n_224,u_ctrl_n_225,u_ctrl_n_226,u_ctrl_n_227,u_ctrl_n_228,u_ctrl_n_229,u_ctrl_n_230,u_ctrl_n_231,u_ctrl_n_232,u_ctrl_n_233,u_ctrl_n_234,u_ctrl_n_235,u_ctrl_n_236,u_ctrl_n_237,u_ctrl_n_238,u_ctrl_n_239,u_ctrl_n_240,u_ctrl_n_241,p_1_out}),
        .\i_mult_out_reg[15]__1 ({u_dp_n_393,u_dp_n_394,u_dp_n_395,u_dp_n_396,u_dp_n_397,u_dp_n_398,u_dp_n_399,u_dp_n_400,u_dp_n_401,u_dp_n_402,u_dp_n_403,u_dp_n_404,u_dp_n_405,u_dp_n_406,u_dp_n_407,u_dp_n_408}),
        .irack(irack),
        .ireq_ldpc(ireq_ldpc),
        .itcm_sel_i_5(u_dp_n_247),
        .itcm_sel_i_6(itcm_sel_i_6),
        .itcm_sel_reg(u_dp_n_282),
        .itcm_sel_reg_0(u_dp_n_284),
        .load_fptr(load_fptr),
        .load_xpsr_ex(\u_excpt/load_xpsr_ex ),
        .load_xpsr_ex_reg(u_dp_n_82),
        .ls_byte_ex(ls_byte_ex),
        .ls_byte_ex_reg(u_dp_n_322),
        .ls_byte_ex_reg_0(u_dp_n_326),
        .ls_byte_ex_reg_1(u_dp_n_409),
        .ls_byte_ex_reg_2(u_dp_n_410),
        .ls_half_ex(ls_half_ex),
        .ls_half_ex_reg(u_dp_n_323),
        .ls_half_ex_reg_0(u_dp_n_324),
        .ls_half_ex_reg_1(u_dp_n_325),
        .ls_half_ex_reg_2(u_dp_n_327),
        .\m_amt_ex2_reg[4] ({\u_mul_shft/u_shft/m_amt [4],u_ctrl_n_89,u_ctrl_n_90,\u_mul_shft/u_shft/m_amt [1:0]}),
        .m_ext(\u_mul_shft/u_shft/m_ext ),
        .m_ext_ex2_reg(u_dp_n_147),
        .m_ext_ex2_reg_0(u_dp_n_353),
        .m_ext_ex2_reg_1(u_dp_n_354),
        .m_ext_ex2_reg_10(u_dp_n_363),
        .m_ext_ex2_reg_11(u_dp_n_364),
        .m_ext_ex2_reg_12(u_dp_n_367),
        .m_ext_ex2_reg_13(u_dp_n_368),
        .m_ext_ex2_reg_14(u_dp_n_369),
        .m_ext_ex2_reg_15(u_dp_n_370),
        .m_ext_ex2_reg_16(u_dp_n_392),
        .m_ext_ex2_reg_2(u_dp_n_355),
        .m_ext_ex2_reg_3(u_dp_n_356),
        .m_ext_ex2_reg_4(u_dp_n_357),
        .m_ext_ex2_reg_5(u_dp_n_358),
        .m_ext_ex2_reg_6(u_dp_n_359),
        .m_ext_ex2_reg_7(u_dp_n_360),
        .m_ext_ex2_reg_8(u_dp_n_361),
        .m_ext_ex2_reg_9(u_dp_n_362),
        .m_invert(\u_mul_shft/u_shft/m_invert ),
        .\mem_held_addr_reg[0]_0 (u_dp_n_2),
        .\mem_held_addr_reg[10]_0 (u_dp_n_174),
        .\mem_held_addr_reg[11]_0 (u_dp_n_175),
        .\mem_held_addr_reg[11]_1 (u_ctrl_n_81),
        .\mem_held_addr_reg[12]_0 (u_dp_n_176),
        .\mem_held_addr_reg[14]_0 (u_dp_n_178),
        .\mem_held_addr_reg[15]_0 (u_dp_n_182),
        .\mem_held_addr_reg[15]_1 (u_ctrl_n_83),
        .\mem_held_addr_reg[15]_2 (u_ctrl_n_82),
        .\mem_held_addr_reg[19]_0 (u_dp_n_184),
        .\mem_held_addr_reg[19]_i_1 (\mem_held_addr_reg[19]_i_1 ),
        .\mem_held_addr_reg[1]_0 (u_dp_n_3),
        .\mem_held_addr_reg[1]_1 (u_dp_n_148),
        .\mem_held_addr_reg[1]_2 (u_dp_n_254),
        .\mem_held_addr_reg[1]_3 (u_dp_n_259),
        .\mem_held_addr_reg[1]_4 (u_dp_n_283),
        .\mem_held_addr_reg[20]_0 (u_dp_n_179),
        .\mem_held_addr_reg[21]_0 (u_dp_n_185),
        .\mem_held_addr_reg[23]_0 (u_dp_n_187),
        .\mem_held_addr_reg[23]_1 ({u_ctrl_n_243,u_ctrl_n_244,u_ctrl_n_245,u_ctrl_n_246,u_ctrl_n_247,u_ctrl_n_248,u_ctrl_n_249,u_ctrl_n_250,u_ctrl_n_127,u_ctrl_n_128,u_ctrl_n_129,u_ctrl_n_130,u_ctrl_n_132,u_ctrl_n_133,u_ctrl_n_134,u_ctrl_n_135,u_ctrl_n_136,u_ctrl_n_137,u_ctrl_n_138,u_ctrl_n_139}),
        .\mem_held_addr_reg[24]_0 (u_dp_n_142),
        .\mem_held_addr_reg[25]_0 (u_dp_n_141),
        .\mem_held_addr_reg[26]_0 (u_dp_n_140),
        .\mem_held_addr_reg[27]_0 (u_dp_n_139),
        .\mem_held_addr_reg[27]_1 (u_ctrl_n_85),
        .\mem_held_addr_reg[27]_2 (u_ctrl_n_84),
        .\mem_held_addr_reg[2]_0 (u_dp_n_166),
        .\mem_held_addr_reg[31]_0 (u_ctrl_n_87),
        .\mem_held_addr_reg[31]_1 (u_ctrl_n_86),
        .\mem_held_addr_reg[31]_2 ({\u_alu_dec/au_in_b [31:29],\u_alu_dec/au_in_b [26:25],\u_alu_dec/au_in_b [23],\u_alu_dec/au_in_b [19],\u_alu_dec/au_in_b [10]}),
        .\mem_held_addr_reg[31]_i_1 (u_dp_n_73),
        .\mem_held_addr_reg[31]_i_1_0 (au_carry),
        .\mem_held_addr_reg[3]_0 (u_dp_n_167),
        .\mem_held_addr_reg[4]_0 (u_dp_n_168),
        .\mem_held_addr_reg[5]_0 (u_dp_n_169),
        .\mem_held_addr_reg[6]_0 (u_dp_n_170),
        .\mem_held_addr_reg[7]_0 (u_dp_n_171),
        .\mem_held_addr_reg[8]_0 (u_dp_n_172),
        .\mem_held_addr_reg[9]_0 (u_dp_n_173),
        .micro_code_fe(micro_code_fe),
        .micro_code_fe_reg(u_dp_n_83),
        .mode(mode),
        .mult_out(mult_out),
        .n_flag(n_flag),
        .nxt_drack(nxt_drack),
        .nxt_dtcm_sel(\u_mem_ctl/nxt_dtcm_sel ),
        .nxt_dwack(nxt_dwack),
        .nxt_irack(\u_mem_ctl/nxt_irack ),
        .nxt_itcm_sel(\u_mem_ctl/nxt_itcm_sel ),
        .nxt_mult_out0_carry__2(nxt_mult_out0_carry__2),
        .nxt_rptr_b_ex(nxt_rptr_b_ex),
        .nxt_z_flag_mux(nxt_z_flag_mux),
        .p_1_in2_in({p_1_in2_in[23:10],p_1_in2_in[8]}),
        .\pc_reg[10]_0 (u_dp_n_384),
        .\pc_reg[11]_0 ({u_dp_n_70,u_dp_n_71}),
        .\pc_reg[11]_1 (u_dp_n_383),
        .\pc_reg[15]_0 ({u_dp_n_67,u_dp_n_68}),
        .\pc_reg[16]_0 (u_dp_n_382),
        .\pc_reg[17]_0 (u_dp_n_381),
        .\pc_reg[18]_0 (u_dp_n_380),
        .\pc_reg[19]_0 (u_dp_n_379),
        .\pc_reg[20]_0 (u_dp_n_378),
        .\pc_reg[21]_0 (u_dp_n_377),
        .\pc_reg[22]_0 (u_dp_n_376),
        .\pc_reg[23]_0 (seq_fetch_addr),
        .\pc_reg[23]_1 (u_dp_n_375),
        .\pc_reg[23]_2 ({p_0_in__0,pre_fetch_addr_1}),
        .\pc_reg[24]_0 (u_dp_n_374),
        .\pc_reg[25]_0 (u_dp_n_373),
        .\pc_reg[28]_0 (u_dp_n_372),
        .\pc_reg[29]_0 (u_dp_n_371),
        .\pc_reg[30]_0 ({au_in_a[30],au_in_a[28:26],au_in_a[24],au_in_a[15],au_in_a[12:11]}),
        .\pc_reg[30]_1 (u_dp_n_366),
        .\pc_reg[31]_0 (u_dp_n_365),
        .\pc_reg[31]_1 (u_ctrl_n_33),
        .\pc_reg[31]_2 (update_pc),
        .\pc_reg[4]_0 (u_dp_n_390),
        .\pc_reg[5]_0 (u_dp_n_389),
        .\pc_reg[6]_0 (u_dp_n_388),
        .\pc_reg[7]_0 (u_dp_n_387),
        .\pc_reg[8]_0 (u_dp_n_386),
        .\pc_reg[9]_0 (u_dp_n_385),
        .primask_i_5(u_ctrl_n_283),
        .r_amt4_ex2_reg(SYSRESETn_0),
        .r_amt4_ex2_reg_0(u_ctrl_n_273),
        .rd_mux_a_ex(rd_mux_a_ex),
        .rd_mux_a_ex_reg({mem_r_data_u[7:2],mem_r_data_u[0]}),
        .rd_mux_a_ex_reg_0(u_dp_n_227),
        .rd_mux_a_ex_reg_1(u_dp_n_228),
        .rd_mux_a_ex_reg_10(u_dp_n_257),
        .rd_mux_a_ex_reg_11(u_dp_n_258),
        .rd_mux_a_ex_reg_12(u_dp_n_261),
        .rd_mux_a_ex_reg_13(u_dp_n_262),
        .rd_mux_a_ex_reg_14(u_dp_n_263),
        .rd_mux_a_ex_reg_15(u_dp_n_264),
        .rd_mux_a_ex_reg_16(u_dp_n_266),
        .rd_mux_a_ex_reg_17(u_dp_n_267),
        .rd_mux_a_ex_reg_18(u_dp_n_268),
        .rd_mux_a_ex_reg_19(u_dp_n_269),
        .rd_mux_a_ex_reg_2(u_dp_n_229),
        .rd_mux_a_ex_reg_20(u_dp_n_270),
        .rd_mux_a_ex_reg_21(u_dp_n_271),
        .rd_mux_a_ex_reg_22(u_dp_n_272),
        .rd_mux_a_ex_reg_23(u_dp_n_273),
        .rd_mux_a_ex_reg_24(u_dp_n_274),
        .rd_mux_a_ex_reg_25(u_dp_n_275),
        .rd_mux_a_ex_reg_26(u_dp_n_276),
        .rd_mux_a_ex_reg_27(u_dp_n_277),
        .rd_mux_a_ex_reg_28(u_dp_n_278),
        .rd_mux_a_ex_reg_29(u_dp_n_279),
        .rd_mux_a_ex_reg_3(u_dp_n_230),
        .rd_mux_a_ex_reg_30(u_dp_n_280),
        .rd_mux_a_ex_reg_31(u_dp_n_281),
        .rd_mux_a_ex_reg_32(u_dp_n_285),
        .rd_mux_a_ex_reg_4(u_dp_n_231),
        .rd_mux_a_ex_reg_5(u_dp_n_250),
        .rd_mux_a_ex_reg_6(u_dp_n_251),
        .rd_mux_a_ex_reg_7(u_dp_n_252),
        .rd_mux_a_ex_reg_8(u_dp_n_253),
        .rd_mux_a_ex_reg_9(u_dp_n_256),
        .\reg_file_a_reg[0][0] (u_ctrl_n_322),
        .\reg_file_a_reg[10][0] (u_ctrl_n_317),
        .\reg_file_a_reg[11][0] (u_ctrl_n_312),
        .\reg_file_a_reg[12][0] (u_ctrl_n_316),
        .\reg_file_a_reg[13][0] (u_ctrl_n_313),
        .\reg_file_a_reg[14][0] (u_ctrl_n_315),
        .\reg_file_a_reg[1][0] (u_ctrl_n_307),
        .\reg_file_a_reg[2][0] (u_ctrl_n_321),
        .\reg_file_a_reg[3][0] (u_ctrl_n_308),
        .\reg_file_a_reg[4][0] (u_ctrl_n_320),
        .\reg_file_a_reg[5][0] (u_ctrl_n_309),
        .\reg_file_a_reg[6][0] (u_ctrl_n_319),
        .\reg_file_a_reg[7][0] (u_ctrl_n_310),
        .\reg_file_a_reg[8][0] (u_ctrl_n_318),
        .\reg_file_a_reg[9][0] (u_ctrl_n_311),
        .rf0_mux_ctl_ex(rf0_mux_ctl_ex),
        .rf_mux_ctl_ex(rf_mux_ctl_ex),
        .\rf_mux_ctl_ex_reg[2] (u_dp_n_351),
        .rf_wdata({u_ctrl_n_179,u_ctrl_n_180,u_ctrl_n_181,u_ctrl_n_182,u_ctrl_n_183,u_ctrl_n_184,u_ctrl_n_185,u_ctrl_n_186,u_ctrl_n_187,u_ctrl_n_188,u_ctrl_n_189,u_ctrl_n_190,u_ctrl_n_191,u_ctrl_n_192,u_ctrl_n_193,u_ctrl_n_194,u_ctrl_n_195,u_ctrl_n_196,u_ctrl_n_197,u_ctrl_n_198,u_ctrl_n_199,u_ctrl_n_200,u_ctrl_n_201,u_ctrl_n_202,u_ctrl_n_203,u_ctrl_n_204,u_ctrl_n_205,u_ctrl_n_206,u_ctrl_n_207,u_ctrl_n_208,rf_wdata}),
        .\rot3[30]_i_5 (imm_ex),
        .\rot3_reg[0] (u_dp_n_352),
        .\rot3_reg[24] (u_ctrl_n_93),
        .\rot3_reg[24]_0 (u_ctrl_n_94),
        .\rot3_reg[24]_1 (u_ctrl_n_272),
        .\rptr_a_ex_reg[3] ({a_reg_0[31:28],a_reg_0[25:16],a_reg_0[14:13],a_reg_0[11:3],a_reg_0[1:0]}),
        .\rptr_a_ex_reg[3]_0 (nxt_rptr_a_ex),
        .se_half_wb(se_half_wb),
        .sel_wf_c(sel_wf_c),
        .sel_wf_c_reg_0(u_ctrl_n_286),
        .sel_wf_v(sel_wf_v),
        .sel_wf_v_reg_0(u_ctrl_n_285),
        .update_n_ex(update_n_ex),
        .use_c_flag_ex(use_c_flag_ex),
        .use_imm_ex(use_imm_ex),
        .v_flag(v_flag),
        .v_flag_au(v_flag_au),
        .v_flag_au_reg_0(u_ctrl_n_290),
        .v_flag_wf(v_flag_wf),
        .v_flag_wf_reg_0(u_ctrl_n_289),
        .w_enable_ex(w_enable_ex),
        .w_u_fault_reg(u_ctrl_n_99),
        .\wdata_reg[15] (u_ctrl_n_259),
        .\wdata_reg[15]_0 (u_ctrl_n_282),
        .\wdata_reg[23] (u_ctrl_n_279),
        .wptr_ex(wptr_ex),
        .write_flags_ex(write_flags_ex),
        .z_flag(z_flag),
        .z_flag_mux_reg_0(z_flag_mux_reg),
        .ze_half_wb(ze_half_wb),
        .ze_half_wb_reg(u_dp_n_232),
        .ze_half_wb_reg_0(u_dp_n_233),
        .ze_half_wb_reg_1(u_dp_n_234),
        .ze_half_wb_reg_10(u_dp_n_243),
        .ze_half_wb_reg_11(u_dp_n_244),
        .ze_half_wb_reg_12(u_dp_n_245),
        .ze_half_wb_reg_13(u_dp_n_246),
        .ze_half_wb_reg_2(u_dp_n_235),
        .ze_half_wb_reg_3(u_dp_n_236),
        .ze_half_wb_reg_4(u_dp_n_237),
        .ze_half_wb_reg_5(u_dp_n_238),
        .ze_half_wb_reg_6(u_dp_n_239),
        .ze_half_wb_reg_7(u_dp_n_240),
        .ze_half_wb_reg_8(u_dp_n_241),
        .ze_half_wb_reg_9(u_dp_n_242),
        .zero_a_ex(zero_a_ex),
        .zero_a_ex_reg(u_dp_n_53),
        .zero_a_ex_reg_0(u_dp_n_62),
        .zero_a_ex_reg_1(u_dp_n_63),
        .zero_a_ex_reg_2(u_dp_n_64),
        .zero_a_ex_reg_3(u_dp_n_65),
        .zero_a_ex_reg_4(u_dp_n_66),
        .zero_a_ex_reg_5(u_dp_n_69),
        .zero_a_ex_reg_6(u_dp_n_72));
  design_1_CORTEXM1_AXI_0_1_cm1_fetch u_fetch
       (.HCLK(HCLK),
        .biu_commit_reg(biu_commit_reg),
        .biu_irack(biu_irack),
        .biu_rdy(biu_rdy),
        .fetch_internal(fetch_internal),
        .fetch_internal_reg_0(SYSRESETn_0),
        .hi_pre_fetch_addr(hi_pre_fetch_addr),
        .hi_pre_fetch_addr_reg_0(pre_fetch_addr_1),
        .int_rack_reg_0(u_fetch_n_18),
        .irack(irack),
        .nxt_fetch_internal(nxt_fetch_internal),
        .nxt_int_rack(nxt_int_rack),
        .rdata_fe(rdata_fe),
        .\uhalf_instr_reg[0]_0 (\uhalf_instr_reg[0] ),
        .\uhalf_instr_reg[15]_0 (instr_fe),
        .\uhalf_instr_reg[15]_1 (\uhalf_instr_reg[15] ));
endmodule

(* ORIG_REF_NAME = "cm1_ctl" *) 
module design_1_CORTEXM1_AXI_0_1_cm1_ctl
   (SYSRESETn_0,
    load_xpsr_ex,
    locked_up_reg,
    micro_code_fe,
    nvic_excpt_taken,
    instr_faulted_reg,
    int_fault_ex_reg,
    nvic_excpt_svc_valid,
    excpt_isb_de,
    rst_fptr_align_ex,
    dbg_wdata_sel_ex,
    last_uncond_phase_ex_reg_0,
    first32_ex_reg_0,
    ireq_ldpc,
    use_imm_ex,
    use_c_flag_ex,
    force_c_in_ex,
    au_a_use_pc_ex,
    zero_a_ex,
    dreq_wr_ex_reg_0,
    se_half_wb,
    ze_half_wb,
    ls_byte_ex,
    ls_half_ex,
    biu_write_reg_0,
    rf_mux_ctl_ex,
    rd_mux_a_ex,
    biu_dsb,
    rf0_mux_ctl_ex,
    fptr_align,
    micro_code_de_reg,
    bcc_first_ex_reg_0,
    first_ex_phase_reg_0,
    D,
    O,
    force_hf_reg,
    nvic_primask,
    invert_b_ex_reg_0,
    \mem_held_addr_reg[1] ,
    \mem_held_addr_reg[1]_0 ,
    S,
    \imm_ex_reg[0]_0 ,
    invert_b_ex_reg_1,
    invert_b_ex_reg_2,
    invert_b_ex_reg_3,
    invert_b_ex_reg_4,
    invert_b_ex_reg_5,
    invert_b_ex_reg_6,
    invert_b_ex_reg_7,
    use_imm_ex_reg_0,
    use_imm_ex_reg_1,
    use_imm_ex_reg_2,
    \mem_held_addr_reg[0] ,
    \swz_ctl_ex_reg[1]_0 ,
    \swz_ctl_ex_reg[0]_0 ,
    ls_byte_ex_reg_0,
    last_uncond_phase_ex_reg_1,
    \pc_reg[23] ,
    \pc_reg[15] ,
    biu_addr_mux_ctl_ex,
    \pc_reg[11] ,
    zero_a_ex_reg_0,
    nxt_fetch_internal,
    nxt_int_rack,
    last_uncond_phase_ex_reg_2,
    wptr_ex,
    first32_ex_reg_1,
    mode,
    write_flags_ex,
    update_n_ex,
    locked_up_reg_0,
    \dp_ipsr_7to2_reg[6] ,
    \dp_ipsr_7to2_reg[5] ,
    w_enable_ex,
    biu_dreq,
    nvic_excpt_fault_req,
    first_ex_phase_reg_1,
    p_1_in2_in,
    rf_wdata,
    \pc_reg[31] ,
    invert_b_ex_reg_8,
    invert_b_ex_reg_9,
    dreq_rd_ex_reg_0,
    first_ex_phase_reg_2,
    nxt_itcm_sel,
    u_fault,
    nxt_dtcm_sel,
    nxt_irack,
    ls_half_ex_reg_0,
    \wdata_mux_ctl_ex_reg[0]_0 ,
    nxt_z_flag_mux,
    m_ext,
    se_half_wb_reg_0,
    \mem_held_addr_reg[1]_1 ,
    use_imm_ex_reg_3,
    use_imm_ex_reg_4,
    use_imm_ex_reg_5,
    use_imm_ex_reg_6,
    m_invert,
    \swz_ctl_ex_reg[1]_1 ,
    \mem_held_addr_reg[1]_2 ,
    ls_half_ex_reg_1,
    \shift_op_reg[0]_0 ,
    \mem_held_addr_reg[0]_0 ,
    i_dbg_wdata_sel_ex_reg,
    \rf0_mux_ctl_ex_reg[1]_0 ,
    CO,
    pre_update_v_ex_reg_0,
    pre_update_c_ex_reg_0,
    c_flag_wf_reg,
    \rf_mux_ctl_ex_reg[2]_0 ,
    v_flag_wf_reg,
    v_flag_au_reg,
    IRQ_0_sp_1,
    \dp_ipsr_7to2_reg[7] ,
    r_hdf_actv_reg,
    nmi_actv,
    \i_svc_lvl_reg[1] ,
    \dp_ipsr_7to2_reg[4] ,
    \dp_ipsr_7to2_reg[7]_0 ,
    \dp_ipsr_7to2_reg[4]_0 ,
    int_actv,
    i_nvic_excpt_svc_valid_reg,
    hdf_actv,
    \dp_ipsr_7to2_reg[7]_1 ,
    biu_write_reg_1,
    \wptr_ex_reg[1]_0 ,
    \wptr_ex_reg[1]_1 ,
    \wptr_ex_reg[2]_0 ,
    \wptr_ex_reg[1]_2 ,
    \wptr_ex_reg[3]_0 ,
    \wptr_ex_reg[1]_3 ,
    \wptr_ex_reg[3]_1 ,
    \wptr_ex_reg[1]_4 ,
    \wptr_ex_reg[1]_5 ,
    \wptr_ex_reg[2]_1 ,
    \wptr_ex_reg[3]_2 ,
    \wptr_ex_reg[1]_6 ,
    \wptr_ex_reg[2]_2 ,
    \wptr_ex_reg[1]_7 ,
    \wptr_ex_reg[0]_0 ,
    \wptr_ex_reg[1]_8 ,
    i_dbg_wdata_sel_de_reg,
    HCLK,
    biu_rdy,
    adv_de_to_ex,
    nxt_instr_faulted,
    pf_fault_fe,
    fptr_align_reg,
    fetch_internal_reg,
    a_reg_0,
    \hold_reg2_reg[15] ,
    \hold_reg2_reg[31] ,
    \hold_reg2_reg[24] ,
    \hold_reg2_reg[8] ,
    load_fptr,
    \hold_reg2_reg[25] ,
    \hold_reg2_reg[26] ,
    \hold_reg2_reg[10] ,
    \hold_reg2_reg[27] ,
    \hold_reg2_reg[11] ,
    \hold_reg2_reg[28] ,
    \hold_reg2_reg[12] ,
    \hold_reg2_reg[29] ,
    \hold_reg2_reg[13] ,
    \hold_reg2_reg[14] ,
    \hold_reg2_reg[30] ,
    \reg_file_a[15][30]_i_2 ,
    z_flag_mux_i_22_0,
    z_flag_mux_i_22_1,
    z_flag_mux_i_22_2,
    z_flag_mux_i_21_0,
    z_flag_mux_i_21_1,
    z_flag_mux_i_11_0,
    z_flag_mux_i_11_1,
    z_flag_mux_i_16_0,
    z_flag_mux_i_16_1,
    z_flag_mux_i_16_2,
    z_flag_mux_i_16_3,
    z_flag_mux_i_6_0,
    b_reg_0,
    Q,
    \HADDR_reg[0] ,
    \hold_reg1_reg[6] ,
    \pc_reg[14] ,
    seq_fetch_addr,
    \pc_reg[13] ,
    \pc_reg[12] ,
    \pc_reg[11]_0 ,
    \pc_reg[10] ,
    \pc_reg[9] ,
    \pc_reg[8] ,
    \pc_reg[7] ,
    \pc_reg[6] ,
    \pc_reg[5] ,
    \pc_reg[4] ,
    \pc_reg[3] ,
    \pc_reg[2] ,
    SYSRESETn,
    \held_instr0_reg[15]_0 ,
    nvic_lockup,
    int_fault_ex_reg_0,
    E,
    use_dp_tbit_reg,
    z_flag,
    c_flag,
    n_flag,
    v_flag,
    excpt_ret_de_reg_0,
    \write_addr_reg[1]_0 ,
    \dp_ipsr_1to0_reg[1] ,
    \dp_ipsr_1to0_reg[1]_0 ,
    biu_wfault,
    \reg_file_a_reg[15][24] ,
    \wdata_reg[24] ,
    \HADDR_reg[27] ,
    mult_out,
    \reg_file_a_reg[15][31] ,
    \reg_file_a_reg[15][24]_0 ,
    \wdata_reg[31] ,
    \hold_reg2_reg[0] ,
    \hold_reg2_reg[1] ,
    \hold_reg2_reg[2] ,
    \hold_reg2_reg[3] ,
    \hold_reg2_reg[4] ,
    \hold_reg2_reg[5] ,
    \hold_reg2_reg[6] ,
    \hold_reg2_reg[7] ,
    \hold_reg2_reg[16] ,
    \hold_reg2_reg[17] ,
    \hold_reg2_reg[18] ,
    \hold_reg2_reg[19] ,
    \hold_reg2_reg[20] ,
    \hold_reg2_reg[21] ,
    \hold_reg2_reg[22] ,
    \hold_reg2_reg[23] ,
    \HADDR_reg[23] ,
    \HADDR_reg[22] ,
    \HADDR_reg[21] ,
    \HADDR_reg[20] ,
    \HADDR_reg[19] ,
    \HADDR_reg[18] ,
    \HADDR_reg[17] ,
    \HADDR_reg[16] ,
    \HADDR_reg[15] ,
    hi_pre_fetch_addr_reg,
    \reg_file_a_reg[15][31]_0 ,
    \biu_addr_31_29_reg_reg[30] ,
    \HADDR_reg[27]_0 ,
    \HADDR_reg[26] ,
    \HADDR_reg[25] ,
    \HADDR_reg[24] ,
    en_itcm_core,
    itcm_sel_reg,
    dtcm_sel_reg,
    dtcm_sel_reg_0,
    \reg_file_a_reg[15][15] ,
    \dp_ipsr_7to2_reg[7]_2 ,
    \dp_ipsr_7to2_reg[5]_0 ,
    \dp_ipsr_7to2_reg[4]_1 ,
    \dp_ipsr_7to2_reg[3] ,
    \dp_ipsr_7to2_reg[2] ,
    \dp_ipsr_1to0_reg[1]_1 ,
    \dp_ipsr_1to0[1]_i_7 ,
    \reg_file_a_reg[0][0] ,
    \reg_file_a_reg[0][0]_0 ,
    \reg_file_a_reg[0][0]_1 ,
    primask_i_3,
    \dp_ipsr_1to0_reg[0] ,
    \wdata_reg[25] ,
    \reg_file_a_reg[0][25] ,
    \wdata_reg[28] ,
    \reg_file_a_reg[15][28] ,
    \reg_file_a_reg[15][28]_0 ,
    \wdata_reg[29] ,
    \reg_file_a_reg[15][29] ,
    \reg_file_a_reg[15][29]_0 ,
    \wdata_reg[30] ,
    \reg_file_a_reg[15][30] ,
    \reg_file_a_reg[15][30]_0 ,
    \wdata_reg[31]_0 ,
    \reg_file_a_reg[15][31]_1 ,
    \reg_file_a_reg[15][31]_2 ,
    \reg_file_a_reg[15][9] ,
    z_flag_mux_reg,
    z_flag_mux_reg_0,
    \hold_reg1_reg[15] ,
    \reg_file_a_reg[15][23] ,
    \reg_file_a[15][31]_i_3 ,
    \reg_file_a_reg[15][16] ,
    \reg_file_a_reg[15][17] ,
    \reg_file_a_reg[15][18] ,
    \reg_file_a_reg[15][19] ,
    \reg_file_a_reg[15][20] ,
    \reg_file_a_reg[15][21] ,
    \reg_file_a_reg[15][22] ,
    \reg_file_a_reg[0][25]_0 ,
    \reg_file_a_reg[0][25]_1 ,
    \reg_file_a_reg[15][26] ,
    \reg_file_a_reg[15][27] ,
    z_flag_mux_i_6_1,
    \reg_file_a[15][29]_i_2 ,
    \reg_file_a[15][28]_i_2 ,
    \reg_file_a_reg[15][27]_0 ,
    \reg_file_a_reg[15][26]_0 ,
    z_flag_mux_i_6_2,
    \reg_file_a[15][25]_i_2 ,
    \reg_file_a[15][24]_i_2 ,
    \reg_file_a_reg[15][23]_0 ,
    z_flag_mux_i_22_3,
    \reg_file_a_reg[15][22]_0 ,
    \reg_file_a_reg[15][21]_0 ,
    \reg_file_a_reg[15][20]_0 ,
    \reg_file_a_reg[15][19]_0 ,
    \reg_file_a_reg[15][19]_1 ,
    z_flag_mux_i_21_2,
    fptr_wdata,
    \reg_file_a_reg[15][18]_0 ,
    z_flag_mux_i_21_3,
    \reg_file_a_reg[15][15]_0 ,
    \reg_file_a_reg[15][14] ,
    \reg_file_a_reg[15][13] ,
    \reg_file_a_reg[15][12] ,
    \reg_file_a_reg[15][12]_0 ,
    \reg_file_a_reg[15][11] ,
    z_flag_mux_i_11_2,
    \reg_file_a_reg[15][10] ,
    z_flag_mux_i_11_3,
    \reg_file_a_reg[15][8] ,
    \dp_ipsr_7to2_reg[7]_3 ,
    \dp_ipsr_7to2_reg[6]_0 ,
    \wdata_reg[26] ,
    \wdata_reg[27] ,
    \reg_file_a[15][10]_i_2 ,
    \reg_file_a[15][16]_i_2 ,
    \reg_file_a[15][17]_i_2 ,
    \reg_file_a[15][23]_i_2 ,
    \mem_held_addr_reg[11] ,
    \mem_held_addr_reg[15] ,
    \mem_held_addr_reg[19] ,
    \mem_held_addr_reg[23] ,
    sel_wf_v,
    sel_wf_c,
    c_flag_wf,
    c_flag_mux_reg,
    c_flag_mux_reg_0,
    c_flag_mux,
    v_flag_wf,
    v_flag_au,
    IRQ,
    int_prev,
    \i_pend_state_reg[0] ,
    \i_pend_state_reg[0]_0 ,
    NMI,
    \i_pend_state_reg[1] ,
    irq_lvl,
    svc_lvl_0,
    \r_int_actv_lvl_reg[1] ,
    \r_int_actv_lvl_reg[1]_0 ,
    r_hdf_actv,
    r_nmi_actv,
    \HRDATA_reg[5] ,
    \HRDATA_reg[5]_0 ,
    \HRDATA_reg[2] ,
    \i_pend_state_reg[1]_0 ,
    \latched_excpt_num_reg[4] ,
    \pc_ex_reg[0]_0 );
  output SYSRESETn_0;
  output load_xpsr_ex;
  output locked_up_reg;
  output micro_code_fe;
  output nvic_excpt_taken;
  output instr_faulted_reg;
  output int_fault_ex_reg;
  output nvic_excpt_svc_valid;
  output excpt_isb_de;
  output rst_fptr_align_ex;
  output dbg_wdata_sel_ex;
  output last_uncond_phase_ex_reg_0;
  output first32_ex_reg_0;
  output ireq_ldpc;
  output use_imm_ex;
  output use_c_flag_ex;
  output force_c_in_ex;
  output au_a_use_pc_ex;
  output zero_a_ex;
  output dreq_wr_ex_reg_0;
  output se_half_wb;
  output ze_half_wb;
  output ls_byte_ex;
  output ls_half_ex;
  output biu_write_reg_0;
  output [0:0]rf_mux_ctl_ex;
  output rd_mux_a_ex;
  output biu_dsb;
  output [1:0]rf0_mux_ctl_ex;
  output fptr_align;
  output micro_code_de_reg;
  output bcc_first_ex_reg_0;
  output first_ex_phase_reg_0;
  output [28:0]D;
  output [3:0]O;
  output force_hf_reg;
  output nvic_primask;
  output [7:0]invert_b_ex_reg_0;
  output \mem_held_addr_reg[1] ;
  output \mem_held_addr_reg[1]_0 ;
  output [0:0]S;
  output [0:0]\imm_ex_reg[0]_0 ;
  output invert_b_ex_reg_1;
  output invert_b_ex_reg_2;
  output invert_b_ex_reg_3;
  output invert_b_ex_reg_4;
  output invert_b_ex_reg_5;
  output invert_b_ex_reg_6;
  output invert_b_ex_reg_7;
  output [4:0]use_imm_ex_reg_0;
  output use_imm_ex_reg_1;
  output use_imm_ex_reg_2;
  output \mem_held_addr_reg[0] ;
  output [1:0]\swz_ctl_ex_reg[1]_0 ;
  output \swz_ctl_ex_reg[0]_0 ;
  output ls_byte_ex_reg_0;
  output [3:0]last_uncond_phase_ex_reg_1;
  output [22:0]\pc_reg[23] ;
  output [3:0]\pc_reg[15] ;
  output [0:0]biu_addr_mux_ctl_ex;
  output [3:0]\pc_reg[11] ;
  output [3:0]zero_a_ex_reg_0;
  output nxt_fetch_internal;
  output nxt_int_rack;
  output [3:0]last_uncond_phase_ex_reg_2;
  output [3:0]wptr_ex;
  output first32_ex_reg_1;
  output mode;
  output write_flags_ex;
  output update_n_ex;
  output [0:0]locked_up_reg_0;
  output \dp_ipsr_7to2_reg[6] ;
  output [1:0]\dp_ipsr_7to2_reg[5] ;
  output w_enable_ex;
  output biu_dreq;
  output nvic_excpt_fault_req;
  output first_ex_phase_reg_1;
  output [16:0]p_1_in2_in;
  output [31:0]rf_wdata;
  output [31:0]\pc_reg[31] ;
  output [3:0]invert_b_ex_reg_8;
  output [3:0]invert_b_ex_reg_9;
  output dreq_rd_ex_reg_0;
  output [0:0]first_ex_phase_reg_2;
  output nxt_itcm_sel;
  output u_fault;
  output nxt_dtcm_sel;
  output nxt_irack;
  output [1:0]ls_half_ex_reg_0;
  output \wdata_mux_ctl_ex_reg[0]_0 ;
  output nxt_z_flag_mux;
  output m_ext;
  output [8:0]se_half_wb_reg_0;
  output \mem_held_addr_reg[1]_1 ;
  output use_imm_ex_reg_3;
  output use_imm_ex_reg_4;
  output use_imm_ex_reg_5;
  output use_imm_ex_reg_6;
  output m_invert;
  output \swz_ctl_ex_reg[1]_1 ;
  output \mem_held_addr_reg[1]_2 ;
  output ls_half_ex_reg_1;
  output \shift_op_reg[0]_0 ;
  output \mem_held_addr_reg[0]_0 ;
  output i_dbg_wdata_sel_ex_reg;
  output \rf0_mux_ctl_ex_reg[1]_0 ;
  output [0:0]CO;
  output pre_update_v_ex_reg_0;
  output pre_update_c_ex_reg_0;
  output c_flag_wf_reg;
  output \rf_mux_ctl_ex_reg[2]_0 ;
  output v_flag_wf_reg;
  output v_flag_au_reg;
  output IRQ_0_sp_1;
  output \dp_ipsr_7to2_reg[7] ;
  output [1:0]r_hdf_actv_reg;
  output nmi_actv;
  output [1:0]\i_svc_lvl_reg[1] ;
  output \dp_ipsr_7to2_reg[4] ;
  output \dp_ipsr_7to2_reg[7]_0 ;
  output \dp_ipsr_7to2_reg[4]_0 ;
  output int_actv;
  output i_nvic_excpt_svc_valid_reg;
  output hdf_actv;
  output [1:0]\dp_ipsr_7to2_reg[7]_1 ;
  output biu_write_reg_1;
  output [0:0]\wptr_ex_reg[1]_0 ;
  output [0:0]\wptr_ex_reg[1]_1 ;
  output [0:0]\wptr_ex_reg[2]_0 ;
  output [0:0]\wptr_ex_reg[1]_2 ;
  output [0:0]\wptr_ex_reg[3]_0 ;
  output [0:0]\wptr_ex_reg[1]_3 ;
  output [0:0]\wptr_ex_reg[3]_1 ;
  output [0:0]\wptr_ex_reg[1]_4 ;
  output [0:0]\wptr_ex_reg[1]_5 ;
  output [0:0]\wptr_ex_reg[2]_1 ;
  output [0:0]\wptr_ex_reg[3]_2 ;
  output [0:0]\wptr_ex_reg[1]_6 ;
  output [0:0]\wptr_ex_reg[2]_2 ;
  output [0:0]\wptr_ex_reg[1]_7 ;
  output [0:0]\wptr_ex_reg[0]_0 ;
  output [0:0]\wptr_ex_reg[1]_8 ;
  input i_dbg_wdata_sel_de_reg;
  input HCLK;
  input biu_rdy;
  input adv_de_to_ex;
  input nxt_instr_faulted;
  input pf_fault_fe;
  input fptr_align_reg;
  input fetch_internal_reg;
  input [26:0]a_reg_0;
  input \hold_reg2_reg[15] ;
  input \hold_reg2_reg[31] ;
  input \hold_reg2_reg[24] ;
  input \hold_reg2_reg[8] ;
  input load_fptr;
  input \hold_reg2_reg[25] ;
  input \hold_reg2_reg[26] ;
  input \hold_reg2_reg[10] ;
  input \hold_reg2_reg[27] ;
  input \hold_reg2_reg[11] ;
  input \hold_reg2_reg[28] ;
  input \hold_reg2_reg[12] ;
  input \hold_reg2_reg[29] ;
  input \hold_reg2_reg[13] ;
  input \hold_reg2_reg[14] ;
  input \hold_reg2_reg[30] ;
  input \reg_file_a[15][30]_i_2 ;
  input z_flag_mux_i_22_0;
  input z_flag_mux_i_22_1;
  input z_flag_mux_i_22_2;
  input z_flag_mux_i_21_0;
  input z_flag_mux_i_21_1;
  input z_flag_mux_i_11_0;
  input z_flag_mux_i_11_1;
  input z_flag_mux_i_16_0;
  input z_flag_mux_i_16_1;
  input z_flag_mux_i_16_2;
  input z_flag_mux_i_16_3;
  input [7:0]z_flag_mux_i_6_0;
  input [31:0]b_reg_0;
  input [30:0]Q;
  input \HADDR_reg[0] ;
  input \hold_reg1_reg[6] ;
  input \pc_reg[14] ;
  input [22:0]seq_fetch_addr;
  input \pc_reg[13] ;
  input \pc_reg[12] ;
  input \pc_reg[11]_0 ;
  input \pc_reg[10] ;
  input \pc_reg[9] ;
  input \pc_reg[8] ;
  input \pc_reg[7] ;
  input \pc_reg[6] ;
  input \pc_reg[5] ;
  input \pc_reg[4] ;
  input \pc_reg[3] ;
  input \pc_reg[2] ;
  input SYSRESETn;
  input [15:0]\held_instr0_reg[15]_0 ;
  input nvic_lockup;
  input int_fault_ex_reg_0;
  input [0:0]E;
  input use_dp_tbit_reg;
  input z_flag;
  input c_flag;
  input n_flag;
  input v_flag;
  input excpt_ret_de_reg_0;
  input \write_addr_reg[1]_0 ;
  input \dp_ipsr_1to0_reg[1] ;
  input \dp_ipsr_1to0_reg[1]_0 ;
  input biu_wfault;
  input \reg_file_a_reg[15][24] ;
  input \wdata_reg[24] ;
  input [3:0]\HADDR_reg[27] ;
  input [15:0]mult_out;
  input [16:0]\reg_file_a_reg[15][31] ;
  input \reg_file_a_reg[15][24]_0 ;
  input [20:0]\wdata_reg[31] ;
  input \hold_reg2_reg[0] ;
  input \hold_reg2_reg[1] ;
  input \hold_reg2_reg[2] ;
  input \hold_reg2_reg[3] ;
  input \hold_reg2_reg[4] ;
  input \hold_reg2_reg[5] ;
  input \hold_reg2_reg[6] ;
  input \hold_reg2_reg[7] ;
  input \hold_reg2_reg[16] ;
  input \hold_reg2_reg[17] ;
  input \hold_reg2_reg[18] ;
  input \hold_reg2_reg[19] ;
  input \hold_reg2_reg[20] ;
  input \hold_reg2_reg[21] ;
  input \hold_reg2_reg[22] ;
  input \hold_reg2_reg[23] ;
  input \HADDR_reg[23] ;
  input \HADDR_reg[22] ;
  input \HADDR_reg[21] ;
  input \HADDR_reg[20] ;
  input \HADDR_reg[19] ;
  input \HADDR_reg[18] ;
  input \HADDR_reg[17] ;
  input \HADDR_reg[16] ;
  input \HADDR_reg[15] ;
  input hi_pre_fetch_addr_reg;
  input [3:0]\reg_file_a_reg[15][31]_0 ;
  input \biu_addr_31_29_reg_reg[30] ;
  input \HADDR_reg[27]_0 ;
  input \HADDR_reg[26] ;
  input \HADDR_reg[25] ;
  input \HADDR_reg[24] ;
  input [1:0]en_itcm_core;
  input itcm_sel_reg;
  input dtcm_sel_reg;
  input dtcm_sel_reg_0;
  input [15:0]\reg_file_a_reg[15][15] ;
  input [6:0]\dp_ipsr_7to2_reg[7]_2 ;
  input \dp_ipsr_7to2_reg[5]_0 ;
  input \dp_ipsr_7to2_reg[4]_1 ;
  input \dp_ipsr_7to2_reg[3] ;
  input \dp_ipsr_7to2_reg[2] ;
  input \dp_ipsr_1to0_reg[1]_1 ;
  input \dp_ipsr_1to0[1]_i_7 ;
  input \reg_file_a_reg[0][0] ;
  input \reg_file_a_reg[0][0]_0 ;
  input \reg_file_a_reg[0][0]_1 ;
  input primask_i_3;
  input \dp_ipsr_1to0_reg[0] ;
  input \wdata_reg[25] ;
  input \reg_file_a_reg[0][25] ;
  input \wdata_reg[28] ;
  input \reg_file_a_reg[15][28] ;
  input \reg_file_a_reg[15][28]_0 ;
  input \wdata_reg[29] ;
  input \reg_file_a_reg[15][29] ;
  input \reg_file_a_reg[15][29]_0 ;
  input \wdata_reg[30] ;
  input \reg_file_a_reg[15][30] ;
  input \reg_file_a_reg[15][30]_0 ;
  input \wdata_reg[31]_0 ;
  input \reg_file_a_reg[15][31]_1 ;
  input \reg_file_a_reg[15][31]_2 ;
  input \reg_file_a_reg[15][9] ;
  input z_flag_mux_reg;
  input z_flag_mux_reg_0;
  input \hold_reg1_reg[15] ;
  input \reg_file_a_reg[15][23] ;
  input \reg_file_a[15][31]_i_3 ;
  input \reg_file_a_reg[15][16] ;
  input \reg_file_a_reg[15][17] ;
  input \reg_file_a_reg[15][18] ;
  input \reg_file_a_reg[15][19] ;
  input \reg_file_a_reg[15][20] ;
  input \reg_file_a_reg[15][21] ;
  input \reg_file_a_reg[15][22] ;
  input \reg_file_a_reg[0][25]_0 ;
  input \reg_file_a_reg[0][25]_1 ;
  input \reg_file_a_reg[15][26] ;
  input \reg_file_a_reg[15][27] ;
  input z_flag_mux_i_6_1;
  input \reg_file_a[15][29]_i_2 ;
  input \reg_file_a[15][28]_i_2 ;
  input \reg_file_a_reg[15][27]_0 ;
  input \reg_file_a_reg[15][26]_0 ;
  input z_flag_mux_i_6_2;
  input \reg_file_a[15][25]_i_2 ;
  input \reg_file_a[15][24]_i_2 ;
  input \reg_file_a_reg[15][23]_0 ;
  input z_flag_mux_i_22_3;
  input \reg_file_a_reg[15][22]_0 ;
  input \reg_file_a_reg[15][21]_0 ;
  input \reg_file_a_reg[15][20]_0 ;
  input \reg_file_a_reg[15][19]_0 ;
  input \reg_file_a_reg[15][19]_1 ;
  input z_flag_mux_i_21_2;
  input fptr_wdata;
  input \reg_file_a_reg[15][18]_0 ;
  input z_flag_mux_i_21_3;
  input \reg_file_a_reg[15][15]_0 ;
  input \reg_file_a_reg[15][14] ;
  input \reg_file_a_reg[15][13] ;
  input \reg_file_a_reg[15][12] ;
  input \reg_file_a_reg[15][12]_0 ;
  input \reg_file_a_reg[15][11] ;
  input z_flag_mux_i_11_2;
  input \reg_file_a_reg[15][10] ;
  input z_flag_mux_i_11_3;
  input \reg_file_a_reg[15][8] ;
  input \dp_ipsr_7to2_reg[7]_3 ;
  input \dp_ipsr_7to2_reg[6]_0 ;
  input \wdata_reg[26] ;
  input \wdata_reg[27] ;
  input \reg_file_a[15][10]_i_2 ;
  input \reg_file_a[15][16]_i_2 ;
  input \reg_file_a[15][17]_i_2 ;
  input \reg_file_a[15][23]_i_2 ;
  input [1:0]\mem_held_addr_reg[11] ;
  input [1:0]\mem_held_addr_reg[15] ;
  input [0:0]\mem_held_addr_reg[19] ;
  input [0:0]\mem_held_addr_reg[23] ;
  input sel_wf_v;
  input sel_wf_c;
  input c_flag_wf;
  input [0:0]c_flag_mux_reg;
  input c_flag_mux_reg_0;
  input c_flag_mux;
  input v_flag_wf;
  input v_flag_au;
  input [0:0]IRQ;
  input [1:0]int_prev;
  input \i_pend_state_reg[0] ;
  input [0:0]\i_pend_state_reg[0]_0 ;
  input NMI;
  input [1:0]\i_pend_state_reg[1] ;
  input [1:0]irq_lvl;
  input [1:0]svc_lvl_0;
  input [1:0]\r_int_actv_lvl_reg[1] ;
  input [1:0]\r_int_actv_lvl_reg[1]_0 ;
  input r_hdf_actv;
  input r_nmi_actv;
  input \HRDATA_reg[5] ;
  input \HRDATA_reg[5]_0 ;
  input \HRDATA_reg[2] ;
  input \i_pend_state_reg[1]_0 ;
  input [4:0]\latched_excpt_num_reg[4] ;
  input [0:0]\pc_ex_reg[0]_0 ;

  wire [0:0]CO;
  wire [28:0]D;
  wire [0:0]E;
  wire \HADDR_reg[0] ;
  wire \HADDR_reg[15] ;
  wire \HADDR_reg[16] ;
  wire \HADDR_reg[17] ;
  wire \HADDR_reg[18] ;
  wire \HADDR_reg[19] ;
  wire \HADDR_reg[20] ;
  wire \HADDR_reg[21] ;
  wire \HADDR_reg[22] ;
  wire \HADDR_reg[23] ;
  wire \HADDR_reg[24] ;
  wire \HADDR_reg[25] ;
  wire \HADDR_reg[26] ;
  wire [3:0]\HADDR_reg[27] ;
  wire \HADDR_reg[27]_0 ;
  wire HCLK;
  wire \HRDATA_reg[2] ;
  wire \HRDATA_reg[5] ;
  wire \HRDATA_reg[5]_0 ;
  wire [0:0]IRQ;
  wire IRQ_0_sn_1;
  wire NMI;
  wire [3:0]O;
  wire [30:0]Q;
  wire [0:0]S;
  wire SYSRESETn;
  wire SYSRESETn_0;
  wire [26:0]a_reg_0;
  wire a_use_pc;
  wire adv_de_to_ex;
  wire adv_fe_to_de;
  wire any_dsb_ex0;
  wire au_a_use_pc_ex;
  wire au_a_use_pc_ex_i_2_n_0;
  wire au_a_use_pc_ex_i_3_n_0;
  wire au_a_use_pc_ex_i_4_n_0;
  wire au_a_use_pc_ex_i_5_n_0;
  wire au_b_use_pc_ex;
  wire au_b_use_pc_ex_i_2_n_0;
  wire au_b_use_pc_ex_i_3_n_0;
  wire au_b_use_pc_ex_i_4_n_0;
  wire [31:0]b_reg_0;
  wire b_use_pc;
  wire bcc_first_ex;
  wire bcc_first_ex_i_2_n_0;
  wire bcc_first_ex_i_3_n_0;
  wire bcc_first_ex_reg_0;
  wire \biu_addr_31_29_reg_reg[30] ;
  wire [0:0]biu_addr_mux_ctl_ex;
  wire biu_commit_reg_i_11_n_0;
  wire biu_dreq;
  wire biu_dsb;
  wire biu_rdy;
  wire biu_wfault;
  wire biu_write_reg_0;
  wire biu_write_reg_1;
  wire br_first_ex;
  wire br_lr_ex;
  wire br_lr_ex_i_2_n_0;
  wire branch_ex;
  wire branch_ex0;
  wire branch_ex_i_3_n_0;
  wire branching_ex;
  wire c_flag;
  wire c_flag_mux;
  wire c_flag_mux_i_3_n_0;
  wire [0:0]c_flag_mux_reg;
  wire c_flag_mux_reg_0;
  wire c_flag_wf;
  wire c_flag_wf_i_3_n_0;
  wire c_flag_wf_reg;
  wire cc_inv_z;
  wire \cond_ex_reg_n_0_[0] ;
  wire [1:0]count;
  wire cps_data;
  wire cps_data_ex;
  wire cps_de;
  wire cps_ex;
  wire cps_ex_i_2_n_0;
  wire [3:0]cycle_count_ex;
  wire \cycle_count_ex[0]_i_1_n_0 ;
  wire \cycle_count_ex[1]_i_1_n_0 ;
  wire \cycle_count_ex[2]_i_1_n_0 ;
  wire \cycle_count_ex[3]_i_1_n_0 ;
  wire \cycle_count_ex[3]_i_2_n_0 ;
  wire dbg_wdata_sel_de;
  wire dbg_wdata_sel_ex;
  wire \dp_ipsr_1to0[1]_i_20_n_0 ;
  wire \dp_ipsr_1to0[1]_i_23_n_0 ;
  wire \dp_ipsr_1to0[1]_i_24_n_0 ;
  wire \dp_ipsr_1to0[1]_i_4_n_0 ;
  wire \dp_ipsr_1to0[1]_i_7 ;
  wire \dp_ipsr_1to0_reg[0] ;
  wire \dp_ipsr_1to0_reg[1] ;
  wire \dp_ipsr_1to0_reg[1]_0 ;
  wire \dp_ipsr_1to0_reg[1]_1 ;
  wire \dp_ipsr_7to2[3]_i_3_n_0 ;
  wire \dp_ipsr_7to2[4]_i_3_n_0 ;
  wire \dp_ipsr_7to2[5]_i_3_n_0 ;
  wire \dp_ipsr_7to2[6]_i_2_n_0 ;
  wire \dp_ipsr_7to2[6]_i_3_n_0 ;
  wire \dp_ipsr_7to2[6]_i_4_n_0 ;
  wire \dp_ipsr_7to2[7]_i_2_n_0 ;
  wire \dp_ipsr_7to2[7]_i_3_n_0 ;
  wire \dp_ipsr_7to2[7]_i_4_n_0 ;
  wire \dp_ipsr_7to2_reg[2] ;
  wire \dp_ipsr_7to2_reg[3] ;
  wire \dp_ipsr_7to2_reg[4] ;
  wire \dp_ipsr_7to2_reg[4]_0 ;
  wire \dp_ipsr_7to2_reg[4]_1 ;
  wire [1:0]\dp_ipsr_7to2_reg[5] ;
  wire \dp_ipsr_7to2_reg[5]_0 ;
  wire \dp_ipsr_7to2_reg[6] ;
  wire \dp_ipsr_7to2_reg[6]_0 ;
  wire \dp_ipsr_7to2_reg[7] ;
  wire \dp_ipsr_7to2_reg[7]_0 ;
  wire [1:0]\dp_ipsr_7to2_reg[7]_1 ;
  wire [6:0]\dp_ipsr_7to2_reg[7]_2 ;
  wire \dp_ipsr_7to2_reg[7]_3 ;
  wire dp_tbit_reg_i_5_n_0;
  wire dp_tbit_reg_i_7_n_0;
  wire dreq_rd_ex;
  wire dreq_rd_ex_i_2_n_0;
  wire dreq_rd_ex_reg_0;
  wire dreq_wr_ex_i_2_n_0;
  wire dreq_wr_ex_i_3_n_0;
  wire dreq_wr_ex_reg_0;
  wire dtcm_sel_reg;
  wire dtcm_sel_reg_0;
  wire [1:0]en_itcm_core;
  wire excpt_isb_de;
  wire excpt_ret_de;
  wire excpt_ret_de_i_3_n_0;
  wire excpt_ret_de_reg_0;
  wire excpt_ret_fe;
  wire fetch_internal_reg;
  wire fetch_phase;
  wire first32_de;
  wire first32_ex_i_3_n_0;
  wire first32_ex_reg_0;
  wire first32_ex_reg_1;
  wire first_ex_phase;
  wire first_ex_phase_reg_0;
  wire first_ex_phase_reg_1;
  wire [0:0]first_ex_phase_reg_2;
  wire force_c_in_ex;
  wire force_c_in_ex_i_2_n_0;
  wire force_c_in_ex_i_3_n_0;
  wire force_c_in_ex_i_4_n_0;
  wire force_c_in_ex_i_5_n_0;
  wire force_hf_reg;
  wire fptr_align;
  wire fptr_align_reg;
  wire fptr_wdata;
  wire \genblk3[1].ram_block_reg_0_0_i_37_n_0 ;
  wire hdf_actv;
  wire held_fault0;
  wire held_fault1;
  wire [15:0]held_instr0;
  wire held_instr00;
  wire \held_instr0[15]_i_5_n_0 ;
  wire [15:0]\held_instr0_reg[15]_0 ;
  wire [15:0]held_instr1;
  wire held_instr10;
  wire hi_pre_fetch_addr_reg;
  wire \hold_reg1_reg[15] ;
  wire \hold_reg1_reg[6] ;
  wire \hold_reg2_reg[0] ;
  wire \hold_reg2_reg[10] ;
  wire \hold_reg2_reg[11] ;
  wire \hold_reg2_reg[12] ;
  wire \hold_reg2_reg[13] ;
  wire \hold_reg2_reg[14] ;
  wire \hold_reg2_reg[15] ;
  wire \hold_reg2_reg[16] ;
  wire \hold_reg2_reg[17] ;
  wire \hold_reg2_reg[18] ;
  wire \hold_reg2_reg[19] ;
  wire \hold_reg2_reg[1] ;
  wire \hold_reg2_reg[20] ;
  wire \hold_reg2_reg[21] ;
  wire \hold_reg2_reg[22] ;
  wire \hold_reg2_reg[23] ;
  wire \hold_reg2_reg[24] ;
  wire \hold_reg2_reg[25] ;
  wire \hold_reg2_reg[26] ;
  wire \hold_reg2_reg[27] ;
  wire \hold_reg2_reg[28] ;
  wire \hold_reg2_reg[29] ;
  wire \hold_reg2_reg[2] ;
  wire \hold_reg2_reg[30] ;
  wire \hold_reg2_reg[31] ;
  wire \hold_reg2_reg[3] ;
  wire \hold_reg2_reg[4] ;
  wire \hold_reg2_reg[5] ;
  wire \hold_reg2_reg[6] ;
  wire \hold_reg2_reg[7] ;
  wire \hold_reg2_reg[8] ;
  wire i_dbg_wdata_sel_de_reg;
  wire i_dbg_wdata_sel_ex_reg;
  wire i_nvic_excpt_svc_valid_reg;
  wire i_nxt_mul_last_phase_ex_i_1_n_0;
  wire i_nxt_mul_last_phase_ex_reg_n_0;
  wire \i_pend_state_reg[0] ;
  wire [0:0]\i_pend_state_reg[0]_0 ;
  wire [1:0]\i_pend_state_reg[1] ;
  wire \i_pend_state_reg[1]_0 ;
  wire [1:0]\i_svc_lvl_reg[1] ;
  wire ifetch_i_2_n_0;
  wire ifetch_i_7_n_0;
  wire [29:1]imm_ex;
  wire \imm_ex[0]_i_2_n_0 ;
  wire \imm_ex[0]_i_3_n_0 ;
  wire \imm_ex[0]_i_4_n_0 ;
  wire \imm_ex[0]_i_5_n_0 ;
  wire \imm_ex[0]_i_6_n_0 ;
  wire \imm_ex[0]_i_7_n_0 ;
  wire \imm_ex[11]_i_2_n_0 ;
  wire \imm_ex[11]_i_3_n_0 ;
  wire \imm_ex[11]_i_4_n_0 ;
  wire \imm_ex[1]_i_2_n_0 ;
  wire \imm_ex[1]_i_3_n_0 ;
  wire \imm_ex[23]_i_2_n_0 ;
  wire \imm_ex[29]_i_1_n_0 ;
  wire \imm_ex[29]_i_3_n_0 ;
  wire \imm_ex[29]_i_4_n_0 ;
  wire \imm_ex[29]_i_5_n_0 ;
  wire \imm_ex[2]_i_2_n_0 ;
  wire \imm_ex[2]_i_3_n_0 ;
  wire \imm_ex[2]_i_4_n_0 ;
  wire \imm_ex[2]_i_5_n_0 ;
  wire \imm_ex[2]_i_6_n_0 ;
  wire \imm_ex[3]_i_2_n_0 ;
  wire \imm_ex[3]_i_3_n_0 ;
  wire \imm_ex[3]_i_4_n_0 ;
  wire \imm_ex[3]_i_5_n_0 ;
  wire \imm_ex[3]_i_6_n_0 ;
  wire \imm_ex[4]_i_2_n_0 ;
  wire \imm_ex[4]_i_3_n_0 ;
  wire \imm_ex[4]_i_4_n_0 ;
  wire \imm_ex[4]_i_5_n_0 ;
  wire \imm_ex[4]_i_6_n_0 ;
  wire \imm_ex[5]_i_2_n_0 ;
  wire \imm_ex[5]_i_3_n_0 ;
  wire \imm_ex[5]_i_4_n_0 ;
  wire \imm_ex[5]_i_5_n_0 ;
  wire \imm_ex[5]_i_7_n_0 ;
  wire \imm_ex[5]_i_8_n_0 ;
  wire \imm_ex[6]_i_2_n_0 ;
  wire \imm_ex[6]_i_3_n_0 ;
  wire \imm_ex[7]_i_2_n_0 ;
  wire \imm_ex[7]_i_3_n_0 ;
  wire \imm_ex[7]_i_4_n_0 ;
  wire \imm_ex[7]_i_5_n_0 ;
  wire \imm_ex[7]_i_6_n_0 ;
  wire \imm_ex[7]_i_7_n_0 ;
  wire \imm_ex[8]_i_2_n_0 ;
  wire \imm_ex[9]_i_2_n_0 ;
  wire \imm_ex[9]_i_3_n_0 ;
  wire \imm_ex[9]_i_4_n_0 ;
  wire [0:0]\imm_ex_reg[0]_0 ;
  wire \imm_ex_reg[5]_i_6_n_0 ;
  wire \instr_de[0]_i_2_n_0 ;
  wire \instr_de[10]_i_3_n_0 ;
  wire \instr_de[11]_i_2_n_0 ;
  wire \instr_de[12]_i_3_n_0 ;
  wire \instr_de[13]_i_3_n_0 ;
  wire \instr_de[14]_i_2_n_0 ;
  wire \instr_de[15]_i_4_n_0 ;
  wire \instr_de[1]_i_4_n_0 ;
  wire \instr_de[2]_i_3_n_0 ;
  wire \instr_de[3]_i_3_n_0 ;
  wire \instr_de[4]_i_4_n_0 ;
  wire \instr_de[5]_i_3_n_0 ;
  wire \instr_de[6]_i_3_n_0 ;
  wire \instr_de[7]_i_3_n_0 ;
  wire \instr_de[8]_i_3_n_0 ;
  wire \instr_de[9]_i_3_n_0 ;
  wire \instr_de_reg_n_0_[10] ;
  wire \instr_de_reg_n_0_[11] ;
  wire \instr_de_reg_n_0_[12] ;
  wire \instr_de_reg_n_0_[13] ;
  wire \instr_de_reg_n_0_[14] ;
  wire \instr_de_reg_n_0_[15] ;
  wire \instr_de_reg_n_0_[3] ;
  wire \instr_de_reg_n_0_[5] ;
  wire \instr_de_reg_n_0_[6] ;
  wire \instr_de_reg_n_0_[7] ;
  wire \instr_de_reg_n_0_[9] ;
  wire instr_faulted_reg;
  wire int_actv;
  wire int_fault_ex_reg;
  wire int_fault_ex_reg_0;
  wire [1:0]int_prev;
  wire invert_b_ex;
  wire invert_b_ex2;
  wire invert_b_ex2_i_3_n_0;
  wire invert_b_ex2_i_4_n_0;
  wire invert_b_ex_i_2_n_0;
  wire [7:0]invert_b_ex_reg_0;
  wire invert_b_ex_reg_1;
  wire invert_b_ex_reg_2;
  wire invert_b_ex_reg_3;
  wire invert_b_ex_reg_4;
  wire invert_b_ex_reg_5;
  wire invert_b_ex_reg_6;
  wire invert_b_ex_reg_7;
  wire [3:0]invert_b_ex_reg_8;
  wire [3:0]invert_b_ex_reg_9;
  wire ireq_ldpc;
  wire [1:0]irq_lvl;
  wire itcm_sel_i_2_n_0;
  wire itcm_sel_reg;
  wire last_phase_ex;
  wire last_uncond_phase_ex_i_5_n_0;
  wire last_uncond_phase_ex_reg_0;
  wire [3:0]last_uncond_phase_ex_reg_1;
  wire [3:0]last_uncond_phase_ex_reg_2;
  wire [4:0]\latched_excpt_num_reg[4] ;
  wire ld_slow_ex;
  wire ldm_base;
  wire ldm_base_load;
  wire ldm_base_load_i_2_n_0;
  wire ldm_base_loaded;
  wire ldm_d_done_ex;
  wire ldm_d_done_ex_i_1_n_0;
  wire ldm_pop_de;
  wire ldm_pop_ex;
  wire ldm_pop_ex_i_2_n_0;
  wire load_ex;
  wire load_ex_i_2_n_0;
  wire load_ex_i_3_n_0;
  wire load_fptr;
  wire load_xpsr_ex;
  wire locked_up_reg;
  wire [0:0]locked_up_reg_0;
  wire lockup_br_de;
  wire ls_byte_de;
  wire ls_byte_ex;
  wire ls_byte_ex_reg_0;
  wire ls_half_de;
  wire ls_half_ex;
  wire ls_half_ex_i_2_n_0;
  wire ls_half_ex_i_3_n_0;
  wire [1:0]ls_half_ex_reg_0;
  wire ls_half_ex_reg_1;
  wire lsm_last_a_phase_ex;
  wire lsm_last_d_phase_ex;
  wire lsm_last_d_phase_ex_i_2_n_0;
  wire lsm_last_d_phase_ex_i_3_n_0;
  wire [0:0]lu_ctl;
  wire [1:0]lu_ctl_ex;
  wire \lu_ctl_ex[1]_i_1_n_0 ;
  wire \m_amt_ex2[1]_i_3_n_0 ;
  wire \m_amt_ex2[2]_i_3_n_0 ;
  wire \m_amt_ex2[4]_i_2_n_0 ;
  wire m_ext;
  wire m_invert;
  wire m_invert_ex2_i_2_n_0;
  wire m_invert_ex2_i_3_n_0;
  wire m_invert_ex2_i_4_n_0;
  wire \mem_held_addr[11]_i_10_n_0 ;
  wire \mem_held_addr[11]_i_8_n_0 ;
  wire \mem_held_addr[15]_i_7_n_0 ;
  wire \mem_held_addr[15]_i_8_n_0 ;
  wire \mem_held_addr[19]_i_7_n_0 ;
  wire \mem_held_addr[19]_i_8_n_0 ;
  wire \mem_held_addr[19]_i_9_n_0 ;
  wire \mem_held_addr[23]_i_7_n_0 ;
  wire \mem_held_addr[23]_i_8_n_0 ;
  wire \mem_held_addr[23]_i_9_n_0 ;
  wire \mem_held_addr[3]_i_11_n_0 ;
  wire \mem_held_addr[3]_i_14_n_0 ;
  wire \mem_held_addr[3]_i_15_n_0 ;
  wire \mem_held_addr[3]_i_6_n_0 ;
  wire \mem_held_addr[3]_i_9_n_0 ;
  wire \mem_held_addr[7]_i_11_n_0 ;
  wire \mem_held_addr[7]_i_6_n_0 ;
  wire \mem_held_addr[7]_i_7_n_0 ;
  wire \mem_held_addr[7]_i_8_n_0 ;
  wire \mem_held_addr[7]_i_9_n_0 ;
  wire \mem_held_addr_reg[0] ;
  wire \mem_held_addr_reg[0]_0 ;
  wire [1:0]\mem_held_addr_reg[11] ;
  wire [1:0]\mem_held_addr_reg[15] ;
  wire [0:0]\mem_held_addr_reg[19] ;
  wire \mem_held_addr_reg[1] ;
  wire \mem_held_addr_reg[1]_0 ;
  wire \mem_held_addr_reg[1]_1 ;
  wire \mem_held_addr_reg[1]_2 ;
  wire [0:0]\mem_held_addr_reg[23] ;
  wire micro_code_de;
  wire micro_code_de_reg;
  wire micro_code_fe;
  wire mode;
  wire msr_ex;
  wire mul_de;
  wire mul_ex_i_2_n_0;
  wire mul_ex_i_3_n_0;
  wire mul_ex_reg_n_0;
  wire [15:0]mult_out;
  wire n_flag;
  wire nmi_actv;
  wire nvic_excpt_fault_req;
  wire nvic_excpt_svc_valid;
  wire nvic_excpt_taken;
  wire nvic_lockup;
  wire nvic_primask;
  wire nxt_branching_ex;
  wire [1:0]nxt_cnt;
  wire nxt_dreq_rd_ex;
  wire nxt_dreq_wr_ex;
  wire nxt_dtcm_sel;
  wire nxt_fetch_internal;
  wire nxt_first_pop_pc_ex;
  wire nxt_force_c_in_ex;
  wire nxt_ifetch;
  wire [29:0]nxt_imm_int;
  wire [15:0]nxt_instr_de;
  wire nxt_instr_faulted;
  wire nxt_int_rack;
  wire nxt_invert_b_ex;
  wire nxt_invert_b_ex2;
  wire nxt_irack;
  wire nxt_itcm_sel;
  wire nxt_last_uncond_phase_ex;
  wire nxt_ldm_base;
  wire nxt_ldm_base_load;
  wire nxt_ldm_base_loaded;
  wire [0:0]nxt_pc_mux_ctl_ex;
  wire nxt_pf_fault_de;
  wire nxt_r_list_first_1;
  wire nxt_r_list_first_2;
  wire nxt_r_list_first_3;
  wire nxt_r_list_first_4;
  wire nxt_r_list_first_5;
  wire nxt_r_list_first_6;
  wire nxt_r_list_first_7;
  wire nxt_r_list_first_8;
  wire [1:0]nxt_read_addr;
  wire [3:0]nxt_reg_sel;
  wire [1:0]nxt_rf1_mux_ctl_ex;
  wire nxt_second32_ex;
  wire nxt_w_phase_ex;
  wire [1:0]nxt_wdata_mux_ctl_ex;
  wire [3:3]nxt_wptr_decoded;
  wire [3:0]nxt_wptr_ex;
  wire [1:0]nxt_write_addr;
  wire nxt_write_sp;
  wire nxt_z_flag_mux;
  wire p_0_in;
  wire p_0_in10_in;
  wire p_0_in11_in;
  wire p_0_in14_in;
  wire p_0_in18_in;
  wire p_0_in9_in;
  wire p_1_in12_in;
  wire p_1_in16_in;
  wire p_1_in18_in;
  wire [16:0]p_1_in2_in;
  wire p_1_in8_in;
  wire p_25_in;
  wire p_8_in;
  wire [31:0]pc_de;
  wire [0:0]pc_ex;
  wire [0:0]\pc_ex_reg[0]_0 ;
  wire \pc_ex_reg_n_0_[10] ;
  wire \pc_ex_reg_n_0_[11] ;
  wire \pc_ex_reg_n_0_[12] ;
  wire \pc_ex_reg_n_0_[13] ;
  wire \pc_ex_reg_n_0_[14] ;
  wire \pc_ex_reg_n_0_[15] ;
  wire \pc_ex_reg_n_0_[16] ;
  wire \pc_ex_reg_n_0_[17] ;
  wire \pc_ex_reg_n_0_[18] ;
  wire \pc_ex_reg_n_0_[19] ;
  wire \pc_ex_reg_n_0_[1] ;
  wire \pc_ex_reg_n_0_[20] ;
  wire \pc_ex_reg_n_0_[21] ;
  wire \pc_ex_reg_n_0_[22] ;
  wire \pc_ex_reg_n_0_[23] ;
  wire \pc_ex_reg_n_0_[24] ;
  wire \pc_ex_reg_n_0_[25] ;
  wire \pc_ex_reg_n_0_[26] ;
  wire \pc_ex_reg_n_0_[27] ;
  wire \pc_ex_reg_n_0_[28] ;
  wire \pc_ex_reg_n_0_[29] ;
  wire \pc_ex_reg_n_0_[2] ;
  wire \pc_ex_reg_n_0_[30] ;
  wire \pc_ex_reg_n_0_[31] ;
  wire \pc_ex_reg_n_0_[3] ;
  wire \pc_ex_reg_n_0_[4] ;
  wire \pc_ex_reg_n_0_[5] ;
  wire \pc_ex_reg_n_0_[6] ;
  wire \pc_ex_reg_n_0_[7] ;
  wire \pc_ex_reg_n_0_[8] ;
  wire \pc_ex_reg_n_0_[9] ;
  wire pc_mask1_de;
  wire pc_mask1_ex;
  wire [1:1]pc_mux_ctl_ex;
  wire \pc_reg[10] ;
  wire [3:0]\pc_reg[11] ;
  wire \pc_reg[11]_0 ;
  wire \pc_reg[12] ;
  wire \pc_reg[13] ;
  wire \pc_reg[14] ;
  wire [3:0]\pc_reg[15] ;
  wire [22:0]\pc_reg[23] ;
  wire \pc_reg[2] ;
  wire [31:0]\pc_reg[31] ;
  wire \pc_reg[3] ;
  wire \pc_reg[4] ;
  wire \pc_reg[5] ;
  wire \pc_reg[6] ;
  wire \pc_reg[7] ;
  wire \pc_reg[8] ;
  wire \pc_reg[9] ;
  wire pf_fault_de;
  wire pf_fault_fe;
  wire pop_pc_ex;
  wire pop_pc_ex_i_2_n_0;
  wire [1:0]pre_pc_mux_ctl_ex;
  wire \pre_pc_mux_ctl_ex[1]_i_2_n_0 ;
  wire pre_update_c_ex;
  wire pre_update_c_ex_reg_0;
  wire pre_update_n_ex_i_2_n_0;
  wire pre_update_n_ex_i_3_n_0;
  wire pre_update_n_ex_i_4_n_0;
  wire pre_update_n_ex_i_5_n_0;
  wire pre_update_n_ex_i_6_n_0;
  wire pre_update_v_ex;
  wire pre_update_v_ex_reg_0;
  wire pre_update_z_ex;
  wire primask_i_10_n_0;
  wire primask_i_11_n_0;
  wire primask_i_13_n_0;
  wire primask_i_14_n_0;
  wire primask_i_3;
  wire primask_i_6_n_0;
  wire push_ex;
  wire push_ex_i_2_n_0;
  wire r_amt4_ex2_i_2_n_0;
  wire r_hdf_actv;
  wire [1:0]r_hdf_actv_reg;
  wire [1:0]\r_int_actv_lvl_reg[1] ;
  wire [1:0]\r_int_actv_lvl_reg[1]_0 ;
  wire [8:1]r_list_ex;
  wire [8:1]r_list_first;
  wire \r_list_first[3]_i_2_n_0 ;
  wire \r_list_first[4]_i_2_n_0 ;
  wire \r_list_first[5]_i_2_n_0 ;
  wire \r_list_first[6]_i_2_n_0 ;
  wire \r_list_first[8]_i_2_n_0 ;
  wire [3:0]r_list_offset;
  wire [3:0]r_list_offset_ex;
  wire \r_list_offset_ex[0]_i_2_n_0 ;
  wire \r_list_offset_ex[0]_i_3_n_0 ;
  wire \r_list_offset_ex[1]_i_2_n_0 ;
  wire \r_list_offset_ex[1]_i_3_n_0 ;
  wire \r_list_offset_ex[3]_i_2_n_0 ;
  wire \r_list_offset_ex[3]_i_3_n_0 ;
  wire r_nmi_actv;
  wire rd_mux_a_de;
  wire rd_mux_a_ex;
  wire \read_addr[1]_i_2_n_0 ;
  wire \read_addr[1]_i_4_n_0 ;
  wire \read_addr_reg_n_0_[0] ;
  wire \read_addr_reg_n_0_[1] ;
  wire \reg_file_a[15][10]_i_2 ;
  wire \reg_file_a[15][10]_i_3_n_0 ;
  wire \reg_file_a[15][10]_i_6_n_0 ;
  wire \reg_file_a[15][11]_i_2_n_0 ;
  wire \reg_file_a[15][11]_i_3_n_0 ;
  wire \reg_file_a[15][11]_i_6_n_0 ;
  wire \reg_file_a[15][12]_i_2_n_0 ;
  wire \reg_file_a[15][12]_i_3_n_0 ;
  wire \reg_file_a[15][12]_i_7_n_0 ;
  wire \reg_file_a[15][13]_i_2_n_0 ;
  wire \reg_file_a[15][13]_i_3_n_0 ;
  wire \reg_file_a[15][13]_i_4_n_0 ;
  wire \reg_file_a[15][13]_i_5_n_0 ;
  wire \reg_file_a[15][13]_i_7_n_0 ;
  wire \reg_file_a[15][14]_i_2_n_0 ;
  wire \reg_file_a[15][14]_i_3_n_0 ;
  wire \reg_file_a[15][14]_i_5_n_0 ;
  wire \reg_file_a[15][14]_i_7_n_0 ;
  wire \reg_file_a[15][15]_i_2_n_0 ;
  wire \reg_file_a[15][15]_i_3_n_0 ;
  wire \reg_file_a[15][15]_i_6_n_0 ;
  wire \reg_file_a[15][16]_i_2 ;
  wire \reg_file_a[15][16]_i_4_n_0 ;
  wire \reg_file_a[15][17]_i_2 ;
  wire \reg_file_a[15][17]_i_4_n_0 ;
  wire \reg_file_a[15][17]_i_5_n_0 ;
  wire \reg_file_a[15][18]_i_2_n_0 ;
  wire \reg_file_a[15][18]_i_4_n_0 ;
  wire \reg_file_a[15][18]_i_5_n_0 ;
  wire \reg_file_a[15][19]_i_2_n_0 ;
  wire \reg_file_a[15][20]_i_2_n_0 ;
  wire \reg_file_a[15][20]_i_4_n_0 ;
  wire \reg_file_a[15][20]_i_5_n_0 ;
  wire \reg_file_a[15][21]_i_2_n_0 ;
  wire \reg_file_a[15][21]_i_5_n_0 ;
  wire \reg_file_a[15][22]_i_2_n_0 ;
  wire \reg_file_a[15][22]_i_5_n_0 ;
  wire \reg_file_a[15][23]_i_2 ;
  wire \reg_file_a[15][24]_i_2 ;
  wire \reg_file_a[15][25]_i_2 ;
  wire \reg_file_a[15][25]_i_3_n_0 ;
  wire \reg_file_a[15][25]_i_4_n_0 ;
  wire \reg_file_a[15][25]_i_6_n_0 ;
  wire \reg_file_a[15][25]_i_8_n_0 ;
  wire \reg_file_a[15][26]_i_2_n_0 ;
  wire \reg_file_a[15][27]_i_2_n_0 ;
  wire \reg_file_a[15][28]_i_2 ;
  wire \reg_file_a[15][28]_i_4_n_0 ;
  wire \reg_file_a[15][29]_i_2 ;
  wire \reg_file_a[15][29]_i_4_n_0 ;
  wire \reg_file_a[15][30]_i_2 ;
  wire \reg_file_a[15][30]_i_4_n_0 ;
  wire \reg_file_a[15][31]_i_3 ;
  wire \reg_file_a[15][31]_i_5_n_0 ;
  wire \reg_file_a[15][8]_i_2_n_0 ;
  wire \reg_file_a[15][8]_i_3_n_0 ;
  wire \reg_file_a[15][8]_i_6_n_0 ;
  wire \reg_file_a[15][9]_i_3_n_0 ;
  wire \reg_file_a[15][9]_i_4_n_0 ;
  wire \reg_file_a[15][9]_i_6_n_0 ;
  wire \reg_file_a_reg[0][0] ;
  wire \reg_file_a_reg[0][0]_0 ;
  wire \reg_file_a_reg[0][0]_1 ;
  wire \reg_file_a_reg[0][25] ;
  wire \reg_file_a_reg[0][25]_0 ;
  wire \reg_file_a_reg[0][25]_1 ;
  wire \reg_file_a_reg[15][10] ;
  wire \reg_file_a_reg[15][11] ;
  wire \reg_file_a_reg[15][12] ;
  wire \reg_file_a_reg[15][12]_0 ;
  wire \reg_file_a_reg[15][13] ;
  wire \reg_file_a_reg[15][14] ;
  wire [15:0]\reg_file_a_reg[15][15] ;
  wire \reg_file_a_reg[15][15]_0 ;
  wire \reg_file_a_reg[15][16] ;
  wire \reg_file_a_reg[15][17] ;
  wire \reg_file_a_reg[15][18] ;
  wire \reg_file_a_reg[15][18]_0 ;
  wire \reg_file_a_reg[15][19] ;
  wire \reg_file_a_reg[15][19]_0 ;
  wire \reg_file_a_reg[15][19]_1 ;
  wire \reg_file_a_reg[15][20] ;
  wire \reg_file_a_reg[15][20]_0 ;
  wire \reg_file_a_reg[15][21] ;
  wire \reg_file_a_reg[15][21]_0 ;
  wire \reg_file_a_reg[15][22] ;
  wire \reg_file_a_reg[15][22]_0 ;
  wire \reg_file_a_reg[15][23] ;
  wire \reg_file_a_reg[15][23]_0 ;
  wire \reg_file_a_reg[15][24] ;
  wire \reg_file_a_reg[15][24]_0 ;
  wire \reg_file_a_reg[15][26] ;
  wire \reg_file_a_reg[15][26]_0 ;
  wire \reg_file_a_reg[15][27] ;
  wire \reg_file_a_reg[15][27]_0 ;
  wire \reg_file_a_reg[15][28] ;
  wire \reg_file_a_reg[15][28]_0 ;
  wire \reg_file_a_reg[15][29] ;
  wire \reg_file_a_reg[15][29]_0 ;
  wire \reg_file_a_reg[15][30] ;
  wire \reg_file_a_reg[15][30]_0 ;
  wire [16:0]\reg_file_a_reg[15][31] ;
  wire [3:0]\reg_file_a_reg[15][31]_0 ;
  wire \reg_file_a_reg[15][31]_1 ;
  wire \reg_file_a_reg[15][31]_2 ;
  wire \reg_file_a_reg[15][8] ;
  wire \reg_file_a_reg[15][9] ;
  wire [3:0]reg_sel;
  wire [1:0]rf0_mux_ctl_ex;
  wire \rf0_mux_ctl_ex[0]_i_2_n_0 ;
  wire \rf0_mux_ctl_ex[1]_i_2_n_0 ;
  wire \rf0_mux_ctl_ex[1]_i_3_n_0 ;
  wire \rf0_mux_ctl_ex_reg[1]_0 ;
  wire [1:0]rf1_mux_ctl_ex;
  wire [0:0]rf_mux_ctl_ex;
  wire \rf_mux_ctl_ex[2]_i_3_n_0 ;
  wire \rf_mux_ctl_ex[2]_i_4_n_0 ;
  wire \rf_mux_ctl_ex[2]_i_5_n_0 ;
  wire \rf_mux_ctl_ex[2]_i_6_n_0 ;
  wire \rf_mux_ctl_ex[2]_i_7_n_0 ;
  wire \rf_mux_ctl_ex_reg[2]_0 ;
  wire [31:0]rf_wdata;
  wire [3:0]rptr_a_de;
  wire [3:0]rptr_a_ex;
  wire [3:0]rptr_a_ex2;
  wire \rptr_a_ex2[0]_i_2_n_0 ;
  wire \rptr_a_ex2[2]_i_2_n_0 ;
  wire \rptr_a_ex2[2]_i_3_n_0 ;
  wire \rptr_a_ex2[3]_i_3_n_0 ;
  wire \rptr_a_ex[0]_i_1_n_0 ;
  wire \rptr_a_ex[2]_i_1_n_0 ;
  wire [2:0]rptr_b2_de;
  wire [3:0]rptr_b_ex;
  wire [3:0]rptr_b_ex2;
  wire \rptr_b_ex2[0]_i_3_n_0 ;
  wire \rptr_b_ex2[0]_i_4_n_0 ;
  wire \rptr_b_ex2[0]_i_5_n_0 ;
  wire \rptr_b_ex2[2]_i_3_n_0 ;
  wire \rptr_b_ex2[2]_i_4_n_0 ;
  wire \rptr_b_ex2[2]_i_5_n_0 ;
  wire \rptr_b_ex2[3]_i_3_n_0 ;
  wire \rptr_b_ex2[3]_i_4_n_0 ;
  wire \rptr_b_ex[0]_i_2_n_0 ;
  wire \rptr_b_ex[1]_i_2_n_0 ;
  wire \rptr_b_ex[2]_i_2_n_0 ;
  wire \rptr_b_ex[3]_i_2_n_0 ;
  wire rst_fptr_align_ex;
  wire [0:0]sbit_ctl_ex;
  wire \sbit_ctl_ex[0]_i_1_n_0 ;
  wire sbit_ex;
  wire sbit_ex_i_2_n_0;
  wire sbit_ex_i_3_n_0;
  wire se_byte_wb;
  wire se_byte_wb_i_2_n_0;
  wire se_byte_wb_i_3_n_0;
  wire se_byte_wb_i_4_n_0;
  wire se_half_wb;
  wire [8:0]se_half_wb_reg_0;
  wire second32_ex;
  wire second_ex_phase;
  wire second_ex_phase0;
  wire sel_wf_c;
  wire sel_wf_v;
  wire [22:0]seq_fetch_addr;
  wire sext_byte;
  wire sext_half;
  wire shift_ex;
  wire shift_ex_i_2_n_0;
  wire shift_ex_i_3_n_0;
  wire [1:0]shift_op;
  wire \shift_op[0]_i_1_n_0 ;
  wire [1:1]shift_op_de;
  wire \shift_op_reg[0]_0 ;
  wire stm_push_de;
  wire stm_push_ex;
  wire stm_push_ex_i_2_n_0;
  wire store_de;
  wire store_ex;
  wire [1:0]svc_lvl_0;
  wire [1:0]swz_ctl_de;
  wire \swz_ctl_ex[0]_i_2_n_0 ;
  wire \swz_ctl_ex_reg[0]_0 ;
  wire [1:0]\swz_ctl_ex_reg[1]_0 ;
  wire \swz_ctl_ex_reg[1]_1 ;
  wire tbit;
  wire tbit_ex;
  wire three_phase_ex;
  wire three_phase_ex_i_1_n_0;
  wire two_phase_de;
  wire two_phase_ex;
  wire two_phase_ex_i_4_n_0;
  wire two_phase_ex_i_5_n_0;
  wire \u_alu_dec/u_adder/mem_held_addr[11]_i_9_n_0 ;
  wire \u_alu_dec/u_adder/mem_held_addr[3]_i_10_n_0 ;
  wire \u_alu_dec/u_adder/mem_held_addr[3]_i_7_n_0 ;
  wire u_decode_n_0;
  wire u_decode_n_1;
  wire u_decode_n_10;
  wire u_decode_n_11;
  wire u_decode_n_2;
  wire u_decode_n_29;
  wire u_decode_n_3;
  wire u_decode_n_30;
  wire u_decode_n_31;
  wire u_decode_n_32;
  wire u_decode_n_4;
  wire u_decode_n_41;
  wire u_decode_n_42;
  wire u_decode_n_45;
  wire u_decode_n_47;
  wire u_decode_n_48;
  wire u_decode_n_49;
  wire u_decode_n_50;
  wire u_decode_n_9;
  wire [22:1]\u_dp/au_in_a ;
  wire [22:0]\u_dp/u_alu_dec/au_in_b ;
  wire u_excpt_n_134;
  wire u_excpt_n_135;
  wire u_excpt_n_137;
  wire u_excpt_n_138;
  wire u_excpt_n_145;
  wire u_excpt_n_15;
  wire u_excpt_n_152;
  wire u_excpt_n_153;
  wire u_excpt_n_154;
  wire u_excpt_n_156;
  wire u_excpt_n_162;
  wire u_excpt_n_163;
  wire u_excpt_n_164;
  wire u_excpt_n_17;
  wire u_excpt_n_18;
  wire u_excpt_n_20;
  wire u_excpt_n_21;
  wire u_excpt_n_22;
  wire u_excpt_n_23;
  wire u_excpt_n_24;
  wire u_excpt_n_25;
  wire u_excpt_n_26;
  wire u_excpt_n_27;
  wire u_excpt_n_28;
  wire u_excpt_n_29;
  wire u_fault;
  wire update_c;
  wire update_c_ex;
  wire update_n;
  wire update_n_ex;
  wire update_v;
  wire update_v_ex;
  wire use_c_flag_de;
  wire use_c_flag_ex;
  wire use_c_flag_ex_i_2_n_0;
  wire use_c_flag_ex_i_3_n_0;
  wire use_c_flag_ex_i_4_n_0;
  wire use_control_ex;
  wire use_control_ex_i_1_n_0;
  wire use_dp_tbit_reg;
  wire use_flags;
  wire use_flags_ex;
  wire use_imm_ex;
  wire use_imm_ex0;
  wire [4:0]use_imm_ex_reg_0;
  wire use_imm_ex_reg_1;
  wire use_imm_ex_reg_2;
  wire use_imm_ex_reg_3;
  wire use_imm_ex_reg_4;
  wire use_imm_ex_reg_5;
  wire use_imm_ex_reg_6;
  wire use_primask;
  wire use_primask_ex;
  wire use_r_list;
  wire use_r_list_ex;
  wire use_r_list_ex_i_2_n_0;
  wire v_flag;
  wire v_flag_au;
  wire v_flag_au_i_2_n_0;
  wire v_flag_au_reg;
  wire v_flag_wf;
  wire v_flag_wf_i_3_n_0;
  wire v_flag_wf_reg;
  wire w_enable_ex;
  wire w_phase_ex;
  wire w_phase_ex_i_10_n_0;
  wire w_phase_ex_i_11_n_0;
  wire w_phase_ex_i_12_n_0;
  wire w_phase_ex_i_2_n_0;
  wire w_phase_ex_i_4_n_0;
  wire w_phase_ex_i_5_n_0;
  wire w_phase_ex_i_6_n_0;
  wire w_phase_ex_i_7_n_0;
  wire w_phase_ex_i_8_n_0;
  wire w_phase_ex_i_9_n_0;
  wire [1:0]wdata_mux_ctl_ex;
  wire \wdata_mux_ctl_ex[0]_i_2_n_0 ;
  wire \wdata_mux_ctl_ex_reg[0]_0 ;
  wire \wdata_reg[24] ;
  wire \wdata_reg[25] ;
  wire \wdata_reg[26] ;
  wire \wdata_reg[27] ;
  wire \wdata_reg[28] ;
  wire \wdata_reg[29] ;
  wire \wdata_reg[30] ;
  wire [20:0]\wdata_reg[31] ;
  wire \wdata_reg[31]_0 ;
  wire [2:0]wptr_de;
  wire [3:0]wptr_decoded;
  wire \wptr_decoded[0]_i_3_n_0 ;
  wire \wptr_decoded[0]_i_4_n_0 ;
  wire \wptr_decoded[1]_i_2_n_0 ;
  wire \wptr_decoded[1]_i_4_n_0 ;
  wire \wptr_decoded[1]_i_5_n_0 ;
  wire \wptr_decoded[2]_i_2_n_0 ;
  wire \wptr_decoded[2]_i_3_n_0 ;
  wire \wptr_decoded[2]_i_4_n_0 ;
  wire \wptr_decoded[3]_i_4_n_0 ;
  wire [3:0]wptr_ex;
  wire \wptr_ex[0]_i_3_n_0 ;
  wire \wptr_ex[1]_i_2_n_0 ;
  wire \wptr_ex[2]_i_2_n_0 ;
  wire \wptr_ex[3]_i_2_n_0 ;
  wire [0:0]\wptr_ex_reg[0]_0 ;
  wire [0:0]\wptr_ex_reg[1]_0 ;
  wire [0:0]\wptr_ex_reg[1]_1 ;
  wire [0:0]\wptr_ex_reg[1]_2 ;
  wire [0:0]\wptr_ex_reg[1]_3 ;
  wire [0:0]\wptr_ex_reg[1]_4 ;
  wire [0:0]\wptr_ex_reg[1]_5 ;
  wire [0:0]\wptr_ex_reg[1]_6 ;
  wire [0:0]\wptr_ex_reg[1]_7 ;
  wire [0:0]\wptr_ex_reg[1]_8 ;
  wire [0:0]\wptr_ex_reg[2]_0 ;
  wire [0:0]\wptr_ex_reg[2]_1 ;
  wire [0:0]\wptr_ex_reg[2]_2 ;
  wire [0:0]\wptr_ex_reg[3]_0 ;
  wire [0:0]\wptr_ex_reg[3]_1 ;
  wire [0:0]\wptr_ex_reg[3]_2 ;
  wire \write_addr_reg[1]_0 ;
  wire \write_addr_reg_n_0_[0] ;
  wire \write_addr_reg_n_0_[1] ;
  wire write_flags_ex;
  wire write_sp;
  wire [2:0]xpsr_m_ctl_ex;
  wire z_flag;
  wire z_flag_mux_i_11_0;
  wire z_flag_mux_i_11_1;
  wire z_flag_mux_i_11_2;
  wire z_flag_mux_i_11_3;
  wire z_flag_mux_i_11_n_0;
  wire z_flag_mux_i_12_n_0;
  wire z_flag_mux_i_13_n_0;
  wire z_flag_mux_i_15_n_0;
  wire z_flag_mux_i_16_0;
  wire z_flag_mux_i_16_1;
  wire z_flag_mux_i_16_2;
  wire z_flag_mux_i_16_3;
  wire z_flag_mux_i_16_n_0;
  wire z_flag_mux_i_17_n_0;
  wire z_flag_mux_i_18_n_0;
  wire z_flag_mux_i_19_n_0;
  wire z_flag_mux_i_20_n_0;
  wire z_flag_mux_i_21_0;
  wire z_flag_mux_i_21_1;
  wire z_flag_mux_i_21_2;
  wire z_flag_mux_i_21_3;
  wire z_flag_mux_i_21_n_0;
  wire z_flag_mux_i_22_0;
  wire z_flag_mux_i_22_1;
  wire z_flag_mux_i_22_2;
  wire z_flag_mux_i_22_3;
  wire z_flag_mux_i_22_n_0;
  wire z_flag_mux_i_28_n_0;
  wire z_flag_mux_i_29_n_0;
  wire z_flag_mux_i_2_n_0;
  wire z_flag_mux_i_30_n_0;
  wire z_flag_mux_i_31_n_0;
  wire z_flag_mux_i_32_n_0;
  wire z_flag_mux_i_33_n_0;
  wire z_flag_mux_i_34_n_0;
  wire z_flag_mux_i_35_n_0;
  wire z_flag_mux_i_36_n_0;
  wire z_flag_mux_i_37_n_0;
  wire z_flag_mux_i_38_n_0;
  wire z_flag_mux_i_39_n_0;
  wire z_flag_mux_i_40_n_0;
  wire z_flag_mux_i_4_n_0;
  wire [7:0]z_flag_mux_i_6_0;
  wire z_flag_mux_i_6_1;
  wire z_flag_mux_i_6_2;
  wire z_flag_mux_i_6_n_0;
  wire z_flag_mux_reg;
  wire z_flag_mux_reg_0;
  wire ze_byte_wb;
  wire ze_byte_wb_i_2_n_0;
  wire ze_byte_wb_i_3_n_0;
  wire ze_half_wb;
  wire ze_half_wb_i_2_n_0;
  wire ze_half_wb_i_3_n_0;
  wire ze_half_wb_i_4_n_0;
  wire ze_half_wb_i_5_n_0;
  wire zero_a_ex;
  wire zero_a_ex0;
  wire zero_a_ex_i_3_n_0;
  wire zero_a_ex_i_4_n_0;
  wire zero_a_ex_i_5_n_0;
  wire [3:0]zero_a_ex_reg_0;
  wire zext_byte;
  wire zext_half;

  assign IRQ_0_sp_1 = IRQ_0_sn_1;
  FDCE any_dsb_ex_reg
       (.C(HCLK),
        .CE(adv_de_to_ex),
        .CLR(SYSRESETn_0),
        .D(any_dsb_ex0),
        .Q(biu_dsb));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT2 #(
    .INIT(4'hE)) 
    asel_dside_i_1
       (.I0(dreq_rd_ex),
        .I1(biu_write_reg_0),
        .O(biu_dreq));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT4 #(
    .INIT(16'h8B88)) 
    au_a_use_pc_ex_i_1
       (.I0(\instr_de_reg_n_0_[14] ),
        .I1(first32_ex_reg_0),
        .I2(au_a_use_pc_ex_i_2_n_0),
        .I3(au_a_use_pc_ex_i_3_n_0),
        .O(a_use_pc));
  LUT6 #(
    .INIT(64'h2222111022221111)) 
    au_a_use_pc_ex_i_2
       (.I0(\instr_de_reg_n_0_[13] ),
        .I1(\instr_de_reg_n_0_[12] ),
        .I2(au_a_use_pc_ex_i_4_n_0),
        .I3(\instr_de_reg_n_0_[9] ),
        .I4(\instr_de_reg_n_0_[11] ),
        .I5(au_a_use_pc_ex_i_5_n_0),
        .O(au_a_use_pc_ex_i_2_n_0));
  LUT6 #(
    .INIT(64'h0000FF00A20000AA)) 
    au_a_use_pc_ex_i_3
       (.I0(\instr_de_reg_n_0_[14] ),
        .I1(\instr_de_reg_n_0_[11] ),
        .I2(u_excpt_n_153),
        .I3(\instr_de_reg_n_0_[15] ),
        .I4(\instr_de_reg_n_0_[12] ),
        .I5(\instr_de_reg_n_0_[13] ),
        .O(au_a_use_pc_ex_i_3_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    au_a_use_pc_ex_i_4
       (.I0(p_25_in),
        .I1(\instr_de_reg_n_0_[10] ),
        .O(au_a_use_pc_ex_i_4_n_0));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    au_a_use_pc_ex_i_5
       (.I0(rptr_b2_de[2]),
        .I1(rptr_b2_de[1]),
        .I2(rptr_b2_de[0]),
        .I3(\instr_de_reg_n_0_[7] ),
        .O(au_a_use_pc_ex_i_5_n_0));
  FDCE au_a_use_pc_ex_reg
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg),
        .CLR(SYSRESETn_0),
        .D(a_use_pc),
        .Q(au_a_use_pc_ex));
  LUT6 #(
    .INIT(64'hFFFFEFFFFFFFFFFF)) 
    au_b_use_pc_ex_i_2
       (.I0(\rptr_b_ex2[3]_i_4_n_0 ),
        .I1(\instr_de_reg_n_0_[15] ),
        .I2(cps_data),
        .I3(\instr_de_reg_n_0_[3] ),
        .I4(first32_ex_reg_0),
        .I5(\instr_de_reg_n_0_[10] ),
        .O(au_b_use_pc_ex_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT2 #(
    .INIT(4'h8)) 
    au_b_use_pc_ex_i_3
       (.I0(\instr_de_reg_n_0_[6] ),
        .I1(\instr_de_reg_n_0_[5] ),
        .O(au_b_use_pc_ex_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT2 #(
    .INIT(4'hB)) 
    au_b_use_pc_ex_i_4
       (.I0(\instr_de_reg_n_0_[11] ),
        .I1(\instr_de_reg_n_0_[14] ),
        .O(au_b_use_pc_ex_i_4_n_0));
  FDCE au_b_use_pc_ex_reg
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg),
        .CLR(SYSRESETn_0),
        .D(b_use_pc),
        .Q(au_b_use_pc_ex));
  LUT6 #(
    .INIT(64'h4404000000000000)) 
    bcc_first_ex_i_2
       (.I0(first32_ex_reg_0),
        .I1(\instr_de_reg_n_0_[14] ),
        .I2(\instr_de_reg_n_0_[11] ),
        .I3(u_excpt_n_153),
        .I4(\instr_de_reg_n_0_[15] ),
        .I5(bcc_first_ex_i_3_n_0),
        .O(bcc_first_ex_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT2 #(
    .INIT(4'h2)) 
    bcc_first_ex_i_3
       (.I0(\instr_de_reg_n_0_[12] ),
        .I1(\instr_de_reg_n_0_[13] ),
        .O(bcc_first_ex_i_3_n_0));
  FDCE bcc_first_ex_reg
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(u_excpt_n_21),
        .Q(bcc_first_ex));
  LUT6 #(
    .INIT(64'hFFFFFF3FFFFFFF1F)) 
    biu_commit_reg_i_11
       (.I0(O[1]),
        .I1(O[0]),
        .I2(dreq_rd_ex),
        .I3(dreq_wr_ex_reg_0),
        .I4(ls_byte_ex),
        .I5(ls_half_ex),
        .O(biu_commit_reg_i_11_n_0));
  FDCE biu_write_reg
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(dreq_wr_ex_reg_0),
        .Q(biu_write_reg_0));
  FDCE br_first_ex_reg
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(p_8_in),
        .Q(br_first_ex));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    br_lr_ex_i_2
       (.I0(u_excpt_n_153),
        .I1(\instr_de_reg_n_0_[13] ),
        .I2(first32_ex_reg_0),
        .I3(\instr_de_reg_n_0_[15] ),
        .I4(\instr_de_reg_n_0_[11] ),
        .I5(\instr_de_reg_n_0_[12] ),
        .O(br_lr_ex_i_2_n_0));
  FDCE br_lr_ex_reg
       (.C(HCLK),
        .CE(adv_de_to_ex),
        .CLR(SYSRESETn_0),
        .D(u_excpt_n_25),
        .Q(br_lr_ex));
  LUT6 #(
    .INIT(64'h9898889898888888)) 
    branch_ex_i_3
       (.I0(\instr_de_reg_n_0_[15] ),
        .I1(\instr_de_reg_n_0_[13] ),
        .I2(\instr_de_reg_n_0_[10] ),
        .I3(p_25_in),
        .I4(\instr_de_reg_n_0_[9] ),
        .I5(au_a_use_pc_ex_i_5_n_0),
        .O(branch_ex_i_3_n_0));
  FDCE branch_ex_reg
       (.C(HCLK),
        .CE(adv_de_to_ex),
        .CLR(SYSRESETn_0),
        .D(branch_ex0),
        .Q(branch_ex));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT5 #(
    .INIT(32'hFFFF5554)) 
    branching_ex_i_1
       (.I0(last_uncond_phase_ex_reg_0),
        .I1(ireq_ldpc),
        .I2(branch_ex),
        .I3(branching_ex),
        .I4(bcc_first_ex_reg_0),
        .O(nxt_branching_ex));
  FDCE branching_ex_reg
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(nxt_branching_ex),
        .Q(branching_ex));
  LUT6 #(
    .INIT(64'hFE02FFFFFE020000)) 
    c_flag_mux_i_1
       (.I0(c_flag_mux_reg),
        .I1(rf_mux_ctl_ex),
        .I2(c_flag_mux_i_3_n_0),
        .I3(c_flag_mux_reg_0),
        .I4(update_c_ex),
        .I5(c_flag_mux),
        .O(\rf_mux_ctl_ex_reg[2]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT2 #(
    .INIT(4'h1)) 
    c_flag_mux_i_10
       (.I0(shift_op[0]),
        .I1(shift_op[1]),
        .O(\shift_op_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT2 #(
    .INIT(4'hE)) 
    c_flag_mux_i_3
       (.I0(rf0_mux_ctl_ex[0]),
        .I1(rf0_mux_ctl_ex[1]),
        .O(c_flag_mux_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    c_flag_mux_i_5
       (.I0(write_flags_ex),
        .I1(i_dbg_wdata_sel_de_reg),
        .I2(pre_update_c_ex),
        .O(update_c_ex));
  LUT5 #(
    .INIT(32'h00A8AAAA)) 
    c_flag_mux_i_6
       (.I0(m_invert_ex2_i_3_n_0),
        .I1(b_reg_0[6]),
        .I2(b_reg_0[7]),
        .I3(use_imm_ex),
        .I4(m_invert_ex2_i_2_n_0),
        .O(use_imm_ex_reg_6));
  LUT6 #(
    .INIT(64'h00000002A0A0A0A2)) 
    c_flag_mux_i_8
       (.I0(m_invert_ex2_i_2_n_0),
        .I1(b_reg_0[5]),
        .I2(use_imm_ex),
        .I3(b_reg_0[7]),
        .I4(b_reg_0[6]),
        .I5(shift_op[0]),
        .O(use_imm_ex_reg_5));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT4 #(
    .INIT(16'h3202)) 
    c_flag_wf_i_3
       (.I0(\reg_file_a_reg[15][31]_0 [1]),
        .I1(rf1_mux_ctl_ex[0]),
        .I2(rf1_mux_ctl_ex[1]),
        .I3(mult_out[13]),
        .O(c_flag_wf_i_3_n_0));
  FDCE \cond_ex_reg[0] 
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg),
        .CLR(SYSRESETn_0),
        .D(p_25_in),
        .Q(\cond_ex_reg_n_0_[0] ));
  FDCE \cond_ex_reg[1] 
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg),
        .CLR(SYSRESETn_0),
        .D(\instr_de_reg_n_0_[9] ),
        .Q(p_0_in));
  FDCE \cond_ex_reg[2] 
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg),
        .CLR(SYSRESETn_0),
        .D(\instr_de_reg_n_0_[10] ),
        .Q(p_1_in18_in));
  FDCE \cond_ex_reg[3] 
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg),
        .CLR(SYSRESETn_0),
        .D(\instr_de_reg_n_0_[11] ),
        .Q(cc_inv_z));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT4 #(
    .INIT(16'hAA8A)) 
    \count[0]_i_1 
       (.I0(u_excpt_n_22),
        .I1(count[1]),
        .I2(count[0]),
        .I3(ireq_ldpc),
        .O(nxt_cnt[0]));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT4 #(
    .INIT(16'h00A8)) 
    \count[1]_i_1 
       (.I0(u_excpt_n_22),
        .I1(count[1]),
        .I2(count[0]),
        .I3(ireq_ldpc),
        .O(nxt_cnt[1]));
  (* syn_keep = "true" *) 
  FDCE \count_reg[0] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(nxt_cnt[0]),
        .Q(count[0]));
  (* syn_keep = "true" *) 
  FDCE \count_reg[1] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(nxt_cnt[1]),
        .Q(count[1]));
  FDCE cps_data_ex_reg
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg),
        .CLR(SYSRESETn_0),
        .D(cps_data),
        .Q(cps_data_ex));
  LUT6 #(
    .INIT(64'hFDFFFFFFFFFFFFFF)) 
    cps_ex_i_2
       (.I0(\instr_de_reg_n_0_[10] ),
        .I1(first32_ex_reg_0),
        .I2(\instr_de_reg_n_0_[14] ),
        .I3(\instr_de_reg_n_0_[15] ),
        .I4(\instr_de_reg_n_0_[13] ),
        .I5(\instr_de_reg_n_0_[12] ),
        .O(cps_ex_i_2_n_0));
  FDCE cps_ex_reg
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg),
        .CLR(SYSRESETn_0),
        .D(cps_de),
        .Q(cps_ex));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT4 #(
    .INIT(16'h00E1)) 
    \cycle_count_ex[0]_i_1 
       (.I0(lsm_last_d_phase_ex),
        .I1(ldm_d_done_ex),
        .I2(cycle_count_ex[0]),
        .I3(last_uncond_phase_ex_reg_0),
        .O(\cycle_count_ex[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT5 #(
    .INIT(32'h0000FD02)) 
    \cycle_count_ex[1]_i_1 
       (.I0(cycle_count_ex[0]),
        .I1(lsm_last_d_phase_ex),
        .I2(ldm_d_done_ex),
        .I3(cycle_count_ex[1]),
        .I4(last_uncond_phase_ex_reg_0),
        .O(\cycle_count_ex[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000F0F0F078)) 
    \cycle_count_ex[2]_i_1 
       (.I0(cycle_count_ex[1]),
        .I1(cycle_count_ex[0]),
        .I2(cycle_count_ex[2]),
        .I3(lsm_last_d_phase_ex),
        .I4(ldm_d_done_ex),
        .I5(last_uncond_phase_ex_reg_0),
        .O(\cycle_count_ex[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000007F80FF00)) 
    \cycle_count_ex[3]_i_1 
       (.I0(cycle_count_ex[0]),
        .I1(cycle_count_ex[1]),
        .I2(cycle_count_ex[2]),
        .I3(cycle_count_ex[3]),
        .I4(\cycle_count_ex[3]_i_2_n_0 ),
        .I5(last_uncond_phase_ex_reg_0),
        .O(\cycle_count_ex[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \cycle_count_ex[3]_i_2 
       (.I0(lsm_last_d_phase_ex),
        .I1(ldm_d_done_ex),
        .O(\cycle_count_ex[3]_i_2_n_0 ));
  FDCE \cycle_count_ex_reg[0] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(\cycle_count_ex[0]_i_1_n_0 ),
        .Q(cycle_count_ex[0]));
  FDCE \cycle_count_ex_reg[1] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(\cycle_count_ex[1]_i_1_n_0 ),
        .Q(cycle_count_ex[1]));
  FDCE \cycle_count_ex_reg[2] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(\cycle_count_ex[2]_i_1_n_0 ),
        .Q(cycle_count_ex[2]));
  FDCE \cycle_count_ex_reg[3] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(\cycle_count_ex[3]_i_1_n_0 ),
        .Q(cycle_count_ex[3]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFF8FAF8)) 
    \dp_ipsr_1to0[1]_i_11 
       (.I0(\hold_reg1_reg[6] ),
        .I1(ls_half_ex),
        .I2(\swz_ctl_ex_reg[1]_0 [1]),
        .I3(ls_byte_ex),
        .I4(\HADDR_reg[0] ),
        .I5(\swz_ctl_ex_reg[1]_0 [0]),
        .O(\mem_held_addr_reg[1] ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFF070507)) 
    \dp_ipsr_1to0[1]_i_14 
       (.I0(\hold_reg1_reg[6] ),
        .I1(ls_half_ex),
        .I2(\swz_ctl_ex_reg[1]_0 [1]),
        .I3(ls_byte_ex),
        .I4(\HADDR_reg[0] ),
        .I5(\swz_ctl_ex_reg[1]_0 [0]),
        .O(\mem_held_addr_reg[1]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFF1F3F133)) 
    \dp_ipsr_1to0[1]_i_17 
       (.I0(\HADDR_reg[0] ),
        .I1(\swz_ctl_ex_reg[1]_0 [0]),
        .I2(\hold_reg1_reg[6] ),
        .I3(ls_byte_ex),
        .I4(ls_half_ex),
        .I5(\swz_ctl_ex_reg[1]_0 [1]),
        .O(\mem_held_addr_reg[0] ));
  LUT6 #(
    .INIT(64'hFDDDA999FDDD5444)) 
    \dp_ipsr_1to0[1]_i_20 
       (.I0(\mem_held_addr[3]_i_14_n_0 ),
        .I1(\dp_ipsr_1to0[1]_i_23_n_0 ),
        .I2(a_reg_0[1]),
        .I3(\dp_ipsr_1to0[1]_i_24_n_0 ),
        .I4(lu_ctl_ex[0]),
        .I5(lu_ctl_ex[1]),
        .O(\dp_ipsr_1to0[1]_i_20_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \dp_ipsr_1to0[1]_i_23 
       (.I0(au_a_use_pc_ex),
        .I1(Q[0]),
        .I2(pc_mask1_ex),
        .O(\dp_ipsr_1to0[1]_i_23_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \dp_ipsr_1to0[1]_i_24 
       (.I0(zero_a_ex),
        .I1(au_a_use_pc_ex),
        .O(\dp_ipsr_1to0[1]_i_24_n_0 ));
  LUT4 #(
    .INIT(16'h3202)) 
    \dp_ipsr_1to0[1]_i_4 
       (.I0(O[1]),
        .I1(rf1_mux_ctl_ex[0]),
        .I2(rf1_mux_ctl_ex[1]),
        .I3(\reg_file_a_reg[15][15] [1]),
        .O(\dp_ipsr_1to0[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0507050705FFFFFF)) 
    \dp_ipsr_1to0[1]_i_8 
       (.I0(\hold_reg1_reg[6] ),
        .I1(ls_half_ex),
        .I2(\swz_ctl_ex_reg[1]_0 [1]),
        .I3(ls_byte_ex),
        .I4(\HADDR_reg[0] ),
        .I5(\swz_ctl_ex_reg[1]_0 [0]),
        .O(\mem_held_addr_reg[1]_1 ));
  LUT4 #(
    .INIT(16'hE6E8)) 
    \dp_ipsr_7to2[3]_i_3 
       (.I0(\u_dp/u_alu_dec/au_in_b [3]),
        .I1(\u_dp/au_in_a [3]),
        .I2(lu_ctl_ex[0]),
        .I3(lu_ctl_ex[1]),
        .O(\dp_ipsr_7to2[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFDDDA999FDDD5444)) 
    \dp_ipsr_7to2[4]_i_3 
       (.I0(\mem_held_addr[7]_i_11_n_0 ),
        .I1(z_flag_mux_i_16_3),
        .I2(a_reg_0[3]),
        .I3(\dp_ipsr_1to0[1]_i_24_n_0 ),
        .I4(lu_ctl_ex[0]),
        .I5(lu_ctl_ex[1]),
        .O(\dp_ipsr_7to2[4]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFEEE5666FEEEA888)) 
    \dp_ipsr_7to2[5]_i_3 
       (.I0(\u_dp/u_alu_dec/au_in_b [5]),
        .I1(z_flag_mux_i_16_2),
        .I2(a_reg_0[4]),
        .I3(\dp_ipsr_1to0[1]_i_24_n_0 ),
        .I4(lu_ctl_ex[0]),
        .I5(lu_ctl_ex[1]),
        .O(\dp_ipsr_7to2[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h5FFC50FC5F0C500C)) 
    \dp_ipsr_7to2[6]_i_1 
       (.I0(\dp_ipsr_7to2[6]_i_2_n_0 ),
        .I1(zero_a_ex_reg_0[2]),
        .I2(rf1_mux_ctl_ex[0]),
        .I3(rf1_mux_ctl_ex[1]),
        .I4(\reg_file_a_reg[15][15] [6]),
        .I5(\dp_ipsr_7to2_reg[7]_2 [5]),
        .O(rf_wdata[6]));
  LUT6 #(
    .INIT(64'h00000000FFFF898E)) 
    \dp_ipsr_7to2[6]_i_2 
       (.I0(\dp_ipsr_7to2[6]_i_3_n_0 ),
        .I1(\dp_ipsr_7to2[6]_i_4_n_0 ),
        .I2(lu_ctl_ex[0]),
        .I3(lu_ctl_ex[1]),
        .I4(c_flag_mux_i_3_n_0),
        .I5(\dp_ipsr_7to2_reg[6]_0 ),
        .O(\dp_ipsr_7to2[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAA9AA5955A95559)) 
    \dp_ipsr_7to2[6]_i_3 
       (.I0(invert_b_ex),
        .I1(b_reg_0[6]),
        .I2(au_b_use_pc_ex),
        .I3(use_imm_ex),
        .I4(Q[5]),
        .I5(imm_ex[6]),
        .O(\dp_ipsr_7to2[6]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h0BFB)) 
    \dp_ipsr_7to2[6]_i_4 
       (.I0(zero_a_ex),
        .I1(a_reg_0[5]),
        .I2(au_a_use_pc_ex),
        .I3(Q[5]),
        .O(\dp_ipsr_7to2[6]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h5FFC50FC5F0C500C)) 
    \dp_ipsr_7to2[7]_i_1 
       (.I0(\dp_ipsr_7to2[7]_i_2_n_0 ),
        .I1(zero_a_ex_reg_0[3]),
        .I2(rf1_mux_ctl_ex[0]),
        .I3(rf1_mux_ctl_ex[1]),
        .I4(\reg_file_a_reg[15][15] [7]),
        .I5(\dp_ipsr_7to2_reg[7]_2 [6]),
        .O(rf_wdata[7]));
  LUT6 #(
    .INIT(64'h00000000FFFF898E)) 
    \dp_ipsr_7to2[7]_i_2 
       (.I0(\dp_ipsr_7to2[7]_i_3_n_0 ),
        .I1(\dp_ipsr_7to2[7]_i_4_n_0 ),
        .I2(lu_ctl_ex[0]),
        .I3(lu_ctl_ex[1]),
        .I4(c_flag_mux_i_3_n_0),
        .I5(\dp_ipsr_7to2_reg[7]_3 ),
        .O(\dp_ipsr_7to2[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAA9AA5955A95559)) 
    \dp_ipsr_7to2[7]_i_3 
       (.I0(invert_b_ex),
        .I1(b_reg_0[7]),
        .I2(au_b_use_pc_ex),
        .I3(use_imm_ex),
        .I4(Q[6]),
        .I5(imm_ex[7]),
        .O(\dp_ipsr_7to2[7]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h0BFB)) 
    \dp_ipsr_7to2[7]_i_4 
       (.I0(zero_a_ex),
        .I1(a_reg_0[6]),
        .I2(au_a_use_pc_ex),
        .I3(Q[6]),
        .O(\dp_ipsr_7to2[7]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT2 #(
    .INIT(4'hB)) 
    dp_tbit_reg_i_5
       (.I0(rf1_mux_ctl_ex[1]),
        .I1(rf1_mux_ctl_ex[0]),
        .O(dp_tbit_reg_i_5_n_0));
  LUT6 #(
    .INIT(64'hF8FFF8FFF80700F8)) 
    dp_tbit_reg_i_7
       (.I0(\dp_ipsr_1to0[1]_i_24_n_0 ),
        .I1(a_reg_0[21]),
        .I2(\reg_file_a[15][24]_i_2 ),
        .I3(invert_b_ex_reg_4),
        .I4(lu_ctl_ex[1]),
        .I5(lu_ctl_ex[0]),
        .O(dp_tbit_reg_i_7_n_0));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT5 #(
    .INIT(32'h40404044)) 
    dreq_rd_ex_i_2
       (.I0(lsm_last_a_phase_ex),
        .I1(ldm_pop_ex),
        .I2(last_uncond_phase_ex_reg_0),
        .I3(ldm_d_done_ex),
        .I4(lsm_last_d_phase_ex),
        .O(dreq_rd_ex_i_2_n_0));
  FDCE dreq_rd_ex_reg
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(nxt_dreq_rd_ex),
        .Q(dreq_rd_ex));
  LUT6 #(
    .INIT(64'h0000000032224444)) 
    dreq_wr_ex_i_2
       (.I0(\instr_de_reg_n_0_[13] ),
        .I1(\instr_de_reg_n_0_[15] ),
        .I2(\instr_de_reg_n_0_[12] ),
        .I3(u_excpt_n_153),
        .I4(\instr_de_reg_n_0_[14] ),
        .I5(dreq_wr_ex_i_3_n_0),
        .O(dreq_wr_ex_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT2 #(
    .INIT(4'hE)) 
    dreq_wr_ex_i_3
       (.I0(first32_ex_reg_0),
        .I1(\instr_de_reg_n_0_[11] ),
        .O(dreq_wr_ex_i_3_n_0));
  FDCE dreq_wr_ex_reg
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(nxt_dreq_wr_ex),
        .Q(dreq_wr_ex_reg_0));
  LUT6 #(
    .INIT(64'h0000000000000008)) 
    dtcm_sel_i_1
       (.I0(itcm_sel_i_2_n_0),
        .I1(\reg_file_a_reg[15][31]_0 [1]),
        .I2(\reg_file_a_reg[15][31]_0 [0]),
        .I3(\reg_file_a_reg[15][31]_0 [2]),
        .I4(\reg_file_a_reg[15][31]_0 [3]),
        .I5(u_fault),
        .O(nxt_dtcm_sel));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT3 #(
    .INIT(8'h08)) 
    excpt_ret_de_i_3
       (.I0(branching_ex),
        .I1(count[0]),
        .I2(count[1]),
        .O(excpt_ret_de_i_3_n_0));
  FDCE excpt_ret_de_reg
       (.C(HCLK),
        .CE(adv_fe_to_de),
        .CLR(SYSRESETn_0),
        .D(excpt_ret_fe),
        .Q(excpt_ret_de));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT2 #(
    .INIT(4'h8)) 
    first32_ex_i_3
       (.I0(\instr_de_reg_n_0_[13] ),
        .I1(\instr_de_reg_n_0_[15] ),
        .O(first32_ex_i_3_n_0));
  FDCE first32_ex_reg
       (.C(HCLK),
        .CE(adv_de_to_ex),
        .CLR(SYSRESETn_0),
        .D(first32_de),
        .Q(first32_ex_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT1 #(
    .INIT(2'h1)) 
    first_ex_phase_i_1
       (.I0(u_excpt_n_22),
        .O(last_phase_ex));
  FDCE first_ex_phase_reg
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(last_phase_ex),
        .Q(first_ex_phase));
  FDCE first_pop_pc_ex_reg
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(nxt_first_pop_pc_ex),
        .Q(ireq_ldpc));
  LUT6 #(
    .INIT(64'h4444444440004040)) 
    force_c_in_ex_i_1
       (.I0(first32_ex_reg_0),
        .I1(last_uncond_phase_ex_reg_0),
        .I2(force_c_in_ex_i_2_n_0),
        .I3(force_c_in_ex_i_3_n_0),
        .I4(force_c_in_ex_i_4_n_0),
        .I5(force_c_in_ex_i_5_n_0),
        .O(nxt_force_c_in_ex));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT4 #(
    .INIT(16'h1004)) 
    force_c_in_ex_i_2
       (.I0(\instr_de_reg_n_0_[11] ),
        .I1(\instr_de_reg_n_0_[14] ),
        .I2(\instr_de_reg_n_0_[12] ),
        .I3(\instr_de_reg_n_0_[13] ),
        .O(force_c_in_ex_i_2_n_0));
  LUT6 #(
    .INIT(64'h00000F0000060000)) 
    force_c_in_ex_i_3
       (.I0(\instr_de_reg_n_0_[6] ),
        .I1(\instr_de_reg_n_0_[7] ),
        .I2(se_byte_wb_i_3_n_0),
        .I3(p_25_in),
        .I4(\instr_de_reg_n_0_[9] ),
        .I5(\instr_de_reg_n_0_[10] ),
        .O(force_c_in_ex_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT5 #(
    .INIT(32'hFBFBFBFF)) 
    force_c_in_ex_i_4
       (.I0(\instr_de_reg_n_0_[14] ),
        .I1(\instr_de_reg_n_0_[15] ),
        .I2(\instr_de_reg_n_0_[9] ),
        .I3(\instr_de_reg_n_0_[7] ),
        .I4(\instr_de_reg_n_0_[10] ),
        .O(force_c_in_ex_i_4_n_0));
  LUT6 #(
    .INIT(64'h000000EA00000000)) 
    force_c_in_ex_i_5
       (.I0(\instr_de_reg_n_0_[13] ),
        .I1(\instr_de_reg_n_0_[9] ),
        .I2(\instr_de_reg_n_0_[12] ),
        .I3(\instr_de_reg_n_0_[14] ),
        .I4(\instr_de_reg_n_0_[15] ),
        .I5(\instr_de_reg_n_0_[11] ),
        .O(force_c_in_ex_i_5_n_0));
  FDCE force_c_in_ex_reg
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(nxt_force_c_in_ex),
        .Q(force_c_in_ex));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \genblk3[1].ram_block_reg_0_0_i_37 
       (.I0(wdata_mux_ctl_ex[1]),
        .I1(wdata_mux_ctl_ex[0]),
        .O(\genblk3[1].ram_block_reg_0_0_i_37_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \genblk3[1].ram_block_reg_1_0_i_6 
       (.I0(wdata_mux_ctl_ex[0]),
        .I1(wdata_mux_ctl_ex[1]),
        .O(\wdata_mux_ctl_ex_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \genblk3[1].ram_block_reg_2_0_i_6 
       (.I0(ls_half_ex),
        .I1(ls_byte_ex),
        .O(ls_half_ex_reg_1));
  FDCE held_fault0_reg
       (.C(HCLK),
        .CE(held_instr00),
        .CLR(SYSRESETn_0),
        .D(pf_fault_fe),
        .Q(held_fault0));
  FDCE held_fault1_reg
       (.C(HCLK),
        .CE(held_instr10),
        .CLR(SYSRESETn_0),
        .D(pf_fault_fe),
        .Q(held_fault1));
  LUT4 #(
    .INIT(16'h9009)) 
    \held_instr0[15]_i_5 
       (.I0(\read_addr_reg_n_0_[1] ),
        .I1(\write_addr_reg_n_0_[1] ),
        .I2(\read_addr_reg_n_0_[0] ),
        .I3(\write_addr_reg_n_0_[0] ),
        .O(\held_instr0[15]_i_5_n_0 ));
  FDCE \held_instr0_reg[0] 
       (.C(HCLK),
        .CE(held_instr00),
        .CLR(SYSRESETn_0),
        .D(\held_instr0_reg[15]_0 [0]),
        .Q(held_instr0[0]));
  FDCE \held_instr0_reg[10] 
       (.C(HCLK),
        .CE(held_instr00),
        .CLR(SYSRESETn_0),
        .D(\held_instr0_reg[15]_0 [10]),
        .Q(held_instr0[10]));
  FDCE \held_instr0_reg[11] 
       (.C(HCLK),
        .CE(held_instr00),
        .CLR(SYSRESETn_0),
        .D(\held_instr0_reg[15]_0 [11]),
        .Q(held_instr0[11]));
  FDCE \held_instr0_reg[12] 
       (.C(HCLK),
        .CE(held_instr00),
        .CLR(SYSRESETn_0),
        .D(\held_instr0_reg[15]_0 [12]),
        .Q(held_instr0[12]));
  FDCE \held_instr0_reg[13] 
       (.C(HCLK),
        .CE(held_instr00),
        .CLR(SYSRESETn_0),
        .D(\held_instr0_reg[15]_0 [13]),
        .Q(held_instr0[13]));
  FDCE \held_instr0_reg[14] 
       (.C(HCLK),
        .CE(held_instr00),
        .CLR(SYSRESETn_0),
        .D(\held_instr0_reg[15]_0 [14]),
        .Q(held_instr0[14]));
  FDCE \held_instr0_reg[15] 
       (.C(HCLK),
        .CE(held_instr00),
        .CLR(SYSRESETn_0),
        .D(\held_instr0_reg[15]_0 [15]),
        .Q(held_instr0[15]));
  FDCE \held_instr0_reg[1] 
       (.C(HCLK),
        .CE(held_instr00),
        .CLR(SYSRESETn_0),
        .D(\held_instr0_reg[15]_0 [1]),
        .Q(held_instr0[1]));
  FDCE \held_instr0_reg[2] 
       (.C(HCLK),
        .CE(held_instr00),
        .CLR(SYSRESETn_0),
        .D(\held_instr0_reg[15]_0 [2]),
        .Q(held_instr0[2]));
  FDCE \held_instr0_reg[3] 
       (.C(HCLK),
        .CE(held_instr00),
        .CLR(SYSRESETn_0),
        .D(\held_instr0_reg[15]_0 [3]),
        .Q(held_instr0[3]));
  FDCE \held_instr0_reg[4] 
       (.C(HCLK),
        .CE(held_instr00),
        .CLR(SYSRESETn_0),
        .D(\held_instr0_reg[15]_0 [4]),
        .Q(held_instr0[4]));
  FDCE \held_instr0_reg[5] 
       (.C(HCLK),
        .CE(held_instr00),
        .CLR(SYSRESETn_0),
        .D(\held_instr0_reg[15]_0 [5]),
        .Q(held_instr0[5]));
  FDCE \held_instr0_reg[6] 
       (.C(HCLK),
        .CE(held_instr00),
        .CLR(SYSRESETn_0),
        .D(\held_instr0_reg[15]_0 [6]),
        .Q(held_instr0[6]));
  FDCE \held_instr0_reg[7] 
       (.C(HCLK),
        .CE(held_instr00),
        .CLR(SYSRESETn_0),
        .D(\held_instr0_reg[15]_0 [7]),
        .Q(held_instr0[7]));
  FDCE \held_instr0_reg[8] 
       (.C(HCLK),
        .CE(held_instr00),
        .CLR(SYSRESETn_0),
        .D(\held_instr0_reg[15]_0 [8]),
        .Q(held_instr0[8]));
  FDCE \held_instr0_reg[9] 
       (.C(HCLK),
        .CE(held_instr00),
        .CLR(SYSRESETn_0),
        .D(\held_instr0_reg[15]_0 [9]),
        .Q(held_instr0[9]));
  FDCE \held_instr1_reg[0] 
       (.C(HCLK),
        .CE(held_instr10),
        .CLR(SYSRESETn_0),
        .D(\held_instr0_reg[15]_0 [0]),
        .Q(held_instr1[0]));
  FDCE \held_instr1_reg[10] 
       (.C(HCLK),
        .CE(held_instr10),
        .CLR(SYSRESETn_0),
        .D(\held_instr0_reg[15]_0 [10]),
        .Q(held_instr1[10]));
  FDCE \held_instr1_reg[11] 
       (.C(HCLK),
        .CE(held_instr10),
        .CLR(SYSRESETn_0),
        .D(\held_instr0_reg[15]_0 [11]),
        .Q(held_instr1[11]));
  FDCE \held_instr1_reg[12] 
       (.C(HCLK),
        .CE(held_instr10),
        .CLR(SYSRESETn_0),
        .D(\held_instr0_reg[15]_0 [12]),
        .Q(held_instr1[12]));
  FDCE \held_instr1_reg[13] 
       (.C(HCLK),
        .CE(held_instr10),
        .CLR(SYSRESETn_0),
        .D(\held_instr0_reg[15]_0 [13]),
        .Q(held_instr1[13]));
  FDCE \held_instr1_reg[14] 
       (.C(HCLK),
        .CE(held_instr10),
        .CLR(SYSRESETn_0),
        .D(\held_instr0_reg[15]_0 [14]),
        .Q(held_instr1[14]));
  FDCE \held_instr1_reg[15] 
       (.C(HCLK),
        .CE(held_instr10),
        .CLR(SYSRESETn_0),
        .D(\held_instr0_reg[15]_0 [15]),
        .Q(held_instr1[15]));
  FDCE \held_instr1_reg[1] 
       (.C(HCLK),
        .CE(held_instr10),
        .CLR(SYSRESETn_0),
        .D(\held_instr0_reg[15]_0 [1]),
        .Q(held_instr1[1]));
  FDCE \held_instr1_reg[2] 
       (.C(HCLK),
        .CE(held_instr10),
        .CLR(SYSRESETn_0),
        .D(\held_instr0_reg[15]_0 [2]),
        .Q(held_instr1[2]));
  FDCE \held_instr1_reg[3] 
       (.C(HCLK),
        .CE(held_instr10),
        .CLR(SYSRESETn_0),
        .D(\held_instr0_reg[15]_0 [3]),
        .Q(held_instr1[3]));
  FDCE \held_instr1_reg[4] 
       (.C(HCLK),
        .CE(held_instr10),
        .CLR(SYSRESETn_0),
        .D(\held_instr0_reg[15]_0 [4]),
        .Q(held_instr1[4]));
  FDCE \held_instr1_reg[5] 
       (.C(HCLK),
        .CE(held_instr10),
        .CLR(SYSRESETn_0),
        .D(\held_instr0_reg[15]_0 [5]),
        .Q(held_instr1[5]));
  FDCE \held_instr1_reg[6] 
       (.C(HCLK),
        .CE(held_instr10),
        .CLR(SYSRESETn_0),
        .D(\held_instr0_reg[15]_0 [6]),
        .Q(held_instr1[6]));
  FDCE \held_instr1_reg[7] 
       (.C(HCLK),
        .CE(held_instr10),
        .CLR(SYSRESETn_0),
        .D(\held_instr0_reg[15]_0 [7]),
        .Q(held_instr1[7]));
  FDCE \held_instr1_reg[8] 
       (.C(HCLK),
        .CE(held_instr10),
        .CLR(SYSRESETn_0),
        .D(\held_instr0_reg[15]_0 [8]),
        .Q(held_instr1[8]));
  FDCE \held_instr1_reg[9] 
       (.C(HCLK),
        .CE(held_instr10),
        .CLR(SYSRESETn_0),
        .D(\held_instr0_reg[15]_0 [9]),
        .Q(held_instr1[9]));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT4 #(
    .INIT(16'h0007)) 
    hi_pre_fetch_addr_i_3
       (.I0(first_ex_phase),
        .I1(branch_ex),
        .I2(bcc_first_ex_reg_0),
        .I3(ireq_ldpc),
        .O(first_ex_phase_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT3 #(
    .INIT(8'hF4)) 
    \hold_reg1[10]_i_1 
       (.I0(\hold_reg1_reg[15] ),
        .I1(se_byte_wb),
        .I2(\reg_file_a[15][10]_i_3_n_0 ),
        .O(se_half_wb_reg_0[2]));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT3 #(
    .INIT(8'hF4)) 
    \hold_reg1[11]_i_1 
       (.I0(\hold_reg1_reg[15] ),
        .I1(se_byte_wb),
        .I2(\reg_file_a[15][11]_i_3_n_0 ),
        .O(se_half_wb_reg_0[3]));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT3 #(
    .INIT(8'hF4)) 
    \hold_reg1[12]_i_1 
       (.I0(\hold_reg1_reg[15] ),
        .I1(se_byte_wb),
        .I2(\reg_file_a[15][12]_i_3_n_0 ),
        .O(se_half_wb_reg_0[4]));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT3 #(
    .INIT(8'hF4)) 
    \hold_reg1[13]_i_1 
       (.I0(\hold_reg1_reg[15] ),
        .I1(se_byte_wb),
        .I2(\reg_file_a[15][13]_i_3_n_0 ),
        .O(se_half_wb_reg_0[5]));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT3 #(
    .INIT(8'hF4)) 
    \hold_reg1[14]_i_1 
       (.I0(\hold_reg1_reg[15] ),
        .I1(se_byte_wb),
        .I2(\reg_file_a[15][14]_i_3_n_0 ),
        .O(se_half_wb_reg_0[6]));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT3 #(
    .INIT(8'hF4)) 
    \hold_reg1[15]_i_1 
       (.I0(\hold_reg1_reg[15] ),
        .I1(se_byte_wb),
        .I2(\reg_file_a[15][15]_i_3_n_0 ),
        .O(se_half_wb_reg_0[7]));
  LUT3 #(
    .INIT(8'hF4)) 
    \hold_reg1[25]_i_1 
       (.I0(\hold_reg1_reg[15] ),
        .I1(se_half_wb),
        .I2(\reg_file_a[15][25]_i_3_n_0 ),
        .O(se_half_wb_reg_0[8]));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \hold_reg1[31]_i_4 
       (.I0(\hold_reg1_reg[6] ),
        .I1(ls_byte_ex),
        .I2(ls_half_ex),
        .O(\mem_held_addr_reg[1]_2 ));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT4 #(
    .INIT(16'h0007)) 
    \hold_reg1[31]_i_5 
       (.I0(\HADDR_reg[0] ),
        .I1(ls_byte_ex),
        .I2(sbit_ctl_ex),
        .I3(ls_half_ex),
        .O(\mem_held_addr_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT3 #(
    .INIT(8'h15)) 
    \hold_reg1[7]_i_5 
       (.I0(\swz_ctl_ex_reg[1]_0 [0]),
        .I1(\HADDR_reg[0] ),
        .I2(ls_byte_ex),
        .O(\swz_ctl_ex_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT4 #(
    .INIT(16'h0155)) 
    \hold_reg1[7]_i_6 
       (.I0(\swz_ctl_ex_reg[1]_0 [1]),
        .I1(ls_half_ex),
        .I2(ls_byte_ex),
        .I3(\hold_reg1_reg[6] ),
        .O(\swz_ctl_ex_reg[1]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT3 #(
    .INIT(8'hF4)) 
    \hold_reg1[8]_i_1 
       (.I0(\hold_reg1_reg[15] ),
        .I1(se_byte_wb),
        .I2(\reg_file_a[15][8]_i_3_n_0 ),
        .O(se_half_wb_reg_0[0]));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT3 #(
    .INIT(8'hF4)) 
    \hold_reg1[9]_i_1 
       (.I0(\hold_reg1_reg[15] ),
        .I1(se_byte_wb),
        .I2(\reg_file_a[15][9]_i_3_n_0 ),
        .O(se_half_wb_reg_0[1]));
  LUT2 #(
    .INIT(4'hB)) 
    \hold_reg2[31]_i_4 
       (.I0(pre_pc_mux_ctl_ex[1]),
        .I1(u_excpt_n_22),
        .O(pc_mux_ctl_ex));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT4 #(
    .INIT(16'h00E0)) 
    \hsize_1_0[0]_i_1 
       (.I0(dreq_rd_ex),
        .I1(biu_write_reg_0),
        .I2(ls_half_ex),
        .I3(ls_byte_ex),
        .O(ls_half_ex_reg_0[0]));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT4 #(
    .INIT(16'h111F)) 
    \hsize_1_0[1]_i_1 
       (.I0(ls_half_ex),
        .I1(ls_byte_ex),
        .I2(dreq_rd_ex),
        .I3(biu_write_reg_0),
        .O(ls_half_ex_reg_0[1]));
  LUT2 #(
    .INIT(4'h8)) 
    i_nxt_mul_last_phase_ex_i_1
       (.I0(first_ex_phase),
        .I1(mul_ex_reg_n_0),
        .O(i_nxt_mul_last_phase_ex_i_1_n_0));
  FDCE i_nxt_mul_last_phase_ex_reg
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(i_nxt_mul_last_phase_ex_i_1_n_0),
        .Q(i_nxt_mul_last_phase_ex_reg_n_0));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    ifetch_i_2
       (.I0(u_excpt_n_22),
        .I1(store_ex),
        .I2(stm_push_ex),
        .O(ifetch_i_2_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    ifetch_i_7
       (.I0(stm_push_ex_i_2_n_0),
        .I1(dreq_wr_ex_i_2_n_0),
        .O(ifetch_i_7_n_0));
  FDCE ifetch_reg
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(nxt_ifetch),
        .Q(fetch_phase));
  LUT5 #(
    .INIT(32'h0000C808)) 
    \imm_ex[0]_i_1 
       (.I0(\instr_de_reg_n_0_[6] ),
        .I1(\imm_ex[0]_i_2_n_0 ),
        .I2(\imm_ex[0]_i_3_n_0 ),
        .I3(rptr_b2_de[0]),
        .I4(\imm_ex[0]_i_4_n_0 ),
        .O(nxt_imm_int[0]));
  LUT6 #(
    .INIT(64'h0020002200000022)) 
    \imm_ex[0]_i_2 
       (.I0(last_uncond_phase_ex_reg_0),
        .I1(first32_ex_reg_0),
        .I2(\instr_de_reg_n_0_[12] ),
        .I3(\instr_de_reg_n_0_[15] ),
        .I4(\instr_de_reg_n_0_[14] ),
        .I5(\instr_de_reg_n_0_[13] ),
        .O(\imm_ex[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT4 #(
    .INIT(16'h1102)) 
    \imm_ex[0]_i_3 
       (.I0(\instr_de_reg_n_0_[15] ),
        .I1(\instr_de_reg_n_0_[14] ),
        .I2(\instr_de_reg_n_0_[12] ),
        .I3(\instr_de_reg_n_0_[13] ),
        .O(\imm_ex[0]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h44444744)) 
    \imm_ex[0]_i_4 
       (.I0(\instr_de_reg_n_0_[14] ),
        .I1(first32_ex_reg_0),
        .I2(\imm_ex[0]_i_5_n_0 ),
        .I3(\imm_ex[0]_i_6_n_0 ),
        .I4(\imm_ex[0]_i_7_n_0 ),
        .O(\imm_ex[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000000707070707)) 
    \imm_ex[0]_i_5 
       (.I0(\instr_de_reg_n_0_[11] ),
        .I1(\instr_de_reg_n_0_[12] ),
        .I2(\instr_de_reg_n_0_[14] ),
        .I3(\instr_de_reg_n_0_[10] ),
        .I4(\instr_de_reg_n_0_[9] ),
        .I5(\instr_de_reg_n_0_[13] ),
        .O(\imm_ex[0]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF80FFFFFF)) 
    \imm_ex[0]_i_6 
       (.I0(\instr_de_reg_n_0_[11] ),
        .I1(\instr_de_reg_n_0_[10] ),
        .I2(\instr_de_reg_n_0_[9] ),
        .I3(\instr_de_reg_n_0_[15] ),
        .I4(\instr_de_reg_n_0_[12] ),
        .I5(\instr_de_reg_n_0_[13] ),
        .O(\imm_ex[0]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h1B1ABFBF1B1ABBBA)) 
    \imm_ex[0]_i_7 
       (.I0(\instr_de_reg_n_0_[13] ),
        .I1(\instr_de_reg_n_0_[14] ),
        .I2(\instr_de_reg_n_0_[15] ),
        .I3(\instr_de_reg_n_0_[10] ),
        .I4(\instr_de_reg_n_0_[12] ),
        .I5(\instr_de_reg_n_0_[11] ),
        .O(\imm_ex[0]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAAAA002A00000020)) 
    \imm_ex[10]_i_1 
       (.I0(\imm_ex[29]_i_4_n_0 ),
        .I1(\imm_ex[11]_i_2_n_0 ),
        .I2(\imm_ex[11]_i_3_n_0 ),
        .I3(\imm_ex[11]_i_4_n_0 ),
        .I4(first32_ex_reg_0),
        .I5(\instr_de_reg_n_0_[9] ),
        .O(nxt_imm_int[10]));
  LUT6 #(
    .INIT(64'hAAAA002A00000020)) 
    \imm_ex[11]_i_1 
       (.I0(\imm_ex[29]_i_4_n_0 ),
        .I1(\imm_ex[11]_i_2_n_0 ),
        .I2(\imm_ex[11]_i_3_n_0 ),
        .I3(\imm_ex[11]_i_4_n_0 ),
        .I4(first32_ex_reg_0),
        .I5(\instr_de_reg_n_0_[10] ),
        .O(nxt_imm_int[11]));
  LUT6 #(
    .INIT(64'hBB886740FFFFFFFF)) 
    \imm_ex[11]_i_2 
       (.I0(\instr_de_reg_n_0_[13] ),
        .I1(\instr_de_reg_n_0_[12] ),
        .I2(\instr_de_reg_n_0_[11] ),
        .I3(\instr_de_reg_n_0_[14] ),
        .I4(\instr_de_reg_n_0_[15] ),
        .I5(\instr_de_reg_n_0_[7] ),
        .O(\imm_ex[11]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT5 #(
    .INIT(32'hFDEEDD15)) 
    \imm_ex[11]_i_3 
       (.I0(\instr_de_reg_n_0_[13] ),
        .I1(\instr_de_reg_n_0_[12] ),
        .I2(\instr_de_reg_n_0_[11] ),
        .I3(\instr_de_reg_n_0_[14] ),
        .I4(\instr_de_reg_n_0_[15] ),
        .O(\imm_ex[11]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT5 #(
    .INIT(32'hEFBF3FFF)) 
    \imm_ex[11]_i_4 
       (.I0(\instr_de_reg_n_0_[11] ),
        .I1(\instr_de_reg_n_0_[12] ),
        .I2(\instr_de_reg_n_0_[15] ),
        .I3(\instr_de_reg_n_0_[14] ),
        .I4(\instr_de_reg_n_0_[13] ),
        .O(\imm_ex[11]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFFFEEFE)) 
    \imm_ex[1]_i_1 
       (.I0(\imm_ex[9]_i_2_n_0 ),
        .I1(first32_ex_reg_0),
        .I2(rptr_b2_de[0]),
        .I3(\imm_ex[7]_i_2_n_0 ),
        .I4(\imm_ex[1]_i_2_n_0 ),
        .I5(\imm_ex[1]_i_3_n_0 ),
        .O(nxt_imm_int[1]));
  LUT6 #(
    .INIT(64'hF0C000C000A000A0)) 
    \imm_ex[1]_i_2 
       (.I0(\instr_de_reg_n_0_[7] ),
        .I1(rptr_b2_de[1]),
        .I2(\imm_ex[7]_i_2_n_0 ),
        .I3(\imm_ex[9]_i_4_n_0 ),
        .I4(\instr_de_reg_n_0_[6] ),
        .I5(\imm_ex[0]_i_3_n_0 ),
        .O(\imm_ex[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hDFDDDDDDFFFDFFFD)) 
    \imm_ex[1]_i_3 
       (.I0(last_uncond_phase_ex_reg_0),
        .I1(\imm_ex[0]_i_4_n_0 ),
        .I2(first32_ex_reg_0),
        .I3(\imm_ex[9]_i_2_n_0 ),
        .I4(\imm_ex[29]_i_5_n_0 ),
        .I5(rptr_b2_de[0]),
        .O(\imm_ex[1]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT5 #(
    .INIT(32'hBFB0BFBF)) 
    \imm_ex[23]_i_2 
       (.I0(\imm_ex[29]_i_5_n_0 ),
        .I1(\instr_de_reg_n_0_[7] ),
        .I2(\imm_ex[9]_i_2_n_0 ),
        .I3(\imm_ex[7]_i_2_n_0 ),
        .I4(\instr_de_reg_n_0_[10] ),
        .O(\imm_ex[23]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h8A)) 
    \imm_ex[29]_i_1 
       (.I0(biu_rdy),
        .I1(last_uncond_phase_ex_reg_0),
        .I2(shift_ex),
        .O(\imm_ex[29]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFBFFFBAAFBFFFB)) 
    \imm_ex[29]_i_3 
       (.I0(first32_ex_reg_0),
        .I1(\instr_de_reg_n_0_[10] ),
        .I2(\imm_ex[7]_i_2_n_0 ),
        .I3(\imm_ex[9]_i_2_n_0 ),
        .I4(\instr_de_reg_n_0_[7] ),
        .I5(\imm_ex[29]_i_5_n_0 ),
        .O(\imm_ex[29]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \imm_ex[29]_i_4 
       (.I0(last_uncond_phase_ex_reg_0),
        .I1(\imm_ex[0]_i_4_n_0 ),
        .O(\imm_ex[29]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT5 #(
    .INIT(32'hAACC548C)) 
    \imm_ex[29]_i_5 
       (.I0(\instr_de_reg_n_0_[15] ),
        .I1(\instr_de_reg_n_0_[14] ),
        .I2(\instr_de_reg_n_0_[11] ),
        .I3(\instr_de_reg_n_0_[12] ),
        .I4(\instr_de_reg_n_0_[13] ),
        .O(\imm_ex[29]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h0000FFD5)) 
    \imm_ex[2]_i_1 
       (.I0(\imm_ex[29]_i_4_n_0 ),
        .I1(rptr_b2_de[1]),
        .I2(first32_ex_reg_0),
        .I3(\imm_ex[2]_i_2_n_0 ),
        .I4(\imm_ex[2]_i_3_n_0 ),
        .O(nxt_imm_int[2]));
  LUT6 #(
    .INIT(64'h00000000F572A072)) 
    \imm_ex[2]_i_2 
       (.I0(\imm_ex[7]_i_2_n_0 ),
        .I1(\imm_ex[2]_i_4_n_0 ),
        .I2(rptr_b2_de[1]),
        .I3(\imm_ex[9]_i_2_n_0 ),
        .I4(rptr_b2_de[0]),
        .I5(first32_ex_reg_0),
        .O(\imm_ex[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00000EEE)) 
    \imm_ex[2]_i_3 
       (.I0(\imm_ex[5]_i_3_n_0 ),
        .I1(\imm_ex[2]_i_5_n_0 ),
        .I2(use_r_list_ex),
        .I3(\cycle_count_ex[0]_i_1_n_0 ),
        .I4(\imm_ex[29]_i_4_n_0 ),
        .O(\imm_ex[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h88BB88B888BB8BBB)) 
    \imm_ex[2]_i_4 
       (.I0(\imm_ex[2]_i_6_n_0 ),
        .I1(\imm_ex[9]_i_4_n_0 ),
        .I2(\imm_ex[11]_i_3_n_0 ),
        .I3(p_25_in),
        .I4(\imm_ex[29]_i_5_n_0 ),
        .I5(rptr_b2_de[2]),
        .O(\imm_ex[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hD22D2DD22DD2D22D)) 
    \imm_ex[2]_i_5 
       (.I0(p_25_in),
        .I1(\instr_de_reg_n_0_[14] ),
        .I2(\r_list_offset_ex[0]_i_3_n_0 ),
        .I3(cps_data),
        .I4(\instr_de_reg_n_0_[5] ),
        .I5(\r_list_offset_ex[0]_i_2_n_0 ),
        .O(\imm_ex[2]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT5 #(
    .INIT(32'h47444777)) 
    \imm_ex[2]_i_6 
       (.I0(rptr_b2_de[0]),
        .I1(\imm_ex[11]_i_3_n_0 ),
        .I2(\instr_de_reg_n_0_[6] ),
        .I3(\imm_ex[29]_i_5_n_0 ),
        .I4(\instr_de_reg_n_0_[7] ),
        .O(\imm_ex[2]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h0000FFD5)) 
    \imm_ex[3]_i_1 
       (.I0(\imm_ex[29]_i_4_n_0 ),
        .I1(rptr_b2_de[2]),
        .I2(first32_ex_reg_0),
        .I3(\imm_ex[3]_i_2_n_0 ),
        .I4(\imm_ex[3]_i_3_n_0 ),
        .O(nxt_imm_int[3]));
  LUT6 #(
    .INIT(64'h00000000F572A072)) 
    \imm_ex[3]_i_2 
       (.I0(\imm_ex[7]_i_2_n_0 ),
        .I1(\imm_ex[3]_i_4_n_0 ),
        .I2(rptr_b2_de[2]),
        .I3(\imm_ex[9]_i_2_n_0 ),
        .I4(rptr_b2_de[1]),
        .I5(first32_ex_reg_0),
        .O(\imm_ex[3]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h0000DD0D)) 
    \imm_ex[3]_i_3 
       (.I0(r_list_offset[1]),
        .I1(\imm_ex[5]_i_3_n_0 ),
        .I2(use_r_list_ex),
        .I3(\imm_ex[3]_i_5_n_0 ),
        .I4(\imm_ex[29]_i_4_n_0 ),
        .O(\imm_ex[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8BBB8B888BBB8BBB)) 
    \imm_ex[3]_i_4 
       (.I0(\imm_ex[3]_i_6_n_0 ),
        .I1(\imm_ex[9]_i_4_n_0 ),
        .I2(\instr_de_reg_n_0_[9] ),
        .I3(\imm_ex[11]_i_3_n_0 ),
        .I4(\imm_ex[29]_i_5_n_0 ),
        .I5(\instr_de_reg_n_0_[3] ),
        .O(\imm_ex[3]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT5 #(
    .INIT(32'hBBBEBBBB)) 
    \imm_ex[3]_i_5 
       (.I0(last_uncond_phase_ex_reg_0),
        .I1(cycle_count_ex[1]),
        .I2(ldm_d_done_ex),
        .I3(lsm_last_d_phase_ex),
        .I4(cycle_count_ex[0]),
        .O(\imm_ex[3]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT5 #(
    .INIT(32'h47444777)) 
    \imm_ex[3]_i_6 
       (.I0(rptr_b2_de[1]),
        .I1(\imm_ex[11]_i_3_n_0 ),
        .I2(\instr_de_reg_n_0_[7] ),
        .I3(\imm_ex[29]_i_5_n_0 ),
        .I4(p_25_in),
        .O(\imm_ex[3]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hA222AAAA)) 
    \imm_ex[4]_i_1 
       (.I0(\imm_ex[4]_i_2_n_0 ),
        .I1(\imm_ex[29]_i_4_n_0 ),
        .I2(\instr_de_reg_n_0_[3] ),
        .I3(first32_ex_reg_0),
        .I4(\imm_ex[4]_i_3_n_0 ),
        .O(nxt_imm_int[4]));
  LUT5 #(
    .INIT(32'hFFFF44F4)) 
    \imm_ex[4]_i_2 
       (.I0(\imm_ex[5]_i_3_n_0 ),
        .I1(r_list_offset[2]),
        .I2(use_r_list_ex),
        .I3(\imm_ex[4]_i_4_n_0 ),
        .I4(\imm_ex[29]_i_4_n_0 ),
        .O(\imm_ex[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hBABAFBABBFBFFBAB)) 
    \imm_ex[4]_i_3 
       (.I0(first32_ex_reg_0),
        .I1(\instr_de_reg_n_0_[3] ),
        .I2(\imm_ex[7]_i_2_n_0 ),
        .I3(\imm_ex[4]_i_5_n_0 ),
        .I4(\imm_ex[9]_i_2_n_0 ),
        .I5(rptr_b2_de[2]),
        .O(\imm_ex[4]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hABFEAAFFAAFFAAFF)) 
    \imm_ex[4]_i_4 
       (.I0(last_uncond_phase_ex_reg_0),
        .I1(ldm_d_done_ex),
        .I2(lsm_last_d_phase_ex),
        .I3(cycle_count_ex[2]),
        .I4(cycle_count_ex[0]),
        .I5(cycle_count_ex[1]),
        .O(\imm_ex[4]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h8BBB8B888BBB8BBB)) 
    \imm_ex[4]_i_5 
       (.I0(\imm_ex[4]_i_6_n_0 ),
        .I1(\imm_ex[9]_i_4_n_0 ),
        .I2(\instr_de_reg_n_0_[10] ),
        .I3(\imm_ex[11]_i_3_n_0 ),
        .I4(\imm_ex[29]_i_5_n_0 ),
        .I5(cps_data),
        .O(\imm_ex[4]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h47444777)) 
    \imm_ex[4]_i_6 
       (.I0(rptr_b2_de[2]),
        .I1(\imm_ex[11]_i_3_n_0 ),
        .I2(p_25_in),
        .I3(\imm_ex[29]_i_5_n_0 ),
        .I4(\instr_de_reg_n_0_[9] ),
        .O(\imm_ex[4]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h00000000BABAFFBA)) 
    \imm_ex[5]_i_1 
       (.I0(\imm_ex[29]_i_4_n_0 ),
        .I1(\imm_ex[5]_i_2_n_0 ),
        .I2(use_r_list_ex),
        .I3(r_list_offset[3]),
        .I4(\imm_ex[5]_i_3_n_0 ),
        .I5(\imm_ex[5]_i_4_n_0 ),
        .O(nxt_imm_int[5]));
  LUT6 #(
    .INIT(64'hEBAFAFAFAFAFAFAF)) 
    \imm_ex[5]_i_2 
       (.I0(last_uncond_phase_ex_reg_0),
        .I1(\cycle_count_ex[3]_i_2_n_0 ),
        .I2(cycle_count_ex[3]),
        .I3(cycle_count_ex[2]),
        .I4(cycle_count_ex[1]),
        .I5(cycle_count_ex[0]),
        .O(\imm_ex[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFF7)) 
    \imm_ex[5]_i_3 
       (.I0(last_uncond_phase_ex_reg_0),
        .I1(\instr_de_reg_n_0_[10] ),
        .I2(first32_ex_reg_0),
        .I3(push_ex_i_2_n_0),
        .I4(\instr_de_reg_n_0_[11] ),
        .I5(\instr_de_reg_n_0_[9] ),
        .O(\imm_ex[5]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT4 #(
    .INIT(16'h2A00)) 
    \imm_ex[5]_i_4 
       (.I0(\imm_ex[5]_i_5_n_0 ),
        .I1(first32_ex_reg_0),
        .I2(cps_data),
        .I3(\imm_ex[29]_i_4_n_0 ),
        .O(\imm_ex[5]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFAABBABAFFFBBAB)) 
    \imm_ex[5]_i_5 
       (.I0(first32_ex_reg_0),
        .I1(\imm_ex_reg[5]_i_6_n_0 ),
        .I2(cps_data),
        .I3(\imm_ex[7]_i_2_n_0 ),
        .I4(\imm_ex[9]_i_2_n_0 ),
        .I5(\instr_de_reg_n_0_[3] ),
        .O(\imm_ex[5]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h010A0000)) 
    \imm_ex[5]_i_7 
       (.I0(\instr_de_reg_n_0_[13] ),
        .I1(\instr_de_reg_n_0_[12] ),
        .I2(\instr_de_reg_n_0_[14] ),
        .I3(\instr_de_reg_n_0_[15] ),
        .I4(\instr_de_reg_n_0_[5] ),
        .O(\imm_ex[5]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \imm_ex[5]_i_8 
       (.I0(\instr_de_reg_n_0_[3] ),
        .I1(\imm_ex[11]_i_3_n_0 ),
        .I2(\instr_de_reg_n_0_[9] ),
        .I3(\imm_ex[29]_i_5_n_0 ),
        .I4(\instr_de_reg_n_0_[10] ),
        .O(\imm_ex[5]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \imm_ex[6]_i_1 
       (.I0(\imm_ex[29]_i_4_n_0 ),
        .I1(\imm_ex[6]_i_2_n_0 ),
        .O(nxt_imm_int[6]));
  LUT6 #(
    .INIT(64'h0010FABA0510FFBF)) 
    \imm_ex[6]_i_2 
       (.I0(first32_ex_reg_0),
        .I1(cps_data),
        .I2(\imm_ex[9]_i_2_n_0 ),
        .I3(\imm_ex[7]_i_2_n_0 ),
        .I4(\instr_de_reg_n_0_[5] ),
        .I5(\imm_ex[6]_i_3_n_0 ),
        .O(\imm_ex[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hA0C0A00FA0C0A000)) 
    \imm_ex[6]_i_3 
       (.I0(cps_data),
        .I1(\instr_de_reg_n_0_[10] ),
        .I2(\imm_ex[9]_i_4_n_0 ),
        .I3(\imm_ex[11]_i_3_n_0 ),
        .I4(\imm_ex[29]_i_5_n_0 ),
        .I5(\instr_de_reg_n_0_[6] ),
        .O(\imm_ex[6]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFFDDFDD)) 
    \imm_ex[7]_i_1 
       (.I0(\imm_ex[9]_i_2_n_0 ),
        .I1(first32_ex_reg_0),
        .I2(\imm_ex[7]_i_2_n_0 ),
        .I3(\instr_de_reg_n_0_[5] ),
        .I4(\instr_de_reg_n_0_[6] ),
        .I5(\imm_ex[7]_i_3_n_0 ),
        .O(nxt_imm_int[7]));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT5 #(
    .INIT(32'hF9FFFFFF)) 
    \imm_ex[7]_i_2 
       (.I0(\instr_de_reg_n_0_[14] ),
        .I1(\instr_de_reg_n_0_[12] ),
        .I2(\instr_de_reg_n_0_[11] ),
        .I3(\instr_de_reg_n_0_[15] ),
        .I4(\instr_de_reg_n_0_[13] ),
        .O(\imm_ex[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h4FFF4FFF4FFF4F4F)) 
    \imm_ex[7]_i_3 
       (.I0(\instr_de_reg_n_0_[6] ),
        .I1(first32_ex_reg_0),
        .I2(\imm_ex[29]_i_4_n_0 ),
        .I3(\imm_ex[7]_i_4_n_0 ),
        .I4(\imm_ex[7]_i_5_n_0 ),
        .I5(\imm_ex[7]_i_6_n_0 ),
        .O(\imm_ex[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF44FFFFFF44F4)) 
    \imm_ex[7]_i_4 
       (.I0(\imm_ex[11]_i_2_n_0 ),
        .I1(\imm_ex[7]_i_7_n_0 ),
        .I2(\instr_de_reg_n_0_[6] ),
        .I3(\imm_ex[11]_i_4_n_0 ),
        .I4(first32_ex_reg_0),
        .I5(\imm_ex[11]_i_3_n_0 ),
        .O(\imm_ex[7]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT5 #(
    .INIT(32'h09F569F5)) 
    \imm_ex[7]_i_5 
       (.I0(\instr_de_reg_n_0_[14] ),
        .I1(\instr_de_reg_n_0_[12] ),
        .I2(\instr_de_reg_n_0_[13] ),
        .I3(\instr_de_reg_n_0_[15] ),
        .I4(\instr_de_reg_n_0_[11] ),
        .O(\imm_ex[7]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h555555D555D55555)) 
    \imm_ex[7]_i_6 
       (.I0(\instr_de_reg_n_0_[5] ),
        .I1(\instr_de_reg_n_0_[13] ),
        .I2(\instr_de_reg_n_0_[15] ),
        .I3(\instr_de_reg_n_0_[11] ),
        .I4(\instr_de_reg_n_0_[12] ),
        .I5(\instr_de_reg_n_0_[14] ),
        .O(\imm_ex[7]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT5 #(
    .INIT(32'h11111000)) 
    \imm_ex[7]_i_7 
       (.I0(\instr_de_reg_n_0_[15] ),
        .I1(\instr_de_reg_n_0_[14] ),
        .I2(\instr_de_reg_n_0_[11] ),
        .I3(\instr_de_reg_n_0_[12] ),
        .I4(\instr_de_reg_n_0_[13] ),
        .O(\imm_ex[7]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT4 #(
    .INIT(16'hA202)) 
    \imm_ex[8]_i_1 
       (.I0(\imm_ex[29]_i_4_n_0 ),
        .I1(\imm_ex[8]_i_2_n_0 ),
        .I2(first32_ex_reg_0),
        .I3(\instr_de_reg_n_0_[7] ),
        .O(nxt_imm_int[8]));
  LUT6 #(
    .INIT(64'h15552222BFFF7777)) 
    \imm_ex[8]_i_2 
       (.I0(\imm_ex[9]_i_2_n_0 ),
        .I1(\instr_de_reg_n_0_[6] ),
        .I2(\imm_ex[11]_i_3_n_0 ),
        .I3(\imm_ex[9]_i_4_n_0 ),
        .I4(\imm_ex[7]_i_2_n_0 ),
        .I5(\instr_de_reg_n_0_[7] ),
        .O(\imm_ex[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAA000808AA002A2A)) 
    \imm_ex[9]_i_1 
       (.I0(\imm_ex[29]_i_4_n_0 ),
        .I1(\imm_ex[9]_i_2_n_0 ),
        .I2(\imm_ex[11]_i_2_n_0 ),
        .I3(p_25_in),
        .I4(first32_ex_reg_0),
        .I5(\imm_ex[9]_i_3_n_0 ),
        .O(nxt_imm_int[9]));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT5 #(
    .INIT(32'h40006000)) 
    \imm_ex[9]_i_2 
       (.I0(\instr_de_reg_n_0_[13] ),
        .I1(\instr_de_reg_n_0_[14] ),
        .I2(\instr_de_reg_n_0_[15] ),
        .I3(\instr_de_reg_n_0_[12] ),
        .I4(\instr_de_reg_n_0_[11] ),
        .O(\imm_ex[9]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT5 #(
    .INIT(32'h3F55FF55)) 
    \imm_ex[9]_i_3 
       (.I0(p_25_in),
        .I1(\imm_ex[11]_i_3_n_0 ),
        .I2(\imm_ex[9]_i_4_n_0 ),
        .I3(\imm_ex[7]_i_2_n_0 ),
        .I4(\instr_de_reg_n_0_[7] ),
        .O(\imm_ex[9]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hC3BF8CCC)) 
    \imm_ex[9]_i_4 
       (.I0(\instr_de_reg_n_0_[11] ),
        .I1(\instr_de_reg_n_0_[15] ),
        .I2(\instr_de_reg_n_0_[13] ),
        .I3(\instr_de_reg_n_0_[12] ),
        .I4(\instr_de_reg_n_0_[14] ),
        .O(\imm_ex[9]_i_4_n_0 ));
  FDCE \imm_ex_reg[0] 
       (.C(HCLK),
        .CE(\imm_ex[29]_i_1_n_0 ),
        .CLR(SYSRESETn_0),
        .D(nxt_imm_int[0]),
        .Q(\imm_ex_reg[0]_0 ));
  FDCE \imm_ex_reg[10] 
       (.C(HCLK),
        .CE(\imm_ex[29]_i_1_n_0 ),
        .CLR(SYSRESETn_0),
        .D(nxt_imm_int[10]),
        .Q(imm_ex[10]));
  FDCE \imm_ex_reg[11] 
       (.C(HCLK),
        .CE(\imm_ex[29]_i_1_n_0 ),
        .CLR(SYSRESETn_0),
        .D(nxt_imm_int[11]),
        .Q(imm_ex[11]));
  FDCE \imm_ex_reg[12] 
       (.C(HCLK),
        .CE(\imm_ex[29]_i_1_n_0 ),
        .CLR(SYSRESETn_0),
        .D(nxt_imm_int[12]),
        .Q(imm_ex[12]));
  FDCE \imm_ex_reg[13] 
       (.C(HCLK),
        .CE(\imm_ex[29]_i_1_n_0 ),
        .CLR(SYSRESETn_0),
        .D(nxt_imm_int[13]),
        .Q(imm_ex[13]));
  FDCE \imm_ex_reg[14] 
       (.C(HCLK),
        .CE(\imm_ex[29]_i_1_n_0 ),
        .CLR(SYSRESETn_0),
        .D(nxt_imm_int[14]),
        .Q(imm_ex[14]));
  FDCE \imm_ex_reg[15] 
       (.C(HCLK),
        .CE(\imm_ex[29]_i_1_n_0 ),
        .CLR(SYSRESETn_0),
        .D(nxt_imm_int[15]),
        .Q(imm_ex[15]));
  FDCE \imm_ex_reg[16] 
       (.C(HCLK),
        .CE(\imm_ex[29]_i_1_n_0 ),
        .CLR(SYSRESETn_0),
        .D(nxt_imm_int[16]),
        .Q(imm_ex[16]));
  FDCE \imm_ex_reg[17] 
       (.C(HCLK),
        .CE(\imm_ex[29]_i_1_n_0 ),
        .CLR(SYSRESETn_0),
        .D(nxt_imm_int[17]),
        .Q(imm_ex[17]));
  FDCE \imm_ex_reg[18] 
       (.C(HCLK),
        .CE(\imm_ex[29]_i_1_n_0 ),
        .CLR(SYSRESETn_0),
        .D(nxt_imm_int[18]),
        .Q(imm_ex[18]));
  FDCE \imm_ex_reg[19] 
       (.C(HCLK),
        .CE(\imm_ex[29]_i_1_n_0 ),
        .CLR(SYSRESETn_0),
        .D(nxt_imm_int[19]),
        .Q(imm_ex[19]));
  FDCE \imm_ex_reg[1] 
       (.C(HCLK),
        .CE(\imm_ex[29]_i_1_n_0 ),
        .CLR(SYSRESETn_0),
        .D(nxt_imm_int[1]),
        .Q(imm_ex[1]));
  FDCE \imm_ex_reg[20] 
       (.C(HCLK),
        .CE(\imm_ex[29]_i_1_n_0 ),
        .CLR(SYSRESETn_0),
        .D(nxt_imm_int[20]),
        .Q(imm_ex[20]));
  FDCE \imm_ex_reg[21] 
       (.C(HCLK),
        .CE(\imm_ex[29]_i_1_n_0 ),
        .CLR(SYSRESETn_0),
        .D(nxt_imm_int[21]),
        .Q(imm_ex[21]));
  FDCE \imm_ex_reg[22] 
       (.C(HCLK),
        .CE(\imm_ex[29]_i_1_n_0 ),
        .CLR(SYSRESETn_0),
        .D(nxt_imm_int[22]),
        .Q(imm_ex[22]));
  FDCE \imm_ex_reg[23] 
       (.C(HCLK),
        .CE(\imm_ex[29]_i_1_n_0 ),
        .CLR(SYSRESETn_0),
        .D(nxt_imm_int[23]),
        .Q(imm_ex[23]));
  FDCE \imm_ex_reg[29] 
       (.C(HCLK),
        .CE(\imm_ex[29]_i_1_n_0 ),
        .CLR(SYSRESETn_0),
        .D(nxt_imm_int[29]),
        .Q(imm_ex[29]));
  FDCE \imm_ex_reg[2] 
       (.C(HCLK),
        .CE(\imm_ex[29]_i_1_n_0 ),
        .CLR(SYSRESETn_0),
        .D(nxt_imm_int[2]),
        .Q(imm_ex[2]));
  FDCE \imm_ex_reg[3] 
       (.C(HCLK),
        .CE(\imm_ex[29]_i_1_n_0 ),
        .CLR(SYSRESETn_0),
        .D(nxt_imm_int[3]),
        .Q(imm_ex[3]));
  FDCE \imm_ex_reg[4] 
       (.C(HCLK),
        .CE(\imm_ex[29]_i_1_n_0 ),
        .CLR(SYSRESETn_0),
        .D(nxt_imm_int[4]),
        .Q(imm_ex[4]));
  FDCE \imm_ex_reg[5] 
       (.C(HCLK),
        .CE(\imm_ex[29]_i_1_n_0 ),
        .CLR(SYSRESETn_0),
        .D(nxt_imm_int[5]),
        .Q(imm_ex[5]));
  MUXF7 \imm_ex_reg[5]_i_6 
       (.I0(\imm_ex[5]_i_7_n_0 ),
        .I1(\imm_ex[5]_i_8_n_0 ),
        .O(\imm_ex_reg[5]_i_6_n_0 ),
        .S(\imm_ex[9]_i_4_n_0 ));
  FDCE \imm_ex_reg[6] 
       (.C(HCLK),
        .CE(\imm_ex[29]_i_1_n_0 ),
        .CLR(SYSRESETn_0),
        .D(nxt_imm_int[6]),
        .Q(imm_ex[6]));
  FDCE \imm_ex_reg[7] 
       (.C(HCLK),
        .CE(\imm_ex[29]_i_1_n_0 ),
        .CLR(SYSRESETn_0),
        .D(nxt_imm_int[7]),
        .Q(imm_ex[7]));
  FDCE \imm_ex_reg[8] 
       (.C(HCLK),
        .CE(\imm_ex[29]_i_1_n_0 ),
        .CLR(SYSRESETn_0),
        .D(nxt_imm_int[8]),
        .Q(imm_ex[8]));
  FDCE \imm_ex_reg[9] 
       (.C(HCLK),
        .CE(\imm_ex[29]_i_1_n_0 ),
        .CLR(SYSRESETn_0),
        .D(nxt_imm_int[9]),
        .Q(imm_ex[9]));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \instr_de[0]_i_2 
       (.I0(held_instr1[0]),
        .I1(\read_addr_reg_n_0_[0] ),
        .I2(held_instr0[0]),
        .O(\instr_de[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \instr_de[10]_i_3 
       (.I0(held_instr1[10]),
        .I1(\read_addr_reg_n_0_[0] ),
        .I2(held_instr0[10]),
        .O(\instr_de[10]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \instr_de[11]_i_2 
       (.I0(held_instr1[11]),
        .I1(\read_addr_reg_n_0_[0] ),
        .I2(held_instr0[11]),
        .O(\instr_de[11]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \instr_de[12]_i_3 
       (.I0(held_instr1[12]),
        .I1(\read_addr_reg_n_0_[0] ),
        .I2(held_instr0[12]),
        .O(\instr_de[12]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \instr_de[13]_i_3 
       (.I0(held_instr1[13]),
        .I1(\read_addr_reg_n_0_[0] ),
        .I2(held_instr0[13]),
        .O(\instr_de[13]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \instr_de[14]_i_2 
       (.I0(held_instr1[14]),
        .I1(\read_addr_reg_n_0_[0] ),
        .I2(held_instr0[14]),
        .O(\instr_de[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hA8)) 
    \instr_de[15]_i_1 
       (.I0(biu_rdy),
        .I1(last_uncond_phase_ex_reg_0),
        .I2(branching_ex),
        .O(adv_fe_to_de));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \instr_de[15]_i_4 
       (.I0(held_instr1[15]),
        .I1(\read_addr_reg_n_0_[0] ),
        .I2(held_instr0[15]),
        .O(\instr_de[15]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \instr_de[1]_i_4 
       (.I0(held_instr1[1]),
        .I1(\read_addr_reg_n_0_[0] ),
        .I2(held_instr0[1]),
        .O(\instr_de[1]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \instr_de[2]_i_3 
       (.I0(held_instr1[2]),
        .I1(\read_addr_reg_n_0_[0] ),
        .I2(held_instr0[2]),
        .O(\instr_de[2]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \instr_de[3]_i_3 
       (.I0(held_instr1[3]),
        .I1(\read_addr_reg_n_0_[0] ),
        .I2(held_instr0[3]),
        .O(\instr_de[3]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \instr_de[4]_i_4 
       (.I0(held_instr1[4]),
        .I1(\read_addr_reg_n_0_[0] ),
        .I2(held_instr0[4]),
        .O(\instr_de[4]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \instr_de[5]_i_3 
       (.I0(held_instr1[5]),
        .I1(\read_addr_reg_n_0_[0] ),
        .I2(held_instr0[5]),
        .O(\instr_de[5]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \instr_de[6]_i_3 
       (.I0(held_instr1[6]),
        .I1(\read_addr_reg_n_0_[0] ),
        .I2(held_instr0[6]),
        .O(\instr_de[6]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \instr_de[7]_i_3 
       (.I0(held_instr1[7]),
        .I1(\read_addr_reg_n_0_[0] ),
        .I2(held_instr0[7]),
        .O(\instr_de[7]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \instr_de[8]_i_3 
       (.I0(held_instr1[8]),
        .I1(\read_addr_reg_n_0_[0] ),
        .I2(held_instr0[8]),
        .O(\instr_de[8]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \instr_de[9]_i_3 
       (.I0(held_instr1[9]),
        .I1(\read_addr_reg_n_0_[0] ),
        .I2(held_instr0[9]),
        .O(\instr_de[9]_i_3_n_0 ));
  FDCE \instr_de_reg[0] 
       (.C(HCLK),
        .CE(adv_fe_to_de),
        .CLR(SYSRESETn_0),
        .D(nxt_instr_de[0]),
        .Q(rptr_b2_de[0]));
  FDPE \instr_de_reg[10] 
       (.C(HCLK),
        .CE(adv_fe_to_de),
        .D(nxt_instr_de[10]),
        .PRE(SYSRESETn_0),
        .Q(\instr_de_reg_n_0_[10] ));
  FDCE \instr_de_reg[11] 
       (.C(HCLK),
        .CE(adv_fe_to_de),
        .CLR(SYSRESETn_0),
        .D(nxt_instr_de[11]),
        .Q(\instr_de_reg_n_0_[11] ));
  FDCE \instr_de_reg[12] 
       (.C(HCLK),
        .CE(adv_fe_to_de),
        .CLR(SYSRESETn_0),
        .D(nxt_instr_de[12]),
        .Q(\instr_de_reg_n_0_[12] ));
  FDPE \instr_de_reg[13] 
       (.C(HCLK),
        .CE(adv_fe_to_de),
        .D(nxt_instr_de[13]),
        .PRE(SYSRESETn_0),
        .Q(\instr_de_reg_n_0_[13] ));
  FDCE \instr_de_reg[14] 
       (.C(HCLK),
        .CE(adv_fe_to_de),
        .CLR(SYSRESETn_0),
        .D(nxt_instr_de[14]),
        .Q(\instr_de_reg_n_0_[14] ));
  FDCE \instr_de_reg[15] 
       (.C(HCLK),
        .CE(adv_fe_to_de),
        .CLR(SYSRESETn_0),
        .D(nxt_instr_de[15]),
        .Q(\instr_de_reg_n_0_[15] ));
  FDCE \instr_de_reg[1] 
       (.C(HCLK),
        .CE(adv_fe_to_de),
        .CLR(SYSRESETn_0),
        .D(nxt_instr_de[1]),
        .Q(rptr_b2_de[1]));
  FDCE \instr_de_reg[2] 
       (.C(HCLK),
        .CE(adv_fe_to_de),
        .CLR(SYSRESETn_0),
        .D(nxt_instr_de[2]),
        .Q(rptr_b2_de[2]));
  FDCE \instr_de_reg[3] 
       (.C(HCLK),
        .CE(adv_fe_to_de),
        .CLR(SYSRESETn_0),
        .D(nxt_instr_de[3]),
        .Q(\instr_de_reg_n_0_[3] ));
  FDCE \instr_de_reg[4] 
       (.C(HCLK),
        .CE(adv_fe_to_de),
        .CLR(SYSRESETn_0),
        .D(nxt_instr_de[4]),
        .Q(cps_data));
  FDCE \instr_de_reg[5] 
       (.C(HCLK),
        .CE(adv_fe_to_de),
        .CLR(SYSRESETn_0),
        .D(nxt_instr_de[5]),
        .Q(\instr_de_reg_n_0_[5] ));
  FDCE \instr_de_reg[6] 
       (.C(HCLK),
        .CE(adv_fe_to_de),
        .CLR(SYSRESETn_0),
        .D(nxt_instr_de[6]),
        .Q(\instr_de_reg_n_0_[6] ));
  FDCE \instr_de_reg[7] 
       (.C(HCLK),
        .CE(adv_fe_to_de),
        .CLR(SYSRESETn_0),
        .D(nxt_instr_de[7]),
        .Q(\instr_de_reg_n_0_[7] ));
  FDPE \instr_de_reg[8] 
       (.C(HCLK),
        .CE(adv_fe_to_de),
        .D(nxt_instr_de[8]),
        .PRE(SYSRESETn_0),
        .Q(p_25_in));
  FDPE \instr_de_reg[9] 
       (.C(HCLK),
        .CE(adv_fe_to_de),
        .D(nxt_instr_de[9]),
        .PRE(SYSRESETn_0),
        .Q(\instr_de_reg_n_0_[9] ));
  LUT6 #(
    .INIT(64'h3330111033300000)) 
    instr_faulted_i_2
       (.I0(ls_half_ex),
        .I1(ls_byte_ex),
        .I2(dreq_wr_ex_reg_0),
        .I3(dreq_rd_ex),
        .I4(O[0]),
        .I5(O[1]),
        .O(u_fault));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT5 #(
    .INIT(32'h00000400)) 
    invert_b_ex2_i_3
       (.I0(\instr_de_reg_n_0_[10] ),
        .I1(\instr_de_reg_n_0_[7] ),
        .I2(\instr_de_reg_n_0_[14] ),
        .I3(\instr_de_reg_n_0_[15] ),
        .I4(\instr_de_reg_n_0_[9] ),
        .O(invert_b_ex2_i_3_n_0));
  LUT6 #(
    .INIT(64'h000000000F00A260)) 
    invert_b_ex2_i_4
       (.I0(\instr_de_reg_n_0_[7] ),
        .I1(\instr_de_reg_n_0_[6] ),
        .I2(\instr_de_reg_n_0_[9] ),
        .I3(p_25_in),
        .I4(\instr_de_reg_n_0_[10] ),
        .I5(se_byte_wb_i_3_n_0),
        .O(invert_b_ex2_i_4_n_0));
  FDCE invert_b_ex2_reg
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg),
        .CLR(SYSRESETn_0),
        .D(nxt_invert_b_ex2),
        .Q(invert_b_ex2));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT5 #(
    .INIT(32'h00010000)) 
    invert_b_ex_i_2
       (.I0(\instr_de_reg_n_0_[9] ),
        .I1(\instr_de_reg_n_0_[11] ),
        .I2(push_ex_i_2_n_0),
        .I3(first32_ex_reg_0),
        .I4(\instr_de_reg_n_0_[10] ),
        .O(invert_b_ex_i_2_n_0));
  FDCE invert_b_ex_reg
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(nxt_invert_b_ex),
        .Q(invert_b_ex));
  LUT6 #(
    .INIT(64'h00000000A8080000)) 
    itcm_sel_i_1
       (.I0(itcm_sel_i_2_n_0),
        .I1(en_itcm_core[0]),
        .I2(\reg_file_a_reg[15][31]_0 [0]),
        .I3(en_itcm_core[1]),
        .I4(itcm_sel_reg),
        .I5(u_fault),
        .O(nxt_itcm_sel));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT4 #(
    .INIT(16'h00A8)) 
    itcm_sel_i_2
       (.I0(dtcm_sel_reg),
        .I1(dreq_rd_ex),
        .I2(dreq_wr_ex_reg_0),
        .I3(dtcm_sel_reg_0),
        .O(itcm_sel_i_2_n_0));
  LUT6 #(
    .INIT(64'hF8FFF8F8F8F8F8F8)) 
    last_uncond_phase_ex_i_5
       (.I0(second_ex_phase),
        .I1(three_phase_ex),
        .I2(i_nxt_mul_last_phase_ex_reg_n_0),
        .I3(count[1]),
        .I4(count[0]),
        .I5(branching_ex),
        .O(last_uncond_phase_ex_i_5_n_0));
  FDPE last_uncond_phase_ex_reg
       (.C(HCLK),
        .CE(biu_rdy),
        .D(nxt_last_uncond_phase_ex),
        .PRE(SYSRESETn_0),
        .Q(last_uncond_phase_ex_reg_0));
  FDCE ld_slow_ex_reg
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg),
        .CLR(SYSRESETn_0),
        .D(three_phase_ex_i_1_n_0),
        .Q(ld_slow_ex));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ldm_base_i_1
       (.I0(lsm_last_d_phase_ex),
        .I1(ldm_pop_ex),
        .O(nxt_ldm_base));
  LUT6 #(
    .INIT(64'h0004000000000004)) 
    ldm_base_load_i_1
       (.I0(ldm_base),
        .I1(ldm_pop_ex),
        .I2(lsm_last_d_phase_ex),
        .I3(ldm_base_load_i_2_n_0),
        .I4(rptr_a_ex[3]),
        .I5(reg_sel[3]),
        .O(nxt_ldm_base_load));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    ldm_base_load_i_2
       (.I0(rptr_a_ex[1]),
        .I1(reg_sel[1]),
        .I2(rptr_a_ex[2]),
        .I3(reg_sel[2]),
        .I4(reg_sel[0]),
        .I5(rptr_a_ex[0]),
        .O(ldm_base_load_i_2_n_0));
  FDCE ldm_base_load_reg
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(nxt_ldm_base_load),
        .Q(ldm_base_load));
  LUT3 #(
    .INIT(8'h0E)) 
    ldm_base_loaded_i_1
       (.I0(nxt_ldm_base_load),
        .I1(ldm_base_loaded),
        .I2(ldm_base),
        .O(nxt_ldm_base_loaded));
  FDCE ldm_base_loaded_reg
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(nxt_ldm_base_loaded),
        .Q(ldm_base_loaded));
  FDCE ldm_base_reg
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(nxt_ldm_base),
        .Q(ldm_base));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT3 #(
    .INIT(8'h54)) 
    ldm_d_done_ex_i_1
       (.I0(last_uncond_phase_ex_reg_0),
        .I1(ldm_d_done_ex),
        .I2(lsm_last_d_phase_ex),
        .O(ldm_d_done_ex_i_1_n_0));
  FDCE ldm_d_done_ex_reg
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(ldm_d_done_ex_i_1_n_0),
        .Q(ldm_d_done_ex));
  LUT6 #(
    .INIT(64'h0D000C0000000C00)) 
    ldm_pop_ex_i_2
       (.I0(\instr_de_reg_n_0_[9] ),
        .I1(\instr_de_reg_n_0_[14] ),
        .I2(u_excpt_n_152),
        .I3(\instr_de_reg_n_0_[11] ),
        .I4(\instr_de_reg_n_0_[12] ),
        .I5(\instr_de_reg_n_0_[13] ),
        .O(ldm_pop_ex_i_2_n_0));
  FDCE ldm_pop_ex_reg
       (.C(HCLK),
        .CE(adv_de_to_ex),
        .CLR(SYSRESETn_0),
        .D(ldm_pop_de),
        .Q(ldm_pop_ex));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT4 #(
    .INIT(16'hFFCB)) 
    load_ex_i_2
       (.I0(\instr_de_reg_n_0_[13] ),
        .I1(\instr_de_reg_n_0_[15] ),
        .I2(\instr_de_reg_n_0_[14] ),
        .I3(load_ex_i_3_n_0),
        .O(load_ex_i_2_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF007F00FF)) 
    load_ex_i_3
       (.I0(u_excpt_n_138),
        .I1(\instr_de_reg_n_0_[12] ),
        .I2(\instr_de_reg_n_0_[10] ),
        .I3(\instr_de_reg_n_0_[11] ),
        .I4(\instr_de_reg_n_0_[9] ),
        .I5(first32_ex_reg_0),
        .O(load_ex_i_3_n_0));
  FDCE load_ex_reg
       (.C(HCLK),
        .CE(adv_de_to_ex),
        .CLR(SYSRESETn_0),
        .D(u_excpt_n_17),
        .Q(load_ex));
  LUT6 #(
    .INIT(64'h1100110001000000)) 
    ls_byte_ex_i_1
       (.I0(se_byte_wb_i_3_n_0),
        .I1(first32_ex_reg_0),
        .I2(u_excpt_n_156),
        .I3(\instr_de_reg_n_0_[12] ),
        .I4(\instr_de_reg_n_0_[10] ),
        .I5(\instr_de_reg_n_0_[13] ),
        .O(ls_byte_de));
  FDCE ls_byte_ex_reg
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg),
        .CLR(SYSRESETn_0),
        .D(ls_byte_de),
        .Q(ls_byte_ex));
  LUT6 #(
    .INIT(64'h00000055008A0000)) 
    ls_half_ex_i_1
       (.I0(\instr_de_reg_n_0_[12] ),
        .I1(u_excpt_n_156),
        .I2(ls_half_ex_i_2_n_0),
        .I3(ls_half_ex_i_3_n_0),
        .I4(\instr_de_reg_n_0_[14] ),
        .I5(\instr_de_reg_n_0_[15] ),
        .O(ls_half_de));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT2 #(
    .INIT(4'hB)) 
    ls_half_ex_i_2
       (.I0(\instr_de_reg_n_0_[10] ),
        .I1(\instr_de_reg_n_0_[9] ),
        .O(ls_half_ex_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT2 #(
    .INIT(4'hE)) 
    ls_half_ex_i_3
       (.I0(first32_ex_reg_0),
        .I1(\instr_de_reg_n_0_[13] ),
        .O(ls_half_ex_i_3_n_0));
  FDCE ls_half_ex_reg
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg),
        .CLR(SYSRESETn_0),
        .D(ls_half_de),
        .Q(ls_half_ex));
  LUT6 #(
    .INIT(64'h0006090009000009)) 
    lsm_last_d_phase_ex_i_1
       (.I0(cycle_count_ex[3]),
        .I1(r_list_offset_ex[3]),
        .I2(lsm_last_d_phase_ex_i_2_n_0),
        .I3(r_list_offset_ex[2]),
        .I4(lsm_last_d_phase_ex_i_3_n_0),
        .I5(cycle_count_ex[2]),
        .O(lsm_last_a_phase_ex));
  LUT6 #(
    .INIT(64'hFFAB57FFABFFFF57)) 
    lsm_last_d_phase_ex_i_2
       (.I0(r_list_offset_ex[0]),
        .I1(ldm_pop_ex),
        .I2(stm_push_ex),
        .I3(cycle_count_ex[1]),
        .I4(cycle_count_ex[0]),
        .I5(r_list_offset_ex[1]),
        .O(lsm_last_d_phase_ex_i_2_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    lsm_last_d_phase_ex_i_3
       (.I0(cycle_count_ex[1]),
        .I1(cycle_count_ex[0]),
        .O(lsm_last_d_phase_ex_i_3_n_0));
  FDCE lsm_last_d_phase_ex_reg
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(lsm_last_a_phase_ex),
        .Q(lsm_last_d_phase_ex));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT4 #(
    .INIT(16'hFBAA)) 
    \lu_ctl_ex[0]_i_1 
       (.I0(\instr_de_reg_n_0_[13] ),
        .I1(\instr_de_reg_n_0_[7] ),
        .I2(\instr_de_reg_n_0_[6] ),
        .I3(p_25_in),
        .O(lu_ctl));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \lu_ctl_ex[1]_i_1 
       (.I0(\instr_de_reg_n_0_[9] ),
        .I1(\instr_de_reg_n_0_[6] ),
        .I2(\instr_de_reg_n_0_[14] ),
        .O(\lu_ctl_ex[1]_i_1_n_0 ));
  FDCE \lu_ctl_ex_reg[0] 
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg),
        .CLR(SYSRESETn_0),
        .D(lu_ctl),
        .Q(lu_ctl_ex[0]));
  FDCE \lu_ctl_ex_reg[1] 
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg),
        .CLR(SYSRESETn_0),
        .D(\lu_ctl_ex[1]_i_1_n_0 ),
        .Q(lu_ctl_ex[1]));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT4 #(
    .INIT(16'hA280)) 
    \m_amt_ex2[0]_i_1 
       (.I0(\m_amt_ex2[4]_i_2_n_0 ),
        .I1(use_imm_ex),
        .I2(\imm_ex_reg[0]_0 ),
        .I3(b_reg_0[0]),
        .O(use_imm_ex_reg_0[0]));
  LUT2 #(
    .INIT(4'h2)) 
    \m_amt_ex2[1]_i_1 
       (.I0(\m_amt_ex2[4]_i_2_n_0 ),
        .I1(use_imm_ex_reg_3),
        .O(use_imm_ex_reg_0[1]));
  LUT6 #(
    .INIT(64'h27272727272727D8)) 
    \m_amt_ex2[1]_i_2 
       (.I0(use_imm_ex),
        .I1(imm_ex[1]),
        .I2(b_reg_0[1]),
        .I3(\m_amt_ex2[1]_i_3_n_0 ),
        .I4(shift_op[0]),
        .I5(shift_op[1]),
        .O(use_imm_ex_reg_3));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT3 #(
    .INIT(8'h35)) 
    \m_amt_ex2[1]_i_3 
       (.I0(b_reg_0[0]),
        .I1(\imm_ex_reg[0]_0 ),
        .I2(use_imm_ex),
        .O(\m_amt_ex2[1]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_amt_ex2[2]_i_1 
       (.I0(\m_amt_ex2[4]_i_2_n_0 ),
        .I1(use_imm_ex_reg_1),
        .O(use_imm_ex_reg_0[2]));
  LUT6 #(
    .INIT(64'hE2E2E2E2E2E2E21D)) 
    \m_amt_ex2[2]_i_2 
       (.I0(b_reg_0[2]),
        .I1(use_imm_ex),
        .I2(imm_ex[2]),
        .I3(\m_amt_ex2[2]_i_3_n_0 ),
        .I4(shift_op[0]),
        .I5(shift_op[1]),
        .O(use_imm_ex_reg_1));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT5 #(
    .INIT(32'h00500353)) 
    \m_amt_ex2[2]_i_3 
       (.I0(\imm_ex_reg[0]_0 ),
        .I1(b_reg_0[0]),
        .I2(use_imm_ex),
        .I3(imm_ex[1]),
        .I4(b_reg_0[1]),
        .O(\m_amt_ex2[2]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_amt_ex2[3]_i_1 
       (.I0(\m_amt_ex2[4]_i_2_n_0 ),
        .I1(use_imm_ex_reg_2),
        .O(use_imm_ex_reg_0[3]));
  LUT6 #(
    .INIT(64'hE2E2E2E2E2E2E21D)) 
    \m_amt_ex2[3]_i_2 
       (.I0(b_reg_0[3]),
        .I1(use_imm_ex),
        .I2(imm_ex[3]),
        .I3(m_invert_ex2_i_4_n_0),
        .I4(shift_op[0]),
        .I5(shift_op[1]),
        .O(use_imm_ex_reg_2));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_amt_ex2[4]_i_1 
       (.I0(use_imm_ex_reg_4),
        .I1(\m_amt_ex2[4]_i_2_n_0 ),
        .O(use_imm_ex_reg_0[4]));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT5 #(
    .INIT(32'h00003F55)) 
    \m_amt_ex2[4]_i_2 
       (.I0(shift_op[1]),
        .I1(m_invert_ex2_i_2_n_0),
        .I2(use_imm_ex),
        .I3(shift_op[0]),
        .I4(m_invert_ex2_i_3_n_0),
        .O(\m_amt_ex2[4]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT3 #(
    .INIT(8'h80)) 
    m_ext_ex2_i_1
       (.I0(a_reg_0[26]),
        .I1(shift_op[1]),
        .I2(shift_op[0]),
        .O(m_ext));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT5 #(
    .INIT(32'hFFFFC011)) 
    m_invert_ex2_i_1
       (.I0(shift_op[1]),
        .I1(m_invert_ex2_i_2_n_0),
        .I2(use_imm_ex),
        .I3(shift_op[0]),
        .I4(m_invert_ex2_i_3_n_0),
        .O(m_invert));
  LUT6 #(
    .INIT(64'h0000003050500030)) 
    m_invert_ex2_i_2
       (.I0(imm_ex[3]),
        .I1(b_reg_0[3]),
        .I2(m_invert_ex2_i_4_n_0),
        .I3(b_reg_0[4]),
        .I4(use_imm_ex),
        .I5(imm_ex[4]),
        .O(m_invert_ex2_i_2_n_0));
  LUT6 #(
    .INIT(64'h0000DDDD0000DDD0)) 
    m_invert_ex2_i_3
       (.I0(shift_op[1]),
        .I1(shift_op[0]),
        .I2(b_reg_0[6]),
        .I3(b_reg_0[7]),
        .I4(use_imm_ex),
        .I5(b_reg_0[5]),
        .O(m_invert_ex2_i_3_n_0));
  LUT6 #(
    .INIT(64'h0000005030300050)) 
    m_invert_ex2_i_4
       (.I0(b_reg_0[1]),
        .I1(imm_ex[1]),
        .I2(\m_amt_ex2[1]_i_3_n_0 ),
        .I3(b_reg_0[2]),
        .I4(use_imm_ex),
        .I5(imm_ex[2]),
        .O(m_invert_ex2_i_4_n_0));
  LUT6 #(
    .INIT(64'hAAA9AA5955A95559)) 
    \mem_held_addr[11]_i_10 
       (.I0(invert_b_ex),
        .I1(b_reg_0[9]),
        .I2(au_b_use_pc_ex),
        .I3(use_imm_ex),
        .I4(Q[8]),
        .I5(imm_ex[9]),
        .O(\mem_held_addr[11]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h555655A6AA56AAA6)) 
    \mem_held_addr[11]_i_3 
       (.I0(invert_b_ex),
        .I1(b_reg_0[10]),
        .I2(au_b_use_pc_ex),
        .I3(use_imm_ex),
        .I4(Q[9]),
        .I5(imm_ex[10]),
        .O(invert_b_ex_reg_0[0]));
  LUT4 #(
    .INIT(16'hF404)) 
    \mem_held_addr[11]_i_4 
       (.I0(zero_a_ex),
        .I1(a_reg_0[8]),
        .I2(au_a_use_pc_ex),
        .I3(Q[8]),
        .O(\u_dp/au_in_a [9]));
  LUT4 #(
    .INIT(16'hF404)) 
    \mem_held_addr[11]_i_5 
       (.I0(zero_a_ex),
        .I1(a_reg_0[7]),
        .I2(au_a_use_pc_ex),
        .I3(Q[7]),
        .O(\u_dp/au_in_a [8]));
  LUT5 #(
    .INIT(32'hF4040BFB)) 
    \mem_held_addr[11]_i_8 
       (.I0(zero_a_ex),
        .I1(a_reg_0[8]),
        .I2(au_a_use_pc_ex),
        .I3(Q[8]),
        .I4(\mem_held_addr[11]_i_10_n_0 ),
        .O(\mem_held_addr[11]_i_8_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \mem_held_addr[15]_i_3 
       (.I0(\reg_file_a[15][14]_i_5_n_0 ),
        .O(\u_dp/au_in_a [14]));
  LUT1 #(
    .INIT(2'h1)) 
    \mem_held_addr[15]_i_4 
       (.I0(\reg_file_a[15][13]_i_5_n_0 ),
        .O(\u_dp/au_in_a [13]));
  LUT2 #(
    .INIT(4'h9)) 
    \mem_held_addr[15]_i_7 
       (.I0(\reg_file_a[15][14]_i_5_n_0 ),
        .I1(\u_dp/u_alu_dec/au_in_b [14]),
        .O(\mem_held_addr[15]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mem_held_addr[15]_i_8 
       (.I0(\reg_file_a[15][13]_i_5_n_0 ),
        .I1(\reg_file_a[15][13]_i_4_n_0 ),
        .O(\mem_held_addr[15]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h555655A6AA56AAA6)) 
    \mem_held_addr[19]_i_2 
       (.I0(invert_b_ex),
        .I1(b_reg_0[19]),
        .I2(au_b_use_pc_ex),
        .I3(use_imm_ex),
        .I4(Q[18]),
        .I5(imm_ex[19]),
        .O(invert_b_ex_reg_0[1]));
  LUT1 #(
    .INIT(2'h1)) 
    \mem_held_addr[19]_i_3 
       (.I0(\reg_file_a[15][18]_i_5_n_0 ),
        .O(\u_dp/au_in_a [18]));
  LUT1 #(
    .INIT(2'h1)) 
    \mem_held_addr[19]_i_4 
       (.I0(\reg_file_a[15][17]_i_5_n_0 ),
        .O(\u_dp/au_in_a [17]));
  LUT6 #(
    .INIT(64'h555655A6AA56AAA6)) 
    \mem_held_addr[19]_i_5 
       (.I0(invert_b_ex),
        .I1(b_reg_0[16]),
        .I2(au_b_use_pc_ex),
        .I3(use_imm_ex),
        .I4(Q[15]),
        .I5(imm_ex[16]),
        .O(\u_dp/u_alu_dec/au_in_b [16]));
  LUT2 #(
    .INIT(4'h6)) 
    \mem_held_addr[19]_i_7 
       (.I0(\reg_file_a[15][18]_i_5_n_0 ),
        .I1(\reg_file_a[15][18]_i_4_n_0 ),
        .O(\mem_held_addr[19]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mem_held_addr[19]_i_8 
       (.I0(\reg_file_a[15][17]_i_5_n_0 ),
        .I1(\reg_file_a[15][17]_i_4_n_0 ),
        .O(\mem_held_addr[19]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \mem_held_addr[19]_i_9 
       (.I0(\reg_file_a[15][16]_i_4_n_0 ),
        .I1(\u_dp/u_alu_dec/au_in_b [16]),
        .O(\mem_held_addr[19]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h555655A6AA56AAA6)) 
    \mem_held_addr[23]_i_2 
       (.I0(invert_b_ex),
        .I1(b_reg_0[23]),
        .I2(au_b_use_pc_ex),
        .I3(use_imm_ex),
        .I4(Q[22]),
        .I5(imm_ex[23]),
        .O(invert_b_ex_reg_0[2]));
  LUT1 #(
    .INIT(2'h1)) 
    \mem_held_addr[23]_i_3 
       (.I0(\reg_file_a[15][22]_i_5_n_0 ),
        .O(\u_dp/au_in_a [22]));
  LUT1 #(
    .INIT(2'h1)) 
    \mem_held_addr[23]_i_4 
       (.I0(\reg_file_a[15][21]_i_5_n_0 ),
        .O(\u_dp/au_in_a [21]));
  LUT1 #(
    .INIT(2'h1)) 
    \mem_held_addr[23]_i_5 
       (.I0(\reg_file_a[15][20]_i_5_n_0 ),
        .O(\u_dp/au_in_a [20]));
  LUT2 #(
    .INIT(4'h9)) 
    \mem_held_addr[23]_i_7 
       (.I0(\reg_file_a[15][22]_i_5_n_0 ),
        .I1(\u_dp/u_alu_dec/au_in_b [22]),
        .O(\mem_held_addr[23]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \mem_held_addr[23]_i_8 
       (.I0(\reg_file_a[15][21]_i_5_n_0 ),
        .I1(\u_dp/u_alu_dec/au_in_b [21]),
        .O(\mem_held_addr[23]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mem_held_addr[23]_i_9 
       (.I0(\reg_file_a[15][20]_i_5_n_0 ),
        .I1(\reg_file_a[15][20]_i_4_n_0 ),
        .O(\mem_held_addr[23]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAAA9AA5955A95559)) 
    \mem_held_addr[27]_i_11 
       (.I0(invert_b_ex),
        .I1(b_reg_0[24]),
        .I2(au_b_use_pc_ex),
        .I3(use_imm_ex),
        .I4(Q[23]),
        .I5(imm_ex[29]),
        .O(invert_b_ex_reg_4));
  LUT6 #(
    .INIT(64'h555655A6AA56AAA6)) 
    \mem_held_addr[27]_i_4 
       (.I0(invert_b_ex),
        .I1(b_reg_0[25]),
        .I2(au_b_use_pc_ex),
        .I3(use_imm_ex),
        .I4(Q[24]),
        .I5(imm_ex[29]),
        .O(invert_b_ex_reg_0[3]));
  LUT6 #(
    .INIT(64'h555655A6AA56AAA6)) 
    \mem_held_addr[31]_i_10 
       (.I0(invert_b_ex),
        .I1(b_reg_0[30]),
        .I2(au_b_use_pc_ex),
        .I3(use_imm_ex),
        .I4(Q[29]),
        .I5(imm_ex[29]),
        .O(invert_b_ex_reg_0[6]));
  LUT6 #(
    .INIT(64'hAAA9AA5955A95559)) 
    \mem_held_addr[31]_i_12 
       (.I0(invert_b_ex),
        .I1(b_reg_0[29]),
        .I2(au_b_use_pc_ex),
        .I3(use_imm_ex),
        .I4(Q[28]),
        .I5(imm_ex[29]),
        .O(invert_b_ex_reg_7));
  LUT6 #(
    .INIT(64'hAAA9AA5955A95559)) 
    \mem_held_addr[31]_i_13 
       (.I0(invert_b_ex),
        .I1(b_reg_0[28]),
        .I2(au_b_use_pc_ex),
        .I3(use_imm_ex),
        .I4(Q[27]),
        .I5(imm_ex[29]),
        .O(invert_b_ex_reg_6));
  LUT6 #(
    .INIT(64'h555655A6AA56AAA6)) 
    \mem_held_addr[31]_i_2 
       (.I0(invert_b_ex),
        .I1(b_reg_0[31]),
        .I2(au_b_use_pc_ex),
        .I3(use_imm_ex),
        .I4(Q[30]),
        .I5(imm_ex[29]),
        .O(invert_b_ex_reg_0[7]));
  LUT6 #(
    .INIT(64'h5350535FACAFACA0)) 
    \mem_held_addr[31]_i_4 
       (.I0(imm_ex[29]),
        .I1(Q[28]),
        .I2(use_imm_ex),
        .I3(au_b_use_pc_ex),
        .I4(b_reg_0[29]),
        .I5(invert_b_ex),
        .O(invert_b_ex_reg_0[5]));
  LUT2 #(
    .INIT(4'h9)) 
    \mem_held_addr[31]_i_6 
       (.I0(v_flag_au_i_2_n_0),
        .I1(invert_b_ex_reg_0[7]),
        .O(S));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT5 #(
    .INIT(32'hF0FFBBBB)) 
    \mem_held_addr[3]_i_11 
       (.I0(zero_a_ex),
        .I1(a_reg_0[1]),
        .I2(pc_mask1_ex),
        .I3(Q[0]),
        .I4(au_a_use_pc_ex),
        .O(\mem_held_addr[3]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h555655A6AA56AAA6)) 
    \mem_held_addr[3]_i_12 
       (.I0(invert_b_ex),
        .I1(b_reg_0[3]),
        .I2(au_b_use_pc_ex),
        .I3(use_imm_ex),
        .I4(Q[2]),
        .I5(imm_ex[3]),
        .O(\u_dp/u_alu_dec/au_in_b [3]));
  LUT6 #(
    .INIT(64'h555655A6AA56AAA6)) 
    \mem_held_addr[3]_i_13 
       (.I0(invert_b_ex),
        .I1(b_reg_0[2]),
        .I2(au_b_use_pc_ex),
        .I3(use_imm_ex),
        .I4(Q[1]),
        .I5(imm_ex[2]),
        .O(\u_dp/u_alu_dec/au_in_b [2]));
  LUT6 #(
    .INIT(64'hAA556565AA55A9A9)) 
    \mem_held_addr[3]_i_14 
       (.I0(invert_b_ex),
        .I1(au_b_use_pc_ex),
        .I2(b_reg_0[1]),
        .I3(imm_ex[1]),
        .I4(use_imm_ex),
        .I5(\mem_held_addr[3]_i_15_n_0 ),
        .O(\mem_held_addr[3]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \mem_held_addr[3]_i_15 
       (.I0(pc_mask1_ex),
        .I1(Q[0]),
        .O(\mem_held_addr[3]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'h55A6AAA6)) 
    \mem_held_addr[3]_i_2 
       (.I0(invert_b_ex),
        .I1(b_reg_0[0]),
        .I2(au_b_use_pc_ex),
        .I3(use_imm_ex),
        .I4(\imm_ex_reg[0]_0 ),
        .O(\u_dp/u_alu_dec/au_in_b [0]));
  LUT4 #(
    .INIT(16'hF404)) 
    \mem_held_addr[3]_i_3 
       (.I0(zero_a_ex),
        .I1(a_reg_0[2]),
        .I2(au_a_use_pc_ex),
        .I3(Q[2]),
        .O(\u_dp/au_in_a [3]));
  LUT1 #(
    .INIT(2'h1)) 
    \mem_held_addr[3]_i_5 
       (.I0(\mem_held_addr[3]_i_11_n_0 ),
        .O(\u_dp/au_in_a [1]));
  LUT3 #(
    .INIT(8'h02)) 
    \mem_held_addr[3]_i_6 
       (.I0(a_reg_0[0]),
        .I1(au_a_use_pc_ex),
        .I2(zero_a_ex),
        .O(\mem_held_addr[3]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mem_held_addr[3]_i_9 
       (.I0(\mem_held_addr[3]_i_11_n_0 ),
        .I1(\mem_held_addr[3]_i_14_n_0 ),
        .O(\mem_held_addr[3]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h555655A6AA56AAA6)) 
    \mem_held_addr[7]_i_10 
       (.I0(invert_b_ex),
        .I1(b_reg_0[5]),
        .I2(au_b_use_pc_ex),
        .I3(use_imm_ex),
        .I4(Q[4]),
        .I5(imm_ex[5]),
        .O(\u_dp/u_alu_dec/au_in_b [5]));
  LUT6 #(
    .INIT(64'hAAA9AA5955A95559)) 
    \mem_held_addr[7]_i_11 
       (.I0(invert_b_ex),
        .I1(b_reg_0[4]),
        .I2(au_b_use_pc_ex),
        .I3(use_imm_ex),
        .I4(Q[3]),
        .I5(imm_ex[4]),
        .O(\mem_held_addr[7]_i_11_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \mem_held_addr[7]_i_2 
       (.I0(\dp_ipsr_7to2[7]_i_4_n_0 ),
        .O(\u_dp/au_in_a [7]));
  LUT1 #(
    .INIT(2'h1)) 
    \mem_held_addr[7]_i_3 
       (.I0(\dp_ipsr_7to2[6]_i_4_n_0 ),
        .O(\u_dp/au_in_a [6]));
  LUT4 #(
    .INIT(16'hF404)) 
    \mem_held_addr[7]_i_4 
       (.I0(zero_a_ex),
        .I1(a_reg_0[4]),
        .I2(au_a_use_pc_ex),
        .I3(Q[4]),
        .O(\u_dp/au_in_a [5]));
  LUT4 #(
    .INIT(16'hF404)) 
    \mem_held_addr[7]_i_5 
       (.I0(zero_a_ex),
        .I1(a_reg_0[3]),
        .I2(au_a_use_pc_ex),
        .I3(Q[3]),
        .O(\u_dp/au_in_a [4]));
  LUT2 #(
    .INIT(4'h6)) 
    \mem_held_addr[7]_i_6 
       (.I0(\dp_ipsr_7to2[7]_i_4_n_0 ),
        .I1(\dp_ipsr_7to2[7]_i_3_n_0 ),
        .O(\mem_held_addr[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mem_held_addr[7]_i_7 
       (.I0(\dp_ipsr_7to2[6]_i_4_n_0 ),
        .I1(\dp_ipsr_7to2[6]_i_3_n_0 ),
        .O(\mem_held_addr[7]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'h0BFBF404)) 
    \mem_held_addr[7]_i_8 
       (.I0(zero_a_ex),
        .I1(a_reg_0[4]),
        .I2(au_a_use_pc_ex),
        .I3(Q[4]),
        .I4(\u_dp/u_alu_dec/au_in_b [5]),
        .O(\mem_held_addr[7]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'hF4040BFB)) 
    \mem_held_addr[7]_i_9 
       (.I0(zero_a_ex),
        .I1(a_reg_0[3]),
        .I2(au_a_use_pc_ex),
        .I3(Q[3]),
        .I4(\mem_held_addr[7]_i_11_n_0 ),
        .O(\mem_held_addr[7]_i_9_n_0 ));
  FDCE msr_ex_reg
       (.C(HCLK),
        .CE(adv_de_to_ex),
        .CLR(SYSRESETn_0),
        .D(u_excpt_n_26),
        .Q(msr_ex));
  LUT6 #(
    .INIT(64'h0000000000000200)) 
    mul_ex_i_2
       (.I0(\instr_de_reg_n_0_[14] ),
        .I1(\instr_de_reg_n_0_[11] ),
        .I2(first32_ex_reg_0),
        .I3(p_25_in),
        .I4(\instr_de_reg_n_0_[10] ),
        .I5(mul_ex_i_3_n_0),
        .O(mul_ex_i_2_n_0));
  LUT6 #(
    .INIT(64'hFFFFFEFFFFFFFFFF)) 
    mul_ex_i_3
       (.I0(\instr_de_reg_n_0_[13] ),
        .I1(\instr_de_reg_n_0_[12] ),
        .I2(\instr_de_reg_n_0_[15] ),
        .I3(\instr_de_reg_n_0_[9] ),
        .I4(\instr_de_reg_n_0_[7] ),
        .I5(\instr_de_reg_n_0_[6] ),
        .O(mul_ex_i_3_n_0));
  FDCE mul_ex_reg
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg),
        .CLR(SYSRESETn_0),
        .D(mul_de),
        .Q(mul_ex_reg_n_0));
  LUT3 #(
    .INIT(8'hEA)) 
    n_flag_i_1
       (.I0(write_flags_ex),
        .I1(i_dbg_wdata_sel_de_reg),
        .I2(pre_update_z_ex),
        .O(update_n_ex));
  FDCE \pc_de_reg[0] 
       (.C(HCLK),
        .CE(adv_fe_to_de),
        .CLR(SYSRESETn_0),
        .D(tbit),
        .Q(pc_de[0]));
  FDCE \pc_de_reg[10] 
       (.C(HCLK),
        .CE(adv_fe_to_de),
        .CLR(SYSRESETn_0),
        .D(Q[9]),
        .Q(pc_de[10]));
  FDCE \pc_de_reg[11] 
       (.C(HCLK),
        .CE(adv_fe_to_de),
        .CLR(SYSRESETn_0),
        .D(Q[10]),
        .Q(pc_de[11]));
  FDCE \pc_de_reg[12] 
       (.C(HCLK),
        .CE(adv_fe_to_de),
        .CLR(SYSRESETn_0),
        .D(Q[11]),
        .Q(pc_de[12]));
  FDCE \pc_de_reg[13] 
       (.C(HCLK),
        .CE(adv_fe_to_de),
        .CLR(SYSRESETn_0),
        .D(Q[12]),
        .Q(pc_de[13]));
  FDCE \pc_de_reg[14] 
       (.C(HCLK),
        .CE(adv_fe_to_de),
        .CLR(SYSRESETn_0),
        .D(Q[13]),
        .Q(pc_de[14]));
  FDCE \pc_de_reg[15] 
       (.C(HCLK),
        .CE(adv_fe_to_de),
        .CLR(SYSRESETn_0),
        .D(Q[14]),
        .Q(pc_de[15]));
  FDCE \pc_de_reg[16] 
       (.C(HCLK),
        .CE(adv_fe_to_de),
        .CLR(SYSRESETn_0),
        .D(Q[15]),
        .Q(pc_de[16]));
  FDCE \pc_de_reg[17] 
       (.C(HCLK),
        .CE(adv_fe_to_de),
        .CLR(SYSRESETn_0),
        .D(Q[16]),
        .Q(pc_de[17]));
  FDCE \pc_de_reg[18] 
       (.C(HCLK),
        .CE(adv_fe_to_de),
        .CLR(SYSRESETn_0),
        .D(Q[17]),
        .Q(pc_de[18]));
  FDCE \pc_de_reg[19] 
       (.C(HCLK),
        .CE(adv_fe_to_de),
        .CLR(SYSRESETn_0),
        .D(Q[18]),
        .Q(pc_de[19]));
  FDCE \pc_de_reg[1] 
       (.C(HCLK),
        .CE(adv_fe_to_de),
        .CLR(SYSRESETn_0),
        .D(Q[0]),
        .Q(pc_de[1]));
  FDCE \pc_de_reg[20] 
       (.C(HCLK),
        .CE(adv_fe_to_de),
        .CLR(SYSRESETn_0),
        .D(Q[19]),
        .Q(pc_de[20]));
  FDCE \pc_de_reg[21] 
       (.C(HCLK),
        .CE(adv_fe_to_de),
        .CLR(SYSRESETn_0),
        .D(Q[20]),
        .Q(pc_de[21]));
  FDCE \pc_de_reg[22] 
       (.C(HCLK),
        .CE(adv_fe_to_de),
        .CLR(SYSRESETn_0),
        .D(Q[21]),
        .Q(pc_de[22]));
  FDCE \pc_de_reg[23] 
       (.C(HCLK),
        .CE(adv_fe_to_de),
        .CLR(SYSRESETn_0),
        .D(Q[22]),
        .Q(pc_de[23]));
  FDCE \pc_de_reg[24] 
       (.C(HCLK),
        .CE(adv_fe_to_de),
        .CLR(SYSRESETn_0),
        .D(Q[23]),
        .Q(pc_de[24]));
  FDCE \pc_de_reg[25] 
       (.C(HCLK),
        .CE(adv_fe_to_de),
        .CLR(SYSRESETn_0),
        .D(Q[24]),
        .Q(pc_de[25]));
  FDCE \pc_de_reg[26] 
       (.C(HCLK),
        .CE(adv_fe_to_de),
        .CLR(SYSRESETn_0),
        .D(Q[25]),
        .Q(pc_de[26]));
  FDCE \pc_de_reg[27] 
       (.C(HCLK),
        .CE(adv_fe_to_de),
        .CLR(SYSRESETn_0),
        .D(Q[26]),
        .Q(pc_de[27]));
  FDCE \pc_de_reg[28] 
       (.C(HCLK),
        .CE(adv_fe_to_de),
        .CLR(SYSRESETn_0),
        .D(Q[27]),
        .Q(pc_de[28]));
  FDCE \pc_de_reg[29] 
       (.C(HCLK),
        .CE(adv_fe_to_de),
        .CLR(SYSRESETn_0),
        .D(Q[28]),
        .Q(pc_de[29]));
  FDCE \pc_de_reg[2] 
       (.C(HCLK),
        .CE(adv_fe_to_de),
        .CLR(SYSRESETn_0),
        .D(Q[1]),
        .Q(pc_de[2]));
  FDCE \pc_de_reg[30] 
       (.C(HCLK),
        .CE(adv_fe_to_de),
        .CLR(SYSRESETn_0),
        .D(Q[29]),
        .Q(pc_de[30]));
  FDCE \pc_de_reg[31] 
       (.C(HCLK),
        .CE(adv_fe_to_de),
        .CLR(SYSRESETn_0),
        .D(Q[30]),
        .Q(pc_de[31]));
  FDCE \pc_de_reg[3] 
       (.C(HCLK),
        .CE(adv_fe_to_de),
        .CLR(SYSRESETn_0),
        .D(Q[2]),
        .Q(pc_de[3]));
  FDCE \pc_de_reg[4] 
       (.C(HCLK),
        .CE(adv_fe_to_de),
        .CLR(SYSRESETn_0),
        .D(Q[3]),
        .Q(pc_de[4]));
  FDCE \pc_de_reg[5] 
       (.C(HCLK),
        .CE(adv_fe_to_de),
        .CLR(SYSRESETn_0),
        .D(Q[4]),
        .Q(pc_de[5]));
  FDCE \pc_de_reg[6] 
       (.C(HCLK),
        .CE(adv_fe_to_de),
        .CLR(SYSRESETn_0),
        .D(Q[5]),
        .Q(pc_de[6]));
  FDCE \pc_de_reg[7] 
       (.C(HCLK),
        .CE(adv_fe_to_de),
        .CLR(SYSRESETn_0),
        .D(Q[6]),
        .Q(pc_de[7]));
  FDCE \pc_de_reg[8] 
       (.C(HCLK),
        .CE(adv_fe_to_de),
        .CLR(SYSRESETn_0),
        .D(Q[7]),
        .Q(pc_de[8]));
  FDCE \pc_de_reg[9] 
       (.C(HCLK),
        .CE(adv_fe_to_de),
        .CLR(SYSRESETn_0),
        .D(Q[8]),
        .Q(pc_de[9]));
  FDCE \pc_ex_reg[0] 
       (.C(HCLK),
        .CE(\pc_ex_reg[0]_0 ),
        .CLR(SYSRESETn_0),
        .D(pc_de[0]),
        .Q(pc_ex));
  FDCE \pc_ex_reg[10] 
       (.C(HCLK),
        .CE(\pc_ex_reg[0]_0 ),
        .CLR(SYSRESETn_0),
        .D(pc_de[10]),
        .Q(\pc_ex_reg_n_0_[10] ));
  FDCE \pc_ex_reg[11] 
       (.C(HCLK),
        .CE(\pc_ex_reg[0]_0 ),
        .CLR(SYSRESETn_0),
        .D(pc_de[11]),
        .Q(\pc_ex_reg_n_0_[11] ));
  FDCE \pc_ex_reg[12] 
       (.C(HCLK),
        .CE(\pc_ex_reg[0]_0 ),
        .CLR(SYSRESETn_0),
        .D(pc_de[12]),
        .Q(\pc_ex_reg_n_0_[12] ));
  FDCE \pc_ex_reg[13] 
       (.C(HCLK),
        .CE(\pc_ex_reg[0]_0 ),
        .CLR(SYSRESETn_0),
        .D(pc_de[13]),
        .Q(\pc_ex_reg_n_0_[13] ));
  FDCE \pc_ex_reg[14] 
       (.C(HCLK),
        .CE(\pc_ex_reg[0]_0 ),
        .CLR(SYSRESETn_0),
        .D(pc_de[14]),
        .Q(\pc_ex_reg_n_0_[14] ));
  FDCE \pc_ex_reg[15] 
       (.C(HCLK),
        .CE(\pc_ex_reg[0]_0 ),
        .CLR(SYSRESETn_0),
        .D(pc_de[15]),
        .Q(\pc_ex_reg_n_0_[15] ));
  FDCE \pc_ex_reg[16] 
       (.C(HCLK),
        .CE(\pc_ex_reg[0]_0 ),
        .CLR(SYSRESETn_0),
        .D(pc_de[16]),
        .Q(\pc_ex_reg_n_0_[16] ));
  FDCE \pc_ex_reg[17] 
       (.C(HCLK),
        .CE(\pc_ex_reg[0]_0 ),
        .CLR(SYSRESETn_0),
        .D(pc_de[17]),
        .Q(\pc_ex_reg_n_0_[17] ));
  FDCE \pc_ex_reg[18] 
       (.C(HCLK),
        .CE(\pc_ex_reg[0]_0 ),
        .CLR(SYSRESETn_0),
        .D(pc_de[18]),
        .Q(\pc_ex_reg_n_0_[18] ));
  FDCE \pc_ex_reg[19] 
       (.C(HCLK),
        .CE(\pc_ex_reg[0]_0 ),
        .CLR(SYSRESETn_0),
        .D(pc_de[19]),
        .Q(\pc_ex_reg_n_0_[19] ));
  FDCE \pc_ex_reg[1] 
       (.C(HCLK),
        .CE(\pc_ex_reg[0]_0 ),
        .CLR(SYSRESETn_0),
        .D(pc_de[1]),
        .Q(\pc_ex_reg_n_0_[1] ));
  FDCE \pc_ex_reg[20] 
       (.C(HCLK),
        .CE(\pc_ex_reg[0]_0 ),
        .CLR(SYSRESETn_0),
        .D(pc_de[20]),
        .Q(\pc_ex_reg_n_0_[20] ));
  FDCE \pc_ex_reg[21] 
       (.C(HCLK),
        .CE(\pc_ex_reg[0]_0 ),
        .CLR(SYSRESETn_0),
        .D(pc_de[21]),
        .Q(\pc_ex_reg_n_0_[21] ));
  FDCE \pc_ex_reg[22] 
       (.C(HCLK),
        .CE(\pc_ex_reg[0]_0 ),
        .CLR(SYSRESETn_0),
        .D(pc_de[22]),
        .Q(\pc_ex_reg_n_0_[22] ));
  FDCE \pc_ex_reg[23] 
       (.C(HCLK),
        .CE(\pc_ex_reg[0]_0 ),
        .CLR(SYSRESETn_0),
        .D(pc_de[23]),
        .Q(\pc_ex_reg_n_0_[23] ));
  FDCE \pc_ex_reg[24] 
       (.C(HCLK),
        .CE(\pc_ex_reg[0]_0 ),
        .CLR(SYSRESETn_0),
        .D(pc_de[24]),
        .Q(\pc_ex_reg_n_0_[24] ));
  FDCE \pc_ex_reg[25] 
       (.C(HCLK),
        .CE(\pc_ex_reg[0]_0 ),
        .CLR(SYSRESETn_0),
        .D(pc_de[25]),
        .Q(\pc_ex_reg_n_0_[25] ));
  FDCE \pc_ex_reg[26] 
       (.C(HCLK),
        .CE(\pc_ex_reg[0]_0 ),
        .CLR(SYSRESETn_0),
        .D(pc_de[26]),
        .Q(\pc_ex_reg_n_0_[26] ));
  FDCE \pc_ex_reg[27] 
       (.C(HCLK),
        .CE(\pc_ex_reg[0]_0 ),
        .CLR(SYSRESETn_0),
        .D(pc_de[27]),
        .Q(\pc_ex_reg_n_0_[27] ));
  FDCE \pc_ex_reg[28] 
       (.C(HCLK),
        .CE(\pc_ex_reg[0]_0 ),
        .CLR(SYSRESETn_0),
        .D(pc_de[28]),
        .Q(\pc_ex_reg_n_0_[28] ));
  FDCE \pc_ex_reg[29] 
       (.C(HCLK),
        .CE(\pc_ex_reg[0]_0 ),
        .CLR(SYSRESETn_0),
        .D(pc_de[29]),
        .Q(\pc_ex_reg_n_0_[29] ));
  FDCE \pc_ex_reg[2] 
       (.C(HCLK),
        .CE(\pc_ex_reg[0]_0 ),
        .CLR(SYSRESETn_0),
        .D(pc_de[2]),
        .Q(\pc_ex_reg_n_0_[2] ));
  FDCE \pc_ex_reg[30] 
       (.C(HCLK),
        .CE(\pc_ex_reg[0]_0 ),
        .CLR(SYSRESETn_0),
        .D(pc_de[30]),
        .Q(\pc_ex_reg_n_0_[30] ));
  FDCE \pc_ex_reg[31] 
       (.C(HCLK),
        .CE(\pc_ex_reg[0]_0 ),
        .CLR(SYSRESETn_0),
        .D(pc_de[31]),
        .Q(\pc_ex_reg_n_0_[31] ));
  FDCE \pc_ex_reg[3] 
       (.C(HCLK),
        .CE(\pc_ex_reg[0]_0 ),
        .CLR(SYSRESETn_0),
        .D(pc_de[3]),
        .Q(\pc_ex_reg_n_0_[3] ));
  FDCE \pc_ex_reg[4] 
       (.C(HCLK),
        .CE(\pc_ex_reg[0]_0 ),
        .CLR(SYSRESETn_0),
        .D(pc_de[4]),
        .Q(\pc_ex_reg_n_0_[4] ));
  FDCE \pc_ex_reg[5] 
       (.C(HCLK),
        .CE(\pc_ex_reg[0]_0 ),
        .CLR(SYSRESETn_0),
        .D(pc_de[5]),
        .Q(\pc_ex_reg_n_0_[5] ));
  FDCE \pc_ex_reg[6] 
       (.C(HCLK),
        .CE(\pc_ex_reg[0]_0 ),
        .CLR(SYSRESETn_0),
        .D(pc_de[6]),
        .Q(\pc_ex_reg_n_0_[6] ));
  FDCE \pc_ex_reg[7] 
       (.C(HCLK),
        .CE(\pc_ex_reg[0]_0 ),
        .CLR(SYSRESETn_0),
        .D(pc_de[7]),
        .Q(\pc_ex_reg_n_0_[7] ));
  FDCE \pc_ex_reg[8] 
       (.C(HCLK),
        .CE(\pc_ex_reg[0]_0 ),
        .CLR(SYSRESETn_0),
        .D(pc_de[8]),
        .Q(\pc_ex_reg_n_0_[8] ));
  FDCE \pc_ex_reg[9] 
       (.C(HCLK),
        .CE(\pc_ex_reg[0]_0 ),
        .CLR(SYSRESETn_0),
        .D(pc_de[9]),
        .Q(\pc_ex_reg_n_0_[9] ));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT4 #(
    .INIT(16'h0027)) 
    pc_mask1_ex_i_1
       (.I0(\instr_de_reg_n_0_[11] ),
        .I1(\instr_de_reg_n_0_[15] ),
        .I2(\instr_de_reg_n_0_[14] ),
        .I3(first32_ex_reg_0),
        .O(pc_mask1_de));
  FDCE pc_mask1_ex_reg
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg),
        .CLR(SYSRESETn_0),
        .D(pc_mask1_de),
        .Q(pc_mask1_ex));
  FDCE pf_fault_de_reg
       (.C(HCLK),
        .CE(adv_fe_to_de),
        .CLR(SYSRESETn_0),
        .D(nxt_pf_fault_de),
        .Q(pf_fault_de));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    pop_pc_ex_i_2
       (.I0(\instr_de_reg_n_0_[12] ),
        .I1(\instr_de_reg_n_0_[15] ),
        .I2(\instr_de_reg_n_0_[13] ),
        .O(pop_pc_ex_i_2_n_0));
  FDCE pop_pc_ex_reg
       (.C(HCLK),
        .CE(adv_de_to_ex),
        .CLR(SYSRESETn_0),
        .D(u_excpt_n_29),
        .Q(pop_pc_ex));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \pre_pc_mux_ctl_ex[0]_i_1 
       (.I0(nxt_ldm_base_load),
        .I1(last_uncond_phase_ex_reg_0),
        .O(nxt_pc_mux_ctl_ex));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \pre_pc_mux_ctl_ex[1]_i_2 
       (.I0(p_25_in),
        .I1(\instr_de_reg_n_0_[7] ),
        .O(\pre_pc_mux_ctl_ex[1]_i_2_n_0 ));
  FDCE \pre_pc_mux_ctl_ex_reg[0] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(nxt_pc_mux_ctl_ex),
        .Q(pre_pc_mux_ctl_ex[0]));
  FDCE \pre_pc_mux_ctl_ex_reg[1] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(u_excpt_n_24),
        .Q(pre_pc_mux_ctl_ex[1]));
  FDCE pre_update_c_ex_reg
       (.C(HCLK),
        .CE(adv_de_to_ex),
        .CLR(SYSRESETn_0),
        .D(update_c),
        .Q(pre_update_c_ex));
  LUT6 #(
    .INIT(64'h0000000005040410)) 
    pre_update_n_ex_i_2
       (.I0(pre_update_n_ex_i_4_n_0),
        .I1(\instr_de_reg_n_0_[11] ),
        .I2(\instr_de_reg_n_0_[14] ),
        .I3(\instr_de_reg_n_0_[12] ),
        .I4(\instr_de_reg_n_0_[13] ),
        .I5(use_c_flag_ex_i_2_n_0),
        .O(pre_update_n_ex_i_2_n_0));
  LUT6 #(
    .INIT(64'h0001000100010000)) 
    pre_update_n_ex_i_3
       (.I0(first32_ex_reg_0),
        .I1(\instr_de_reg_n_0_[15] ),
        .I2(\instr_de_reg_n_0_[11] ),
        .I3(\instr_de_reg_n_0_[12] ),
        .I4(pre_update_n_ex_i_5_n_0),
        .I5(pre_update_n_ex_i_6_n_0),
        .O(pre_update_n_ex_i_3_n_0));
  LUT6 #(
    .INIT(64'hA28AA08AA08AA2AA)) 
    pre_update_n_ex_i_4
       (.I0(\instr_de_reg_n_0_[14] ),
        .I1(\instr_de_reg_n_0_[10] ),
        .I2(\instr_de_reg_n_0_[9] ),
        .I3(p_25_in),
        .I4(\instr_de_reg_n_0_[6] ),
        .I5(\instr_de_reg_n_0_[7] ),
        .O(pre_update_n_ex_i_4_n_0));
  LUT6 #(
    .INIT(64'h3000000010001030)) 
    pre_update_n_ex_i_5
       (.I0(\instr_de_reg_n_0_[6] ),
        .I1(\instr_de_reg_n_0_[10] ),
        .I2(u_excpt_n_138),
        .I3(\instr_de_reg_n_0_[9] ),
        .I4(p_25_in),
        .I5(\instr_de_reg_n_0_[7] ),
        .O(pre_update_n_ex_i_5_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    pre_update_n_ex_i_6
       (.I0(\instr_de_reg_n_0_[13] ),
        .I1(\instr_de_reg_n_0_[14] ),
        .O(pre_update_n_ex_i_6_n_0));
  FDCE pre_update_n_ex_reg
       (.C(HCLK),
        .CE(adv_de_to_ex),
        .CLR(SYSRESETn_0),
        .D(update_n),
        .Q(pre_update_z_ex));
  FDCE pre_update_v_ex_reg
       (.C(HCLK),
        .CE(adv_de_to_ex),
        .CLR(SYSRESETn_0),
        .D(update_v),
        .Q(pre_update_v_ex));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT2 #(
    .INIT(4'h2)) 
    primask_i_10
       (.I0(rf0_mux_ctl_ex[1]),
        .I1(rf0_mux_ctl_ex[0]),
        .O(primask_i_10_n_0));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT3 #(
    .INIT(8'h80)) 
    primask_i_11
       (.I0(\reg_file_a_reg[15][31] [0]),
        .I1(rf0_mux_ctl_ex[1]),
        .I2(rf0_mux_ctl_ex[0]),
        .O(primask_i_11_n_0));
  LUT6 #(
    .INIT(64'hAEABABABABFFFFFF)) 
    primask_i_13
       (.I0(c_flag_mux_i_3_n_0),
        .I1(lu_ctl_ex[1]),
        .I2(lu_ctl_ex[0]),
        .I3(a_reg_0[0]),
        .I4(\dp_ipsr_1to0[1]_i_24_n_0 ),
        .I5(\u_dp/u_alu_dec/au_in_b [0]),
        .O(primask_i_13_n_0));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT2 #(
    .INIT(4'h8)) 
    primask_i_14
       (.I0(rf1_mux_ctl_ex[1]),
        .I1(rf1_mux_ctl_ex[0]),
        .O(primask_i_14_n_0));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT2 #(
    .INIT(4'hB)) 
    primask_i_17
       (.I0(rf0_mux_ctl_ex[1]),
        .I1(rf0_mux_ctl_ex[0]),
        .O(\rf0_mux_ctl_ex_reg[1]_0 ));
  LUT4 #(
    .INIT(16'h0B08)) 
    primask_i_6
       (.I0(\reg_file_a_reg[15][15] [0]),
        .I1(rf1_mux_ctl_ex[1]),
        .I2(rf1_mux_ctl_ex[0]),
        .I3(O[0]),
        .O(primask_i_6_n_0));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT4 #(
    .INIT(16'hFF7F)) 
    push_ex_i_2
       (.I0(\instr_de_reg_n_0_[12] ),
        .I1(\instr_de_reg_n_0_[13] ),
        .I2(\instr_de_reg_n_0_[15] ),
        .I3(\instr_de_reg_n_0_[14] ),
        .O(push_ex_i_2_n_0));
  FDCE push_ex_reg
       (.C(HCLK),
        .CE(adv_de_to_ex),
        .CLR(SYSRESETn_0),
        .D(u_excpt_n_15),
        .Q(push_ex));
  LUT6 #(
    .INIT(64'hE2E2E2E2E2E2E21D)) 
    r_amt4_ex2_i_1
       (.I0(b_reg_0[4]),
        .I1(use_imm_ex),
        .I2(imm_ex[4]),
        .I3(r_amt4_ex2_i_2_n_0),
        .I4(shift_op[0]),
        .I5(shift_op[1]),
        .O(use_imm_ex_reg_4));
  LUT6 #(
    .INIT(64'h0000003050500030)) 
    r_amt4_ex2_i_2
       (.I0(imm_ex[2]),
        .I1(b_reg_0[2]),
        .I2(\m_amt_ex2[2]_i_3_n_0 ),
        .I3(b_reg_0[3]),
        .I4(use_imm_ex),
        .I5(imm_ex[3]),
        .O(r_amt4_ex2_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT4 #(
    .INIT(16'h88B8)) 
    \r_list_ex[1]_i_1 
       (.I0(rptr_b2_de[1]),
        .I1(last_uncond_phase_ex_reg_0),
        .I2(r_list_ex[1]),
        .I3(r_list_first[1]),
        .O(p_1_in8_in));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT4 #(
    .INIT(16'h88B8)) 
    \r_list_ex[2]_i_1 
       (.I0(rptr_b2_de[2]),
        .I1(last_uncond_phase_ex_reg_0),
        .I2(r_list_ex[2]),
        .I3(r_list_first[2]),
        .O(p_0_in9_in));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT4 #(
    .INIT(16'h88B8)) 
    \r_list_ex[3]_i_1 
       (.I0(\instr_de_reg_n_0_[3] ),
        .I1(last_uncond_phase_ex_reg_0),
        .I2(r_list_ex[3]),
        .I3(r_list_first[3]),
        .O(p_0_in10_in));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT4 #(
    .INIT(16'h88B8)) 
    \r_list_ex[4]_i_1 
       (.I0(cps_data),
        .I1(last_uncond_phase_ex_reg_0),
        .I2(r_list_ex[4]),
        .I3(r_list_first[4]),
        .O(p_0_in11_in));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT4 #(
    .INIT(16'h88B8)) 
    \r_list_ex[5]_i_1 
       (.I0(\instr_de_reg_n_0_[5] ),
        .I1(last_uncond_phase_ex_reg_0),
        .I2(r_list_ex[5]),
        .I3(r_list_first[5]),
        .O(p_1_in12_in));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT4 #(
    .INIT(16'h88B8)) 
    \r_list_ex[6]_i_1 
       (.I0(\instr_de_reg_n_0_[6] ),
        .I1(last_uncond_phase_ex_reg_0),
        .I2(r_list_ex[6]),
        .I3(r_list_first[6]),
        .O(p_0_in14_in));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT4 #(
    .INIT(16'h88B8)) 
    \r_list_ex[7]_i_1 
       (.I0(\instr_de_reg_n_0_[7] ),
        .I1(last_uncond_phase_ex_reg_0),
        .I2(r_list_ex[7]),
        .I3(r_list_first[7]),
        .O(p_1_in16_in));
  LUT5 #(
    .INIT(32'h0F002222)) 
    \r_list_ex[8]_i_1 
       (.I0(r_list_ex[8]),
        .I1(r_list_first[8]),
        .I2(\instr_de_reg_n_0_[14] ),
        .I3(p_25_in),
        .I4(last_uncond_phase_ex_reg_0),
        .O(p_0_in18_in));
  FDCE \r_list_ex_reg[1] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(p_1_in8_in),
        .Q(r_list_ex[1]));
  FDCE \r_list_ex_reg[2] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(p_0_in9_in),
        .Q(r_list_ex[2]));
  FDCE \r_list_ex_reg[3] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(p_0_in10_in),
        .Q(r_list_ex[3]));
  FDCE \r_list_ex_reg[4] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(p_0_in11_in),
        .Q(r_list_ex[4]));
  FDCE \r_list_ex_reg[5] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(p_1_in12_in),
        .Q(r_list_ex[5]));
  FDCE \r_list_ex_reg[6] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(p_0_in14_in),
        .Q(r_list_ex[6]));
  FDCE \r_list_ex_reg[7] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(p_1_in16_in),
        .Q(r_list_ex[7]));
  FDCE \r_list_ex_reg[8] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(p_0_in18_in),
        .Q(r_list_ex[8]));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT5 #(
    .INIT(32'h00F04444)) 
    \r_list_first[1]_i_1 
       (.I0(r_list_first[1]),
        .I1(r_list_ex[1]),
        .I2(rptr_b2_de[1]),
        .I3(rptr_b2_de[0]),
        .I4(last_uncond_phase_ex_reg_0),
        .O(nxt_r_list_first_1));
  LUT6 #(
    .INIT(64'h0000004400F00044)) 
    \r_list_first[2]_i_1 
       (.I0(r_list_first[2]),
        .I1(r_list_ex[2]),
        .I2(rptr_b2_de[2]),
        .I3(p_1_in8_in),
        .I4(last_uncond_phase_ex_reg_0),
        .I5(rptr_b2_de[0]),
        .O(nxt_r_list_first_2));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT5 #(
    .INIT(32'h0000F404)) 
    \r_list_first[3]_i_1 
       (.I0(r_list_first[3]),
        .I1(r_list_ex[3]),
        .I2(last_uncond_phase_ex_reg_0),
        .I3(\instr_de_reg_n_0_[3] ),
        .I4(\r_list_first[3]_i_2_n_0 ),
        .O(nxt_r_list_first_3));
  LUT6 #(
    .INIT(64'hFFFFFFFFCCFC88B8)) 
    \r_list_first[3]_i_2 
       (.I0(rptr_b2_de[1]),
        .I1(last_uncond_phase_ex_reg_0),
        .I2(r_list_ex[1]),
        .I3(r_list_first[1]),
        .I4(rptr_b2_de[0]),
        .I5(p_0_in9_in),
        .O(\r_list_first[3]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT5 #(
    .INIT(32'h0000F404)) 
    \r_list_first[4]_i_1 
       (.I0(r_list_first[4]),
        .I1(r_list_ex[4]),
        .I2(last_uncond_phase_ex_reg_0),
        .I3(cps_data),
        .I4(\r_list_first[4]_i_2_n_0 ),
        .O(nxt_r_list_first_4));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT5 #(
    .INIT(32'hFFFFF404)) 
    \r_list_first[4]_i_2 
       (.I0(r_list_first[3]),
        .I1(r_list_ex[3]),
        .I2(last_uncond_phase_ex_reg_0),
        .I3(\instr_de_reg_n_0_[3] ),
        .I4(\r_list_first[3]_i_2_n_0 ),
        .O(\r_list_first[4]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT5 #(
    .INIT(32'h0000F404)) 
    \r_list_first[5]_i_1 
       (.I0(r_list_first[5]),
        .I1(r_list_ex[5]),
        .I2(last_uncond_phase_ex_reg_0),
        .I3(\instr_de_reg_n_0_[5] ),
        .I4(\r_list_first[5]_i_2_n_0 ),
        .O(nxt_r_list_first_5));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT5 #(
    .INIT(32'hFFFFF404)) 
    \r_list_first[5]_i_2 
       (.I0(r_list_first[4]),
        .I1(r_list_ex[4]),
        .I2(last_uncond_phase_ex_reg_0),
        .I3(cps_data),
        .I4(\r_list_first[4]_i_2_n_0 ),
        .O(\r_list_first[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT5 #(
    .INIT(32'hAA200020)) 
    \r_list_first[6]_i_1 
       (.I0(\r_list_first[6]_i_2_n_0 ),
        .I1(r_list_first[6]),
        .I2(r_list_ex[6]),
        .I3(last_uncond_phase_ex_reg_0),
        .I4(\instr_de_reg_n_0_[6] ),
        .O(nxt_r_list_first_6));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT5 #(
    .INIT(32'h00000BFB)) 
    \r_list_first[6]_i_2 
       (.I0(r_list_first[5]),
        .I1(r_list_ex[5]),
        .I2(last_uncond_phase_ex_reg_0),
        .I3(\instr_de_reg_n_0_[5] ),
        .I4(\r_list_first[5]_i_2_n_0 ),
        .O(\r_list_first[6]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT5 #(
    .INIT(32'h0000F404)) 
    \r_list_first[7]_i_1 
       (.I0(r_list_first[7]),
        .I1(r_list_ex[7]),
        .I2(last_uncond_phase_ex_reg_0),
        .I3(\instr_de_reg_n_0_[7] ),
        .I4(\r_list_first[8]_i_2_n_0 ),
        .O(nxt_r_list_first_7));
  LUT6 #(
    .INIT(64'h0000000077470000)) 
    \r_list_first[8]_i_1 
       (.I0(\instr_de_reg_n_0_[7] ),
        .I1(last_uncond_phase_ex_reg_0),
        .I2(r_list_ex[7]),
        .I3(r_list_first[7]),
        .I4(p_0_in18_in),
        .I5(\r_list_first[8]_i_2_n_0 ),
        .O(nxt_r_list_first_8));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF404)) 
    \r_list_first[8]_i_2 
       (.I0(r_list_first[6]),
        .I1(r_list_ex[6]),
        .I2(last_uncond_phase_ex_reg_0),
        .I3(\instr_de_reg_n_0_[6] ),
        .I4(\r_list_first[5]_i_2_n_0 ),
        .I5(p_1_in12_in),
        .O(\r_list_first[8]_i_2_n_0 ));
  FDCE \r_list_first_reg[1] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(nxt_r_list_first_1),
        .Q(r_list_first[1]));
  FDCE \r_list_first_reg[2] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(nxt_r_list_first_2),
        .Q(r_list_first[2]));
  FDCE \r_list_first_reg[3] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(nxt_r_list_first_3),
        .Q(r_list_first[3]));
  FDCE \r_list_first_reg[4] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(nxt_r_list_first_4),
        .Q(r_list_first[4]));
  FDCE \r_list_first_reg[5] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(nxt_r_list_first_5),
        .Q(r_list_first[5]));
  FDCE \r_list_first_reg[6] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(nxt_r_list_first_6),
        .Q(r_list_first[6]));
  FDCE \r_list_first_reg[7] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(nxt_r_list_first_7),
        .Q(r_list_first[7]));
  FDCE \r_list_first_reg[8] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(nxt_r_list_first_8),
        .Q(r_list_first[8]));
  LUT6 #(
    .INIT(64'h6996966969966996)) 
    \r_list_offset_ex[0]_i_1 
       (.I0(\r_list_offset_ex[0]_i_2_n_0 ),
        .I1(\instr_de_reg_n_0_[5] ),
        .I2(cps_data),
        .I3(\r_list_offset_ex[0]_i_3_n_0 ),
        .I4(\instr_de_reg_n_0_[14] ),
        .I5(p_25_in),
        .O(r_list_offset[0]));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \r_list_offset_ex[0]_i_2 
       (.I0(rptr_b2_de[2]),
        .I1(\instr_de_reg_n_0_[3] ),
        .I2(rptr_b2_de[0]),
        .I3(rptr_b2_de[1]),
        .O(\r_list_offset_ex[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \r_list_offset_ex[0]_i_3 
       (.I0(\instr_de_reg_n_0_[6] ),
        .I1(\instr_de_reg_n_0_[7] ),
        .O(\r_list_offset_ex[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9556566A6AA9A995)) 
    \r_list_offset_ex[1]_i_1 
       (.I0(\r_list_offset_ex[1]_i_2_n_0 ),
        .I1(\instr_de_reg_n_0_[5] ),
        .I2(\instr_de_reg_n_0_[6] ),
        .I3(cps_data),
        .I4(\instr_de_reg_n_0_[7] ),
        .I5(\r_list_offset_ex[1]_i_3_n_0 ),
        .O(r_list_offset[1]));
  LUT6 #(
    .INIT(64'h7DD714417DD77DD7)) 
    \r_list_offset_ex[1]_i_2 
       (.I0(\r_list_offset_ex[0]_i_2_n_0 ),
        .I1(\instr_de_reg_n_0_[5] ),
        .I2(cps_data),
        .I3(\r_list_offset_ex[0]_i_3_n_0 ),
        .I4(\instr_de_reg_n_0_[14] ),
        .I5(p_25_in),
        .O(\r_list_offset_ex[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT4 #(
    .INIT(16'h7EE8)) 
    \r_list_offset_ex[1]_i_3 
       (.I0(rptr_b2_de[2]),
        .I1(rptr_b2_de[1]),
        .I2(\instr_de_reg_n_0_[3] ),
        .I3(rptr_b2_de[0]),
        .O(\r_list_offset_ex[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h955555556AAAAAAA)) 
    \r_list_offset_ex[2]_i_1 
       (.I0(\r_list_offset_ex[3]_i_3_n_0 ),
        .I1(cps_data),
        .I2(\instr_de_reg_n_0_[5] ),
        .I3(\instr_de_reg_n_0_[7] ),
        .I4(\instr_de_reg_n_0_[6] ),
        .I5(\r_list_offset_ex[3]_i_2_n_0 ),
        .O(r_list_offset[2]));
  LUT6 #(
    .INIT(64'h000080008000FFFF)) 
    \r_list_offset_ex[3]_i_1 
       (.I0(cps_data),
        .I1(\instr_de_reg_n_0_[5] ),
        .I2(\instr_de_reg_n_0_[7] ),
        .I3(\instr_de_reg_n_0_[6] ),
        .I4(\r_list_offset_ex[3]_i_2_n_0 ),
        .I5(\r_list_offset_ex[3]_i_3_n_0 ),
        .O(r_list_offset[3]));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    \r_list_offset_ex[3]_i_2 
       (.I0(rptr_b2_de[2]),
        .I1(rptr_b2_de[1]),
        .I2(\instr_de_reg_n_0_[3] ),
        .I3(rptr_b2_de[0]),
        .O(\r_list_offset_ex[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8117FFFF00008117)) 
    \r_list_offset_ex[3]_i_3 
       (.I0(\instr_de_reg_n_0_[5] ),
        .I1(\instr_de_reg_n_0_[6] ),
        .I2(cps_data),
        .I3(\instr_de_reg_n_0_[7] ),
        .I4(\r_list_offset_ex[1]_i_3_n_0 ),
        .I5(\r_list_offset_ex[1]_i_2_n_0 ),
        .O(\r_list_offset_ex[3]_i_3_n_0 ));
  FDCE \r_list_offset_ex_reg[0] 
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg),
        .CLR(SYSRESETn_0),
        .D(r_list_offset[0]),
        .Q(r_list_offset_ex[0]));
  FDCE \r_list_offset_ex_reg[1] 
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg),
        .CLR(SYSRESETn_0),
        .D(r_list_offset[1]),
        .Q(r_list_offset_ex[1]));
  FDCE \r_list_offset_ex_reg[2] 
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg),
        .CLR(SYSRESETn_0),
        .D(r_list_offset[2]),
        .Q(r_list_offset_ex[2]));
  FDCE \r_list_offset_ex_reg[3] 
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg),
        .CLR(SYSRESETn_0),
        .D(r_list_offset[3]),
        .Q(r_list_offset_ex[3]));
  LUT6 #(
    .INIT(64'h1111111110001111)) 
    rd_mux_a_ex_i_1
       (.I0(sbit_ex_i_3_n_0),
        .I1(\instr_de_reg_n_0_[10] ),
        .I2(\instr_de_reg_n_0_[11] ),
        .I3(\instr_de_reg_n_0_[12] ),
        .I4(\instr_de_reg_n_0_[13] ),
        .I5(\instr_de_reg_n_0_[9] ),
        .O(rd_mux_a_de));
  FDCE rd_mux_a_ex_reg
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg),
        .CLR(SYSRESETn_0),
        .D(rd_mux_a_de),
        .Q(rd_mux_a_ex));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    \read_addr[1]_i_2 
       (.I0(bcc_first_ex_reg_0),
        .I1(branching_ex),
        .I2(branch_ex),
        .I3(ireq_ldpc),
        .O(\read_addr[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT3 #(
    .INIT(8'h1F)) 
    \read_addr[1]_i_4 
       (.I0(branching_ex),
        .I1(last_uncond_phase_ex_reg_0),
        .I2(biu_rdy),
        .O(\read_addr[1]_i_4_n_0 ));
  FDCE \read_addr_reg[0] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(SYSRESETn_0),
        .D(nxt_read_addr[0]),
        .Q(\read_addr_reg_n_0_[0] ));
  FDCE \read_addr_reg[1] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(SYSRESETn_0),
        .D(nxt_read_addr[1]),
        .Q(\read_addr_reg_n_0_[1] ));
  LUT6 #(
    .INIT(64'h5501550155015555)) 
    \reg_file_a[15][10]_i_3 
       (.I0(ze_byte_wb),
        .I1(\mem_held_addr_reg[1]_0 ),
        .I2(\hold_reg2_reg[26] ),
        .I3(\reg_file_a[15][10]_i_6_n_0 ),
        .I4(\hold_reg2_reg[10] ),
        .I5(\mem_held_addr_reg[1] ),
        .O(\reg_file_a[15][10]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h4F44)) 
    \reg_file_a[15][10]_i_6 
       (.I0(\mem_held_addr_reg[0] ),
        .I1(fptr_wdata),
        .I2(\mem_held_addr_reg[1]_1 ),
        .I3(a_reg_0[15]),
        .O(\reg_file_a[15][10]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h5FFC50FC5F0C500C)) 
    \reg_file_a[15][11]_i_1 
       (.I0(\reg_file_a[15][11]_i_2_n_0 ),
        .I1(\pc_reg[11] [3]),
        .I2(rf1_mux_ctl_ex[0]),
        .I3(rf1_mux_ctl_ex[1]),
        .I4(\reg_file_a_reg[15][15] [11]),
        .I5(\reg_file_a[15][11]_i_3_n_0 ),
        .O(rf_wdata[11]));
  LUT6 #(
    .INIT(64'h00000000FFFF446D)) 
    \reg_file_a[15][11]_i_2 
       (.I0(z_flag_mux_i_6_0[0]),
        .I1(invert_b_ex_reg_1),
        .I2(lu_ctl_ex[1]),
        .I3(lu_ctl_ex[0]),
        .I4(c_flag_mux_i_3_n_0),
        .I5(\reg_file_a_reg[15][11] ),
        .O(\reg_file_a[15][11]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h5501550155015555)) 
    \reg_file_a[15][11]_i_3 
       (.I0(ze_byte_wb),
        .I1(\mem_held_addr_reg[1]_0 ),
        .I2(\hold_reg2_reg[27] ),
        .I3(\reg_file_a[15][11]_i_6_n_0 ),
        .I4(\hold_reg2_reg[11] ),
        .I5(\mem_held_addr_reg[1] ),
        .O(\reg_file_a[15][11]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAAA9AA5955A95559)) 
    \reg_file_a[15][11]_i_4 
       (.I0(invert_b_ex),
        .I1(b_reg_0[11]),
        .I2(au_b_use_pc_ex),
        .I3(use_imm_ex),
        .I4(Q[10]),
        .I5(imm_ex[11]),
        .O(invert_b_ex_reg_1));
  LUT4 #(
    .INIT(16'h4F44)) 
    \reg_file_a[15][11]_i_6 
       (.I0(\mem_held_addr_reg[0] ),
        .I1(a_reg_0[2]),
        .I2(\mem_held_addr_reg[1]_1 ),
        .I3(a_reg_0[16]),
        .O(\reg_file_a[15][11]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h5FCF5FC050CF50C0)) 
    \reg_file_a[15][12]_i_1 
       (.I0(\reg_file_a[15][12]_i_2_n_0 ),
        .I1(\reg_file_a_reg[15][15] [12]),
        .I2(rf1_mux_ctl_ex[1]),
        .I3(rf1_mux_ctl_ex[0]),
        .I4(\pc_reg[15] [0]),
        .I5(\reg_file_a[15][12]_i_3_n_0 ),
        .O(rf_wdata[12]));
  LUT6 #(
    .INIT(64'h00000000FFFF898E)) 
    \reg_file_a[15][12]_i_2 
       (.I0(invert_b_ex_reg_2),
        .I1(\reg_file_a_reg[15][12] ),
        .I2(lu_ctl_ex[0]),
        .I3(lu_ctl_ex[1]),
        .I4(c_flag_mux_i_3_n_0),
        .I5(\reg_file_a_reg[15][12]_0 ),
        .O(\reg_file_a[15][12]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h5501550155015555)) 
    \reg_file_a[15][12]_i_3 
       (.I0(ze_byte_wb),
        .I1(\mem_held_addr_reg[1]_0 ),
        .I2(\hold_reg2_reg[28] ),
        .I3(\reg_file_a[15][12]_i_7_n_0 ),
        .I4(\hold_reg2_reg[12] ),
        .I5(\mem_held_addr_reg[1] ),
        .O(\reg_file_a[15][12]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAAA9AA5955A95559)) 
    \reg_file_a[15][12]_i_4 
       (.I0(invert_b_ex),
        .I1(b_reg_0[12]),
        .I2(au_b_use_pc_ex),
        .I3(use_imm_ex),
        .I4(Q[11]),
        .I5(imm_ex[12]),
        .O(invert_b_ex_reg_2));
  LUT4 #(
    .INIT(16'h4F44)) 
    \reg_file_a[15][12]_i_7 
       (.I0(\mem_held_addr_reg[0] ),
        .I1(a_reg_0[3]),
        .I2(\mem_held_addr_reg[1]_1 ),
        .I3(a_reg_0[17]),
        .O(\reg_file_a[15][12]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h5FFC50FC5F0C500C)) 
    \reg_file_a[15][13]_i_1 
       (.I0(\reg_file_a[15][13]_i_2_n_0 ),
        .I1(\pc_reg[15] [1]),
        .I2(rf1_mux_ctl_ex[0]),
        .I3(rf1_mux_ctl_ex[1]),
        .I4(\reg_file_a_reg[15][15] [13]),
        .I5(\reg_file_a[15][13]_i_3_n_0 ),
        .O(rf_wdata[13]));
  LUT6 #(
    .INIT(64'h00000000FFFF898E)) 
    \reg_file_a[15][13]_i_2 
       (.I0(\reg_file_a[15][13]_i_4_n_0 ),
        .I1(\reg_file_a[15][13]_i_5_n_0 ),
        .I2(lu_ctl_ex[0]),
        .I3(lu_ctl_ex[1]),
        .I4(c_flag_mux_i_3_n_0),
        .I5(\reg_file_a_reg[15][13] ),
        .O(\reg_file_a[15][13]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h5501550155015555)) 
    \reg_file_a[15][13]_i_3 
       (.I0(ze_byte_wb),
        .I1(\mem_held_addr_reg[1]_0 ),
        .I2(\hold_reg2_reg[29] ),
        .I3(\reg_file_a[15][13]_i_7_n_0 ),
        .I4(\hold_reg2_reg[13] ),
        .I5(\mem_held_addr_reg[1] ),
        .O(\reg_file_a[15][13]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAAA9AA5955A95559)) 
    \reg_file_a[15][13]_i_4 
       (.I0(invert_b_ex),
        .I1(b_reg_0[13]),
        .I2(au_b_use_pc_ex),
        .I3(use_imm_ex),
        .I4(Q[12]),
        .I5(imm_ex[13]),
        .O(\reg_file_a[15][13]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h0BFB)) 
    \reg_file_a[15][13]_i_5 
       (.I0(zero_a_ex),
        .I1(a_reg_0[11]),
        .I2(au_a_use_pc_ex),
        .I3(Q[12]),
        .O(\reg_file_a[15][13]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h4F44)) 
    \reg_file_a[15][13]_i_7 
       (.I0(\mem_held_addr_reg[1]_1 ),
        .I1(a_reg_0[18]),
        .I2(\mem_held_addr_reg[0] ),
        .I3(a_reg_0[4]),
        .O(\reg_file_a[15][13]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h5FFC50FC5F0C500C)) 
    \reg_file_a[15][14]_i_1 
       (.I0(\reg_file_a[15][14]_i_2_n_0 ),
        .I1(\pc_reg[15] [2]),
        .I2(rf1_mux_ctl_ex[0]),
        .I3(rf1_mux_ctl_ex[1]),
        .I4(\reg_file_a_reg[15][15] [14]),
        .I5(\reg_file_a[15][14]_i_3_n_0 ),
        .O(rf_wdata[14]));
  LUT6 #(
    .INIT(64'h00000000FFFF464D)) 
    \reg_file_a[15][14]_i_2 
       (.I0(\u_dp/u_alu_dec/au_in_b [14]),
        .I1(\reg_file_a[15][14]_i_5_n_0 ),
        .I2(lu_ctl_ex[0]),
        .I3(lu_ctl_ex[1]),
        .I4(c_flag_mux_i_3_n_0),
        .I5(\reg_file_a_reg[15][14] ),
        .O(\reg_file_a[15][14]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h5501550155015555)) 
    \reg_file_a[15][14]_i_3 
       (.I0(ze_byte_wb),
        .I1(\mem_held_addr_reg[1] ),
        .I2(\hold_reg2_reg[14] ),
        .I3(\reg_file_a[15][14]_i_7_n_0 ),
        .I4(\hold_reg2_reg[30] ),
        .I5(\mem_held_addr_reg[1]_0 ),
        .O(\reg_file_a[15][14]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h555655A6AA56AAA6)) 
    \reg_file_a[15][14]_i_4 
       (.I0(invert_b_ex),
        .I1(b_reg_0[14]),
        .I2(au_b_use_pc_ex),
        .I3(use_imm_ex),
        .I4(Q[13]),
        .I5(imm_ex[14]),
        .O(\u_dp/u_alu_dec/au_in_b [14]));
  LUT4 #(
    .INIT(16'h0BFB)) 
    \reg_file_a[15][14]_i_5 
       (.I0(zero_a_ex),
        .I1(a_reg_0[12]),
        .I2(au_a_use_pc_ex),
        .I3(Q[13]),
        .O(\reg_file_a[15][14]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h4F44)) 
    \reg_file_a[15][14]_i_7 
       (.I0(\mem_held_addr_reg[0] ),
        .I1(a_reg_0[5]),
        .I2(\mem_held_addr_reg[1]_1 ),
        .I3(a_reg_0[19]),
        .O(\reg_file_a[15][14]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h5FFC50FC5F0C500C)) 
    \reg_file_a[15][15]_i_1 
       (.I0(\reg_file_a[15][15]_i_2_n_0 ),
        .I1(\pc_reg[15] [3]),
        .I2(rf1_mux_ctl_ex[0]),
        .I3(rf1_mux_ctl_ex[1]),
        .I4(\reg_file_a_reg[15][15] [15]),
        .I5(\reg_file_a[15][15]_i_3_n_0 ),
        .O(rf_wdata[15]));
  LUT6 #(
    .INIT(64'h00000000FFFF446D)) 
    \reg_file_a[15][15]_i_2 
       (.I0(z_flag_mux_i_6_0[2]),
        .I1(invert_b_ex_reg_3),
        .I2(lu_ctl_ex[1]),
        .I3(lu_ctl_ex[0]),
        .I4(c_flag_mux_i_3_n_0),
        .I5(\reg_file_a_reg[15][15]_0 ),
        .O(\reg_file_a[15][15]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h5501550155015555)) 
    \reg_file_a[15][15]_i_3 
       (.I0(ze_byte_wb),
        .I1(\mem_held_addr_reg[1] ),
        .I2(\hold_reg2_reg[15] ),
        .I3(\reg_file_a[15][15]_i_6_n_0 ),
        .I4(\hold_reg2_reg[31] ),
        .I5(\mem_held_addr_reg[1]_0 ),
        .O(\reg_file_a[15][15]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAAA9AA5955A95559)) 
    \reg_file_a[15][15]_i_4 
       (.I0(invert_b_ex),
        .I1(b_reg_0[15]),
        .I2(au_b_use_pc_ex),
        .I3(use_imm_ex),
        .I4(Q[14]),
        .I5(imm_ex[15]),
        .O(invert_b_ex_reg_3));
  LUT4 #(
    .INIT(16'h4F44)) 
    \reg_file_a[15][15]_i_6 
       (.I0(\mem_held_addr_reg[1]_1 ),
        .I1(a_reg_0[20]),
        .I2(\mem_held_addr_reg[0] ),
        .I3(a_reg_0[6]),
        .O(\reg_file_a[15][15]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT4 #(
    .INIT(16'h0BFB)) 
    \reg_file_a[15][16]_i_4 
       (.I0(zero_a_ex),
        .I1(a_reg_0[13]),
        .I2(au_a_use_pc_ex),
        .I3(Q[15]),
        .O(\reg_file_a[15][16]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAAA9AA5955A95559)) 
    \reg_file_a[15][17]_i_4 
       (.I0(invert_b_ex),
        .I1(b_reg_0[17]),
        .I2(au_b_use_pc_ex),
        .I3(use_imm_ex),
        .I4(Q[16]),
        .I5(imm_ex[17]),
        .O(\reg_file_a[15][17]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h0BFB)) 
    \reg_file_a[15][17]_i_5 
       (.I0(zero_a_ex),
        .I1(a_reg_0[14]),
        .I2(au_a_use_pc_ex),
        .I3(Q[16]),
        .O(\reg_file_a[15][17]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h5FFC50FC5F0C500C)) 
    \reg_file_a[15][18]_i_1 
       (.I0(\reg_file_a[15][18]_i_2_n_0 ),
        .I1(invert_b_ex_reg_9[2]),
        .I2(rf1_mux_ctl_ex[0]),
        .I3(rf1_mux_ctl_ex[1]),
        .I4(mult_out[2]),
        .I5(\reg_file_a_reg[15][18] ),
        .O(rf_wdata[18]));
  LUT6 #(
    .INIT(64'h00000000FFFF898E)) 
    \reg_file_a[15][18]_i_2 
       (.I0(\reg_file_a[15][18]_i_4_n_0 ),
        .I1(\reg_file_a[15][18]_i_5_n_0 ),
        .I2(lu_ctl_ex[0]),
        .I3(lu_ctl_ex[1]),
        .I4(c_flag_mux_i_3_n_0),
        .I5(\reg_file_a_reg[15][18]_0 ),
        .O(\reg_file_a[15][18]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAA9AA5955A95559)) 
    \reg_file_a[15][18]_i_4 
       (.I0(invert_b_ex),
        .I1(b_reg_0[18]),
        .I2(au_b_use_pc_ex),
        .I3(use_imm_ex),
        .I4(Q[17]),
        .I5(imm_ex[18]),
        .O(\reg_file_a[15][18]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h0BFB)) 
    \reg_file_a[15][18]_i_5 
       (.I0(zero_a_ex),
        .I1(a_reg_0[15]),
        .I2(au_a_use_pc_ex),
        .I3(Q[17]),
        .O(\reg_file_a[15][18]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h5FFC50FC5F0C500C)) 
    \reg_file_a[15][19]_i_1 
       (.I0(\reg_file_a[15][19]_i_2_n_0 ),
        .I1(invert_b_ex_reg_9[3]),
        .I2(rf1_mux_ctl_ex[0]),
        .I3(rf1_mux_ctl_ex[1]),
        .I4(mult_out[3]),
        .I5(\reg_file_a_reg[15][19] ),
        .O(rf_wdata[19]));
  LUT6 #(
    .INIT(64'h00000000FFFF446D)) 
    \reg_file_a[15][19]_i_2 
       (.I0(invert_b_ex_reg_0[1]),
        .I1(\reg_file_a_reg[15][19]_0 ),
        .I2(lu_ctl_ex[1]),
        .I3(lu_ctl_ex[0]),
        .I4(c_flag_mux_i_3_n_0),
        .I5(\reg_file_a_reg[15][19]_1 ),
        .O(\reg_file_a[15][19]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h5FFC50FC5F0C500C)) 
    \reg_file_a[15][20]_i_1 
       (.I0(\reg_file_a[15][20]_i_2_n_0 ),
        .I1(invert_b_ex_reg_8[0]),
        .I2(rf1_mux_ctl_ex[0]),
        .I3(rf1_mux_ctl_ex[1]),
        .I4(mult_out[4]),
        .I5(\reg_file_a_reg[15][20] ),
        .O(rf_wdata[20]));
  LUT6 #(
    .INIT(64'h00000000FFFF898E)) 
    \reg_file_a[15][20]_i_2 
       (.I0(\reg_file_a[15][20]_i_4_n_0 ),
        .I1(\reg_file_a[15][20]_i_5_n_0 ),
        .I2(lu_ctl_ex[0]),
        .I3(lu_ctl_ex[1]),
        .I4(c_flag_mux_i_3_n_0),
        .I5(\reg_file_a_reg[15][20]_0 ),
        .O(\reg_file_a[15][20]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAA9AA5955A95559)) 
    \reg_file_a[15][20]_i_4 
       (.I0(invert_b_ex),
        .I1(b_reg_0[20]),
        .I2(au_b_use_pc_ex),
        .I3(use_imm_ex),
        .I4(Q[19]),
        .I5(imm_ex[20]),
        .O(\reg_file_a[15][20]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h0BFB)) 
    \reg_file_a[15][20]_i_5 
       (.I0(zero_a_ex),
        .I1(a_reg_0[17]),
        .I2(au_a_use_pc_ex),
        .I3(Q[19]),
        .O(\reg_file_a[15][20]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h5FFC50FC5F0C500C)) 
    \reg_file_a[15][21]_i_1 
       (.I0(\reg_file_a[15][21]_i_2_n_0 ),
        .I1(invert_b_ex_reg_8[1]),
        .I2(rf1_mux_ctl_ex[0]),
        .I3(rf1_mux_ctl_ex[1]),
        .I4(mult_out[5]),
        .I5(\reg_file_a_reg[15][21] ),
        .O(rf_wdata[21]));
  LUT6 #(
    .INIT(64'h00000000FFFF464D)) 
    \reg_file_a[15][21]_i_2 
       (.I0(\u_dp/u_alu_dec/au_in_b [21]),
        .I1(\reg_file_a[15][21]_i_5_n_0 ),
        .I2(lu_ctl_ex[0]),
        .I3(lu_ctl_ex[1]),
        .I4(c_flag_mux_i_3_n_0),
        .I5(\reg_file_a_reg[15][21]_0 ),
        .O(\reg_file_a[15][21]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h555655A6AA56AAA6)) 
    \reg_file_a[15][21]_i_4 
       (.I0(invert_b_ex),
        .I1(b_reg_0[21]),
        .I2(au_b_use_pc_ex),
        .I3(use_imm_ex),
        .I4(Q[20]),
        .I5(imm_ex[21]),
        .O(\u_dp/u_alu_dec/au_in_b [21]));
  LUT4 #(
    .INIT(16'h0BFB)) 
    \reg_file_a[15][21]_i_5 
       (.I0(zero_a_ex),
        .I1(a_reg_0[18]),
        .I2(au_a_use_pc_ex),
        .I3(Q[20]),
        .O(\reg_file_a[15][21]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h5FFC50FC5F0C500C)) 
    \reg_file_a[15][22]_i_1 
       (.I0(\reg_file_a[15][22]_i_2_n_0 ),
        .I1(invert_b_ex_reg_8[2]),
        .I2(rf1_mux_ctl_ex[0]),
        .I3(rf1_mux_ctl_ex[1]),
        .I4(mult_out[6]),
        .I5(\reg_file_a_reg[15][22] ),
        .O(rf_wdata[22]));
  LUT6 #(
    .INIT(64'h00000000FFFF464D)) 
    \reg_file_a[15][22]_i_2 
       (.I0(\u_dp/u_alu_dec/au_in_b [22]),
        .I1(\reg_file_a[15][22]_i_5_n_0 ),
        .I2(lu_ctl_ex[0]),
        .I3(lu_ctl_ex[1]),
        .I4(c_flag_mux_i_3_n_0),
        .I5(\reg_file_a_reg[15][22]_0 ),
        .O(\reg_file_a[15][22]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h555655A6AA56AAA6)) 
    \reg_file_a[15][22]_i_4 
       (.I0(invert_b_ex),
        .I1(b_reg_0[22]),
        .I2(au_b_use_pc_ex),
        .I3(use_imm_ex),
        .I4(Q[21]),
        .I5(imm_ex[22]),
        .O(\u_dp/u_alu_dec/au_in_b [22]));
  LUT4 #(
    .INIT(16'h0BFB)) 
    \reg_file_a[15][22]_i_5 
       (.I0(zero_a_ex),
        .I1(a_reg_0[19]),
        .I2(au_a_use_pc_ex),
        .I3(Q[21]),
        .O(\reg_file_a[15][22]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF44444000)) 
    \reg_file_a[15][25]_i_3 
       (.I0(\swz_ctl_ex_reg[1]_0 [0]),
        .I1(\reg_file_a[15][25]_i_6_n_0 ),
        .I2(\reg_file_a_reg[0][25]_0 ),
        .I3(a_reg_0[22]),
        .I4(\reg_file_a_reg[0][25]_1 ),
        .I5(\reg_file_a[15][25]_i_8_n_0 ),
        .O(\reg_file_a[15][25]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFEEEFEEE5666A888)) 
    \reg_file_a[15][25]_i_4 
       (.I0(invert_b_ex_reg_0[3]),
        .I1(\reg_file_a[15][25]_i_2 ),
        .I2(\dp_ipsr_1to0[1]_i_24_n_0 ),
        .I3(a_reg_0[22]),
        .I4(lu_ctl_ex[1]),
        .I5(lu_ctl_ex[0]),
        .O(\reg_file_a[15][25]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \reg_file_a[15][25]_i_6 
       (.I0(\swz_ctl_ex_reg[1]_0 [1]),
        .I1(ze_half_wb),
        .O(\reg_file_a[15][25]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT5 #(
    .INIT(32'h0000B800)) 
    \reg_file_a[15][25]_i_8 
       (.I0(a_reg_0[1]),
        .I1(\swz_ctl_ex_reg[1]_0 [1]),
        .I2(a_reg_0[14]),
        .I3(\swz_ctl_ex_reg[1]_0 [0]),
        .I4(ze_half_wb),
        .O(\reg_file_a[15][25]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h5FFC50FC5F0C500C)) 
    \reg_file_a[15][26]_i_1 
       (.I0(\reg_file_a[15][26]_i_2_n_0 ),
        .I1(\HADDR_reg[27] [2]),
        .I2(rf1_mux_ctl_ex[0]),
        .I3(rf1_mux_ctl_ex[1]),
        .I4(mult_out[10]),
        .I5(\reg_file_a_reg[15][26] ),
        .O(rf_wdata[26]));
  LUT6 #(
    .INIT(64'h00000000FFFF1917)) 
    \reg_file_a[15][26]_i_2 
       (.I0(invert_b_ex_reg_0[4]),
        .I1(z_flag_mux_i_6_0[4]),
        .I2(lu_ctl_ex[0]),
        .I3(lu_ctl_ex[1]),
        .I4(c_flag_mux_i_3_n_0),
        .I5(\reg_file_a_reg[15][26]_0 ),
        .O(\reg_file_a[15][26]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h555655A6AA56AAA6)) 
    \reg_file_a[15][26]_i_4 
       (.I0(invert_b_ex),
        .I1(b_reg_0[26]),
        .I2(au_b_use_pc_ex),
        .I3(use_imm_ex),
        .I4(Q[25]),
        .I5(imm_ex[29]),
        .O(invert_b_ex_reg_0[4]));
  LUT6 #(
    .INIT(64'h5FFC50FC5F0C500C)) 
    \reg_file_a[15][27]_i_1 
       (.I0(\reg_file_a[15][27]_i_2_n_0 ),
        .I1(\HADDR_reg[27] [3]),
        .I2(rf1_mux_ctl_ex[0]),
        .I3(rf1_mux_ctl_ex[1]),
        .I4(mult_out[11]),
        .I5(\reg_file_a_reg[15][27] ),
        .O(rf_wdata[27]));
  LUT6 #(
    .INIT(64'h00000000FFFF262B)) 
    \reg_file_a[15][27]_i_2 
       (.I0(invert_b_ex_reg_5),
        .I1(z_flag_mux_i_6_0[5]),
        .I2(lu_ctl_ex[0]),
        .I3(lu_ctl_ex[1]),
        .I4(c_flag_mux_i_3_n_0),
        .I5(\reg_file_a_reg[15][27]_0 ),
        .O(\reg_file_a[15][27]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAA9AA5955A95559)) 
    \reg_file_a[15][27]_i_4 
       (.I0(invert_b_ex),
        .I1(b_reg_0[27]),
        .I2(au_b_use_pc_ex),
        .I3(use_imm_ex),
        .I4(Q[26]),
        .I5(imm_ex[29]),
        .O(invert_b_ex_reg_5));
  LUT6 #(
    .INIT(64'hF8FFF8FFF80700F8)) 
    \reg_file_a[15][28]_i_4 
       (.I0(a_reg_0[23]),
        .I1(\dp_ipsr_1to0[1]_i_24_n_0 ),
        .I2(\reg_file_a[15][28]_i_2 ),
        .I3(invert_b_ex_reg_6),
        .I4(lu_ctl_ex[1]),
        .I5(lu_ctl_ex[0]),
        .O(\reg_file_a[15][28]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFDDDFDDDA9995444)) 
    \reg_file_a[15][29]_i_4 
       (.I0(invert_b_ex_reg_7),
        .I1(\reg_file_a[15][29]_i_2 ),
        .I2(\dp_ipsr_1to0[1]_i_24_n_0 ),
        .I3(a_reg_0[24]),
        .I4(lu_ctl_ex[1]),
        .I5(lu_ctl_ex[0]),
        .O(\reg_file_a[15][29]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFEA556AFFEAAA80)) 
    \reg_file_a[15][30]_i_4 
       (.I0(invert_b_ex_reg_0[6]),
        .I1(a_reg_0[25]),
        .I2(\dp_ipsr_1to0[1]_i_24_n_0 ),
        .I3(\reg_file_a[15][30]_i_2 ),
        .I4(lu_ctl_ex[0]),
        .I5(lu_ctl_ex[1]),
        .O(\reg_file_a[15][30]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h4444411111111FFF)) 
    \reg_file_a[15][31]_i_5 
       (.I0(lu_ctl_ex[0]),
        .I1(lu_ctl_ex[1]),
        .I2(\dp_ipsr_1to0[1]_i_24_n_0 ),
        .I3(a_reg_0[26]),
        .I4(\reg_file_a[15][31]_i_3 ),
        .I5(invert_b_ex_reg_0[7]),
        .O(\reg_file_a[15][31]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h5FCF5FC050CF50C0)) 
    \reg_file_a[15][8]_i_1 
       (.I0(\reg_file_a[15][8]_i_2_n_0 ),
        .I1(\reg_file_a_reg[15][15] [8]),
        .I2(rf1_mux_ctl_ex[1]),
        .I3(rf1_mux_ctl_ex[0]),
        .I4(\pc_reg[11] [0]),
        .I5(\reg_file_a[15][8]_i_3_n_0 ),
        .O(rf_wdata[8]));
  LUT6 #(
    .INIT(64'h00000000FFFF1917)) 
    \reg_file_a[15][8]_i_2 
       (.I0(\u_dp/u_alu_dec/au_in_b [8]),
        .I1(\u_dp/au_in_a [8]),
        .I2(lu_ctl_ex[0]),
        .I3(lu_ctl_ex[1]),
        .I4(c_flag_mux_i_3_n_0),
        .I5(\reg_file_a_reg[15][8] ),
        .O(\reg_file_a[15][8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h5501550155015555)) 
    \reg_file_a[15][8]_i_3 
       (.I0(ze_byte_wb),
        .I1(\mem_held_addr_reg[1]_0 ),
        .I2(\hold_reg2_reg[24] ),
        .I3(\reg_file_a[15][8]_i_6_n_0 ),
        .I4(\hold_reg2_reg[8] ),
        .I5(\mem_held_addr_reg[1] ),
        .O(\reg_file_a[15][8]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h555655A6AA56AAA6)) 
    \reg_file_a[15][8]_i_4 
       (.I0(invert_b_ex),
        .I1(b_reg_0[8]),
        .I2(au_b_use_pc_ex),
        .I3(use_imm_ex),
        .I4(Q[7]),
        .I5(imm_ex[8]),
        .O(\u_dp/u_alu_dec/au_in_b [8]));
  LUT4 #(
    .INIT(16'h4F44)) 
    \reg_file_a[15][8]_i_6 
       (.I0(\mem_held_addr_reg[0] ),
        .I1(a_reg_0[0]),
        .I2(\mem_held_addr_reg[1]_1 ),
        .I3(a_reg_0[13]),
        .O(\reg_file_a[15][8]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h5510551055105555)) 
    \reg_file_a[15][9]_i_3 
       (.I0(ze_byte_wb),
        .I1(\mem_held_addr_reg[1] ),
        .I2(load_fptr),
        .I3(\reg_file_a[15][9]_i_6_n_0 ),
        .I4(\hold_reg2_reg[25] ),
        .I5(\mem_held_addr_reg[1]_0 ),
        .O(\reg_file_a[15][9]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFDDDA999FDDD5444)) 
    \reg_file_a[15][9]_i_4 
       (.I0(\mem_held_addr[11]_i_10_n_0 ),
        .I1(z_flag_mux_i_11_0),
        .I2(a_reg_0[8]),
        .I3(\dp_ipsr_1to0[1]_i_24_n_0 ),
        .I4(lu_ctl_ex[0]),
        .I5(lu_ctl_ex[1]),
        .O(\reg_file_a[15][9]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h4F44)) 
    \reg_file_a[15][9]_i_6 
       (.I0(\mem_held_addr_reg[0] ),
        .I1(a_reg_0[1]),
        .I2(\mem_held_addr_reg[1]_1 ),
        .I3(a_reg_0[14]),
        .O(\reg_file_a[15][9]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0FFF0FFFFFFF4)) 
    \reg_sel[0]_i_1 
       (.I0(p_0_in14_in),
        .I1(p_1_in16_in),
        .I2(nxt_r_list_first_3),
        .I3(nxt_r_list_first_1),
        .I4(p_1_in12_in),
        .I5(\r_list_first[5]_i_2_n_0 ),
        .O(nxt_reg_sel[0]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFE00)) 
    \reg_sel[1]_i_1 
       (.I0(p_0_in18_in),
        .I1(p_1_in16_in),
        .I2(p_0_in14_in),
        .I3(\r_list_first[6]_i_2_n_0 ),
        .I4(nxt_r_list_first_2),
        .I5(nxt_r_list_first_3),
        .O(nxt_reg_sel[1]));
  LUT6 #(
    .INIT(64'h0000FFFF0000FFFE)) 
    \reg_sel[2]_i_1 
       (.I0(p_0_in18_in),
        .I1(p_1_in16_in),
        .I2(p_0_in14_in),
        .I3(p_0_in11_in),
        .I4(\r_list_first[4]_i_2_n_0 ),
        .I5(p_1_in12_in),
        .O(nxt_reg_sel[2]));
  FDCE \reg_sel_reg[0] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(nxt_reg_sel[0]),
        .Q(reg_sel[0]));
  FDCE \reg_sel_reg[1] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(nxt_reg_sel[1]),
        .Q(reg_sel[1]));
  FDCE \reg_sel_reg[2] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(nxt_reg_sel[2]),
        .Q(reg_sel[2]));
  FDCE \reg_sel_reg[3] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(nxt_reg_sel[3]),
        .Q(reg_sel[3]));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \rf0_mux_ctl_ex[0]_i_2 
       (.I0(shift_ex),
        .I1(sbit_ex),
        .O(\rf0_mux_ctl_ex[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT5 #(
    .INIT(32'h00005004)) 
    \rf0_mux_ctl_ex[1]_i_2 
       (.I0(\instr_de_reg_n_0_[10] ),
        .I1(\instr_de_reg_n_0_[9] ),
        .I2(\instr_de_reg_n_0_[11] ),
        .I3(\instr_de_reg_n_0_[7] ),
        .I4(sbit_ex_i_3_n_0),
        .O(\rf0_mux_ctl_ex[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFEEEFEEEFEEE)) 
    \rf0_mux_ctl_ex[1]_i_3 
       (.I0(sbit_ex),
        .I1(br_lr_ex),
        .I2(nxt_ldm_base),
        .I3(ldm_base_loaded),
        .I4(ld_slow_ex),
        .I5(load_ex),
        .O(\rf0_mux_ctl_ex[1]_i_3_n_0 ));
  FDCE \rf0_mux_ctl_ex_reg[0] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(u_excpt_n_163),
        .Q(rf0_mux_ctl_ex[0]));
  FDCE \rf0_mux_ctl_ex_reg[1] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(u_decode_n_47),
        .Q(rf0_mux_ctl_ex[1]));
  FDCE \rf1_mux_ctl_ex_reg[0] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(nxt_rf1_mux_ctl_ex[0]),
        .Q(rf1_mux_ctl_ex[0]));
  FDCE \rf1_mux_ctl_ex_reg[1] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(nxt_rf1_mux_ctl_ex[1]),
        .Q(rf1_mux_ctl_ex[1]));
  LUT6 #(
    .INIT(64'h0080008F00800080)) 
    \rf_mux_ctl_ex[2]_i_3 
       (.I0(\instr_de_reg_n_0_[12] ),
        .I1(\rf_mux_ctl_ex[2]_i_5_n_0 ),
        .I2(\instr_de_reg_n_0_[11] ),
        .I3(first32_ex_reg_0),
        .I4(push_ex_i_2_n_0),
        .I5(\rf_mux_ctl_ex[2]_i_6_n_0 ),
        .O(\rf_mux_ctl_ex[2]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \rf_mux_ctl_ex[2]_i_4 
       (.I0(last_uncond_phase_ex_reg_0),
        .I1(shift_ex),
        .I2(sbit_ex),
        .I3(\rf_mux_ctl_ex[2]_i_7_n_0 ),
        .O(\rf_mux_ctl_ex[2]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT4 #(
    .INIT(16'h0800)) 
    \rf_mux_ctl_ex[2]_i_5 
       (.I0(\instr_de_reg_n_0_[15] ),
        .I1(\instr_de_reg_n_0_[13] ),
        .I2(\instr_de_reg_n_0_[10] ),
        .I3(\instr_de_reg_n_0_[7] ),
        .O(\rf_mux_ctl_ex[2]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \rf_mux_ctl_ex[2]_i_6 
       (.I0(\instr_de_reg_n_0_[9] ),
        .I1(\instr_de_reg_n_0_[7] ),
        .I2(\instr_de_reg_n_0_[10] ),
        .O(\rf_mux_ctl_ex[2]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFF8888888)) 
    \rf_mux_ctl_ex[2]_i_7 
       (.I0(load_ex),
        .I1(ld_slow_ex),
        .I2(ldm_base_loaded),
        .I3(ldm_pop_ex),
        .I4(lsm_last_d_phase_ex),
        .I5(br_lr_ex),
        .O(\rf_mux_ctl_ex[2]_i_7_n_0 ));
  FDCE \rf_mux_ctl_ex_reg[2] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(u_excpt_n_162),
        .Q(rf_mux_ctl_ex));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    \rptr_a_ex2[0]_i_1 
       (.I0(\rptr_a_ex2[2]_i_2_n_0 ),
        .I1(\instr_de_reg_n_0_[3] ),
        .I2(\rptr_a_ex2[0]_i_2_n_0 ),
        .O(rptr_a_de[0]));
  LUT6 #(
    .INIT(64'h0101000001014070)) 
    \rptr_a_ex2[0]_i_2 
       (.I0(p_25_in),
        .I1(\instr_de_reg_n_0_[15] ),
        .I2(\instr_de_reg_n_0_[14] ),
        .I3(rptr_b2_de[0]),
        .I4(\instr_de_reg_n_0_[13] ),
        .I5(\instr_de_reg_n_0_[12] ),
        .O(\rptr_a_ex2[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    \rptr_a_ex2[2]_i_1 
       (.I0(\rptr_a_ex2[2]_i_2_n_0 ),
        .I1(\instr_de_reg_n_0_[5] ),
        .I2(\rptr_a_ex2[2]_i_3_n_0 ),
        .O(rptr_a_de[2]));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT5 #(
    .INIT(32'h7F7C03CC)) 
    \rptr_a_ex2[2]_i_2 
       (.I0(\instr_de_reg_n_0_[9] ),
        .I1(\instr_de_reg_n_0_[13] ),
        .I2(\instr_de_reg_n_0_[12] ),
        .I3(\instr_de_reg_n_0_[14] ),
        .I4(\instr_de_reg_n_0_[15] ),
        .O(\rptr_a_ex2[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0101000001014070)) 
    \rptr_a_ex2[2]_i_3 
       (.I0(\instr_de_reg_n_0_[10] ),
        .I1(\instr_de_reg_n_0_[15] ),
        .I2(\instr_de_reg_n_0_[14] ),
        .I3(rptr_b2_de[2]),
        .I4(\instr_de_reg_n_0_[13] ),
        .I5(\instr_de_reg_n_0_[12] ),
        .O(\rptr_a_ex2[2]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT5 #(
    .INIT(32'h008AA08A)) 
    \rptr_a_ex2[3]_i_3 
       (.I0(\instr_de_reg_n_0_[13] ),
        .I1(\instr_de_reg_n_0_[9] ),
        .I2(\instr_de_reg_n_0_[12] ),
        .I3(\instr_de_reg_n_0_[11] ),
        .I4(\instr_de_reg_n_0_[10] ),
        .O(\rptr_a_ex2[3]_i_3_n_0 ));
  FDCE \rptr_a_ex2_reg[0] 
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg),
        .CLR(SYSRESETn_0),
        .D(rptr_a_de[0]),
        .Q(rptr_a_ex2[0]));
  FDCE \rptr_a_ex2_reg[1] 
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg),
        .CLR(SYSRESETn_0),
        .D(u_excpt_n_20),
        .Q(rptr_a_ex2[1]));
  FDCE \rptr_a_ex2_reg[2] 
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg),
        .CLR(SYSRESETn_0),
        .D(rptr_a_de[2]),
        .Q(rptr_a_ex2[2]));
  FDCE \rptr_a_ex2_reg[3] 
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg),
        .CLR(SYSRESETn_0),
        .D(rptr_a_de[3]),
        .Q(rptr_a_ex2[3]));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rptr_a_ex[0]_i_1 
       (.I0(rptr_a_de[0]),
        .I1(last_uncond_phase_ex_reg_0),
        .I2(rptr_a_ex2[0]),
        .O(\rptr_a_ex[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \rptr_a_ex[0]_i_1__0 
       (.I0(rptr_a_de[0]),
        .I1(last_uncond_phase_ex_reg_0),
        .I2(rptr_a_ex2[0]),
        .I3(biu_rdy),
        .I4(rptr_a_ex[0]),
        .O(last_uncond_phase_ex_reg_1[0]));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rptr_a_ex[2]_i_1 
       (.I0(rptr_a_de[2]),
        .I1(last_uncond_phase_ex_reg_0),
        .I2(rptr_a_ex2[2]),
        .O(\rptr_a_ex[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \rptr_a_ex[2]_i_1__0 
       (.I0(rptr_a_de[2]),
        .I1(last_uncond_phase_ex_reg_0),
        .I2(rptr_a_ex2[2]),
        .I3(biu_rdy),
        .I4(rptr_a_ex[2]),
        .O(last_uncond_phase_ex_reg_1[2]));
  FDCE \rptr_a_ex_reg[0] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(\rptr_a_ex[0]_i_1_n_0 ),
        .Q(rptr_a_ex[0]));
  FDCE \rptr_a_ex_reg[1] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(u_excpt_n_135),
        .Q(rptr_a_ex[1]));
  FDCE \rptr_a_ex_reg[2] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(\rptr_a_ex[2]_i_1_n_0 ),
        .Q(rptr_a_ex[2]));
  FDCE \rptr_a_ex_reg[3] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(u_excpt_n_164),
        .Q(rptr_a_ex[3]));
  LUT6 #(
    .INIT(64'h00000000B8B8FF00)) 
    \rptr_b_ex2[0]_i_3 
       (.I0(\instr_de_reg_n_0_[3] ),
        .I1(u_excpt_n_138),
        .I2(rptr_b2_de[0]),
        .I3(\instr_de_reg_n_0_[6] ),
        .I4(\rptr_b_ex2[0]_i_5_n_0 ),
        .I5(use_c_flag_ex_i_2_n_0),
        .O(\rptr_b_ex2[0]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT5 #(
    .INIT(32'h00B80000)) 
    \rptr_b_ex2[0]_i_4 
       (.I0(p_25_in),
        .I1(\instr_de_reg_n_0_[12] ),
        .I2(rptr_b2_de[0]),
        .I3(first32_ex_reg_0),
        .I4(\instr_de_reg_n_0_[15] ),
        .O(\rptr_b_ex2[0]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT3 #(
    .INIT(8'h8A)) 
    \rptr_b_ex2[0]_i_5 
       (.I0(\instr_de_reg_n_0_[14] ),
        .I1(\instr_de_reg_n_0_[13] ),
        .I2(\instr_de_reg_n_0_[12] ),
        .O(\rptr_b_ex2[0]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000400)) 
    \rptr_b_ex2[2]_i_3 
       (.I0(\instr_de_reg_n_0_[11] ),
        .I1(\instr_de_reg_n_0_[12] ),
        .I2(se_byte_wb_i_3_n_0),
        .I3(u_excpt_n_153),
        .I4(first32_ex_reg_0),
        .I5(\instr_de_reg_n_0_[13] ),
        .O(\rptr_b_ex2[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h300030503FFF3F5F)) 
    \rptr_b_ex2[2]_i_4 
       (.I0(\instr_de_reg_n_0_[5] ),
        .I1(rptr_b2_de[2]),
        .I2(\instr_de_reg_n_0_[14] ),
        .I3(\instr_de_reg_n_0_[13] ),
        .I4(\instr_de_reg_n_0_[12] ),
        .I5(p_25_in),
        .O(\rptr_b_ex2[2]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT5 #(
    .INIT(32'h0000E200)) 
    \rptr_b_ex2[2]_i_5 
       (.I0(rptr_b2_de[2]),
        .I1(\instr_de_reg_n_0_[12] ),
        .I2(\instr_de_reg_n_0_[10] ),
        .I3(\instr_de_reg_n_0_[15] ),
        .I4(first32_ex_reg_0),
        .O(\rptr_b_ex2[2]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT4 #(
    .INIT(16'hFFDF)) 
    \rptr_b_ex2[3]_i_3 
       (.I0(\instr_de_reg_n_0_[10] ),
        .I1(first32_ex_reg_0),
        .I2(\instr_de_reg_n_0_[6] ),
        .I3(\instr_de_reg_n_0_[15] ),
        .O(\rptr_b_ex2[3]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \rptr_b_ex2[3]_i_4 
       (.I0(\instr_de_reg_n_0_[13] ),
        .I1(\instr_de_reg_n_0_[12] ),
        .O(\rptr_b_ex2[3]_i_4_n_0 ));
  FDCE \rptr_b_ex2_reg[0] 
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg),
        .CLR(SYSRESETn_0),
        .D(u_decode_n_32),
        .Q(rptr_b_ex2[0]));
  FDCE \rptr_b_ex2_reg[1] 
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg),
        .CLR(SYSRESETn_0),
        .D(u_decode_n_31),
        .Q(rptr_b_ex2[1]));
  FDCE \rptr_b_ex2_reg[2] 
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg),
        .CLR(SYSRESETn_0),
        .D(u_decode_n_30),
        .Q(rptr_b_ex2[2]));
  FDCE \rptr_b_ex2_reg[3] 
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg),
        .CLR(SYSRESETn_0),
        .D(u_decode_n_29),
        .Q(rptr_b_ex2[3]));
  LUT4 #(
    .INIT(16'h00E2)) 
    \rptr_b_ex[0]_i_2 
       (.I0(rptr_b_ex2[0]),
        .I1(stm_push_ex),
        .I2(reg_sel[0]),
        .I3(last_uncond_phase_ex_reg_0),
        .O(\rptr_b_ex[0]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \rptr_b_ex[1]_i_2 
       (.I0(rptr_b_ex2[1]),
        .I1(stm_push_ex),
        .I2(reg_sel[1]),
        .I3(last_uncond_phase_ex_reg_0),
        .O(\rptr_b_ex[1]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \rptr_b_ex[2]_i_2 
       (.I0(rptr_b_ex2[2]),
        .I1(stm_push_ex),
        .I2(reg_sel[2]),
        .I3(last_uncond_phase_ex_reg_0),
        .O(\rptr_b_ex[2]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \rptr_b_ex[3]_i_2 
       (.I0(rptr_b_ex2[3]),
        .I1(stm_push_ex),
        .I2(reg_sel[3]),
        .I3(last_uncond_phase_ex_reg_0),
        .O(\rptr_b_ex[3]_i_2_n_0 ));
  FDCE \rptr_b_ex_reg[0] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(SYSRESETn_0),
        .D(last_uncond_phase_ex_reg_2[0]),
        .Q(rptr_b_ex[0]));
  FDCE \rptr_b_ex_reg[1] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(SYSRESETn_0),
        .D(last_uncond_phase_ex_reg_2[1]),
        .Q(rptr_b_ex[1]));
  FDCE \rptr_b_ex_reg[2] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(SYSRESETn_0),
        .D(last_uncond_phase_ex_reg_2[2]),
        .Q(rptr_b_ex[2]));
  FDCE \rptr_b_ex_reg[3] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(SYSRESETn_0),
        .D(last_uncond_phase_ex_reg_2[3]),
        .Q(rptr_b_ex[3]));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \sbit_ctl_ex[0]_i_1 
       (.I0(\instr_de_reg_n_0_[11] ),
        .I1(\instr_de_reg_n_0_[15] ),
        .I2(\instr_de_reg_n_0_[6] ),
        .O(\sbit_ctl_ex[0]_i_1_n_0 ));
  FDCE \sbit_ctl_ex_reg[0] 
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg),
        .CLR(SYSRESETn_0),
        .D(\sbit_ctl_ex[0]_i_1_n_0 ),
        .Q(sbit_ctl_ex));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT3 #(
    .INIT(8'h2A)) 
    sbit_ex_i_2
       (.I0(\instr_de_reg_n_0_[13] ),
        .I1(\instr_de_reg_n_0_[12] ),
        .I2(\instr_de_reg_n_0_[11] ),
        .O(sbit_ex_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT5 #(
    .INIT(32'hEFFFFFFF)) 
    sbit_ex_i_3
       (.I0(first32_ex_reg_0),
        .I1(\instr_de_reg_n_0_[14] ),
        .I2(\instr_de_reg_n_0_[15] ),
        .I3(\instr_de_reg_n_0_[13] ),
        .I4(\instr_de_reg_n_0_[12] ),
        .O(sbit_ex_i_3_n_0));
  FDCE sbit_ex_reg
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg),
        .CLR(SYSRESETn_0),
        .D(u_excpt_n_27),
        .Q(sbit_ex));
  LUT6 #(
    .INIT(64'h0002AAAA00020002)) 
    se_byte_wb_i_1
       (.I0(se_byte_wb_i_2_n_0),
        .I1(se_byte_wb_i_3_n_0),
        .I2(u_excpt_n_153),
        .I3(\instr_de_reg_n_0_[13] ),
        .I4(\instr_de_reg_n_0_[7] ),
        .I5(\instr_de_reg_n_0_[6] ),
        .O(sext_byte));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT4 #(
    .INIT(16'h0004)) 
    se_byte_wb_i_2
       (.I0(\instr_de_reg_n_0_[11] ),
        .I1(\instr_de_reg_n_0_[12] ),
        .I2(first32_ex_reg_0),
        .I3(se_byte_wb_i_4_n_0),
        .O(se_byte_wb_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT2 #(
    .INIT(4'hB)) 
    se_byte_wb_i_3
       (.I0(\instr_de_reg_n_0_[15] ),
        .I1(\instr_de_reg_n_0_[14] ),
        .O(se_byte_wb_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT5 #(
    .INIT(32'hFFBFF7FF)) 
    se_byte_wb_i_4
       (.I0(\instr_de_reg_n_0_[13] ),
        .I1(\instr_de_reg_n_0_[9] ),
        .I2(\instr_de_reg_n_0_[10] ),
        .I3(\instr_de_reg_n_0_[15] ),
        .I4(\instr_de_reg_n_0_[14] ),
        .O(se_byte_wb_i_4_n_0));
  FDCE se_byte_wb_reg
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg),
        .CLR(SYSRESETn_0),
        .D(sext_byte),
        .Q(se_byte_wb));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAEAAFA)) 
    se_half_wb_i_1
       (.I0(three_phase_ex_i_1_n_0),
        .I1(\instr_de_reg_n_0_[9] ),
        .I2(\instr_de_reg_n_0_[7] ),
        .I3(\instr_de_reg_n_0_[10] ),
        .I4(sbit_ex_i_2_n_0),
        .I5(sbit_ex_i_3_n_0),
        .O(sext_half));
  FDCE se_half_wb_reg
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg),
        .CLR(SYSRESETn_0),
        .D(sext_half),
        .Q(se_half_wb));
  FDCE second32_ex_reg
       (.C(HCLK),
        .CE(adv_de_to_ex),
        .CLR(SYSRESETn_0),
        .D(nxt_second32_ex),
        .Q(second32_ex));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT2 #(
    .INIT(4'h8)) 
    second_ex_phase_i_1
       (.I0(first_ex_phase),
        .I1(u_excpt_n_22),
        .O(second_ex_phase0));
  FDCE second_ex_phase_reg
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(second_ex_phase0),
        .Q(second_ex_phase));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT4 #(
    .INIT(16'hBFAA)) 
    sel_wf_c_i_1
       (.I0(write_flags_ex),
        .I1(i_dbg_wdata_sel_de_reg),
        .I2(pre_update_c_ex),
        .I3(sel_wf_c),
        .O(pre_update_c_ex_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT4 #(
    .INIT(16'hBFAA)) 
    sel_wf_v_i_1
       (.I0(write_flags_ex),
        .I1(i_dbg_wdata_sel_de_reg),
        .I2(pre_update_v_ex),
        .I3(sel_wf_v),
        .O(pre_update_v_ex_reg_0));
  LUT5 #(
    .INIT(32'hEAAAAAAA)) 
    sel_wf_z_i_1
       (.I0(use_dp_tbit_reg),
        .I1(first_ex_phase),
        .I2(msr_ex),
        .I3(biu_rdy),
        .I4(use_flags_ex),
        .O(write_flags_ex));
  LUT6 #(
    .INIT(64'h000059FFFFFFFFFF)) 
    shift_ex_i_2
       (.I0(\instr_de_reg_n_0_[7] ),
        .I1(p_25_in),
        .I2(\instr_de_reg_n_0_[6] ),
        .I3(use_c_flag_ex_i_3_n_0),
        .I4(use_c_flag_ex_i_4_n_0),
        .I5(shift_ex_i_3_n_0),
        .O(shift_ex_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT3 #(
    .INIT(8'h01)) 
    shift_ex_i_3
       (.I0(\instr_de_reg_n_0_[13] ),
        .I1(\instr_de_reg_n_0_[15] ),
        .I2(first32_ex_reg_0),
        .O(shift_ex_i_3_n_0));
  FDCE shift_ex_reg
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg),
        .CLR(SYSRESETn_0),
        .D(u_excpt_n_28),
        .Q(shift_ex));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF50D0)) 
    \shift_op[0]_i_1 
       (.I0(\instr_de_reg_n_0_[7] ),
        .I1(\instr_de_reg_n_0_[6] ),
        .I2(\instr_de_reg_n_0_[14] ),
        .I3(p_25_in),
        .I4(\instr_de_reg_n_0_[12] ),
        .I5(\instr_de_reg_n_0_[11] ),
        .O(\shift_op[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    \shift_op[1]_i_1 
       (.I0(\instr_de_reg_n_0_[12] ),
        .I1(p_25_in),
        .I2(\instr_de_reg_n_0_[14] ),
        .O(shift_op_de));
  FDCE \shift_op_reg[0] 
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg),
        .CLR(SYSRESETn_0),
        .D(\shift_op[0]_i_1_n_0 ),
        .Q(shift_op[0]));
  FDCE \shift_op_reg[1] 
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg),
        .CLR(SYSRESETn_0),
        .D(shift_op_de),
        .Q(shift_op[1]));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT5 #(
    .INIT(32'h00008A88)) 
    stm_push_ex_i_2
       (.I0(use_r_list_ex_i_2_n_0),
        .I1(\instr_de_reg_n_0_[14] ),
        .I2(\instr_de_reg_n_0_[9] ),
        .I3(\instr_de_reg_n_0_[10] ),
        .I4(\instr_de_reg_n_0_[11] ),
        .O(stm_push_ex_i_2_n_0));
  FDCE stm_push_ex_reg
       (.C(HCLK),
        .CE(adv_de_to_ex),
        .CLR(SYSRESETn_0),
        .D(stm_push_de),
        .Q(stm_push_ex));
  FDCE store_ex_reg
       (.C(HCLK),
        .CE(adv_de_to_ex),
        .CLR(SYSRESETn_0),
        .D(store_de),
        .Q(store_ex));
  LUT6 #(
    .INIT(64'h0000000000400000)) 
    \swz_ctl_ex[0]_i_1 
       (.I0(p_25_in),
        .I1(\instr_de_reg_n_0_[11] ),
        .I2(\instr_de_reg_n_0_[9] ),
        .I3(first32_ex_reg_0),
        .I4(\instr_de_reg_n_0_[15] ),
        .I5(\swz_ctl_ex[0]_i_2_n_0 ),
        .O(swz_ctl_de[0]));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \swz_ctl_ex[0]_i_2 
       (.I0(\instr_de_reg_n_0_[13] ),
        .I1(\instr_de_reg_n_0_[12] ),
        .O(\swz_ctl_ex[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000080)) 
    \swz_ctl_ex[1]_i_1 
       (.I0(\instr_de_reg_n_0_[12] ),
        .I1(first32_ex_i_3_n_0),
        .I2(\instr_de_reg_n_0_[11] ),
        .I3(first32_ex_reg_0),
        .I4(\instr_de_reg_n_0_[6] ),
        .I5(\instr_de_reg_n_0_[10] ),
        .O(swz_ctl_de[1]));
  FDCE \swz_ctl_ex_reg[0] 
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg),
        .CLR(SYSRESETn_0),
        .D(swz_ctl_de[0]),
        .Q(\swz_ctl_ex_reg[1]_0 [0]));
  FDCE \swz_ctl_ex_reg[1] 
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg),
        .CLR(SYSRESETn_0),
        .D(swz_ctl_de[1]),
        .Q(\swz_ctl_ex_reg[1]_0 [1]));
  FDCE tbit_ex_reg
       (.C(HCLK),
        .CE(adv_de_to_ex),
        .CLR(SYSRESETn_0),
        .D(u_excpt_n_23),
        .Q(tbit_ex));
  LUT6 #(
    .INIT(64'h0000000000001000)) 
    three_phase_ex_i_1
       (.I0(first32_ex_reg_0),
        .I1(u_excpt_n_153),
        .I2(\instr_de_reg_n_0_[12] ),
        .I3(\instr_de_reg_n_0_[14] ),
        .I4(\instr_de_reg_n_0_[13] ),
        .I5(\instr_de_reg_n_0_[15] ),
        .O(three_phase_ex_i_1_n_0));
  FDCE three_phase_ex_reg
       (.C(HCLK),
        .CE(adv_de_to_ex),
        .CLR(SYSRESETn_0),
        .D(three_phase_ex_i_1_n_0),
        .Q(three_phase_ex));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT5 #(
    .INIT(32'h01040100)) 
    two_phase_ex_i_4
       (.I0(sbit_ex_i_3_n_0),
        .I1(sbit_ex_i_2_n_0),
        .I2(\instr_de_reg_n_0_[10] ),
        .I3(\instr_de_reg_n_0_[7] ),
        .I4(\instr_de_reg_n_0_[9] ),
        .O(two_phase_ex_i_4_n_0));
  LUT6 #(
    .INIT(64'h0000000010000000)) 
    two_phase_ex_i_5
       (.I0(push_ex_i_2_n_0),
        .I1(first32_ex_reg_0),
        .I2(\instr_de_reg_n_0_[10] ),
        .I3(\instr_de_reg_n_0_[9] ),
        .I4(rptr_b2_de[1]),
        .I5(\instr_de_reg_n_0_[11] ),
        .O(two_phase_ex_i_5_n_0));
  FDCE two_phase_ex_reg
       (.C(HCLK),
        .CE(adv_de_to_ex),
        .CLR(SYSRESETn_0),
        .D(two_phase_de),
        .Q(two_phase_ex));
  LUT2 #(
    .INIT(4'h6)) 
    \u_alu_dec/u_adder/mem_held_addr[11]_i_9 
       (.I0(\u_dp/au_in_a [8]),
        .I1(\u_dp/u_alu_dec/au_in_b [8]),
        .O(\u_alu_dec/u_adder/mem_held_addr[11]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h565656A6A6A656A6)) 
    \u_alu_dec/u_adder/mem_held_addr[3]_i_10 
       (.I0(\mem_held_addr[3]_i_6_n_0 ),
        .I1(force_c_in_ex),
        .I2(use_c_flag_ex),
        .I3(c_flag_mux),
        .I4(sel_wf_c),
        .I5(c_flag_wf),
        .O(\u_alu_dec/u_adder/mem_held_addr[3]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \u_alu_dec/u_adder/mem_held_addr[3]_i_7 
       (.I0(\u_dp/au_in_a [3]),
        .I1(\u_dp/u_alu_dec/au_in_b [3]),
        .O(\u_alu_dec/u_adder/mem_held_addr[3]_i_7_n_0 ));
  design_1_CORTEXM1_AXI_0_1_cm1_decoder u_decode
       (.D({nxt_wptr_decoded,wptr_de}),
        .HCLK(HCLK),
        .Q({\instr_de_reg_n_0_[15] ,\instr_de_reg_n_0_[14] ,\instr_de_reg_n_0_[13] ,\instr_de_reg_n_0_[12] ,\instr_de_reg_n_0_[11] ,\instr_de_reg_n_0_[10] ,\instr_de_reg_n_0_[9] ,p_25_in,\instr_de_reg_n_0_[7] ,\instr_de_reg_n_0_[6] ,\instr_de_reg_n_0_[5] ,cps_data,\instr_de_reg_n_0_[3] ,rptr_b2_de}),
        .adv_de_to_ex(adv_de_to_ex),
        .au_b_use_pc_ex_reg(au_b_use_pc_ex_i_2_n_0),
        .au_b_use_pc_ex_reg_0(au_b_use_pc_ex_i_3_n_0),
        .au_b_use_pc_ex_reg_1(au_b_use_pc_ex_i_4_n_0),
        .b_reg_0(b_reg_0[30]),
        .b_use_pc(b_use_pc),
        .bcc_first_ex(bcc_first_ex),
        .bcc_first_ex_reg(bcc_first_ex_reg_0),
        .biu_rdy(biu_rdy),
        .br_first_ex_reg(bcc_first_ex_i_2_n_0),
        .br_first_ex_reg_0(u_excpt_n_18),
        .br_lr_ex(br_lr_ex),
        .branch_ex_reg(branch_ex_i_3_n_0),
        .c_flag(c_flag),
        .c_flag_wf(c_flag_wf),
        .c_flag_wf_reg(c_flag_wf_reg),
        .c_flag_wf_reg_0(\reg_file_a[15][29]_i_4_n_0 ),
        .c_flag_wf_reg_1(c_flag_wf_i_3_n_0),
        .c_flag_wf_reg_2(dp_tbit_reg_i_5_n_0),
        .dbg_wdata_sel_de(dbg_wdata_sel_de),
        .first32_ex_reg({nxt_imm_int[29],nxt_imm_int[23:12]}),
        .first32_ex_reg_0(first32_ex_reg_1),
        .first32_ex_reg_1(u_decode_n_48),
        .i_dbg_wdata_sel_de_reg(u_decode_n_47),
        .\imm_ex_reg[12] (\imm_ex[29]_i_4_n_0 ),
        .\imm_ex_reg[12]_0 (\imm_ex[29]_i_3_n_0 ),
        .\imm_ex_reg[22] (\imm_ex[23]_i_2_n_0 ),
        .\imm_held[10]_i_2_0 ({cc_inv_z,p_1_in18_in,p_0_in,\cond_ex_reg_n_0_[0] }),
        .\imm_held_reg[0]_0 (SYSRESETn_0),
        .\imm_held_reg[4]_0 (u_decode_n_42),
        .\imm_held_reg[5]_0 (u_decode_n_3),
        .\imm_held_reg[6]_0 (u_decode_n_45),
        .\instr_de_reg[14] (u_decode_n_1),
        .\instr_de_reg[14]_0 (u_decode_n_2),
        .\instr_de_reg[14]_1 (u_decode_n_10),
        .\instr_de_reg[14]_2 ({u_decode_n_29,u_decode_n_30,u_decode_n_31,u_decode_n_32}),
        .\instr_de_reg[14]_3 (u_decode_n_41),
        .\instr_de_reg[14]_4 (u_decode_n_50),
        .\instr_de_reg[7] (u_decode_n_9),
        .\instr_de_reg[7]_0 (u_decode_n_49),
        .last_uncond_phase_ex_reg(u_decode_n_11),
        .last_uncond_phase_ex_reg_0(last_uncond_phase_ex_reg_2),
        .lockup_br_de(lockup_br_de),
        .lockup_br_de_reg(u_decode_n_0),
        .micro_code_de(micro_code_de),
        .mult_out(mult_out[15:12]),
        .n_flag(n_flag),
        .nxt_write_sp(nxt_write_sp),
        .p_1_in2_in(p_1_in2_in[16:13]),
        .\reg_file_a_reg[15][28] (rf1_mux_ctl_ex),
        .\reg_file_a_reg[15][28]_0 (\reg_file_a_reg[15][28] ),
        .\reg_file_a_reg[15][28]_1 (\reg_file_a_reg[15][28]_0 ),
        .\reg_file_a_reg[15][29] (\reg_file_a_reg[15][29] ),
        .\reg_file_a_reg[15][29]_0 (\reg_file_a_reg[15][29]_0 ),
        .\reg_file_a_reg[15][30] (\reg_file_a_reg[15][30] ),
        .\reg_file_a_reg[15][30]_0 (\reg_file_a[15][30]_i_4_n_0 ),
        .\reg_file_a_reg[15][30]_1 (\reg_file_a_reg[15][30]_0 ),
        .\reg_file_a_reg[15][31] (\reg_file_a_reg[15][31]_0 ),
        .\reg_file_a_reg[15][31]_0 (rf0_mux_ctl_ex[1]),
        .\reg_file_a_reg[15][31]_1 (rf0_mux_ctl_ex[0]),
        .\reg_file_a_reg[15][31]_2 (\reg_file_a_reg[15][31] [16:13]),
        .\reg_file_a_reg[15][31]_3 (\reg_file_a_reg[15][31]_1 ),
        .\reg_file_a_reg[15][31]_4 (\reg_file_a[15][31]_i_5_n_0 ),
        .\reg_file_a_reg[15][31]_5 (\reg_file_a_reg[15][31]_2 ),
        .\rf0_mux_ctl_ex_reg[1] (\rf0_mux_ctl_ex[1]_i_2_n_0 ),
        .\rf0_mux_ctl_ex_reg[1]_0 (mul_ex_reg_n_0),
        .\rf0_mux_ctl_ex_reg[1]_1 (\rf0_mux_ctl_ex[1]_i_3_n_0 ),
        .rf_wdata(rf_wdata[31:28]),
        .\rptr_b_ex2_reg[0] (\rptr_b_ex2[2]_i_3_n_0 ),
        .\rptr_b_ex_reg[0] (\rptr_b_ex[0]_i_2_n_0 ),
        .\rptr_b_ex_reg[0]_0 (\rptr_b_ex2[0]_i_3_n_0 ),
        .\rptr_b_ex_reg[0]_1 (\rptr_b_ex2[0]_i_4_n_0 ),
        .\rptr_b_ex_reg[1] (\rptr_b_ex[1]_i_2_n_0 ),
        .\rptr_b_ex_reg[1]_0 (u_excpt_n_137),
        .\rptr_b_ex_reg[2] (\rptr_b_ex[2]_i_2_n_0 ),
        .\rptr_b_ex_reg[2]_0 (\rptr_b_ex2[2]_i_4_n_0 ),
        .\rptr_b_ex_reg[2]_1 (\rptr_b_ex2[2]_i_5_n_0 ),
        .\rptr_b_ex_reg[3] (rptr_b_ex),
        .\rptr_b_ex_reg[3]_0 (\rptr_b_ex[3]_i_2_n_0 ),
        .\rptr_b_ex_reg[3]_1 (\rptr_b_ex2[3]_i_3_n_0 ),
        .\rptr_b_ex_reg[3]_2 (\rptr_b_ex2[3]_i_4_n_0 ),
        .two_phase_de(two_phase_de),
        .two_phase_ex_i_2_0(two_phase_ex_i_5_n_0),
        .two_phase_ex_i_2_1(u_excpt_n_145),
        .two_phase_ex_reg(shift_ex_i_2_n_0),
        .two_phase_ex_reg_0(two_phase_ex_i_4_n_0),
        .two_phase_ex_reg_1(dreq_wr_ex_i_2_n_0),
        .two_phase_ex_reg_2(three_phase_ex_i_1_n_0),
        .two_phase_ex_reg_3(load_ex_i_2_n_0),
        .update_c_ex(update_c_ex),
        .update_v_ex(update_v_ex),
        .v_flag(v_flag),
        .v_flag_wf(v_flag_wf),
        .v_flag_wf_reg(v_flag_wf_reg),
        .v_flag_wf_reg_0(\reg_file_a[15][28]_i_4_n_0 ),
        .v_flag_wf_reg_1(v_flag_wf_i_3_n_0),
        .w_phase_ex_reg(w_phase_ex_i_6_n_0),
        .\wdata_reg[28] (\wdata_reg[28] ),
        .\wdata_reg[28]_0 (wdata_mux_ctl_ex),
        .\wdata_reg[28]_1 (\genblk3[1].ram_block_reg_0_0_i_37_n_0 ),
        .\wdata_reg[29] (\wdata_reg[29] ),
        .\wdata_reg[30] (ls_half_ex),
        .\wdata_reg[30]_0 (ls_byte_ex),
        .\wdata_reg[30]_1 (\wdata_reg[30] ),
        .\wdata_reg[30]_2 (\wdata_mux_ctl_ex_reg[0]_0 ),
        .\wdata_reg[31] (\wdata_reg[31] [20:17]),
        .\wdata_reg[31]_0 (dbg_wdata_sel_ex),
        .\wdata_reg[31]_1 (\wdata_reg[31]_0 ),
        .\wptr_decoded_reg[0] (\wptr_decoded[0]_i_3_n_0 ),
        .\wptr_decoded_reg[0]_0 (\wptr_decoded[0]_i_4_n_0 ),
        .\wptr_decoded_reg[1] (first32_ex_reg_0),
        .\wptr_decoded_reg[1]_0 (\wptr_decoded[1]_i_2_n_0 ),
        .\wptr_decoded_reg[1]_1 (u_excpt_n_134),
        .\wptr_decoded_reg[2] (\wptr_decoded[2]_i_3_n_0 ),
        .\wptr_decoded_reg[2]_0 (\wptr_decoded[2]_i_2_n_0 ),
        .\wptr_decoded_reg[2]_1 (\wptr_decoded[2]_i_4_n_0 ),
        .\wptr_ex_reg[0] (\wptr_ex[0]_i_3_n_0 ),
        .\wptr_ex_reg[1] (last_uncond_phase_ex_reg_0),
        .\wptr_ex_reg[1]_0 (wptr_decoded[1]),
        .\wptr_ex_reg[1]_1 (\wptr_ex[1]_i_2_n_0 ),
        .\wptr_ex_reg[1]_2 (reg_sel[1]),
        .\wptr_ex_reg[2] (\wptr_ex[2]_i_2_n_0 ),
        .\wptr_ex_reg[3] ({nxt_wptr_ex[3:2],nxt_wptr_ex[0]}),
        .\wptr_ex_reg[3]_0 ({wptr_ex[3:2],wptr_ex[0]}),
        .\wptr_ex_reg[3]_1 (\wptr_ex[3]_i_2_n_0 ),
        .\wptr_ex_reg[3]_2 (u_excpt_n_154),
        .\xpsr_m_ctl_ex_reg[0]_0 (u_decode_n_4),
        .\xpsr_m_ctl_ex_reg[2]_0 (xpsr_m_ctl_ex),
        .z_flag(z_flag));
  design_1_CORTEXM1_AXI_0_1_cm1_excpt u_excpt
       (.CO(CO),
        .D({rptr_a_de[3],u_excpt_n_20}),
        .DI(invert_b_ex_reg_0[2]),
        .E(E),
        .\HADDR_reg[0] (\HADDR_reg[0] ),
        .\HADDR_reg[15] (\HADDR_reg[15] ),
        .\HADDR_reg[16] (\HADDR_reg[16] ),
        .\HADDR_reg[17] (\HADDR_reg[17] ),
        .\HADDR_reg[18] (\HADDR_reg[18] ),
        .\HADDR_reg[19] (\HADDR_reg[19] ),
        .\HADDR_reg[1] (biu_write_reg_0),
        .\HADDR_reg[20] (\HADDR_reg[20] ),
        .\HADDR_reg[21] (\HADDR_reg[21] ),
        .\HADDR_reg[22] (\HADDR_reg[22] ),
        .\HADDR_reg[23] (\HADDR_reg[23] ),
        .\HADDR_reg[24] (\HADDR_reg[24] ),
        .\HADDR_reg[25] (\HADDR_reg[25] ),
        .\HADDR_reg[26] (\HADDR_reg[26] ),
        .\HADDR_reg[27] (\HADDR_reg[27] ),
        .\HADDR_reg[27]_0 (\HADDR_reg[27]_0 ),
        .HCLK(HCLK),
        .\HRDATA_reg[2] (\HRDATA_reg[2] ),
        .\HRDATA_reg[5] (\HRDATA_reg[5] ),
        .\HRDATA_reg[5]_0 (\HRDATA_reg[5]_0 ),
        .IRQ(IRQ),
        .IRQ_0_sp_1(IRQ_0_sn_1),
        .NMI(NMI),
        .O(\pc_reg[15] ),
        .Q({\instr_de_reg_n_0_[15] ,\instr_de_reg_n_0_[14] ,\instr_de_reg_n_0_[13] ,\instr_de_reg_n_0_[12] ,\instr_de_reg_n_0_[11] ,\instr_de_reg_n_0_[10] ,\instr_de_reg_n_0_[9] ,p_25_in,\instr_de_reg_n_0_[7] ,\instr_de_reg_n_0_[6] ,\instr_de_reg_n_0_[5] ,cps_data,\instr_de_reg_n_0_[3] ,rptr_b2_de}),
        .S({\u_alu_dec/u_adder/mem_held_addr[3]_i_7_n_0 ,\mem_held_addr[3]_i_9_n_0 ,\u_alu_dec/u_adder/mem_held_addr[3]_i_10_n_0 }),
        .SYSRESETn(SYSRESETn),
        .SYSRESETn_0(SYSRESETn_0),
        .a_reg_0(a_reg_0[0]),
        .adv_de_to_ex(adv_de_to_ex),
        .any_dsb_ex0(any_dsb_ex0),
        .any_dsb_ex_reg(u_decode_n_45),
        .au_in_b({\u_dp/u_alu_dec/au_in_b [16],\u_dp/u_alu_dec/au_in_b [3:2],\u_dp/u_alu_dec/au_in_b [0]}),
        .b_reg_0({b_reg_0[25],b_reg_0[9],b_reg_0[7:0]}),
        .bcc_first_ex_reg(bcc_first_ex_i_2_n_0),
        .\biu_addr_31_29_reg_reg[30] (\biu_addr_31_29_reg_reg[30] ),
        .biu_commit_reg_reg(biu_commit_reg_i_11_n_0),
        .biu_commit_reg_reg_0(\reg_file_a_reg[15][31]_0 [3:1]),
        .biu_rdy(biu_rdy),
        .biu_wfault(biu_wfault),
        .biu_write_reg(biu_write_reg_1),
        .br_first_ex(br_first_ex),
        .br_first_ex_reg(u_decode_n_0),
        .br_first_ex_reg_0(u_decode_n_41),
        .br_lr_ex(br_lr_ex),
        .branch_ex(branch_ex),
        .branch_ex0(branch_ex0),
        .branch_ex_reg(D),
        .branch_ex_reg_0(biu_addr_mux_ctl_ex),
        .branch_ex_reg_1(u_decode_n_1),
        .branching_ex(branching_ex),
        .branching_ex_reg(nxt_read_addr),
        .cps_data_ex(cps_data_ex),
        .cps_de(cps_de),
        .cps_ex(cps_ex),
        .cps_ex_reg(cps_ex_i_2_n_0),
        .dbg_wdata_sel_de(dbg_wdata_sel_de),
        .\dp_ipsr_1to0[1]_i_7_0 (u_decode_n_4),
        .\dp_ipsr_1to0[1]_i_7_1 (\dp_ipsr_1to0[1]_i_7 ),
        .\dp_ipsr_1to0_reg[0]_0 (\dp_ipsr_1to0_reg[0] ),
        .\dp_ipsr_1to0_reg[1]_0 (\dp_ipsr_1to0_reg[1] ),
        .\dp_ipsr_1to0_reg[1]_1 (\dp_ipsr_1to0_reg[1]_0 ),
        .\dp_ipsr_1to0_reg[1]_2 (\dp_ipsr_1to0[1]_i_4_n_0 ),
        .\dp_ipsr_1to0_reg[1]_3 (\dp_ipsr_1to0[1]_i_20_n_0 ),
        .\dp_ipsr_1to0_reg[1]_4 (\dp_ipsr_1to0_reg[1]_1 ),
        .\dp_ipsr_7to2_reg[2]_0 (\dp_ipsr_7to2_reg[2] ),
        .\dp_ipsr_7to2_reg[3]_0 (\dp_ipsr_7to2[3]_i_3_n_0 ),
        .\dp_ipsr_7to2_reg[3]_1 (\dp_ipsr_7to2_reg[3] ),
        .\dp_ipsr_7to2_reg[4]_0 (\dp_ipsr_7to2_reg[4] ),
        .\dp_ipsr_7to2_reg[4]_1 (\dp_ipsr_7to2_reg[4]_0 ),
        .\dp_ipsr_7to2_reg[4]_2 (\dp_ipsr_7to2[4]_i_3_n_0 ),
        .\dp_ipsr_7to2_reg[4]_3 (\dp_ipsr_7to2_reg[4]_1 ),
        .\dp_ipsr_7to2_reg[5]_0 (\dp_ipsr_7to2_reg[5] ),
        .\dp_ipsr_7to2_reg[5]_1 (\dp_ipsr_7to2_reg[7]_2 [4:0]),
        .\dp_ipsr_7to2_reg[5]_2 (\dp_ipsr_7to2[5]_i_3_n_0 ),
        .\dp_ipsr_7to2_reg[5]_3 (\dp_ipsr_7to2_reg[5]_0 ),
        .\dp_ipsr_7to2_reg[6]_0 (\dp_ipsr_7to2_reg[6] ),
        .\dp_ipsr_7to2_reg[7]_0 (\dp_ipsr_7to2_reg[7] ),
        .\dp_ipsr_7to2_reg[7]_1 (\dp_ipsr_7to2_reg[7]_0 ),
        .\dp_ipsr_7to2_reg[7]_2 (\dp_ipsr_7to2_reg[7]_1 ),
        .\dp_ipsr_7to2_reg[7]_3 (rf_wdata[7:6]),
        .dp_tbit_reg_reg_0(dp_tbit_reg_i_5_n_0),
        .dp_tbit_reg_reg_1(dp_tbit_reg_i_7_n_0),
        .dreq_rd_ex(dreq_rd_ex),
        .dreq_rd_ex_reg(dreq_rd_ex_reg_0),
        .dreq_rd_ex_reg_0(load_ex_i_2_n_0),
        .dreq_rd_ex_reg_1(dreq_rd_ex_i_2_n_0),
        .dreq_rd_ex_reg_2(ldm_pop_ex_i_2_n_0),
        .dreq_wr_ex_reg(stm_push_ex_i_2_n_0),
        .dreq_wr_ex_reg_0(dreq_wr_ex_i_2_n_0),
        .excpt_isb_de(excpt_isb_de),
        .excpt_ret_de(excpt_ret_de),
        .excpt_ret_de_reg(excpt_ret_de_reg_0),
        .excpt_ret_de_reg_0(excpt_ret_de_i_3_n_0),
        .excpt_ret_fe(excpt_ret_fe),
        .fetch_internal_reg(fetch_internal_reg),
        .fetch_phase(fetch_phase),
        .first32_de(first32_de),
        .first32_ex_reg(u_excpt_n_24),
        .first32_ex_reg_0(u_excpt_n_29),
        .first32_ex_reg_1(u_excpt_n_152),
        .first32_ex_reg_2(first32_ex_i_3_n_0),
        .first_ex_phase(first_ex_phase),
        .first_ex_phase_reg(first_ex_phase_reg_1),
        .first_ex_phase_reg_0(first_ex_phase_reg_2),
        .first_pop_pc_ex_reg(bcc_first_ex_reg_0),
        .force_hf_reg_0(force_hf_reg),
        .fptr_align(fptr_align),
        .fptr_align_reg_0(fptr_align_reg),
        .fptr_wdata(fptr_wdata),
        .hdf_actv(hdf_actv),
        .held_fault0(held_fault0),
        .held_fault1(held_fault1),
        .hi_pre_fetch_addr_reg(hi_pre_fetch_addr_reg),
        .\hold_reg2_reg[0] (pc_mux_ctl_ex),
        .\hold_reg2_reg[0]_0 (\hold_reg2_reg[0] ),
        .\hold_reg2_reg[10] (\hold_reg2_reg[10] ),
        .\hold_reg2_reg[11] (\hold_reg2_reg[11] ),
        .\hold_reg2_reg[12] (\hold_reg2_reg[12] ),
        .\hold_reg2_reg[13] (\hold_reg2_reg[13] ),
        .\hold_reg2_reg[14] (\hold_reg2_reg[14] ),
        .\hold_reg2_reg[15] (\hold_reg2_reg[15] ),
        .\hold_reg2_reg[16] (\hold_reg2_reg[16] ),
        .\hold_reg2_reg[17] (\hold_reg2_reg[17] ),
        .\hold_reg2_reg[18] (\hold_reg2_reg[18] ),
        .\hold_reg2_reg[19] (\hold_reg2_reg[19] ),
        .\hold_reg2_reg[1] (\hold_reg2_reg[1] ),
        .\hold_reg2_reg[20] (\hold_reg2_reg[20] ),
        .\hold_reg2_reg[21] (\hold_reg2_reg[21] ),
        .\hold_reg2_reg[22] (\hold_reg2_reg[22] ),
        .\hold_reg2_reg[23] (\hold_reg2_reg[23] ),
        .\hold_reg2_reg[24] (\hold_reg2_reg[24] ),
        .\hold_reg2_reg[25] (\hold_reg2_reg[25] ),
        .\hold_reg2_reg[26] (\hold_reg2_reg[26] ),
        .\hold_reg2_reg[27] (\hold_reg2_reg[27] ),
        .\hold_reg2_reg[28] (\hold_reg2_reg[28] ),
        .\hold_reg2_reg[29] (\hold_reg2_reg[29] ),
        .\hold_reg2_reg[2] (\hold_reg2_reg[2] ),
        .\hold_reg2_reg[30] (\hold_reg2_reg[30] ),
        .\hold_reg2_reg[31] (pre_pc_mux_ctl_ex[0]),
        .\hold_reg2_reg[31]_0 ({\pc_ex_reg_n_0_[31] ,\pc_ex_reg_n_0_[30] ,\pc_ex_reg_n_0_[29] ,\pc_ex_reg_n_0_[28] ,\pc_ex_reg_n_0_[27] ,\pc_ex_reg_n_0_[26] ,\pc_ex_reg_n_0_[25] ,\pc_ex_reg_n_0_[24] ,\pc_ex_reg_n_0_[23] ,\pc_ex_reg_n_0_[22] ,\pc_ex_reg_n_0_[21] ,\pc_ex_reg_n_0_[20] ,\pc_ex_reg_n_0_[19] ,\pc_ex_reg_n_0_[18] ,\pc_ex_reg_n_0_[17] ,\pc_ex_reg_n_0_[16] ,\pc_ex_reg_n_0_[15] ,\pc_ex_reg_n_0_[14] ,\pc_ex_reg_n_0_[13] ,\pc_ex_reg_n_0_[12] ,\pc_ex_reg_n_0_[11] ,\pc_ex_reg_n_0_[10] ,\pc_ex_reg_n_0_[9] ,\pc_ex_reg_n_0_[8] ,\pc_ex_reg_n_0_[7] ,\pc_ex_reg_n_0_[6] ,\pc_ex_reg_n_0_[5] ,\pc_ex_reg_n_0_[4] ,\pc_ex_reg_n_0_[3] ,\pc_ex_reg_n_0_[2] ,\pc_ex_reg_n_0_[1] ,pc_ex}),
        .\hold_reg2_reg[31]_1 (pc_de),
        .\hold_reg2_reg[31]_2 (Q),
        .\hold_reg2_reg[31]_3 (\hold_reg2_reg[31] ),
        .\hold_reg2_reg[3] (\hold_reg2_reg[3] ),
        .\hold_reg2_reg[4] (\hold_reg2_reg[4] ),
        .\hold_reg2_reg[5] (\hold_reg2_reg[5] ),
        .\hold_reg2_reg[6] (\hold_reg2_reg[6] ),
        .\hold_reg2_reg[7] (\hold_reg2_reg[7] ),
        .\hold_reg2_reg[8] (\hold_reg2_reg[8] ),
        .i_dbg_wdata_sel_de_reg_0(nxt_wdata_mux_ctl_ex),
        .i_dbg_wdata_sel_de_reg_1(nxt_rf1_mux_ctl_ex),
        .i_dbg_wdata_sel_de_reg_2(u_excpt_n_162),
        .i_dbg_wdata_sel_de_reg_3(i_dbg_wdata_sel_de_reg),
        .i_dbg_wdata_sel_ex_reg_0(dbg_wdata_sel_ex),
        .i_dbg_wdata_sel_ex_reg_1(i_dbg_wdata_sel_ex_reg),
        .i_nvic_excpt_svc_valid_reg_0(i_nvic_excpt_svc_valid_reg),
        .\i_pend_state_reg[0] (\i_pend_state_reg[0] ),
        .\i_pend_state_reg[0]_0 (\i_pend_state_reg[0]_0 ),
        .\i_pend_state_reg[1] (\i_pend_state_reg[1] ),
        .\i_pend_state_reg[1]_0 (\i_pend_state_reg[1]_0 ),
        .\i_svc_lvl_reg[1] (\i_svc_lvl_reg[1] ),
        .ifetch_reg(ifetch_i_2_n_0),
        .ifetch_reg_0(ifetch_i_7_n_0),
        .ifetch_reg_1(last_uncond_phase_ex_i_5_n_0),
        .\imm_held_reg[5] (u_excpt_n_26),
        .\instr_de_reg[0] (\instr_de[0]_i_2_n_0 ),
        .\instr_de_reg[10] (u_excpt_n_15),
        .\instr_de_reg[10]_0 (u_excpt_n_153),
        .\instr_de_reg[10]_1 (\instr_de[10]_i_3_n_0 ),
        .\instr_de_reg[11] (u_excpt_n_18),
        .\instr_de_reg[11]_0 (u_excpt_n_156),
        .\instr_de_reg[11]_1 (\instr_de[11]_i_2_n_0 ),
        .\instr_de_reg[12] (u_excpt_n_134),
        .\instr_de_reg[12]_0 (u_excpt_n_145),
        .\instr_de_reg[12]_1 (\instr_de[12]_i_3_n_0 ),
        .\instr_de_reg[13] (u_excpt_n_154),
        .\instr_de_reg[13]_0 (\instr_de[13]_i_3_n_0 ),
        .\instr_de_reg[14] (u_excpt_n_17),
        .\instr_de_reg[14]_0 (u_excpt_n_23),
        .\instr_de_reg[14]_1 (u_excpt_n_25),
        .\instr_de_reg[14]_2 (u_excpt_n_138),
        .\instr_de_reg[14]_3 (\instr_de[14]_i_2_n_0 ),
        .\instr_de_reg[15] (\held_instr0_reg[15]_0 ),
        .\instr_de_reg[15]_0 (\instr_de[15]_i_4_n_0 ),
        .\instr_de_reg[1] (\instr_de[1]_i_4_n_0 ),
        .\instr_de_reg[2] (\instr_de[2]_i_3_n_0 ),
        .\instr_de_reg[3] (\instr_de[3]_i_3_n_0 ),
        .\instr_de_reg[4] (\instr_de[4]_i_4_n_0 ),
        .\instr_de_reg[5] (\instr_de[5]_i_3_n_0 ),
        .\instr_de_reg[6] (\instr_de[6]_i_3_n_0 ),
        .\instr_de_reg[7] (\instr_de[7]_i_3_n_0 ),
        .\instr_de_reg[8] (\instr_de[8]_i_3_n_0 ),
        .\instr_de_reg[9] (u_excpt_n_27),
        .\instr_de_reg[9]_0 (u_excpt_n_137),
        .\instr_de_reg[9]_1 (\instr_de[9]_i_3_n_0 ),
        .instr_faulted_reg_0(instr_faulted_reg),
        .int_actv(int_actv),
        .int_fault_ex_reg_0(int_fault_ex_reg),
        .int_fault_ex_reg_1(int_fault_ex_reg_0),
        .int_prev(int_prev),
        .invert_b_ex2(invert_b_ex2),
        .invert_b_ex2_reg(force_c_in_ex_i_2_n_0),
        .invert_b_ex2_reg_0(invert_b_ex2_i_3_n_0),
        .invert_b_ex2_reg_1(invert_b_ex2_i_4_n_0),
        .invert_b_ex2_reg_2(force_c_in_ex_i_5_n_0),
        .invert_b_ex_reg(O),
        .invert_b_ex_reg_0(invert_b_ex_reg_8),
        .invert_b_ex_reg_1(invert_b_ex_reg_9),
        .invert_b_ex_reg_2(last_uncond_phase_ex_reg_0),
        .invert_b_ex_reg_3(invert_b_ex_i_2_n_0),
        .irq_lvl(irq_lvl),
        .last_uncond_phase_ex_reg(u_excpt_n_21),
        .last_uncond_phase_ex_reg_0(u_excpt_n_22),
        .last_uncond_phase_ex_reg_1({last_uncond_phase_ex_reg_1[3],last_uncond_phase_ex_reg_1[1]}),
        .last_uncond_phase_ex_reg_2(u_excpt_n_135),
        .last_uncond_phase_ex_reg_3(u_excpt_n_164),
        .last_uncond_phase_ex_reg_4(three_phase_ex_i_1_n_0),
        .last_uncond_phase_ex_reg_5(u_decode_n_9),
        .\latched_excpt_num_reg[4]_0 (\latched_excpt_num_reg[4] ),
        .ldm_base(ldm_base),
        .ldm_base_load(ldm_base_load),
        .ldm_base_loaded(ldm_base_loaded),
        .ldm_pop_de(ldm_pop_de),
        .ldm_pop_ex(ldm_pop_ex),
        .load_ex(load_ex),
        .load_ex_reg(u_excpt_n_163),
        .load_ex_reg_0(u_decode_n_2),
        .load_fptr(load_fptr),
        .load_xpsr_ex_reg_0(load_xpsr_ex),
        .locked_up_reg_0(locked_up_reg),
        .locked_up_reg_1(locked_up_reg_0),
        .lockup_br_de(lockup_br_de),
        .lsm_last_a_phase_ex(lsm_last_a_phase_ex),
        .lsm_last_d_phase_ex(lsm_last_d_phase_ex),
        .\mem_held_addr_reg[11] ({z_flag_mux_i_6_0[0],invert_b_ex_reg_0[0]}),
        .\mem_held_addr_reg[11]_0 ({\mem_held_addr_reg[11] ,\mem_held_addr[11]_i_8_n_0 ,\u_alu_dec/u_adder/mem_held_addr[11]_i_9_n_0 }),
        .\mem_held_addr_reg[15] (z_flag_mux_i_6_0[2:1]),
        .\mem_held_addr_reg[15]_0 ({\mem_held_addr_reg[15] [1],\mem_held_addr[15]_i_7_n_0 ,\mem_held_addr[15]_i_8_n_0 ,\mem_held_addr_reg[15] [0]}),
        .\mem_held_addr_reg[19] (invert_b_ex_reg_0[1]),
        .\mem_held_addr_reg[19]_0 ({\mem_held_addr_reg[19] ,\mem_held_addr[19]_i_7_n_0 ,\mem_held_addr[19]_i_8_n_0 ,\mem_held_addr[19]_i_9_n_0 }),
        .\mem_held_addr_reg[23] ({\u_dp/au_in_a [22:20],\u_dp/au_in_a [18:17],\u_dp/au_in_a [14:13],\u_dp/au_in_a [9:3],\u_dp/au_in_a [1]}),
        .\mem_held_addr_reg[23]_0 ({\mem_held_addr_reg[23] ,\mem_held_addr[23]_i_7_n_0 ,\mem_held_addr[23]_i_8_n_0 ,\mem_held_addr[23]_i_9_n_0 }),
        .\mem_held_addr_reg[3] (zero_a_ex),
        .\mem_held_addr_reg[3]_0 (au_a_use_pc_ex),
        .\mem_held_addr_reg[3]_1 (\mem_held_addr[3]_i_6_n_0 ),
        .\mem_held_addr_reg[7] ({\mem_held_addr[7]_i_6_n_0 ,\mem_held_addr[7]_i_7_n_0 ,\mem_held_addr[7]_i_8_n_0 ,\mem_held_addr[7]_i_9_n_0 }),
        .micro_code_de(micro_code_de),
        .micro_code_de_reg_0(micro_code_de_reg),
        .micro_code_de_reg_1(u_excpt_n_28),
        .micro_code_de_reg_2(nxt_reg_sel[3]),
        .micro_code_de_reg_3(w_enable_ex),
        .micro_code_fe_reg_0(micro_code_fe),
        .micro_code_fe_reg_1(nxt_instr_de),
        .mode_reg_0(mode),
        .msr_ex(msr_ex),
        .msr_ex_reg(u_decode_n_3),
        .mul_de(mul_de),
        .mul_ex_reg(mul_ex_i_2_n_0),
        .mult_out({mult_out[9:7],mult_out[1:0]}),
        .nmi_actv(nmi_actv),
        .nvic_excpt_fault_req(nvic_excpt_fault_req),
        .nvic_excpt_svc_valid(nvic_excpt_svc_valid),
        .nvic_excpt_taken(nvic_excpt_taken),
        .nvic_lockup(nvic_lockup),
        .nvic_primask(nvic_primask),
        .nxt_branching_ex(nxt_branching_ex),
        .nxt_dreq_rd_ex(nxt_dreq_rd_ex),
        .nxt_dreq_wr_ex(nxt_dreq_wr_ex),
        .nxt_fetch_internal(nxt_fetch_internal),
        .nxt_first_pop_pc_ex(nxt_first_pop_pc_ex),
        .nxt_ifetch(nxt_ifetch),
        .nxt_instr_faulted(nxt_instr_faulted),
        .nxt_int_rack(nxt_int_rack),
        .nxt_invert_b_ex(nxt_invert_b_ex),
        .nxt_invert_b_ex2(nxt_invert_b_ex2),
        .nxt_irack(nxt_irack),
        .nxt_last_uncond_phase_ex(nxt_last_uncond_phase_ex),
        .nxt_ldm_base(nxt_ldm_base),
        .nxt_pf_fault_de(nxt_pf_fault_de),
        .nxt_second32_ex(nxt_second32_ex),
        .nxt_w_phase_ex(nxt_w_phase_ex),
        .nxt_z_flag_mux(nxt_z_flag_mux),
        .p_0_in18_in(p_0_in18_in),
        .p_1_in16_in(p_1_in16_in),
        .p_1_in2_in(p_1_in2_in[12:0]),
        .p_8_in(p_8_in),
        .\pc_reg[10] (\pc_reg[10] ),
        .\pc_reg[11] (\pc_reg[11] ),
        .\pc_reg[11]_0 (\pc_reg[11]_0 ),
        .\pc_reg[12] (\pc_reg[12] ),
        .\pc_reg[13] (\pc_reg[13] ),
        .\pc_reg[14] (\pc_reg[14] ),
        .\pc_reg[23] (\pc_reg[23] ),
        .\pc_reg[2] (first_ex_phase_reg_0),
        .\pc_reg[2]_0 (\pc_reg[2] ),
        .\pc_reg[31] (\pc_reg[31] ),
        .\pc_reg[3] (\pc_reg[3] ),
        .\pc_reg[4] (\pc_reg[4] ),
        .\pc_reg[5] (\pc_reg[5] ),
        .\pc_reg[6] (\pc_reg[6] ),
        .\pc_reg[7] (\pc_reg[7] ),
        .\pc_reg[8] (\pc_reg[8] ),
        .\pc_reg[9] (\pc_reg[9] ),
        .pf_fault_de(pf_fault_de),
        .pf_fault_fe(pf_fault_fe),
        .pop_pc_ex(pop_pc_ex),
        .pop_pc_ex_reg(pop_pc_ex_i_2_n_0),
        .\pre_pc_mux_ctl_ex_reg[1] (\pre_pc_mux_ctl_ex[1]_i_2_n_0 ),
        .pre_update_v_ex_reg(pre_update_n_ex_i_2_n_0),
        .primask_i_3_0(primask_i_10_n_0),
        .primask_i_3_1(primask_i_11_n_0),
        .primask_i_3_2(primask_i_3),
        .primask_i_3_3(primask_i_13_n_0),
        .primask_i_3_4(primask_i_14_n_0),
        .push_ex_reg(first32_ex_reg_0),
        .push_ex_reg_0(push_ex_i_2_n_0),
        .r_hdf_actv(r_hdf_actv),
        .r_hdf_actv_reg(r_hdf_actv_reg),
        .\r_int_actv_lvl_reg[1] (\r_int_actv_lvl_reg[1] ),
        .\r_int_actv_lvl_reg[1]_0 (\r_int_actv_lvl_reg[1]_0 ),
        .r_nmi_actv(r_nmi_actv),
        .\read_addr_reg[0] (\read_addr[1]_i_4_n_0 ),
        .\read_addr_reg[1] ({\read_addr_reg_n_0_[1] ,\read_addr_reg_n_0_[0] }),
        .\reg_file_a[15][10]_i_2_0 (\reg_file_a[15][10]_i_2 ),
        .\reg_file_a[15][16]_i_2_0 (\reg_file_a[15][16]_i_2 ),
        .\reg_file_a[15][17]_i_2_0 (\reg_file_a[15][17]_i_2 ),
        .\reg_file_a[15][23]_i_2_0 (\reg_file_a[15][23]_i_2 ),
        .\reg_file_a_reg[0][0] (primask_i_6_n_0),
        .\reg_file_a_reg[0][0]_0 (\reg_file_a_reg[0][0] ),
        .\reg_file_a_reg[0][0]_1 (\reg_file_a_reg[0][0]_0 ),
        .\reg_file_a_reg[0][0]_2 (\reg_file_a_reg[0][0]_1 ),
        .\reg_file_a_reg[0][0]_3 (wptr_ex[1]),
        .\reg_file_a_reg[0][0]_4 ({wptr_ex[3:2],wptr_ex[0]}),
        .\reg_file_a_reg[0][25] (\reg_file_a[15][25]_i_3_n_0 ),
        .\reg_file_a_reg[0][25]_0 (\reg_file_a_reg[15][31] [12:0]),
        .\reg_file_a_reg[0][25]_1 (\reg_file_a[15][25]_i_4_n_0 ),
        .\reg_file_a_reg[0][25]_2 (\reg_file_a_reg[0][25] ),
        .\reg_file_a_reg[15][10] ({\reg_file_a_reg[15][15] [10:9],\reg_file_a_reg[15][15] [5:2],\reg_file_a_reg[15][15] [0]}),
        .\reg_file_a_reg[15][10]_0 (\reg_file_a[15][10]_i_3_n_0 ),
        .\reg_file_a_reg[15][10]_1 (\reg_file_a_reg[15][10] ),
        .\reg_file_a_reg[15][16] (\reg_file_a_reg[15][16] ),
        .\reg_file_a_reg[15][16]_0 (\reg_file_a[15][16]_i_4_n_0 ),
        .\reg_file_a_reg[15][17] (\reg_file_a_reg[15][17] ),
        .\reg_file_a_reg[15][17]_0 (\reg_file_a[15][17]_i_4_n_0 ),
        .\reg_file_a_reg[15][17]_1 (\reg_file_a[15][17]_i_5_n_0 ),
        .\reg_file_a_reg[15][23] (lu_ctl_ex),
        .\reg_file_a_reg[15][23]_0 (\reg_file_a_reg[15][23] ),
        .\reg_file_a_reg[15][23]_1 (\reg_file_a_reg[15][23]_0 ),
        .\reg_file_a_reg[15][23]_2 (c_flag_mux_i_3_n_0),
        .\reg_file_a_reg[15][24] (rf1_mux_ctl_ex),
        .\reg_file_a_reg[15][24]_0 (\reg_file_a_reg[15][24] ),
        .\reg_file_a_reg[15][24]_1 (\reg_file_a_reg[15][24]_0 ),
        .\reg_file_a_reg[15][9] (rf0_mux_ctl_ex[1]),
        .\reg_file_a_reg[15][9]_0 (rf0_mux_ctl_ex[0]),
        .\reg_file_a_reg[15][9]_1 (\reg_file_a[15][9]_i_3_n_0 ),
        .\reg_file_a_reg[15][9]_2 (\reg_file_a[15][9]_i_4_n_0 ),
        .\reg_file_a_reg[15][9]_3 (\reg_file_a_reg[15][9] ),
        .\reg_sel_reg[3] (nxt_reg_sel[2]),
        .\reg_sel_reg[3]_0 (\r_list_first[8]_i_2_n_0 ),
        .\rf0_mux_ctl_ex_reg[0] (\rf0_mux_ctl_ex[0]_i_2_n_0 ),
        .\rf0_mux_ctl_ex_reg[0]_0 (\wptr_ex[1]_i_2_n_0 ),
        .\rf1_mux_ctl_ex_reg[1] (u_decode_n_47),
        .\rf_mux_ctl_ex_reg[2] (pre_update_n_ex_i_3_n_0),
        .\rf_mux_ctl_ex_reg[2]_0 (u_decode_n_48),
        .\rf_mux_ctl_ex_reg[2]_1 (\rf_mux_ctl_ex[2]_i_3_n_0 ),
        .\rf_mux_ctl_ex_reg[2]_2 (\rf_mux_ctl_ex[2]_i_4_n_0 ),
        .rf_wdata({rf_wdata[25:23],rf_wdata[17:16],rf_wdata[10:9],rf_wdata[5:0]}),
        .rptr_a_ex({rptr_a_ex[3],rptr_a_ex[1]}),
        .\rptr_a_ex2_reg[3] (\rptr_a_ex2[3]_i_3_n_0 ),
        .\rptr_a_ex_reg[3] ({rptr_a_ex2[3],rptr_a_ex2[1]}),
        .\rptr_b_ex2[1]_i_3_0 (\rptr_b_ex2[0]_i_5_n_0 ),
        .\rptr_b_ex2[1]_i_4_0 (au_b_use_pc_ex_i_3_n_0),
        .rst_fptr_align_ex(rst_fptr_align_ex),
        .sbit_ex_reg(sbit_ex_i_2_n_0),
        .sbit_ex_reg_0(sbit_ex_i_3_n_0),
        .second32_ex(second32_ex),
        .second_ex_phase(second_ex_phase),
        .seq_fetch_addr(seq_fetch_addr),
        .shift_ex_reg(shift_ex_i_2_n_0),
        .stm_push_de(stm_push_de),
        .stm_push_ex(stm_push_ex),
        .store_de(store_de),
        .svc_lvl_0(svc_lvl_0),
        .tbit(tbit),
        .tbit_ex(tbit_ex),
        .tbit_ex_reg(br_lr_ex_i_2_n_0),
        .two_phase_ex(two_phase_ex),
        .update_c(update_c),
        .update_n(update_n),
        .update_v(update_v),
        .use_control_ex(use_control_ex),
        .use_dp_tbit_i_3_0(ireq_ldpc),
        .use_dp_tbit_reg_0(use_dp_tbit_reg),
        .use_dp_tbit_reg_1(write_flags_ex),
        .use_primask_ex(use_primask_ex),
        .w_phase_ex(w_phase_ex),
        .w_phase_ex_reg(w_phase_ex_i_2_n_0),
        .w_phase_ex_reg_0(u_decode_n_10),
        .\wdata_mux_ctl_ex_reg[0] (\wdata_mux_ctl_ex[0]_i_2_n_0 ),
        .\wdata_mux_ctl_ex_reg[1] (u_decode_n_50),
        .\wdata_reg[24] (\wdata_reg[24] ),
        .\wdata_reg[24]_0 (wdata_mux_ctl_ex),
        .\wdata_reg[24]_1 (\genblk3[1].ram_block_reg_0_0_i_37_n_0 ),
        .\wdata_reg[25] (ls_half_ex),
        .\wdata_reg[25]_0 (\wdata_reg[25] ),
        .\wdata_reg[25]_1 (\wdata_mux_ctl_ex_reg[0]_0 ),
        .\wdata_reg[26] (\wdata_reg[26] ),
        .\wdata_reg[27] (\wdata_reg[31] [16:0]),
        .\wdata_reg[27]_0 (\wdata_reg[27] ),
        .\wdata_reg[5] (xpsr_m_ctl_ex),
        .\wdata_reg[9] (ls_byte_ex),
        .\wptr_decoded[3]_i_2 (\wptr_decoded[3]_i_4_n_0 ),
        .\wptr_decoded_reg[1] (\wptr_decoded[1]_i_5_n_0 ),
        .\wptr_decoded_reg[1]_0 (\wptr_decoded[2]_i_3_n_0 ),
        .\wptr_ex_reg[0] (\wptr_ex_reg[0]_0 ),
        .\wptr_ex_reg[1] (\wptr_ex_reg[1]_0 ),
        .\wptr_ex_reg[1]_0 (\wptr_ex_reg[1]_1 ),
        .\wptr_ex_reg[1]_1 (\wptr_ex_reg[1]_2 ),
        .\wptr_ex_reg[1]_2 (\wptr_ex_reg[1]_3 ),
        .\wptr_ex_reg[1]_3 (\wptr_ex_reg[1]_4 ),
        .\wptr_ex_reg[1]_4 (\wptr_ex_reg[1]_5 ),
        .\wptr_ex_reg[1]_5 (\wptr_ex_reg[1]_6 ),
        .\wptr_ex_reg[1]_6 (\wptr_ex_reg[1]_7 ),
        .\wptr_ex_reg[1]_7 (\wptr_ex_reg[1]_8 ),
        .\wptr_ex_reg[2] (\wptr_ex_reg[2]_0 ),
        .\wptr_ex_reg[2]_0 (\wptr_ex_reg[2]_1 ),
        .\wptr_ex_reg[2]_1 (\wptr_ex_reg[2]_2 ),
        .\wptr_ex_reg[3] (\wptr_ex_reg[3]_0 ),
        .\wptr_ex_reg[3]_0 (\wptr_ex_reg[3]_1 ),
        .\wptr_ex_reg[3]_1 (\wptr_ex_reg[3]_2 ),
        .\write_addr_reg[0] (nxt_write_addr),
        .\write_addr_reg[0]_0 (held_instr10),
        .\write_addr_reg[0]_1 (held_instr00),
        .\write_addr_reg[0]_2 (\read_addr[1]_i_2_n_0 ),
        .\write_addr_reg[1] ({\write_addr_reg_n_0_[1] ,\write_addr_reg_n_0_[0] }),
        .\write_addr_reg[1]_0 (\held_instr0[15]_i_5_n_0 ),
        .\write_addr_reg[1]_1 (\write_addr_reg[1]_0 ),
        .write_sp(write_sp),
        .z_flag_mux_reg(z_flag_mux_i_2_n_0),
        .z_flag_mux_reg_0(z_flag_mux_reg),
        .z_flag_mux_reg_1(z_flag_mux_i_4_n_0),
        .z_flag_mux_reg_2(z_flag_mux_i_6_n_0),
        .z_flag_mux_reg_3(z_flag_mux_reg_0),
        .z_flag_mux_reg_4(z_flag_mux_i_11_n_0),
        .z_flag_mux_reg_5(z_flag_mux_i_12_n_0),
        .z_flag_mux_reg_6(z_flag_mux_i_13_n_0),
        .z_flag_mux_reg_7(z_flag_mux_i_15_n_0),
        .z_flag_mux_reg_8(z_flag_mux_i_16_n_0),
        .zero_a_ex0(zero_a_ex0),
        .zero_a_ex_reg(zero_a_ex_reg_0),
        .zero_a_ex_reg_0(u_decode_n_42),
        .zero_a_ex_reg_1(zero_a_ex_i_3_n_0),
        .zero_a_ex_reg_2(zero_a_ex_i_4_n_0));
  LUT6 #(
    .INIT(64'h1111111111100000)) 
    use_c_flag_ex_i_1
       (.I0(use_c_flag_ex_i_2_n_0),
        .I1(\instr_de_reg_n_0_[13] ),
        .I2(\instr_de_reg_n_0_[7] ),
        .I3(p_25_in),
        .I4(use_c_flag_ex_i_3_n_0),
        .I5(use_c_flag_ex_i_4_n_0),
        .O(use_c_flag_de));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT2 #(
    .INIT(4'hE)) 
    use_c_flag_ex_i_2
       (.I0(first32_ex_reg_0),
        .I1(\instr_de_reg_n_0_[15] ),
        .O(use_c_flag_ex_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    use_c_flag_ex_i_3
       (.I0(\instr_de_reg_n_0_[9] ),
        .I1(\instr_de_reg_n_0_[10] ),
        .I2(\instr_de_reg_n_0_[12] ),
        .I3(\instr_de_reg_n_0_[11] ),
        .O(use_c_flag_ex_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT3 #(
    .INIT(8'h15)) 
    use_c_flag_ex_i_4
       (.I0(\instr_de_reg_n_0_[14] ),
        .I1(\instr_de_reg_n_0_[12] ),
        .I2(\instr_de_reg_n_0_[11] ),
        .O(use_c_flag_ex_i_4_n_0));
  FDCE use_c_flag_ex_reg
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg),
        .CLR(SYSRESETn_0),
        .D(use_c_flag_de),
        .Q(use_c_flag_ex));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT5 #(
    .INIT(32'h04000000)) 
    use_control_ex_i_1
       (.I0(rptr_b2_de[0]),
        .I1(cps_data),
        .I2(rptr_b2_de[1]),
        .I3(u_decode_n_49),
        .I4(rptr_b2_de[2]),
        .O(use_control_ex_i_1_n_0));
  FDCE use_control_ex_reg
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg),
        .CLR(SYSRESETn_0),
        .D(use_control_ex_i_1_n_0),
        .Q(use_control_ex));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    use_flags_ex_i_1
       (.I0(\instr_de_reg_n_0_[5] ),
        .I1(\instr_de_reg_n_0_[3] ),
        .I2(\instr_de_reg_n_0_[6] ),
        .I3(\instr_de_reg_n_0_[7] ),
        .I4(rptr_b2_de[2]),
        .I5(cps_data),
        .O(use_flags));
  FDCE use_flags_ex_reg
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg),
        .CLR(SYSRESETn_0),
        .D(use_flags),
        .Q(use_flags_ex));
  LUT6 #(
    .INIT(64'h5F4F0000FFFFFFFF)) 
    use_imm_ex_i_1
       (.I0(\instr_de_reg_n_0_[9] ),
        .I1(\instr_de_reg_n_0_[11] ),
        .I2(\instr_de_reg_n_0_[12] ),
        .I3(\instr_de_reg_n_0_[10] ),
        .I4(use_r_list_ex_i_2_n_0),
        .I5(\imm_ex[0]_i_4_n_0 ),
        .O(use_imm_ex0));
  FDPE use_imm_ex_reg
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg),
        .D(use_imm_ex0),
        .PRE(SYSRESETn_0),
        .Q(use_imm_ex));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT5 #(
    .INIT(32'h00000400)) 
    use_primask_ex_i_1
       (.I0(rptr_b2_de[0]),
        .I1(cps_data),
        .I2(rptr_b2_de[1]),
        .I3(u_decode_n_49),
        .I4(rptr_b2_de[2]),
        .O(use_primask));
  FDCE use_primask_ex_reg
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg),
        .CLR(SYSRESETn_0),
        .D(use_primask),
        .Q(use_primask_ex));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT5 #(
    .INIT(32'h0A0AAA8A)) 
    use_r_list_ex_i_1
       (.I0(use_r_list_ex_i_2_n_0),
        .I1(\instr_de_reg_n_0_[10] ),
        .I2(\instr_de_reg_n_0_[12] ),
        .I3(\instr_de_reg_n_0_[11] ),
        .I4(\instr_de_reg_n_0_[9] ),
        .O(use_r_list));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT5 #(
    .INIT(32'h02000020)) 
    use_r_list_ex_i_2
       (.I0(\instr_de_reg_n_0_[15] ),
        .I1(first32_ex_reg_0),
        .I2(\instr_de_reg_n_0_[14] ),
        .I3(\instr_de_reg_n_0_[12] ),
        .I4(\instr_de_reg_n_0_[13] ),
        .O(use_r_list_ex_i_2_n_0));
  FDCE use_r_list_ex_reg
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg),
        .CLR(SYSRESETn_0),
        .D(use_r_list),
        .Q(use_r_list_ex));
  LUT5 #(
    .INIT(32'h24FF2400)) 
    v_flag_au_i_1
       (.I0(\reg_file_a_reg[15][31]_0 [3]),
        .I1(invert_b_ex_reg_0[7]),
        .I2(v_flag_au_i_2_n_0),
        .I3(update_v_ex),
        .I4(v_flag_au),
        .O(v_flag_au_reg));
  LUT4 #(
    .INIT(16'h0BFB)) 
    v_flag_au_i_2
       (.I0(zero_a_ex),
        .I1(a_reg_0[26]),
        .I2(au_a_use_pc_ex),
        .I3(Q[30]),
        .O(v_flag_au_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    v_flag_au_i_3
       (.I0(write_flags_ex),
        .I1(i_dbg_wdata_sel_de_reg),
        .I2(pre_update_v_ex),
        .O(update_v_ex));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT4 #(
    .INIT(16'h3202)) 
    v_flag_wf_i_3
       (.I0(\reg_file_a_reg[15][31]_0 [0]),
        .I1(rf1_mux_ctl_ex[0]),
        .I2(rf1_mux_ctl_ex[1]),
        .I3(mult_out[12]),
        .O(v_flag_wf_i_3_n_0));
  LUT6 #(
    .INIT(64'h0400550055440000)) 
    w_phase_ex_i_10
       (.I0(\instr_de_reg_n_0_[14] ),
        .I1(\instr_de_reg_n_0_[11] ),
        .I2(w_phase_ex_i_12_n_0),
        .I3(\instr_de_reg_n_0_[13] ),
        .I4(\instr_de_reg_n_0_[12] ),
        .I5(\instr_de_reg_n_0_[15] ),
        .O(w_phase_ex_i_10_n_0));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT2 #(
    .INIT(4'h7)) 
    w_phase_ex_i_11
       (.I0(\instr_de_reg_n_0_[9] ),
        .I1(\instr_de_reg_n_0_[12] ),
        .O(w_phase_ex_i_11_n_0));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT2 #(
    .INIT(4'hE)) 
    w_phase_ex_i_12
       (.I0(\instr_de_reg_n_0_[10] ),
        .I1(\instr_de_reg_n_0_[7] ),
        .O(w_phase_ex_i_12_n_0));
  LUT5 #(
    .INIT(32'hEEEEFEEE)) 
    w_phase_ex_i_2
       (.I0(w_phase_ex_i_4_n_0),
        .I1(w_phase_ex_i_5_n_0),
        .I2(stm_push_ex),
        .I3(lsm_last_a_phase_ex),
        .I4(push_ex),
        .O(w_phase_ex_i_2_n_0));
  LUT5 #(
    .INIT(32'h00001F00)) 
    w_phase_ex_i_4
       (.I0(ldm_d_done_ex),
        .I1(lsm_last_a_phase_ex),
        .I2(pop_pc_ex),
        .I3(ldm_pop_ex),
        .I4(nxt_ldm_base_load),
        .O(w_phase_ex_i_4_n_0));
  LUT5 #(
    .INIT(32'hFFFFB800)) 
    w_phase_ex_i_5
       (.I0(second_ex_phase),
        .I1(ld_slow_ex),
        .I2(first_ex_phase),
        .I3(load_ex),
        .I4(w_phase_ex_i_7_n_0),
        .O(w_phase_ex_i_5_n_0));
  LUT6 #(
    .INIT(64'h00000000FFFFAAA8)) 
    w_phase_ex_i_6
       (.I0(w_phase_ex_i_8_n_0),
        .I1(w_phase_ex_i_9_n_0),
        .I2(se_byte_wb_i_3_n_0),
        .I3(\rptr_b_ex2[3]_i_4_n_0 ),
        .I4(\instr_de_reg_n_0_[11] ),
        .I5(w_phase_ex_i_10_n_0),
        .O(w_phase_ex_i_6_n_0));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT5 #(
    .INIT(32'hFFFECCCC)) 
    w_phase_ex_i_7
       (.I0(br_lr_ex),
        .I1(i_nxt_mul_last_phase_ex_reg_n_0),
        .I2(shift_ex),
        .I3(sbit_ex),
        .I4(first_ex_phase),
        .O(w_phase_ex_i_7_n_0));
  LUT6 #(
    .INIT(64'hFFFF0703FFFFFFFF)) 
    w_phase_ex_i_8
       (.I0(p_25_in),
        .I1(\instr_de_reg_n_0_[7] ),
        .I2(w_phase_ex_i_11_n_0),
        .I3(\instr_de_reg_n_0_[10] ),
        .I4(\instr_de_reg_n_0_[14] ),
        .I5(\instr_de_reg_n_0_[13] ),
        .O(w_phase_ex_i_8_n_0));
  LUT6 #(
    .INIT(64'hAEFFEBBAAE55EB10)) 
    w_phase_ex_i_9
       (.I0(\instr_de_reg_n_0_[10] ),
        .I1(\instr_de_reg_n_0_[6] ),
        .I2(\instr_de_reg_n_0_[9] ),
        .I3(p_25_in),
        .I4(\instr_de_reg_n_0_[7] ),
        .I5(au_a_use_pc_ex_i_5_n_0),
        .O(w_phase_ex_i_9_n_0));
  FDPE w_phase_ex_reg
       (.C(HCLK),
        .CE(biu_rdy),
        .D(nxt_w_phase_ex),
        .PRE(SYSRESETn_0),
        .Q(w_phase_ex));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT5 #(
    .INIT(32'h0C0E0000)) 
    w_u_fault_i_1
       (.I0(O[1]),
        .I1(O[0]),
        .I2(ls_byte_ex),
        .I3(ls_half_ex),
        .I4(dreq_wr_ex_reg_0),
        .O(ls_byte_ex_reg_0));
  LUT5 #(
    .INIT(32'h00F7FFFF)) 
    \wdata_mux_ctl_ex[0]_i_2 
       (.I0(\instr_de_reg_n_0_[7] ),
        .I1(p_25_in),
        .I2(br_lr_ex_i_2_n_0),
        .I3(first32_ex_reg_0),
        .I4(\instr_de_reg_n_0_[14] ),
        .O(\wdata_mux_ctl_ex[0]_i_2_n_0 ));
  FDCE \wdata_mux_ctl_ex_reg[0] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(nxt_wdata_mux_ctl_ex[0]),
        .Q(wdata_mux_ctl_ex[0]));
  FDCE \wdata_mux_ctl_ex_reg[1] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(nxt_wdata_mux_ctl_ex[1]),
        .Q(wdata_mux_ctl_ex[1]));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT5 #(
    .INIT(32'h0500C5CF)) 
    \wptr_decoded[0]_i_3 
       (.I0(p_25_in),
        .I1(\instr_de_reg_n_0_[9] ),
        .I2(\instr_de_reg_n_0_[12] ),
        .I3(\instr_de_reg_n_0_[11] ),
        .I4(rptr_b2_de[0]),
        .O(\wptr_decoded[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFF351535553353F3)) 
    \wptr_decoded[0]_i_4 
       (.I0(p_25_in),
        .I1(rptr_b2_de[0]),
        .I2(\instr_de_reg_n_0_[14] ),
        .I3(\instr_de_reg_n_0_[15] ),
        .I4(\instr_de_reg_n_0_[12] ),
        .I5(\instr_de_reg_n_0_[13] ),
        .O(\wptr_decoded[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000001000)) 
    \wptr_decoded[1]_i_2 
       (.I0(\instr_de_reg_n_0_[5] ),
        .I1(cps_data),
        .I2(\wptr_decoded[1]_i_4_n_0 ),
        .I3(\instr_de_reg_n_0_[3] ),
        .I4(\instr_de_reg_n_0_[6] ),
        .I5(\instr_de_reg_n_0_[7] ),
        .O(\wptr_decoded[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \wptr_decoded[1]_i_4 
       (.I0(rptr_b2_de[1]),
        .I1(rptr_b2_de[2]),
        .O(\wptr_decoded[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFABFEEEC8ABC222)) 
    \wptr_decoded[1]_i_5 
       (.I0(rptr_b2_de[1]),
        .I1(\instr_de_reg_n_0_[13] ),
        .I2(\instr_de_reg_n_0_[12] ),
        .I3(\instr_de_reg_n_0_[15] ),
        .I4(\instr_de_reg_n_0_[14] ),
        .I5(\instr_de_reg_n_0_[9] ),
        .O(\wptr_decoded[1]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hECAAACACECAAACCC)) 
    \wptr_decoded[2]_i_2 
       (.I0(\instr_de_reg_n_0_[10] ),
        .I1(rptr_b2_de[2]),
        .I2(\instr_de_reg_n_0_[15] ),
        .I3(\instr_de_reg_n_0_[14] ),
        .I4(\instr_de_reg_n_0_[13] ),
        .I5(\instr_de_reg_n_0_[12] ),
        .O(\wptr_decoded[2]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT4 #(
    .INIT(16'h7E7F)) 
    \wptr_decoded[2]_i_3 
       (.I0(\instr_de_reg_n_0_[13] ),
        .I1(\instr_de_reg_n_0_[12] ),
        .I2(\instr_de_reg_n_0_[15] ),
        .I3(\instr_de_reg_n_0_[14] ),
        .O(\wptr_decoded[2]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT5 #(
    .INIT(32'hDDDDF0CC)) 
    \wptr_decoded[2]_i_4 
       (.I0(\instr_de_reg_n_0_[9] ),
        .I1(rptr_b2_de[2]),
        .I2(\instr_de_reg_n_0_[10] ),
        .I3(\instr_de_reg_n_0_[11] ),
        .I4(\instr_de_reg_n_0_[12] ),
        .O(\wptr_decoded[2]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT5 #(
    .INIT(32'h05C0F5C0)) 
    \wptr_decoded[3]_i_4 
       (.I0(\instr_de_reg_n_0_[13] ),
        .I1(\instr_de_reg_n_0_[9] ),
        .I2(\instr_de_reg_n_0_[12] ),
        .I3(\instr_de_reg_n_0_[11] ),
        .I4(\instr_de_reg_n_0_[10] ),
        .O(\wptr_decoded[3]_i_4_n_0 ));
  FDCE \wptr_decoded_reg[0] 
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg),
        .CLR(SYSRESETn_0),
        .D(wptr_de[0]),
        .Q(wptr_decoded[0]));
  FDCE \wptr_decoded_reg[1] 
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg),
        .CLR(SYSRESETn_0),
        .D(wptr_de[1]),
        .Q(wptr_decoded[1]));
  FDCE \wptr_decoded_reg[2] 
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg),
        .CLR(SYSRESETn_0),
        .D(wptr_de[2]),
        .Q(wptr_decoded[2]));
  FDCE \wptr_decoded_reg[3] 
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg),
        .CLR(SYSRESETn_0),
        .D(nxt_wptr_decoded),
        .Q(wptr_decoded[3]));
  LUT6 #(
    .INIT(64'h0000000055450040)) 
    \wptr_ex[0]_i_3 
       (.I0(last_uncond_phase_ex_reg_0),
        .I1(reg_sel[0]),
        .I2(ldm_pop_ex),
        .I3(lsm_last_d_phase_ex),
        .I4(wptr_decoded[0]),
        .I5(br_lr_ex),
        .O(\wptr_ex[0]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \wptr_ex[1]_i_2 
       (.I0(ldm_pop_ex),
        .I1(lsm_last_d_phase_ex),
        .O(\wptr_ex[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT5 #(
    .INIT(32'hEFEEEAEE)) 
    \wptr_ex[2]_i_2 
       (.I0(br_lr_ex),
        .I1(wptr_decoded[2]),
        .I2(lsm_last_d_phase_ex),
        .I3(ldm_pop_ex),
        .I4(reg_sel[2]),
        .O(\wptr_ex[2]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT5 #(
    .INIT(32'h10111511)) 
    \wptr_ex[3]_i_2 
       (.I0(br_lr_ex),
        .I1(wptr_decoded[3]),
        .I2(lsm_last_d_phase_ex),
        .I3(ldm_pop_ex),
        .I4(reg_sel[3]),
        .O(\wptr_ex[3]_i_2_n_0 ));
  FDPE \wptr_ex_reg[0] 
       (.C(HCLK),
        .CE(1'b1),
        .D(nxt_wptr_ex[0]),
        .PRE(SYSRESETn_0),
        .Q(wptr_ex[0]));
  FDCE \wptr_ex_reg[1] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(u_decode_n_11),
        .Q(wptr_ex[1]));
  FDPE \wptr_ex_reg[2] 
       (.C(HCLK),
        .CE(1'b1),
        .D(nxt_wptr_ex[2]),
        .PRE(SYSRESETn_0),
        .Q(wptr_ex[2]));
  FDPE \wptr_ex_reg[3] 
       (.C(HCLK),
        .CE(1'b1),
        .D(nxt_wptr_ex[3]),
        .PRE(SYSRESETn_0),
        .Q(wptr_ex[3]));
  FDCE \write_addr_reg[0] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(SYSRESETn_0),
        .D(nxt_write_addr[0]),
        .Q(\write_addr_reg_n_0_[0] ));
  FDCE \write_addr_reg[1] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(SYSRESETn_0),
        .D(nxt_write_addr[1]),
        .Q(\write_addr_reg_n_0_[1] ));
  FDCE write_sp_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(SYSRESETn_0),
        .D(nxt_write_sp),
        .Q(write_sp));
  LUT4 #(
    .INIT(16'hFFFE)) 
    z_flag_mux_i_11
       (.I0(z_flag_mux_i_28_n_0),
        .I1(z_flag_mux_i_29_n_0),
        .I2(z_flag_mux_i_30_n_0),
        .I3(\reg_file_a[15][9]_i_4_n_0 ),
        .O(z_flag_mux_i_11_n_0));
  LUT6 #(
    .INIT(64'hFFF4FF9FDD94FFF4)) 
    z_flag_mux_i_12
       (.I0(invert_b_ex_reg_3),
        .I1(z_flag_mux_i_6_0[2]),
        .I2(lu_ctl_ex[1]),
        .I3(lu_ctl_ex[0]),
        .I4(\reg_file_a[15][14]_i_5_n_0 ),
        .I5(\u_dp/u_alu_dec/au_in_b [14]),
        .O(z_flag_mux_i_12_n_0));
  LUT6 #(
    .INIT(64'h7761FFF1FFF1FF6F)) 
    z_flag_mux_i_13
       (.I0(\reg_file_a[15][13]_i_5_n_0 ),
        .I1(\reg_file_a[15][13]_i_4_n_0 ),
        .I2(lu_ctl_ex[1]),
        .I3(lu_ctl_ex[0]),
        .I4(\reg_file_a_reg[15][12] ),
        .I5(invert_b_ex_reg_2),
        .O(z_flag_mux_i_13_n_0));
  LUT6 #(
    .INIT(64'hFF6FFFF1FFF17761)) 
    z_flag_mux_i_15
       (.I0(\mem_held_addr[3]_i_11_n_0 ),
        .I1(\mem_held_addr[3]_i_14_n_0 ),
        .I2(lu_ctl_ex[1]),
        .I3(lu_ctl_ex[0]),
        .I4(\mem_held_addr[3]_i_6_n_0 ),
        .I5(\u_dp/u_alu_dec/au_in_b [0]),
        .O(z_flag_mux_i_15_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    z_flag_mux_i_16
       (.I0(z_flag_mux_i_31_n_0),
        .I1(z_flag_mux_i_32_n_0),
        .I2(\dp_ipsr_7to2[4]_i_3_n_0 ),
        .I3(\dp_ipsr_7to2[5]_i_3_n_0 ),
        .O(z_flag_mux_i_16_n_0));
  LUT6 #(
    .INIT(64'hFF9FFFF2FFF2BB92)) 
    z_flag_mux_i_17
       (.I0(z_flag_mux_i_6_0[5]),
        .I1(invert_b_ex_reg_5),
        .I2(lu_ctl_ex[1]),
        .I3(lu_ctl_ex[0]),
        .I4(z_flag_mux_i_6_0[4]),
        .I5(invert_b_ex_reg_0[4]),
        .O(z_flag_mux_i_17_n_0));
  LUT6 #(
    .INIT(64'hFFF4F9FFD9D4FFF4)) 
    z_flag_mux_i_18
       (.I0(z_flag_mux_i_6_2),
        .I1(invert_b_ex_reg_0[3]),
        .I2(lu_ctl_ex[0]),
        .I3(lu_ctl_ex[1]),
        .I4(invert_b_ex_reg_4),
        .I5(z_flag_mux_i_6_0[3]),
        .O(z_flag_mux_i_18_n_0));
  LUT6 #(
    .INIT(64'h0060000D000D446D)) 
    z_flag_mux_i_19
       (.I0(invert_b_ex_reg_0[7]),
        .I1(v_flag_au_i_2_n_0),
        .I2(lu_ctl_ex[1]),
        .I3(lu_ctl_ex[0]),
        .I4(z_flag_mux_i_6_0[7]),
        .I5(invert_b_ex_reg_0[6]),
        .O(z_flag_mux_i_19_n_0));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT3 #(
    .INIT(8'h42)) 
    z_flag_mux_i_2
       (.I0(rf0_mux_ctl_ex[1]),
        .I1(rf0_mux_ctl_ex[0]),
        .I2(rf_mux_ctl_ex),
        .O(z_flag_mux_i_2_n_0));
  LUT6 #(
    .INIT(64'hFFF1F6FF7671FFF1)) 
    z_flag_mux_i_20
       (.I0(z_flag_mux_i_6_1),
        .I1(invert_b_ex_reg_7),
        .I2(lu_ctl_ex[0]),
        .I3(lu_ctl_ex[1]),
        .I4(invert_b_ex_reg_6),
        .I5(z_flag_mux_i_6_0[6]),
        .O(z_flag_mux_i_20_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    z_flag_mux_i_21
       (.I0(z_flag_mux_i_33_n_0),
        .I1(z_flag_mux_i_34_n_0),
        .I2(z_flag_mux_i_35_n_0),
        .I3(z_flag_mux_i_36_n_0),
        .O(z_flag_mux_i_21_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    z_flag_mux_i_22
       (.I0(z_flag_mux_i_37_n_0),
        .I1(z_flag_mux_i_38_n_0),
        .I2(z_flag_mux_i_39_n_0),
        .I3(z_flag_mux_i_40_n_0),
        .O(z_flag_mux_i_22_n_0));
  LUT6 #(
    .INIT(64'hFEEEFEEE5666A888)) 
    z_flag_mux_i_28
       (.I0(invert_b_ex_reg_0[0]),
        .I1(z_flag_mux_i_11_3),
        .I2(\dp_ipsr_1to0[1]_i_24_n_0 ),
        .I3(a_reg_0[9]),
        .I4(lu_ctl_ex[1]),
        .I5(lu_ctl_ex[0]),
        .O(z_flag_mux_i_28_n_0));
  LUT6 #(
    .INIT(64'hF8FFF8FFF80700F8)) 
    z_flag_mux_i_29
       (.I0(\dp_ipsr_1to0[1]_i_24_n_0 ),
        .I1(a_reg_0[10]),
        .I2(z_flag_mux_i_11_2),
        .I3(invert_b_ex_reg_1),
        .I4(lu_ctl_ex[1]),
        .I5(lu_ctl_ex[0]),
        .O(z_flag_mux_i_29_n_0));
  LUT6 #(
    .INIT(64'hFEEE5666FEEEA888)) 
    z_flag_mux_i_30
       (.I0(\u_dp/u_alu_dec/au_in_b [8]),
        .I1(z_flag_mux_i_11_1),
        .I2(a_reg_0[7]),
        .I3(\dp_ipsr_1to0[1]_i_24_n_0 ),
        .I4(lu_ctl_ex[0]),
        .I5(lu_ctl_ex[1]),
        .O(z_flag_mux_i_30_n_0));
  LUT6 #(
    .INIT(64'hFDDDA999FDDD5444)) 
    z_flag_mux_i_31
       (.I0(\dp_ipsr_7to2[6]_i_3_n_0 ),
        .I1(z_flag_mux_i_16_1),
        .I2(a_reg_0[5]),
        .I3(\dp_ipsr_1to0[1]_i_24_n_0 ),
        .I4(lu_ctl_ex[0]),
        .I5(lu_ctl_ex[1]),
        .O(z_flag_mux_i_31_n_0));
  LUT6 #(
    .INIT(64'hFDDDA999FDDD5444)) 
    z_flag_mux_i_32
       (.I0(\dp_ipsr_7to2[7]_i_3_n_0 ),
        .I1(z_flag_mux_i_16_0),
        .I2(a_reg_0[6]),
        .I3(\dp_ipsr_1to0[1]_i_24_n_0 ),
        .I4(lu_ctl_ex[0]),
        .I5(lu_ctl_ex[1]),
        .O(z_flag_mux_i_32_n_0));
  LUT6 #(
    .INIT(64'hFDDDA999FDDD5444)) 
    z_flag_mux_i_33
       (.I0(\reg_file_a[15][18]_i_4_n_0 ),
        .I1(z_flag_mux_i_21_0),
        .I2(a_reg_0[15]),
        .I3(\dp_ipsr_1to0[1]_i_24_n_0 ),
        .I4(lu_ctl_ex[0]),
        .I5(lu_ctl_ex[1]),
        .O(z_flag_mux_i_33_n_0));
  LUT6 #(
    .INIT(64'hFEEEFEEE5666A888)) 
    z_flag_mux_i_34
       (.I0(invert_b_ex_reg_0[1]),
        .I1(z_flag_mux_i_21_2),
        .I2(\dp_ipsr_1to0[1]_i_24_n_0 ),
        .I3(a_reg_0[16]),
        .I4(lu_ctl_ex[1]),
        .I5(lu_ctl_ex[0]),
        .O(z_flag_mux_i_34_n_0));
  LUT6 #(
    .INIT(64'hFEEEFEEE5666A888)) 
    z_flag_mux_i_35
       (.I0(\u_dp/u_alu_dec/au_in_b [16]),
        .I1(z_flag_mux_i_21_3),
        .I2(a_reg_0[13]),
        .I3(\dp_ipsr_1to0[1]_i_24_n_0 ),
        .I4(lu_ctl_ex[1]),
        .I5(lu_ctl_ex[0]),
        .O(z_flag_mux_i_35_n_0));
  LUT6 #(
    .INIT(64'hFDDDA999FDDD5444)) 
    z_flag_mux_i_36
       (.I0(\reg_file_a[15][17]_i_4_n_0 ),
        .I1(z_flag_mux_i_21_1),
        .I2(a_reg_0[14]),
        .I3(\dp_ipsr_1to0[1]_i_24_n_0 ),
        .I4(lu_ctl_ex[0]),
        .I5(lu_ctl_ex[1]),
        .O(z_flag_mux_i_36_n_0));
  LUT6 #(
    .INIT(64'hFDDDA999FDDD5444)) 
    z_flag_mux_i_37
       (.I0(\reg_file_a[15][20]_i_4_n_0 ),
        .I1(z_flag_mux_i_22_2),
        .I2(a_reg_0[17]),
        .I3(\dp_ipsr_1to0[1]_i_24_n_0 ),
        .I4(lu_ctl_ex[0]),
        .I5(lu_ctl_ex[1]),
        .O(z_flag_mux_i_37_n_0));
  LUT6 #(
    .INIT(64'hFEEE5666FEEEA888)) 
    z_flag_mux_i_38
       (.I0(\u_dp/u_alu_dec/au_in_b [21]),
        .I1(z_flag_mux_i_22_1),
        .I2(a_reg_0[18]),
        .I3(\dp_ipsr_1to0[1]_i_24_n_0 ),
        .I4(lu_ctl_ex[0]),
        .I5(lu_ctl_ex[1]),
        .O(z_flag_mux_i_38_n_0));
  LUT6 #(
    .INIT(64'hFEEE5666FEEEA888)) 
    z_flag_mux_i_39
       (.I0(\u_dp/u_alu_dec/au_in_b [22]),
        .I1(z_flag_mux_i_22_0),
        .I2(a_reg_0[19]),
        .I3(\dp_ipsr_1to0[1]_i_24_n_0 ),
        .I4(lu_ctl_ex[0]),
        .I5(lu_ctl_ex[1]),
        .O(z_flag_mux_i_39_n_0));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT3 #(
    .INIT(8'hF9)) 
    z_flag_mux_i_4
       (.I0(rf_mux_ctl_ex),
        .I1(rf0_mux_ctl_ex[1]),
        .I2(rf0_mux_ctl_ex[0]),
        .O(z_flag_mux_i_4_n_0));
  LUT6 #(
    .INIT(64'hFEEEFEEE5666A888)) 
    z_flag_mux_i_40
       (.I0(invert_b_ex_reg_0[2]),
        .I1(z_flag_mux_i_22_3),
        .I2(\dp_ipsr_1to0[1]_i_24_n_0 ),
        .I3(a_reg_0[20]),
        .I4(lu_ctl_ex[1]),
        .I5(lu_ctl_ex[0]),
        .O(z_flag_mux_i_40_n_0));
  LUT6 #(
    .INIT(64'h0000000000000010)) 
    z_flag_mux_i_6
       (.I0(z_flag_mux_i_17_n_0),
        .I1(z_flag_mux_i_18_n_0),
        .I2(z_flag_mux_i_19_n_0),
        .I3(z_flag_mux_i_20_n_0),
        .I4(z_flag_mux_i_21_n_0),
        .I5(z_flag_mux_i_22_n_0),
        .O(z_flag_mux_i_6_n_0));
  LUT6 #(
    .INIT(64'h0000000010131010)) 
    ze_byte_wb_i_1
       (.I0(ze_byte_wb_i_2_n_0),
        .I1(first32_ex_reg_0),
        .I2(sbit_ex_i_2_n_0),
        .I3(\instr_de_reg_n_0_[15] ),
        .I4(\instr_de_reg_n_0_[14] ),
        .I5(ze_byte_wb_i_3_n_0),
        .O(zext_byte));
  LUT6 #(
    .INIT(64'hFFEFFFFFFFFFFFFF)) 
    ze_byte_wb_i_2
       (.I0(\swz_ctl_ex[0]_i_2_n_0 ),
        .I1(\instr_de_reg_n_0_[14] ),
        .I2(\instr_de_reg_n_0_[9] ),
        .I3(\instr_de_reg_n_0_[10] ),
        .I4(\instr_de_reg_n_0_[15] ),
        .I5(\instr_de_reg_n_0_[6] ),
        .O(ze_byte_wb_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT5 #(
    .INIT(32'h41555555)) 
    ze_byte_wb_i_3
       (.I0(\instr_de_reg_n_0_[13] ),
        .I1(\instr_de_reg_n_0_[11] ),
        .I2(\instr_de_reg_n_0_[9] ),
        .I3(\instr_de_reg_n_0_[12] ),
        .I4(\instr_de_reg_n_0_[10] ),
        .O(ze_byte_wb_i_3_n_0));
  FDCE ze_byte_wb_reg
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg),
        .CLR(SYSRESETn_0),
        .D(zext_byte),
        .Q(ze_byte_wb));
  LUT6 #(
    .INIT(64'hAAFEAAAAAAAAAAAA)) 
    ze_half_wb_i_1
       (.I0(se_byte_wb_i_2_n_0),
        .I1(ze_half_wb_i_2_n_0),
        .I2(\instr_de_reg_n_0_[12] ),
        .I3(first32_ex_reg_0),
        .I4(\instr_de_reg_n_0_[11] ),
        .I5(ze_half_wb_i_3_n_0),
        .O(zext_half));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT3 #(
    .INIT(8'h04)) 
    ze_half_wb_i_2
       (.I0(\instr_de_reg_n_0_[13] ),
        .I1(\instr_de_reg_n_0_[15] ),
        .I2(\instr_de_reg_n_0_[14] ),
        .O(ze_half_wb_i_2_n_0));
  LUT6 #(
    .INIT(64'hCCFFD0FFC0FFD0FF)) 
    ze_half_wb_i_3
       (.I0(ze_half_wb_i_4_n_0),
        .I1(\instr_de_reg_n_0_[13] ),
        .I2(\instr_de_reg_n_0_[14] ),
        .I3(\instr_de_reg_n_0_[12] ),
        .I4(\instr_de_reg_n_0_[15] ),
        .I5(ze_half_wb_i_5_n_0),
        .O(ze_half_wb_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT2 #(
    .INIT(4'h1)) 
    ze_half_wb_i_4
       (.I0(\instr_de_reg_n_0_[10] ),
        .I1(\instr_de_reg_n_0_[9] ),
        .O(ze_half_wb_i_4_n_0));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT2 #(
    .INIT(4'h2)) 
    ze_half_wb_i_5
       (.I0(\instr_de_reg_n_0_[7] ),
        .I1(\instr_de_reg_n_0_[10] ),
        .O(ze_half_wb_i_5_n_0));
  FDCE ze_half_wb_reg
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg),
        .CLR(SYSRESETn_0),
        .D(zext_half),
        .Q(ze_half_wb));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT2 #(
    .INIT(4'h1)) 
    zero_a_ex_i_3
       (.I0(\instr_de_reg_n_0_[12] ),
        .I1(\instr_de_reg_n_0_[15] ),
        .O(zero_a_ex_i_3_n_0));
  LUT6 #(
    .INIT(64'hFAAAAAAAFEAAAAAA)) 
    zero_a_ex_i_4
       (.I0(ls_half_ex_i_3_n_0),
        .I1(\instr_de_reg_n_0_[6] ),
        .I2(\instr_de_reg_n_0_[10] ),
        .I3(\instr_de_reg_n_0_[9] ),
        .I4(\instr_de_reg_n_0_[14] ),
        .I5(zero_a_ex_i_5_n_0),
        .O(zero_a_ex_i_4_n_0));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT2 #(
    .INIT(4'h6)) 
    zero_a_ex_i_5
       (.I0(p_25_in),
        .I1(\instr_de_reg_n_0_[7] ),
        .O(zero_a_ex_i_5_n_0));
  FDPE zero_a_ex_reg
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg),
        .D(zero_a_ex0),
        .PRE(SYSRESETn_0),
        .Q(zero_a_ex));
endmodule

(* ORIG_REF_NAME = "cm1_decoder" *) 
module design_1_CORTEXM1_AXI_0_1_cm1_decoder
   (lockup_br_de_reg,
    \instr_de_reg[14] ,
    \instr_de_reg[14]_0 ,
    \imm_held_reg[5]_0 ,
    \xpsr_m_ctl_ex_reg[0]_0 ,
    \xpsr_m_ctl_ex_reg[2]_0 ,
    two_phase_de,
    \instr_de_reg[7] ,
    \instr_de_reg[14]_1 ,
    last_uncond_phase_ex_reg,
    D,
    first32_ex_reg,
    \instr_de_reg[14]_2 ,
    last_uncond_phase_ex_reg_0,
    nxt_write_sp,
    \wptr_ex_reg[3] ,
    \instr_de_reg[14]_3 ,
    \imm_held_reg[4]_0 ,
    b_use_pc,
    first32_ex_reg_0,
    \imm_held_reg[6]_0 ,
    bcc_first_ex_reg,
    i_dbg_wdata_sel_de_reg,
    first32_ex_reg_1,
    \instr_de_reg[7]_0 ,
    \instr_de_reg[14]_4 ,
    p_1_in2_in,
    rf_wdata,
    c_flag_wf_reg,
    v_flag_wf_reg,
    br_first_ex_reg,
    lockup_br_de,
    Q,
    \wptr_decoded_reg[1] ,
    two_phase_ex_reg,
    two_phase_ex_reg_0,
    two_phase_ex_reg_1,
    two_phase_ex_reg_2,
    two_phase_ex_reg_3,
    w_phase_ex_reg,
    \wptr_decoded_reg[1]_0 ,
    \wptr_ex_reg[1] ,
    br_lr_ex,
    \wptr_ex_reg[1]_0 ,
    \wptr_ex_reg[1]_1 ,
    \wptr_ex_reg[1]_2 ,
    \wptr_decoded_reg[1]_1 ,
    branch_ex_reg,
    \imm_ex_reg[12] ,
    \imm_ex_reg[12]_0 ,
    \imm_ex_reg[22] ,
    \rptr_b_ex2_reg[0] ,
    \rptr_b_ex_reg[3] ,
    biu_rdy,
    \rptr_b_ex_reg[0] ,
    \rptr_b_ex_reg[0]_0 ,
    \rptr_b_ex_reg[0]_1 ,
    \rptr_b_ex_reg[1] ,
    \rptr_b_ex_reg[1]_0 ,
    \rptr_b_ex_reg[2] ,
    \rptr_b_ex_reg[2]_0 ,
    \rptr_b_ex_reg[2]_1 ,
    \wptr_ex_reg[3]_0 ,
    \wptr_ex_reg[0] ,
    \wptr_decoded_reg[0] ,
    \wptr_decoded_reg[2] ,
    \wptr_decoded_reg[0]_0 ,
    micro_code_de,
    \wptr_ex_reg[2] ,
    \wptr_decoded_reg[2]_0 ,
    \wptr_decoded_reg[2]_1 ,
    br_first_ex_reg_0,
    \wptr_ex_reg[3]_1 ,
    \wptr_ex_reg[3]_2 ,
    au_b_use_pc_ex_reg,
    au_b_use_pc_ex_reg_0,
    au_b_use_pc_ex_reg_1,
    \rptr_b_ex_reg[3]_0 ,
    \rptr_b_ex_reg[3]_1 ,
    \rptr_b_ex_reg[3]_2 ,
    two_phase_ex_i_2_0,
    two_phase_ex_i_2_1,
    bcc_first_ex,
    \imm_held[10]_i_2_0 ,
    z_flag,
    c_flag,
    n_flag,
    v_flag,
    dbg_wdata_sel_de,
    \rf0_mux_ctl_ex_reg[1] ,
    \rf0_mux_ctl_ex_reg[1]_0 ,
    \rf0_mux_ctl_ex_reg[1]_1 ,
    \wdata_reg[28] ,
    \wdata_reg[28]_0 ,
    \reg_file_a_reg[15][31] ,
    \reg_file_a_reg[15][28] ,
    mult_out,
    \reg_file_a_reg[15][28]_0 ,
    \reg_file_a_reg[15][31]_0 ,
    \reg_file_a_reg[15][31]_1 ,
    v_flag_wf_reg_0,
    \reg_file_a_reg[15][31]_2 ,
    \reg_file_a_reg[15][28]_1 ,
    \wdata_reg[28]_1 ,
    \wdata_reg[31] ,
    \wdata_reg[31]_0 ,
    \wdata_reg[29] ,
    \reg_file_a_reg[15][29] ,
    c_flag_wf_reg_0,
    \reg_file_a_reg[15][29]_0 ,
    b_reg_0,
    \wdata_reg[30] ,
    \wdata_reg[30]_0 ,
    \wdata_reg[30]_1 ,
    \wdata_reg[30]_2 ,
    \reg_file_a_reg[15][30] ,
    \reg_file_a_reg[15][30]_0 ,
    \reg_file_a_reg[15][30]_1 ,
    \wdata_reg[31]_1 ,
    \reg_file_a_reg[15][31]_3 ,
    \reg_file_a_reg[15][31]_4 ,
    \reg_file_a_reg[15][31]_5 ,
    c_flag_wf_reg_1,
    c_flag_wf_reg_2,
    update_c_ex,
    c_flag_wf,
    v_flag_wf_reg_1,
    update_v_ex,
    v_flag_wf,
    adv_de_to_ex,
    HCLK,
    \imm_held_reg[0]_0 );
  output lockup_br_de_reg;
  output \instr_de_reg[14] ;
  output \instr_de_reg[14]_0 ;
  output [0:0]\imm_held_reg[5]_0 ;
  output \xpsr_m_ctl_ex_reg[0]_0 ;
  output [2:0]\xpsr_m_ctl_ex_reg[2]_0 ;
  output two_phase_de;
  output \instr_de_reg[7] ;
  output \instr_de_reg[14]_1 ;
  output last_uncond_phase_ex_reg;
  output [3:0]D;
  output [12:0]first32_ex_reg;
  output [3:0]\instr_de_reg[14]_2 ;
  output [3:0]last_uncond_phase_ex_reg_0;
  output nxt_write_sp;
  output [2:0]\wptr_ex_reg[3] ;
  output \instr_de_reg[14]_3 ;
  output \imm_held_reg[4]_0 ;
  output b_use_pc;
  output first32_ex_reg_0;
  output \imm_held_reg[6]_0 ;
  output bcc_first_ex_reg;
  output i_dbg_wdata_sel_de_reg;
  output first32_ex_reg_1;
  output \instr_de_reg[7]_0 ;
  output \instr_de_reg[14]_4 ;
  output [3:0]p_1_in2_in;
  output [3:0]rf_wdata;
  output c_flag_wf_reg;
  output v_flag_wf_reg;
  input br_first_ex_reg;
  input lockup_br_de;
  input [15:0]Q;
  input \wptr_decoded_reg[1] ;
  input two_phase_ex_reg;
  input two_phase_ex_reg_0;
  input two_phase_ex_reg_1;
  input two_phase_ex_reg_2;
  input two_phase_ex_reg_3;
  input w_phase_ex_reg;
  input \wptr_decoded_reg[1]_0 ;
  input \wptr_ex_reg[1] ;
  input br_lr_ex;
  input [0:0]\wptr_ex_reg[1]_0 ;
  input \wptr_ex_reg[1]_1 ;
  input [0:0]\wptr_ex_reg[1]_2 ;
  input \wptr_decoded_reg[1]_1 ;
  input branch_ex_reg;
  input \imm_ex_reg[12] ;
  input \imm_ex_reg[12]_0 ;
  input \imm_ex_reg[22] ;
  input \rptr_b_ex2_reg[0] ;
  input [3:0]\rptr_b_ex_reg[3] ;
  input biu_rdy;
  input \rptr_b_ex_reg[0] ;
  input \rptr_b_ex_reg[0]_0 ;
  input \rptr_b_ex_reg[0]_1 ;
  input \rptr_b_ex_reg[1] ;
  input \rptr_b_ex_reg[1]_0 ;
  input \rptr_b_ex_reg[2] ;
  input \rptr_b_ex_reg[2]_0 ;
  input \rptr_b_ex_reg[2]_1 ;
  input [2:0]\wptr_ex_reg[3]_0 ;
  input \wptr_ex_reg[0] ;
  input \wptr_decoded_reg[0] ;
  input \wptr_decoded_reg[2] ;
  input \wptr_decoded_reg[0]_0 ;
  input micro_code_de;
  input \wptr_ex_reg[2] ;
  input \wptr_decoded_reg[2]_0 ;
  input \wptr_decoded_reg[2]_1 ;
  input br_first_ex_reg_0;
  input \wptr_ex_reg[3]_1 ;
  input \wptr_ex_reg[3]_2 ;
  input au_b_use_pc_ex_reg;
  input au_b_use_pc_ex_reg_0;
  input au_b_use_pc_ex_reg_1;
  input \rptr_b_ex_reg[3]_0 ;
  input \rptr_b_ex_reg[3]_1 ;
  input \rptr_b_ex_reg[3]_2 ;
  input two_phase_ex_i_2_0;
  input two_phase_ex_i_2_1;
  input bcc_first_ex;
  input [3:0]\imm_held[10]_i_2_0 ;
  input z_flag;
  input c_flag;
  input n_flag;
  input v_flag;
  input dbg_wdata_sel_de;
  input \rf0_mux_ctl_ex_reg[1] ;
  input \rf0_mux_ctl_ex_reg[1]_0 ;
  input \rf0_mux_ctl_ex_reg[1]_1 ;
  input \wdata_reg[28] ;
  input [1:0]\wdata_reg[28]_0 ;
  input [3:0]\reg_file_a_reg[15][31] ;
  input [1:0]\reg_file_a_reg[15][28] ;
  input [3:0]mult_out;
  input \reg_file_a_reg[15][28]_0 ;
  input \reg_file_a_reg[15][31]_0 ;
  input \reg_file_a_reg[15][31]_1 ;
  input v_flag_wf_reg_0;
  input [3:0]\reg_file_a_reg[15][31]_2 ;
  input \reg_file_a_reg[15][28]_1 ;
  input \wdata_reg[28]_1 ;
  input [3:0]\wdata_reg[31] ;
  input \wdata_reg[31]_0 ;
  input \wdata_reg[29] ;
  input \reg_file_a_reg[15][29] ;
  input c_flag_wf_reg_0;
  input \reg_file_a_reg[15][29]_0 ;
  input [0:0]b_reg_0;
  input \wdata_reg[30] ;
  input \wdata_reg[30]_0 ;
  input \wdata_reg[30]_1 ;
  input \wdata_reg[30]_2 ;
  input \reg_file_a_reg[15][30] ;
  input \reg_file_a_reg[15][30]_0 ;
  input \reg_file_a_reg[15][30]_1 ;
  input \wdata_reg[31]_1 ;
  input \reg_file_a_reg[15][31]_3 ;
  input \reg_file_a_reg[15][31]_4 ;
  input \reg_file_a_reg[15][31]_5 ;
  input c_flag_wf_reg_1;
  input c_flag_wf_reg_2;
  input update_c_ex;
  input c_flag_wf;
  input v_flag_wf_reg_1;
  input update_v_ex;
  input v_flag_wf;
  input adv_de_to_ex;
  input HCLK;
  input \imm_held_reg[0]_0 ;

  wire [3:0]D;
  wire HCLK;
  wire [15:0]Q;
  wire adv_de_to_ex;
  wire au_b_use_pc_ex_reg;
  wire au_b_use_pc_ex_reg_0;
  wire au_b_use_pc_ex_reg_1;
  wire [0:0]b_reg_0;
  wire b_use_pc;
  wire bcc_first_ex;
  wire bcc_first_ex_reg;
  wire biu_rdy;
  wire br_first_ex_reg;
  wire br_first_ex_reg_0;
  wire br_lr_ex;
  wire branch_ex_i_4_n_0;
  wire branch_ex_reg;
  wire c_flag;
  wire c_flag_wf;
  wire c_flag_wf_i_2_n_0;
  wire c_flag_wf_i_4_n_0;
  wire c_flag_wf_reg;
  wire c_flag_wf_reg_0;
  wire c_flag_wf_reg_1;
  wire c_flag_wf_reg_2;
  wire dbg_wdata_sel_de;
  wire [12:0]first32_ex_reg;
  wire first32_ex_reg_0;
  wire first32_ex_reg_1;
  wire \genblk3[1].ram_block_reg_3_1_i_10_n_0 ;
  wire \genblk3[1].ram_block_reg_3_1_i_12_n_0 ;
  wire \genblk3[1].ram_block_reg_3_1_i_6_n_0 ;
  wire \genblk3[1].ram_block_reg_3_1_i_8_n_0 ;
  wire i_dbg_wdata_sel_de_reg;
  wire \imm_ex_reg[12] ;
  wire \imm_ex_reg[12]_0 ;
  wire \imm_ex_reg[22] ;
  wire [3:0]\imm_held[10]_i_2_0 ;
  wire \imm_held[10]_i_3_n_0 ;
  wire \imm_held[10]_i_4_n_0 ;
  wire \imm_held_reg[0]_0 ;
  wire \imm_held_reg[4]_0 ;
  wire [0:0]\imm_held_reg[5]_0 ;
  wire \imm_held_reg[6]_0 ;
  wire \imm_held_reg_n_0_[0] ;
  wire \imm_held_reg_n_0_[1] ;
  wire \imm_held_reg_n_0_[2] ;
  wire \imm_held_reg_n_0_[3] ;
  wire \imm_held_reg_n_0_[4] ;
  wire \imm_held_reg_n_0_[6] ;
  wire \imm_held_reg_n_0_[7] ;
  wire \imm_held_reg_n_0_[8] ;
  wire \imm_held_reg_n_0_[9] ;
  wire \instr_de_reg[14] ;
  wire \instr_de_reg[14]_0 ;
  wire \instr_de_reg[14]_1 ;
  wire [3:0]\instr_de_reg[14]_2 ;
  wire \instr_de_reg[14]_3 ;
  wire \instr_de_reg[14]_4 ;
  wire \instr_de_reg[7] ;
  wire \instr_de_reg[7]_0 ;
  wire int_fault_ex_i_13_n_0;
  wire int_fault_ex_i_5_n_0;
  wire int_fault_ex_i_6_n_0;
  wire last_uncond_phase_ex_reg;
  wire [3:0]last_uncond_phase_ex_reg_0;
  wire lockup_br_de;
  wire lockup_br_de_reg;
  wire micro_code_de;
  wire [3:0]mult_out;
  wire n_flag;
  wire nxt_write_sp;
  wire p_1_in;
  wire [3:0]p_1_in2_in;
  wire \reg_file_a[15][28]_i_2_n_0 ;
  wire \reg_file_a[15][29]_i_2_n_0 ;
  wire \reg_file_a[15][30]_i_2_n_0 ;
  wire \reg_file_a[15][31]_i_3_n_0 ;
  wire [1:0]\reg_file_a_reg[15][28] ;
  wire \reg_file_a_reg[15][28]_0 ;
  wire \reg_file_a_reg[15][28]_1 ;
  wire \reg_file_a_reg[15][29] ;
  wire \reg_file_a_reg[15][29]_0 ;
  wire \reg_file_a_reg[15][30] ;
  wire \reg_file_a_reg[15][30]_0 ;
  wire \reg_file_a_reg[15][30]_1 ;
  wire [3:0]\reg_file_a_reg[15][31] ;
  wire \reg_file_a_reg[15][31]_0 ;
  wire \reg_file_a_reg[15][31]_1 ;
  wire [3:0]\reg_file_a_reg[15][31]_2 ;
  wire \reg_file_a_reg[15][31]_3 ;
  wire \reg_file_a_reg[15][31]_4 ;
  wire \reg_file_a_reg[15][31]_5 ;
  wire \rf0_mux_ctl_ex_reg[1] ;
  wire \rf0_mux_ctl_ex_reg[1]_0 ;
  wire \rf0_mux_ctl_ex_reg[1]_1 ;
  wire [3:0]rf_wdata;
  wire \rptr_b_ex2[0]_i_2_n_0 ;
  wire \rptr_b_ex2[1]_i_2_n_0 ;
  wire \rptr_b_ex2[2]_i_2_n_0 ;
  wire \rptr_b_ex2[3]_i_2_n_0 ;
  wire \rptr_b_ex2_reg[0] ;
  wire \rptr_b_ex_reg[0] ;
  wire \rptr_b_ex_reg[0]_0 ;
  wire \rptr_b_ex_reg[0]_1 ;
  wire \rptr_b_ex_reg[1] ;
  wire \rptr_b_ex_reg[1]_0 ;
  wire \rptr_b_ex_reg[2] ;
  wire \rptr_b_ex_reg[2]_0 ;
  wire \rptr_b_ex_reg[2]_1 ;
  wire [3:0]\rptr_b_ex_reg[3] ;
  wire \rptr_b_ex_reg[3]_0 ;
  wire \rptr_b_ex_reg[3]_1 ;
  wire \rptr_b_ex_reg[3]_2 ;
  wire two_phase_de;
  wire two_phase_ex_i_2_0;
  wire two_phase_ex_i_2_1;
  wire two_phase_ex_i_3_n_0;
  wire two_phase_ex_reg;
  wire two_phase_ex_reg_0;
  wire two_phase_ex_reg_1;
  wire two_phase_ex_reg_2;
  wire two_phase_ex_reg_3;
  wire update_c_ex;
  wire update_v_ex;
  wire v_flag;
  wire v_flag_wf;
  wire v_flag_wf_i_2_n_0;
  wire v_flag_wf_i_4_n_0;
  wire v_flag_wf_reg;
  wire v_flag_wf_reg_0;
  wire v_flag_wf_reg_1;
  wire w_phase_ex_reg;
  wire \wdata_reg[28] ;
  wire [1:0]\wdata_reg[28]_0 ;
  wire \wdata_reg[28]_1 ;
  wire \wdata_reg[29] ;
  wire \wdata_reg[30] ;
  wire \wdata_reg[30]_0 ;
  wire \wdata_reg[30]_1 ;
  wire \wdata_reg[30]_2 ;
  wire [3:0]\wdata_reg[31] ;
  wire \wdata_reg[31]_0 ;
  wire \wdata_reg[31]_1 ;
  wire \wptr_decoded[0]_i_2_n_0 ;
  wire \wptr_decoded[3]_i_2_n_0 ;
  wire \wptr_decoded_reg[0] ;
  wire \wptr_decoded_reg[0]_0 ;
  wire \wptr_decoded_reg[1] ;
  wire \wptr_decoded_reg[1]_0 ;
  wire \wptr_decoded_reg[1]_1 ;
  wire \wptr_decoded_reg[2] ;
  wire \wptr_decoded_reg[2]_0 ;
  wire \wptr_decoded_reg[2]_1 ;
  wire \wptr_ex[0]_i_2_n_0 ;
  wire \wptr_ex_reg[0] ;
  wire \wptr_ex_reg[1] ;
  wire [0:0]\wptr_ex_reg[1]_0 ;
  wire \wptr_ex_reg[1]_1 ;
  wire [0:0]\wptr_ex_reg[1]_2 ;
  wire \wptr_ex_reg[2] ;
  wire [2:0]\wptr_ex_reg[3] ;
  wire [2:0]\wptr_ex_reg[3]_0 ;
  wire \wptr_ex_reg[3]_1 ;
  wire \wptr_ex_reg[3]_2 ;
  wire \xpsr_m_ctl_ex_reg[0]_0 ;
  wire [2:0]\xpsr_m_ctl_ex_reg[2]_0 ;
  wire [2:0]xpsr_mask_ctl;
  wire z_flag;

  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT2 #(
    .INIT(4'hB)) 
    any_dsb_ex_i_3
       (.I0(\imm_held_reg_n_0_[6] ),
        .I1(\imm_held_reg[5]_0 ),
        .O(\imm_held_reg[6]_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAABABABA)) 
    au_b_use_pc_ex_i_1
       (.I0(first32_ex_reg_0),
        .I1(au_b_use_pc_ex_reg),
        .I2(au_b_use_pc_ex_reg_0),
        .I3(Q[9]),
        .I4(Q[8]),
        .I5(au_b_use_pc_ex_reg_1),
        .O(b_use_pc));
  LUT3 #(
    .INIT(8'h01)) 
    br_first_ex_i_2
       (.I0(br_first_ex_reg),
        .I1(\instr_de_reg[14] ),
        .I2(lockup_br_de),
        .O(lockup_br_de_reg));
  LUT2 #(
    .INIT(4'h2)) 
    br_first_ex_i_3
       (.I0(\instr_de_reg[14]_0 ),
        .I1(br_first_ex_reg_0),
        .O(\instr_de_reg[14]_3 ));
  LUT6 #(
    .INIT(64'h00000200FFFF0200)) 
    branch_ex_i_2
       (.I0(Q[14]),
        .I1(Q[12]),
        .I2(Q[11]),
        .I3(branch_ex_reg),
        .I4(\wptr_decoded_reg[1] ),
        .I5(branch_ex_i_4_n_0),
        .O(\instr_de_reg[14] ));
  LUT4 #(
    .INIT(16'h4555)) 
    branch_ex_i_4
       (.I0(Q[12]),
        .I1(\imm_held_reg_n_0_[6] ),
        .I2(\imm_held_reg[5]_0 ),
        .I3(Q[5]),
        .O(branch_ex_i_4_n_0));
  LUT6 #(
    .INIT(64'hEEFEFFFFEEFE0000)) 
    c_flag_wf_i_1
       (.I0(c_flag_wf_i_2_n_0),
        .I1(c_flag_wf_reg_1),
        .I2(\reg_file_a_reg[15][29] ),
        .I3(c_flag_wf_reg_2),
        .I4(update_c_ex),
        .I5(c_flag_wf),
        .O(c_flag_wf_reg));
  LUT6 #(
    .INIT(64'h8080808880808080)) 
    c_flag_wf_i_2
       (.I0(\reg_file_a_reg[15][28] [0]),
        .I1(\reg_file_a_reg[15][28] [1]),
        .I2(c_flag_wf_i_4_n_0),
        .I3(\reg_file_a_reg[15][31]_0 ),
        .I4(\reg_file_a_reg[15][31]_1 ),
        .I5(c_flag_wf_reg_0),
        .O(c_flag_wf_i_2_n_0));
  LUT5 #(
    .INIT(32'hCAF0CA00)) 
    c_flag_wf_i_4
       (.I0(\reg_file_a_reg[15][29]_0 ),
        .I1(\reg_file_a_reg[15][31]_2 [1]),
        .I2(\reg_file_a_reg[15][31]_0 ),
        .I3(\reg_file_a_reg[15][31]_1 ),
        .I4(\genblk3[1].ram_block_reg_3_1_i_10_n_0 ),
        .O(c_flag_wf_i_4_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    \dp_ipsr_1to0[1]_i_26 
       (.I0(\xpsr_m_ctl_ex_reg[2]_0 [0]),
        .I1(\xpsr_m_ctl_ex_reg[2]_0 [2]),
        .O(\xpsr_m_ctl_ex_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT5 #(
    .INIT(32'h00000080)) 
    \en_itcm_core[1]_i_3 
       (.I0(\wptr_decoded_reg[1] ),
        .I1(Q[5]),
        .I2(\imm_held_reg[5]_0 ),
        .I3(\imm_held_reg_n_0_[6] ),
        .I4(Q[14]),
        .O(first32_ex_reg_0));
  LUT4 #(
    .INIT(16'hFE02)) 
    \genblk3[1].ram_block_reg_3_1_i_1 
       (.I0(\wdata_reg[31]_1 ),
        .I1(\wdata_reg[28]_0 [0]),
        .I2(\wdata_reg[28]_0 [1]),
        .I3(\genblk3[1].ram_block_reg_3_1_i_6_n_0 ),
        .O(p_1_in2_in[3]));
  LUT6 #(
    .INIT(64'h0800080008FF0800)) 
    \genblk3[1].ram_block_reg_3_1_i_10 
       (.I0(c_flag),
        .I1(\xpsr_m_ctl_ex_reg[2]_0 [1]),
        .I2(\xpsr_m_ctl_ex_reg[2]_0 [2]),
        .I3(\wdata_reg[28]_1 ),
        .I4(\wdata_reg[31] [1]),
        .I5(\wdata_reg[31]_0 ),
        .O(\genblk3[1].ram_block_reg_3_1_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h0800080008FF0800)) 
    \genblk3[1].ram_block_reg_3_1_i_12 
       (.I0(v_flag),
        .I1(\xpsr_m_ctl_ex_reg[2]_0 [1]),
        .I2(\xpsr_m_ctl_ex_reg[2]_0 [2]),
        .I3(\wdata_reg[28]_1 ),
        .I4(\wdata_reg[31] [0]),
        .I5(\wdata_reg[31]_0 ),
        .O(\genblk3[1].ram_block_reg_3_1_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hFE02FFFFFE020000)) 
    \genblk3[1].ram_block_reg_3_1_i_2 
       (.I0(b_reg_0),
        .I1(\wdata_reg[30] ),
        .I2(\wdata_reg[30]_0 ),
        .I3(\wdata_reg[30]_1 ),
        .I4(\wdata_reg[30]_2 ),
        .I5(\genblk3[1].ram_block_reg_3_1_i_8_n_0 ),
        .O(p_1_in2_in[2]));
  LUT4 #(
    .INIT(16'hFE02)) 
    \genblk3[1].ram_block_reg_3_1_i_3 
       (.I0(\wdata_reg[29] ),
        .I1(\wdata_reg[28]_0 [0]),
        .I2(\wdata_reg[28]_0 [1]),
        .I3(\genblk3[1].ram_block_reg_3_1_i_10_n_0 ),
        .O(p_1_in2_in[1]));
  LUT4 #(
    .INIT(16'hFE02)) 
    \genblk3[1].ram_block_reg_3_1_i_4 
       (.I0(\wdata_reg[28] ),
        .I1(\wdata_reg[28]_0 [0]),
        .I2(\wdata_reg[28]_0 [1]),
        .I3(\genblk3[1].ram_block_reg_3_1_i_12_n_0 ),
        .O(p_1_in2_in[0]));
  LUT6 #(
    .INIT(64'h0800080008FF0800)) 
    \genblk3[1].ram_block_reg_3_1_i_6 
       (.I0(n_flag),
        .I1(\xpsr_m_ctl_ex_reg[2]_0 [1]),
        .I2(\xpsr_m_ctl_ex_reg[2]_0 [2]),
        .I3(\wdata_reg[28]_1 ),
        .I4(\wdata_reg[31] [3]),
        .I5(\wdata_reg[31]_0 ),
        .O(\genblk3[1].ram_block_reg_3_1_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0800080008FF0800)) 
    \genblk3[1].ram_block_reg_3_1_i_8 
       (.I0(z_flag),
        .I1(\xpsr_m_ctl_ex_reg[2]_0 [1]),
        .I2(\xpsr_m_ctl_ex_reg[2]_0 [2]),
        .I3(\wdata_reg[28]_1 ),
        .I4(\wdata_reg[31] [2]),
        .I5(\wdata_reg[31]_0 ),
        .O(\genblk3[1].ram_block_reg_3_1_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT4 #(
    .INIT(16'h80AA)) 
    \imm_ex[12]_i_1 
       (.I0(\imm_ex_reg[12] ),
        .I1(\wptr_decoded_reg[1] ),
        .I2(\imm_held_reg_n_0_[0] ),
        .I3(\imm_ex_reg[12]_0 ),
        .O(first32_ex_reg[0]));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT4 #(
    .INIT(16'h80AA)) 
    \imm_ex[13]_i_1 
       (.I0(\imm_ex_reg[12] ),
        .I1(\wptr_decoded_reg[1] ),
        .I2(\imm_held_reg_n_0_[1] ),
        .I3(\imm_ex_reg[12]_0 ),
        .O(first32_ex_reg[1]));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT4 #(
    .INIT(16'h80AA)) 
    \imm_ex[14]_i_1 
       (.I0(\imm_ex_reg[12] ),
        .I1(\wptr_decoded_reg[1] ),
        .I2(\imm_held_reg_n_0_[2] ),
        .I3(\imm_ex_reg[12]_0 ),
        .O(first32_ex_reg[2]));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT4 #(
    .INIT(16'h80AA)) 
    \imm_ex[15]_i_1 
       (.I0(\imm_ex_reg[12] ),
        .I1(\wptr_decoded_reg[1] ),
        .I2(\imm_held_reg_n_0_[3] ),
        .I3(\imm_ex_reg[12]_0 ),
        .O(first32_ex_reg[3]));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT4 #(
    .INIT(16'hA222)) 
    \imm_ex[16]_i_1 
       (.I0(\imm_ex_reg[12] ),
        .I1(\imm_ex_reg[12]_0 ),
        .I2(\wptr_decoded_reg[1] ),
        .I3(\imm_held_reg_n_0_[4] ),
        .O(first32_ex_reg[4]));
  LUT4 #(
    .INIT(16'h80AA)) 
    \imm_ex[17]_i_1 
       (.I0(\imm_ex_reg[12] ),
        .I1(\wptr_decoded_reg[1] ),
        .I2(\imm_held_reg[5]_0 ),
        .I3(\imm_ex_reg[12]_0 ),
        .O(first32_ex_reg[5]));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT4 #(
    .INIT(16'hA222)) 
    \imm_ex[18]_i_1 
       (.I0(\imm_ex_reg[12] ),
        .I1(\imm_ex_reg[12]_0 ),
        .I2(\wptr_decoded_reg[1] ),
        .I3(\imm_held_reg_n_0_[6] ),
        .O(first32_ex_reg[6]));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT4 #(
    .INIT(16'h80AA)) 
    \imm_ex[19]_i_1 
       (.I0(\imm_ex_reg[12] ),
        .I1(\wptr_decoded_reg[1] ),
        .I2(\imm_held_reg_n_0_[7] ),
        .I3(\imm_ex_reg[12]_0 ),
        .O(first32_ex_reg[7]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT4 #(
    .INIT(16'h80AA)) 
    \imm_ex[20]_i_1 
       (.I0(\imm_ex_reg[12] ),
        .I1(\wptr_decoded_reg[1] ),
        .I2(\imm_held_reg_n_0_[8] ),
        .I3(\imm_ex_reg[12]_0 ),
        .O(first32_ex_reg[8]));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT4 #(
    .INIT(16'h80AA)) 
    \imm_ex[21]_i_1 
       (.I0(\imm_ex_reg[12] ),
        .I1(\wptr_decoded_reg[1] ),
        .I2(\imm_held_reg_n_0_[9] ),
        .I3(\imm_ex_reg[12]_0 ),
        .O(first32_ex_reg[9]));
  LUT5 #(
    .INIT(32'hA20202A2)) 
    \imm_ex[22]_i_1 
       (.I0(\imm_ex_reg[12] ),
        .I1(\imm_ex_reg[22] ),
        .I2(\wptr_decoded_reg[1] ),
        .I3(Q[11]),
        .I4(p_1_in),
        .O(first32_ex_reg[10]));
  LUT5 #(
    .INIT(32'hA20202A2)) 
    \imm_ex[23]_i_1 
       (.I0(\imm_ex_reg[12] ),
        .I1(\imm_ex_reg[22] ),
        .I2(\wptr_decoded_reg[1] ),
        .I3(Q[13]),
        .I4(p_1_in),
        .O(first32_ex_reg[11]));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT4 #(
    .INIT(16'hD500)) 
    \imm_ex[29]_i_2 
       (.I0(\imm_ex_reg[12]_0 ),
        .I1(\wptr_decoded_reg[1] ),
        .I2(p_1_in),
        .I3(\imm_ex_reg[12] ),
        .O(first32_ex_reg[12]));
  LUT4 #(
    .INIT(16'h8A20)) 
    \imm_held[10]_i_2 
       (.I0(bcc_first_ex),
        .I1(\imm_held[10]_i_3_n_0 ),
        .I2(\imm_held[10]_i_4_n_0 ),
        .I3(\imm_held[10]_i_2_0 [0]),
        .O(bcc_first_ex_reg));
  LUT5 #(
    .INIT(32'h66603500)) 
    \imm_held[10]_i_3 
       (.I0(n_flag),
        .I1(v_flag),
        .I2(\imm_held[10]_i_2_0 [1]),
        .I3(\imm_held[10]_i_2_0 [2]),
        .I4(\imm_held[10]_i_2_0 [3]),
        .O(\imm_held[10]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFF54FCFA)) 
    \imm_held[10]_i_4 
       (.I0(z_flag),
        .I1(c_flag),
        .I2(\imm_held[10]_i_2_0 [2]),
        .I3(\imm_held[10]_i_2_0 [1]),
        .I4(\imm_held[10]_i_2_0 [3]),
        .O(\imm_held[10]_i_4_n_0 ));
  FDCE \imm_held_reg[0] 
       (.C(HCLK),
        .CE(adv_de_to_ex),
        .CLR(\imm_held_reg[0]_0 ),
        .D(Q[0]),
        .Q(\imm_held_reg_n_0_[0] ));
  FDCE \imm_held_reg[10] 
       (.C(HCLK),
        .CE(adv_de_to_ex),
        .CLR(\imm_held_reg[0]_0 ),
        .D(Q[10]),
        .Q(p_1_in));
  FDCE \imm_held_reg[1] 
       (.C(HCLK),
        .CE(adv_de_to_ex),
        .CLR(\imm_held_reg[0]_0 ),
        .D(Q[1]),
        .Q(\imm_held_reg_n_0_[1] ));
  FDCE \imm_held_reg[2] 
       (.C(HCLK),
        .CE(adv_de_to_ex),
        .CLR(\imm_held_reg[0]_0 ),
        .D(Q[2]),
        .Q(\imm_held_reg_n_0_[2] ));
  FDCE \imm_held_reg[3] 
       (.C(HCLK),
        .CE(adv_de_to_ex),
        .CLR(\imm_held_reg[0]_0 ),
        .D(Q[3]),
        .Q(\imm_held_reg_n_0_[3] ));
  FDCE \imm_held_reg[4] 
       (.C(HCLK),
        .CE(adv_de_to_ex),
        .CLR(\imm_held_reg[0]_0 ),
        .D(Q[4]),
        .Q(\imm_held_reg_n_0_[4] ));
  FDCE \imm_held_reg[5] 
       (.C(HCLK),
        .CE(adv_de_to_ex),
        .CLR(\imm_held_reg[0]_0 ),
        .D(Q[5]),
        .Q(\imm_held_reg[5]_0 ));
  FDCE \imm_held_reg[6] 
       (.C(HCLK),
        .CE(adv_de_to_ex),
        .CLR(\imm_held_reg[0]_0 ),
        .D(Q[6]),
        .Q(\imm_held_reg_n_0_[6] ));
  FDCE \imm_held_reg[7] 
       (.C(HCLK),
        .CE(adv_de_to_ex),
        .CLR(\imm_held_reg[0]_0 ),
        .D(Q[7]),
        .Q(\imm_held_reg_n_0_[7] ));
  FDCE \imm_held_reg[8] 
       (.C(HCLK),
        .CE(adv_de_to_ex),
        .CLR(\imm_held_reg[0]_0 ),
        .D(Q[8]),
        .Q(\imm_held_reg_n_0_[8] ));
  FDCE \imm_held_reg[9] 
       (.C(HCLK),
        .CE(adv_de_to_ex),
        .CLR(\imm_held_reg[0]_0 ),
        .D(Q[9]),
        .Q(\imm_held_reg_n_0_[9] ));
  LUT6 #(
    .INIT(64'h00000000FFFFFFEF)) 
    int_fault_ex_i_13
       (.I0(Q[8]),
        .I1(Q[9]),
        .I2(Q[11]),
        .I3(Q[10]),
        .I4(\imm_held_reg_n_0_[6] ),
        .I5(\imm_held_reg[5]_0 ),
        .O(int_fault_ex_i_13_n_0));
  LUT6 #(
    .INIT(64'h80B08080FFFFFFFF)) 
    int_fault_ex_i_2
       (.I0(Q[14]),
        .I1(Q[12]),
        .I2(Q[15]),
        .I3(int_fault_ex_i_5_n_0),
        .I4(int_fault_ex_i_6_n_0),
        .I5(\wptr_decoded_reg[1] ),
        .O(\instr_de_reg[14]_0 ));
  LUT6 #(
    .INIT(64'hFFFF0000FF8FFFFF)) 
    int_fault_ex_i_5
       (.I0(Q[4]),
        .I1(Q[5]),
        .I2(Q[6]),
        .I3(Q[7]),
        .I4(\imm_held_reg_n_0_[4] ),
        .I5(\imm_held_reg[6]_0 ),
        .O(int_fault_ex_i_5_n_0));
  LUT6 #(
    .INIT(64'h0000000000000080)) 
    int_fault_ex_i_6
       (.I0(\imm_held_reg_n_0_[9] ),
        .I1(\imm_held_reg_n_0_[8] ),
        .I2(\imm_held_reg_n_0_[7] ),
        .I3(Q[14]),
        .I4(p_1_in),
        .I5(int_fault_ex_i_13_n_0),
        .O(int_fault_ex_i_6_n_0));
  LUT6 #(
    .INIT(64'h5FFC50FC5F0C500C)) 
    \reg_file_a[15][28]_i_1 
       (.I0(\reg_file_a[15][28]_i_2_n_0 ),
        .I1(\reg_file_a_reg[15][31] [0]),
        .I2(\reg_file_a_reg[15][28] [0]),
        .I3(\reg_file_a_reg[15][28] [1]),
        .I4(mult_out[0]),
        .I5(\reg_file_a_reg[15][28]_0 ),
        .O(rf_wdata[0]));
  LUT6 #(
    .INIT(64'h0305F30503F5F3F5)) 
    \reg_file_a[15][28]_i_2 
       (.I0(v_flag_wf_reg_0),
        .I1(\genblk3[1].ram_block_reg_3_1_i_12_n_0 ),
        .I2(\reg_file_a_reg[15][31]_1 ),
        .I3(\reg_file_a_reg[15][31]_0 ),
        .I4(\reg_file_a_reg[15][31]_2 [0]),
        .I5(\reg_file_a_reg[15][28]_1 ),
        .O(\reg_file_a[15][28]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h5FFC50FC5F0C500C)) 
    \reg_file_a[15][29]_i_1 
       (.I0(\reg_file_a[15][29]_i_2_n_0 ),
        .I1(\reg_file_a_reg[15][31] [1]),
        .I2(\reg_file_a_reg[15][28] [0]),
        .I3(\reg_file_a_reg[15][28] [1]),
        .I4(mult_out[1]),
        .I5(\reg_file_a_reg[15][29] ),
        .O(rf_wdata[1]));
  LUT6 #(
    .INIT(64'h0305F30503F5F3F5)) 
    \reg_file_a[15][29]_i_2 
       (.I0(c_flag_wf_reg_0),
        .I1(\genblk3[1].ram_block_reg_3_1_i_10_n_0 ),
        .I2(\reg_file_a_reg[15][31]_1 ),
        .I3(\reg_file_a_reg[15][31]_0 ),
        .I4(\reg_file_a_reg[15][31]_2 [1]),
        .I5(\reg_file_a_reg[15][29]_0 ),
        .O(\reg_file_a[15][29]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h5FFC50FC5F0C500C)) 
    \reg_file_a[15][30]_i_1 
       (.I0(\reg_file_a[15][30]_i_2_n_0 ),
        .I1(\reg_file_a_reg[15][31] [2]),
        .I2(\reg_file_a_reg[15][28] [0]),
        .I3(\reg_file_a_reg[15][28] [1]),
        .I4(mult_out[2]),
        .I5(\reg_file_a_reg[15][30] ),
        .O(rf_wdata[2]));
  LUT6 #(
    .INIT(64'h00350F35F035FF35)) 
    \reg_file_a[15][30]_i_2 
       (.I0(\reg_file_a_reg[15][30]_0 ),
        .I1(\reg_file_a_reg[15][30]_1 ),
        .I2(\reg_file_a_reg[15][31]_1 ),
        .I3(\reg_file_a_reg[15][31]_0 ),
        .I4(\genblk3[1].ram_block_reg_3_1_i_8_n_0 ),
        .I5(\reg_file_a_reg[15][31]_2 [2]),
        .O(\reg_file_a[15][30]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h5FFC50FC5F0C500C)) 
    \reg_file_a[15][31]_i_2 
       (.I0(\reg_file_a[15][31]_i_3_n_0 ),
        .I1(\reg_file_a_reg[15][31] [3]),
        .I2(\reg_file_a_reg[15][28] [0]),
        .I3(\reg_file_a_reg[15][28] [1]),
        .I4(mult_out[3]),
        .I5(\reg_file_a_reg[15][31]_3 ),
        .O(rf_wdata[3]));
  LUT6 #(
    .INIT(64'h030AF30A03FAF3FA)) 
    \reg_file_a[15][31]_i_3 
       (.I0(\reg_file_a_reg[15][31]_4 ),
        .I1(\genblk3[1].ram_block_reg_3_1_i_6_n_0 ),
        .I2(\reg_file_a_reg[15][31]_1 ),
        .I3(\reg_file_a_reg[15][31]_0 ),
        .I4(\reg_file_a_reg[15][31]_2 [3]),
        .I5(\reg_file_a_reg[15][31]_5 ),
        .O(\reg_file_a[15][31]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFEFFFEFFFEFFFE00)) 
    \rf0_mux_ctl_ex[1]_i_1 
       (.I0(first32_ex_reg_1),
        .I1(dbg_wdata_sel_de),
        .I2(\rf0_mux_ctl_ex_reg[1] ),
        .I3(\wptr_ex_reg[1] ),
        .I4(\rf0_mux_ctl_ex_reg[1]_0 ),
        .I5(\rf0_mux_ctl_ex_reg[1]_1 ),
        .O(i_dbg_wdata_sel_de_reg));
  LUT4 #(
    .INIT(16'h0040)) 
    \rf_mux_ctl_ex[2]_i_2 
       (.I0(\wptr_decoded_reg[1]_0 ),
        .I1(\wptr_decoded_reg[1] ),
        .I2(\imm_held_reg_n_0_[6] ),
        .I3(Q[14]),
        .O(first32_ex_reg_1));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT3 #(
    .INIT(8'hC5)) 
    \rptr_b_ex2[0]_i_1 
       (.I0(\rptr_b_ex2[0]_i_2_n_0 ),
        .I1(Q[0]),
        .I2(\rptr_b_ex2_reg[0] ),
        .O(\instr_de_reg[14]_2 [0]));
  LUT5 #(
    .INIT(32'h00011111)) 
    \rptr_b_ex2[0]_i_2 
       (.I0(\rptr_b_ex_reg[0]_0 ),
        .I1(\rptr_b_ex_reg[0]_1 ),
        .I2(\imm_held_reg[5]_0 ),
        .I3(\imm_held_reg_n_0_[0] ),
        .I4(\wptr_decoded_reg[1] ),
        .O(\rptr_b_ex2[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h8B)) 
    \rptr_b_ex2[1]_i_1 
       (.I0(Q[1]),
        .I1(\rptr_b_ex2_reg[0] ),
        .I2(\rptr_b_ex2[1]_i_2_n_0 ),
        .O(\instr_de_reg[14]_2 [1]));
  LUT6 #(
    .INIT(64'h0515551555155515)) 
    \rptr_b_ex2[1]_i_2 
       (.I0(\rptr_b_ex_reg[1]_0 ),
        .I1(\imm_held_reg_n_0_[1] ),
        .I2(\wptr_decoded_reg[1] ),
        .I3(\imm_held_reg[5]_0 ),
        .I4(Q[0]),
        .I5(\wptr_decoded_reg[1]_0 ),
        .O(\rptr_b_ex2[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT3 #(
    .INIT(8'hC5)) 
    \rptr_b_ex2[2]_i_1 
       (.I0(\rptr_b_ex2[2]_i_2_n_0 ),
        .I1(Q[2]),
        .I2(\rptr_b_ex2_reg[0] ),
        .O(\instr_de_reg[14]_2 [2]));
  LUT6 #(
    .INIT(64'h0000000F0E0E0E0E)) 
    \rptr_b_ex2[2]_i_2 
       (.I0(\rptr_b_ex_reg[2]_0 ),
        .I1(Q[15]),
        .I2(\rptr_b_ex_reg[2]_1 ),
        .I3(\imm_held_reg[5]_0 ),
        .I4(\imm_held_reg_n_0_[2] ),
        .I5(\wptr_decoded_reg[1] ),
        .O(\rptr_b_ex2[2]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \rptr_b_ex2[3]_i_1 
       (.I0(\rptr_b_ex2[3]_i_2_n_0 ),
        .O(\instr_de_reg[14]_2 [3]));
  LUT6 #(
    .INIT(64'h00FB00FB00FBFBFB)) 
    \rptr_b_ex2[3]_i_2 
       (.I0(\rptr_b_ex_reg[3]_1 ),
        .I1(Q[14]),
        .I2(\rptr_b_ex_reg[3]_2 ),
        .I3(\wptr_decoded_reg[1] ),
        .I4(\imm_held_reg_n_0_[3] ),
        .I5(\imm_held_reg[5]_0 ),
        .O(\rptr_b_ex2[3]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFF044F0)) 
    \rptr_b_ex[0]_i_1 
       (.I0(\rptr_b_ex2[0]_i_2_n_0 ),
        .I1(\wptr_ex_reg[1] ),
        .I2(\rptr_b_ex_reg[3] [0]),
        .I3(biu_rdy),
        .I4(\rptr_b_ex_reg[0] ),
        .O(last_uncond_phase_ex_reg_0[0]));
  LUT5 #(
    .INIT(32'hFFF044F0)) 
    \rptr_b_ex[1]_i_1 
       (.I0(\rptr_b_ex2[1]_i_2_n_0 ),
        .I1(\wptr_ex_reg[1] ),
        .I2(\rptr_b_ex_reg[3] [1]),
        .I3(biu_rdy),
        .I4(\rptr_b_ex_reg[1] ),
        .O(last_uncond_phase_ex_reg_0[1]));
  LUT5 #(
    .INIT(32'hFFF044F0)) 
    \rptr_b_ex[2]_i_1 
       (.I0(\rptr_b_ex2[2]_i_2_n_0 ),
        .I1(\wptr_ex_reg[1] ),
        .I2(\rptr_b_ex_reg[3] [2]),
        .I3(biu_rdy),
        .I4(\rptr_b_ex_reg[2] ),
        .O(last_uncond_phase_ex_reg_0[2]));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT5 #(
    .INIT(32'hFFF044F0)) 
    \rptr_b_ex[3]_i_1 
       (.I0(\rptr_b_ex2[3]_i_2_n_0 ),
        .I1(\wptr_ex_reg[1] ),
        .I2(\rptr_b_ex_reg[3] [3]),
        .I3(biu_rdy),
        .I4(\rptr_b_ex_reg[3]_0 ),
        .O(last_uncond_phase_ex_reg_0[3]));
  LUT1 #(
    .INIT(2'h1)) 
    two_phase_ex_i_1
       (.I0(\instr_de_reg[7] ),
        .O(two_phase_de));
  LUT6 #(
    .INIT(64'h0002000200020000)) 
    two_phase_ex_i_2
       (.I0(two_phase_ex_reg),
        .I1(two_phase_ex_i_3_n_0),
        .I2(two_phase_ex_reg_0),
        .I3(two_phase_ex_reg_1),
        .I4(two_phase_ex_reg_2),
        .I5(two_phase_ex_reg_3),
        .O(\instr_de_reg[7] ));
  LUT6 #(
    .INIT(64'hFFFFFFFFAAFBAAAA)) 
    two_phase_ex_i_3
       (.I0(two_phase_ex_i_2_0),
        .I1(Q[5]),
        .I2(\imm_held_reg[6]_0 ),
        .I3(Q[12]),
        .I4(\wptr_decoded_reg[1] ),
        .I5(two_phase_ex_i_2_1),
        .O(two_phase_ex_i_3_n_0));
  LUT6 #(
    .INIT(64'hEEFEFFFFEEFE0000)) 
    v_flag_wf_i_1
       (.I0(v_flag_wf_i_2_n_0),
        .I1(v_flag_wf_reg_1),
        .I2(\reg_file_a_reg[15][28]_0 ),
        .I3(c_flag_wf_reg_2),
        .I4(update_v_ex),
        .I5(v_flag_wf),
        .O(v_flag_wf_reg));
  LUT6 #(
    .INIT(64'h8080808880808080)) 
    v_flag_wf_i_2
       (.I0(\reg_file_a_reg[15][28] [0]),
        .I1(\reg_file_a_reg[15][28] [1]),
        .I2(v_flag_wf_i_4_n_0),
        .I3(\reg_file_a_reg[15][31]_0 ),
        .I4(\reg_file_a_reg[15][31]_1 ),
        .I5(v_flag_wf_reg_0),
        .O(v_flag_wf_i_2_n_0));
  LUT5 #(
    .INIT(32'hCAF0CA00)) 
    v_flag_wf_i_4
       (.I0(\reg_file_a_reg[15][28]_1 ),
        .I1(\reg_file_a_reg[15][31]_2 [0]),
        .I2(\reg_file_a_reg[15][31]_0 ),
        .I3(\reg_file_a_reg[15][31]_1 ),
        .I4(\genblk3[1].ram_block_reg_3_1_i_12_n_0 ),
        .O(v_flag_wf_i_4_n_0));
  LUT6 #(
    .INIT(64'hCFAACFAACCAACFAA)) 
    w_phase_ex_i_3
       (.I0(w_phase_ex_reg),
        .I1(Q[14]),
        .I2(\imm_held_reg_n_0_[6] ),
        .I3(\wptr_decoded_reg[1] ),
        .I4(\wptr_decoded_reg[1]_0 ),
        .I5(\imm_held_reg[5]_0 ),
        .O(\instr_de_reg[14]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT3 #(
    .INIT(8'hBF)) 
    \wdata_mux_ctl_ex[1]_i_2 
       (.I0(Q[14]),
        .I1(\imm_held_reg_n_0_[6] ),
        .I2(\wptr_decoded_reg[1] ),
        .O(\instr_de_reg[14]_4 ));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \wptr_decoded[0]_i_1 
       (.I0(\wptr_decoded[0]_i_2_n_0 ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h4F4F4F4040404040)) 
    \wptr_decoded[0]_i_2 
       (.I0(Q[8]),
        .I1(\imm_held_reg[5]_0 ),
        .I2(\wptr_decoded_reg[1] ),
        .I3(\wptr_decoded_reg[0] ),
        .I4(\wptr_decoded_reg[2] ),
        .I5(\wptr_decoded_reg[0]_0 ),
        .O(\wptr_decoded[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hB888FFFFB8880000)) 
    \wptr_decoded[1]_i_1 
       (.I0(Q[9]),
        .I1(\imm_held_reg[5]_0 ),
        .I2(\wptr_decoded_reg[1]_0 ),
        .I3(Q[0]),
        .I4(\wptr_decoded_reg[1] ),
        .I5(\wptr_decoded_reg[1]_1 ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hBFB0BFBFBFB0B0B0)) 
    \wptr_decoded[2]_i_1 
       (.I0(Q[10]),
        .I1(\imm_held_reg[5]_0 ),
        .I2(\wptr_decoded_reg[1] ),
        .I3(\wptr_decoded_reg[2]_0 ),
        .I4(\wptr_decoded_reg[2] ),
        .I5(\wptr_decoded_reg[2]_1 ),
        .O(D[2]));
  LUT3 #(
    .INIT(8'hD1)) 
    \wptr_decoded[3]_i_1 
       (.I0(\wptr_decoded[3]_i_2_n_0 ),
        .I1(micro_code_de),
        .I2(D[2]),
        .O(D[3]));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT4 #(
    .INIT(16'h2F20)) 
    \wptr_decoded[3]_i_2 
       (.I0(\imm_held_reg[5]_0 ),
        .I1(Q[11]),
        .I2(\wptr_decoded_reg[1] ),
        .I3(\wptr_ex_reg[3]_2 ),
        .O(\wptr_decoded[3]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \wptr_ex[0]_i_1 
       (.I0(\wptr_ex[0]_i_2_n_0 ),
        .O(\wptr_ex_reg[3] [0]));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT5 #(
    .INIT(32'h000FDD0F)) 
    \wptr_ex[0]_i_2 
       (.I0(\wptr_ex_reg[1] ),
        .I1(\wptr_decoded[0]_i_2_n_0 ),
        .I2(\wptr_ex_reg[3]_0 [0]),
        .I3(biu_rdy),
        .I4(\wptr_ex_reg[0] ),
        .O(\wptr_ex[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBBBB8B8B8BBB8)) 
    \wptr_ex[1]_i_1 
       (.I0(D[1]),
        .I1(\wptr_ex_reg[1] ),
        .I2(br_lr_ex),
        .I3(\wptr_ex_reg[1]_0 ),
        .I4(\wptr_ex_reg[1]_1 ),
        .I5(\wptr_ex_reg[1]_2 ),
        .O(last_uncond_phase_ex_reg));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \wptr_ex[2]_i_1 
       (.I0(D[2]),
        .I1(\wptr_ex_reg[1] ),
        .I2(\wptr_ex_reg[2] ),
        .I3(biu_rdy),
        .I4(\wptr_ex_reg[3]_0 [1]),
        .O(\wptr_ex_reg[3] [1]));
  LUT5 #(
    .INIT(32'h303FAAAA)) 
    \wptr_ex[3]_i_1 
       (.I0(\wptr_ex_reg[3]_0 [2]),
        .I1(\wptr_decoded[3]_i_2_n_0 ),
        .I2(\wptr_ex_reg[1] ),
        .I3(\wptr_ex_reg[3]_1 ),
        .I4(biu_rdy),
        .O(\wptr_ex_reg[3] [2]));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT3 #(
    .INIT(8'h08)) 
    write_sp_i_1
       (.I0(\wptr_ex_reg[3] [1]),
        .I1(\wptr_ex_reg[3] [2]),
        .I2(\wptr_ex[0]_i_2_n_0 ),
        .O(nxt_write_sp));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT5 #(
    .INIT(32'h0F100000)) 
    \xpsr_m_ctl_ex[0]_i_1 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[4]),
        .I3(Q[0]),
        .I4(\instr_de_reg[7]_0 ),
        .O(xpsr_mask_ctl[0]));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT5 #(
    .INIT(32'h00440844)) 
    \xpsr_m_ctl_ex[1]_i_1 
       (.I0(Q[2]),
        .I1(\instr_de_reg[7]_0 ),
        .I2(Q[1]),
        .I3(Q[4]),
        .I4(Q[0]),
        .O(xpsr_mask_ctl[1]));
  LUT4 #(
    .INIT(16'h0020)) 
    \xpsr_m_ctl_ex[2]_i_1 
       (.I0(\instr_de_reg[7]_0 ),
        .I1(Q[1]),
        .I2(Q[4]),
        .I3(Q[0]),
        .O(xpsr_mask_ctl[2]));
  LUT4 #(
    .INIT(16'h0001)) 
    \xpsr_m_ctl_ex[2]_i_2 
       (.I0(Q[7]),
        .I1(Q[6]),
        .I2(Q[3]),
        .I3(Q[5]),
        .O(\instr_de_reg[7]_0 ));
  FDCE \xpsr_m_ctl_ex_reg[0] 
       (.C(HCLK),
        .CE(adv_de_to_ex),
        .CLR(\imm_held_reg[0]_0 ),
        .D(xpsr_mask_ctl[0]),
        .Q(\xpsr_m_ctl_ex_reg[2]_0 [0]));
  FDCE \xpsr_m_ctl_ex_reg[1] 
       (.C(HCLK),
        .CE(adv_de_to_ex),
        .CLR(\imm_held_reg[0]_0 ),
        .D(xpsr_mask_ctl[1]),
        .Q(\xpsr_m_ctl_ex_reg[2]_0 [1]));
  FDCE \xpsr_m_ctl_ex_reg[2] 
       (.C(HCLK),
        .CE(adv_de_to_ex),
        .CLR(\imm_held_reg[0]_0 ),
        .D(xpsr_mask_ctl[2]),
        .Q(\xpsr_m_ctl_ex_reg[2]_0 [2]));
  LUT5 #(
    .INIT(32'hF2F2F000)) 
    zero_a_ex_i_2
       (.I0(\imm_held_reg_n_0_[4] ),
        .I1(Q[5]),
        .I2(Q[14]),
        .I3(Q[13]),
        .I4(\wptr_decoded_reg[1] ),
        .O(\imm_held_reg[4]_0 ));
endmodule

(* ORIG_REF_NAME = "cm1_dp" *) 
module design_1_CORTEXM1_AXI_0_1_cm1_dp
   (irack,
    n_flag,
    \mem_held_addr_reg[0]_0 ,
    \mem_held_addr_reg[1]_0 ,
    mult_out,
    sel_wf_c,
    c_flag_mux,
    c_flag_wf,
    sel_wf_v,
    v_flag_au,
    v_flag_wf,
    \rptr_a_ex_reg[3] ,
    zero_a_ex_reg,
    \pc_reg[30]_0 ,
    zero_a_ex_reg_0,
    zero_a_ex_reg_1,
    zero_a_ex_reg_2,
    zero_a_ex_reg_3,
    zero_a_ex_reg_4,
    \pc_reg[15]_0 ,
    zero_a_ex_reg_5,
    \pc_reg[11]_0 ,
    zero_a_ex_reg_6,
    \mem_held_addr_reg[31]_i_1 ,
    D,
    load_xpsr_ex_reg,
    micro_code_fe_reg,
    Q,
    \pc_reg[23]_0 ,
    \hold_reg1_reg[30]_0 ,
    \mem_held_addr_reg[27]_0 ,
    \mem_held_addr_reg[26]_0 ,
    \mem_held_addr_reg[25]_0 ,
    \mem_held_addr_reg[24]_0 ,
    biu_commit,
    \hold_reg1_reg[31]_0 ,
    m_ext_ex2_reg,
    \mem_held_addr_reg[1]_1 ,
    \hold_reg1_reg[31]_1 ,
    \mem_held_addr_reg[2]_0 ,
    \mem_held_addr_reg[3]_0 ,
    \mem_held_addr_reg[4]_0 ,
    \mem_held_addr_reg[5]_0 ,
    \mem_held_addr_reg[6]_0 ,
    \mem_held_addr_reg[7]_0 ,
    \mem_held_addr_reg[8]_0 ,
    \mem_held_addr_reg[9]_0 ,
    \mem_held_addr_reg[10]_0 ,
    \mem_held_addr_reg[11]_0 ,
    \mem_held_addr_reg[12]_0 ,
    \hold_reg1_reg[13]_0 ,
    \mem_held_addr_reg[14]_0 ,
    \mem_held_addr_reg[20]_0 ,
    \hold_reg1_reg[17]_0 ,
    \hold_reg1_reg[18]_0 ,
    \mem_held_addr_reg[15]_0 ,
    \hold_reg1_reg[22]_0 ,
    \mem_held_addr_reg[19]_0 ,
    \mem_held_addr_reg[21]_0 ,
    \hold_reg1_reg[16]_0 ,
    \mem_held_addr_reg[23]_0 ,
    b_reg_0,
    rd_mux_a_ex_reg,
    rd_mux_a_ex_reg_0,
    rd_mux_a_ex_reg_1,
    rd_mux_a_ex_reg_2,
    rd_mux_a_ex_reg_3,
    rd_mux_a_ex_reg_4,
    ze_half_wb_reg,
    ze_half_wb_reg_0,
    ze_half_wb_reg_1,
    ze_half_wb_reg_2,
    ze_half_wb_reg_3,
    ze_half_wb_reg_4,
    ze_half_wb_reg_5,
    ze_half_wb_reg_6,
    ze_half_wb_reg_7,
    ze_half_wb_reg_8,
    ze_half_wb_reg_9,
    ze_half_wb_reg_10,
    ze_half_wb_reg_11,
    ze_half_wb_reg_12,
    ze_half_wb_reg_13,
    itcm_sel_i_5,
    itcm_sel_i_6,
    \mem_held_addr_reg[19]_i_1 ,
    rd_mux_a_ex_reg_5,
    rd_mux_a_ex_reg_6,
    rd_mux_a_ex_reg_7,
    rd_mux_a_ex_reg_8,
    \mem_held_addr_reg[1]_2 ,
    load_fptr,
    rd_mux_a_ex_reg_9,
    rd_mux_a_ex_reg_10,
    rd_mux_a_ex_reg_11,
    \mem_held_addr_reg[1]_3 ,
    \genblk3[1].ram_block_reg_3_0 ,
    rd_mux_a_ex_reg_12,
    rd_mux_a_ex_reg_13,
    rd_mux_a_ex_reg_14,
    rd_mux_a_ex_reg_15,
    fptr_wdata,
    rd_mux_a_ex_reg_16,
    rd_mux_a_ex_reg_17,
    rd_mux_a_ex_reg_18,
    rd_mux_a_ex_reg_19,
    rd_mux_a_ex_reg_20,
    rd_mux_a_ex_reg_21,
    rd_mux_a_ex_reg_22,
    rd_mux_a_ex_reg_23,
    rd_mux_a_ex_reg_24,
    rd_mux_a_ex_reg_25,
    rd_mux_a_ex_reg_26,
    rd_mux_a_ex_reg_27,
    rd_mux_a_ex_reg_28,
    rd_mux_a_ex_reg_29,
    rd_mux_a_ex_reg_30,
    rd_mux_a_ex_reg_31,
    itcm_sel_reg,
    \mem_held_addr_reg[1]_4 ,
    itcm_sel_reg_0,
    rd_mux_a_ex_reg_32,
    p_1_in2_in,
    \hold_reg2_reg[31]_0 ,
    ls_byte_ex_reg,
    ls_half_ex_reg,
    ls_half_ex_reg_0,
    ls_half_ex_reg_1,
    ls_byte_ex_reg_0,
    ls_half_ex_reg_2,
    DTCMBYTEWR,
    ITCMBYTEWR,
    \hold_reg1_reg[6]_0 ,
    \hold_reg1_reg[7]_0 ,
    \hold_reg1_reg[8]_0 ,
    \hold_reg1_reg[11]_0 ,
    \hold_reg1_reg[12]_0 ,
    \hold_reg1_reg[13]_1 ,
    \hold_reg1_reg[14]_0 ,
    \hold_reg1_reg[15]_0 ,
    \hold_reg1_reg[18]_1 ,
    \hold_reg1_reg[19]_0 ,
    \hold_reg1_reg[20]_0 ,
    \hold_reg1_reg[21]_0 ,
    \hold_reg1_reg[22]_1 ,
    \hold_reg1_reg[26]_0 ,
    \hold_reg1_reg[27]_0 ,
    \rf_mux_ctl_ex_reg[2] ,
    \rot3_reg[0] ,
    m_ext_ex2_reg_0,
    m_ext_ex2_reg_1,
    m_ext_ex2_reg_2,
    m_ext_ex2_reg_3,
    m_ext_ex2_reg_4,
    m_ext_ex2_reg_5,
    m_ext_ex2_reg_6,
    m_ext_ex2_reg_7,
    m_ext_ex2_reg_8,
    m_ext_ex2_reg_9,
    m_ext_ex2_reg_10,
    m_ext_ex2_reg_11,
    \pc_reg[31]_0 ,
    \pc_reg[30]_1 ,
    m_ext_ex2_reg_12,
    m_ext_ex2_reg_13,
    m_ext_ex2_reg_14,
    m_ext_ex2_reg_15,
    \pc_reg[29]_0 ,
    \pc_reg[28]_0 ,
    \pc_reg[25]_0 ,
    \pc_reg[24]_0 ,
    \pc_reg[23]_1 ,
    \pc_reg[22]_0 ,
    \pc_reg[21]_0 ,
    \pc_reg[20]_0 ,
    \pc_reg[19]_0 ,
    \pc_reg[18]_0 ,
    \pc_reg[17]_0 ,
    \pc_reg[16]_0 ,
    \pc_reg[11]_1 ,
    \pc_reg[10]_0 ,
    \pc_reg[9]_0 ,
    \pc_reg[8]_0 ,
    \pc_reg[7]_0 ,
    \pc_reg[6]_0 ,
    \pc_reg[5]_0 ,
    \pc_reg[4]_0 ,
    \hold_reg2_reg[1]_0 ,
    m_ext_ex2_reg_16,
    \i_mult_out_reg[15]__1 ,
    ls_byte_ex_reg_1,
    ls_byte_ex_reg_2,
    \mem_held_addr_reg[31]_i_1_0 ,
    z_flag,
    c_flag,
    v_flag,
    fptr_align_reg,
    m_invert,
    HCLK,
    r_amt4_ex2_reg,
    m_ext,
    r_amt4_ex2_reg_0,
    biu_rdy,
    nxt_itcm_sel,
    nxt_dtcm_sel,
    nxt_irack,
    nxt_drack,
    w_u_fault_reg,
    nxt_dwack,
    update_n_ex,
    rf_wdata,
    write_flags_ex,
    nxt_z_flag_mux,
    O,
    sel_wf_c_reg_0,
    c_flag_mux_reg_0,
    c_flag_wf_reg_0,
    sel_wf_v_reg_0,
    v_flag_au_reg_0,
    v_flag_wf_reg_0,
    rd_mux_a_ex,
    \mem_held_addr_reg[31]_0 ,
    \mem_held_addr_reg[31]_1 ,
    \mem_held_addr_reg[27]_1 ,
    \mem_held_addr_reg[31]_2 ,
    \mem_held_addr_reg[27]_2 ,
    \mem_held_addr_reg[15]_1 ,
    \mem_held_addr_reg[15]_2 ,
    \mem_held_addr_reg[11]_1 ,
    nxt_mult_out0_carry__2,
    \rot3_reg[24] ,
    \rot3_reg[24]_0 ,
    load_xpsr_ex,
    biu_rfault,
    biu_drack,
    use_c_flag_ex,
    force_c_in_ex,
    micro_code_fe,
    mode,
    \pc_reg[23]_2 ,
    \pc_reg[31]_1 ,
    biu_addr_mux_ctl_ex,
    biu_commit_reg_reg,
    biu_commit_reg_reg_0,
    biu_dreq,
    c_flag_mux_reg_1,
    c_flag_mux_reg_2,
    ireq_ldpc,
    dbg_wdata_sel_ex,
    \biu_addr_31_29_reg_reg[29] ,
    en_itcm_core,
    \rot3_reg[24]_1 ,
    \rot3[30]_i_5 ,
    use_imm_ex,
    \hold_reg1_reg[6]_1 ,
    \hold_reg1_reg[6]_2 ,
    \hold_reg1_reg[25]_0 ,
    se_half_wb,
    \hold_reg1_reg[31]_2 ,
    \hold_reg1_reg[31]_3 ,
    ze_half_wb,
    \hold_reg1_reg[30]_1 ,
    z_flag_mux_reg_0,
    \mem_held_addr_reg[23]_1 ,
    \dp_ipsr_1to0_reg[1] ,
    \dp_ipsr_1to0_reg[1]_0 ,
    \hold_reg1[7]_i_7 ,
    doutA,
    \hold_reg1[7]_i_7_0 ,
    \dp_ipsr_1to0_reg[1]_1 ,
    \dp_ipsr_1to0_reg[1]_2 ,
    zero_a_ex,
    au_a_use_pc_ex,
    \wdata_reg[23] ,
    \wdata_reg[15] ,
    \wdata_reg[15]_0 ,
    ls_byte_ex,
    ls_half_ex,
    c_flag_mux_i_4,
    rf0_mux_ctl_ex,
    rf_mux_ctl_ex,
    primask_i_5,
    CO,
    S,
    fptr_align_reg_0,
    fptr_align,
    E,
    \reg_file_a_reg[14][0] ,
    \reg_file_a_reg[13][0] ,
    \reg_file_a_reg[12][0] ,
    \reg_file_a_reg[11][0] ,
    \reg_file_a_reg[10][0] ,
    \reg_file_a_reg[9][0] ,
    \reg_file_a_reg[8][0] ,
    \reg_file_a_reg[7][0] ,
    \reg_file_a_reg[6][0] ,
    \reg_file_a_reg[5][0] ,
    \reg_file_a_reg[4][0] ,
    \reg_file_a_reg[3][0] ,
    \reg_file_a_reg[2][0] ,
    \reg_file_a_reg[1][0] ,
    \reg_file_a_reg[0][0] ,
    \rptr_a_ex_reg[3]_0 ,
    \m_amt_ex2_reg[4] ,
    \hold_reg1_reg[31]_4 ,
    \pc_reg[31]_2 ,
    \hold_reg2_reg[31]_1 ,
    \hold_reg2_reg[31]_2 ,
    w_enable_ex,
    wptr_ex,
    nxt_rptr_b_ex);
  output irack;
  output n_flag;
  output \mem_held_addr_reg[0]_0 ;
  output \mem_held_addr_reg[1]_0 ;
  output [15:0]mult_out;
  output sel_wf_c;
  output c_flag_mux;
  output c_flag_wf;
  output sel_wf_v;
  output v_flag_au;
  output v_flag_wf;
  output [26:0]\rptr_a_ex_reg[3] ;
  output zero_a_ex_reg;
  output [7:0]\pc_reg[30]_0 ;
  output zero_a_ex_reg_0;
  output [0:0]zero_a_ex_reg_1;
  output zero_a_ex_reg_2;
  output [0:0]zero_a_ex_reg_3;
  output zero_a_ex_reg_4;
  output [1:0]\pc_reg[15]_0 ;
  output zero_a_ex_reg_5;
  output [1:0]\pc_reg[11]_0 ;
  output zero_a_ex_reg_6;
  output \mem_held_addr_reg[31]_i_1 ;
  output [7:0]D;
  output load_xpsr_ex_reg;
  output micro_code_fe_reg;
  output [30:0]Q;
  output [22:0]\pc_reg[23]_0 ;
  output \hold_reg1_reg[30]_0 ;
  output \mem_held_addr_reg[27]_0 ;
  output \mem_held_addr_reg[26]_0 ;
  output \mem_held_addr_reg[25]_0 ;
  output \mem_held_addr_reg[24]_0 ;
  output biu_commit;
  output [2:0]\hold_reg1_reg[31]_0 ;
  output m_ext_ex2_reg;
  output \mem_held_addr_reg[1]_1 ;
  output [16:0]\hold_reg1_reg[31]_1 ;
  output \mem_held_addr_reg[2]_0 ;
  output \mem_held_addr_reg[3]_0 ;
  output \mem_held_addr_reg[4]_0 ;
  output \mem_held_addr_reg[5]_0 ;
  output \mem_held_addr_reg[6]_0 ;
  output \mem_held_addr_reg[7]_0 ;
  output \mem_held_addr_reg[8]_0 ;
  output \mem_held_addr_reg[9]_0 ;
  output \mem_held_addr_reg[10]_0 ;
  output \mem_held_addr_reg[11]_0 ;
  output \mem_held_addr_reg[12]_0 ;
  output \hold_reg1_reg[13]_0 ;
  output \mem_held_addr_reg[14]_0 ;
  output \mem_held_addr_reg[20]_0 ;
  output \hold_reg1_reg[17]_0 ;
  output \hold_reg1_reg[18]_0 ;
  output \mem_held_addr_reg[15]_0 ;
  output \hold_reg1_reg[22]_0 ;
  output \mem_held_addr_reg[19]_0 ;
  output \mem_held_addr_reg[21]_0 ;
  output \hold_reg1_reg[16]_0 ;
  output \mem_held_addr_reg[23]_0 ;
  output [31:0]b_reg_0;
  output [6:0]rd_mux_a_ex_reg;
  output rd_mux_a_ex_reg_0;
  output rd_mux_a_ex_reg_1;
  output rd_mux_a_ex_reg_2;
  output rd_mux_a_ex_reg_3;
  output rd_mux_a_ex_reg_4;
  output ze_half_wb_reg;
  output ze_half_wb_reg_0;
  output ze_half_wb_reg_1;
  output ze_half_wb_reg_2;
  output ze_half_wb_reg_3;
  output ze_half_wb_reg_4;
  output ze_half_wb_reg_5;
  output ze_half_wb_reg_6;
  output ze_half_wb_reg_7;
  output ze_half_wb_reg_8;
  output ze_half_wb_reg_9;
  output ze_half_wb_reg_10;
  output ze_half_wb_reg_11;
  output ze_half_wb_reg_12;
  output ze_half_wb_reg_13;
  output itcm_sel_i_5;
  output itcm_sel_i_6;
  output \mem_held_addr_reg[19]_i_1 ;
  output rd_mux_a_ex_reg_5;
  output rd_mux_a_ex_reg_6;
  output rd_mux_a_ex_reg_7;
  output rd_mux_a_ex_reg_8;
  output \mem_held_addr_reg[1]_2 ;
  output load_fptr;
  output rd_mux_a_ex_reg_9;
  output rd_mux_a_ex_reg_10;
  output rd_mux_a_ex_reg_11;
  output \mem_held_addr_reg[1]_3 ;
  output \genblk3[1].ram_block_reg_3_0 ;
  output rd_mux_a_ex_reg_12;
  output rd_mux_a_ex_reg_13;
  output rd_mux_a_ex_reg_14;
  output rd_mux_a_ex_reg_15;
  output fptr_wdata;
  output rd_mux_a_ex_reg_16;
  output rd_mux_a_ex_reg_17;
  output rd_mux_a_ex_reg_18;
  output rd_mux_a_ex_reg_19;
  output rd_mux_a_ex_reg_20;
  output rd_mux_a_ex_reg_21;
  output rd_mux_a_ex_reg_22;
  output rd_mux_a_ex_reg_23;
  output rd_mux_a_ex_reg_24;
  output rd_mux_a_ex_reg_25;
  output rd_mux_a_ex_reg_26;
  output rd_mux_a_ex_reg_27;
  output rd_mux_a_ex_reg_28;
  output rd_mux_a_ex_reg_29;
  output rd_mux_a_ex_reg_30;
  output rd_mux_a_ex_reg_31;
  output itcm_sel_reg;
  output \mem_held_addr_reg[1]_4 ;
  output itcm_sel_reg_0;
  output rd_mux_a_ex_reg_32;
  output [14:0]p_1_in2_in;
  output [20:0]\hold_reg2_reg[31]_0 ;
  output ls_byte_ex_reg;
  output ls_half_ex_reg;
  output ls_half_ex_reg_0;
  output ls_half_ex_reg_1;
  output ls_byte_ex_reg_0;
  output ls_half_ex_reg_2;
  output [3:0]DTCMBYTEWR;
  output [3:0]ITCMBYTEWR;
  output \hold_reg1_reg[6]_0 ;
  output \hold_reg1_reg[7]_0 ;
  output \hold_reg1_reg[8]_0 ;
  output \hold_reg1_reg[11]_0 ;
  output \hold_reg1_reg[12]_0 ;
  output \hold_reg1_reg[13]_1 ;
  output \hold_reg1_reg[14]_0 ;
  output \hold_reg1_reg[15]_0 ;
  output \hold_reg1_reg[18]_1 ;
  output \hold_reg1_reg[19]_0 ;
  output \hold_reg1_reg[20]_0 ;
  output \hold_reg1_reg[21]_0 ;
  output \hold_reg1_reg[22]_1 ;
  output \hold_reg1_reg[26]_0 ;
  output \hold_reg1_reg[27]_0 ;
  output \rf_mux_ctl_ex_reg[2] ;
  output \rot3_reg[0] ;
  output m_ext_ex2_reg_0;
  output m_ext_ex2_reg_1;
  output m_ext_ex2_reg_2;
  output m_ext_ex2_reg_3;
  output m_ext_ex2_reg_4;
  output m_ext_ex2_reg_5;
  output m_ext_ex2_reg_6;
  output m_ext_ex2_reg_7;
  output m_ext_ex2_reg_8;
  output m_ext_ex2_reg_9;
  output m_ext_ex2_reg_10;
  output m_ext_ex2_reg_11;
  output \pc_reg[31]_0 ;
  output \pc_reg[30]_1 ;
  output m_ext_ex2_reg_12;
  output m_ext_ex2_reg_13;
  output m_ext_ex2_reg_14;
  output m_ext_ex2_reg_15;
  output \pc_reg[29]_0 ;
  output \pc_reg[28]_0 ;
  output \pc_reg[25]_0 ;
  output \pc_reg[24]_0 ;
  output \pc_reg[23]_1 ;
  output \pc_reg[22]_0 ;
  output \pc_reg[21]_0 ;
  output \pc_reg[20]_0 ;
  output \pc_reg[19]_0 ;
  output \pc_reg[18]_0 ;
  output \pc_reg[17]_0 ;
  output \pc_reg[16]_0 ;
  output \pc_reg[11]_1 ;
  output \pc_reg[10]_0 ;
  output \pc_reg[9]_0 ;
  output \pc_reg[8]_0 ;
  output \pc_reg[7]_0 ;
  output \pc_reg[6]_0 ;
  output \pc_reg[5]_0 ;
  output \pc_reg[4]_0 ;
  output \hold_reg2_reg[1]_0 ;
  output m_ext_ex2_reg_16;
  output [15:0]\i_mult_out_reg[15]__1 ;
  output ls_byte_ex_reg_1;
  output ls_byte_ex_reg_2;
  output [0:0]\mem_held_addr_reg[31]_i_1_0 ;
  output z_flag;
  output c_flag;
  output v_flag;
  output fptr_align_reg;
  input m_invert;
  input HCLK;
  input r_amt4_ex2_reg;
  input m_ext;
  input r_amt4_ex2_reg_0;
  input biu_rdy;
  input nxt_itcm_sel;
  input nxt_dtcm_sel;
  input nxt_irack;
  input nxt_drack;
  input w_u_fault_reg;
  input nxt_dwack;
  input update_n_ex;
  input [31:0]rf_wdata;
  input write_flags_ex;
  input nxt_z_flag_mux;
  input [3:0]O;
  input sel_wf_c_reg_0;
  input c_flag_mux_reg_0;
  input c_flag_wf_reg_0;
  input sel_wf_v_reg_0;
  input v_flag_au_reg_0;
  input v_flag_wf_reg_0;
  input rd_mux_a_ex;
  input \mem_held_addr_reg[31]_0 ;
  input \mem_held_addr_reg[31]_1 ;
  input \mem_held_addr_reg[27]_1 ;
  input [7:0]\mem_held_addr_reg[31]_2 ;
  input \mem_held_addr_reg[27]_2 ;
  input \mem_held_addr_reg[15]_1 ;
  input \mem_held_addr_reg[15]_2 ;
  input \mem_held_addr_reg[11]_1 ;
  input nxt_mult_out0_carry__2;
  input \rot3_reg[24] ;
  input \rot3_reg[24]_0 ;
  input load_xpsr_ex;
  input biu_rfault;
  input biu_drack;
  input use_c_flag_ex;
  input force_c_in_ex;
  input micro_code_fe;
  input mode;
  input [22:0]\pc_reg[23]_2 ;
  input \pc_reg[31]_1 ;
  input [0:0]biu_addr_mux_ctl_ex;
  input biu_commit_reg_reg;
  input biu_commit_reg_reg_0;
  input biu_dreq;
  input c_flag_mux_reg_1;
  input c_flag_mux_reg_2;
  input ireq_ldpc;
  input dbg_wdata_sel_ex;
  input \biu_addr_31_29_reg_reg[29] ;
  input [1:0]en_itcm_core;
  input \rot3_reg[24]_1 ;
  input [0:0]\rot3[30]_i_5 ;
  input use_imm_ex;
  input \hold_reg1_reg[6]_1 ;
  input \hold_reg1_reg[6]_2 ;
  input [8:0]\hold_reg1_reg[25]_0 ;
  input se_half_wb;
  input \hold_reg1_reg[31]_2 ;
  input \hold_reg1_reg[31]_3 ;
  input ze_half_wb;
  input [1:0]\hold_reg1_reg[30]_1 ;
  input z_flag_mux_reg_0;
  input [19:0]\mem_held_addr_reg[23]_1 ;
  input \dp_ipsr_1to0_reg[1] ;
  input \dp_ipsr_1to0_reg[1]_0 ;
  input [31:0]\hold_reg1[7]_i_7 ;
  input [31:0]doutA;
  input [31:0]\hold_reg1[7]_i_7_0 ;
  input \dp_ipsr_1to0_reg[1]_1 ;
  input \dp_ipsr_1to0_reg[1]_2 ;
  input zero_a_ex;
  input au_a_use_pc_ex;
  input \wdata_reg[23] ;
  input \wdata_reg[15] ;
  input \wdata_reg[15]_0 ;
  input ls_byte_ex;
  input ls_half_ex;
  input c_flag_mux_i_4;
  input [1:0]rf0_mux_ctl_ex;
  input [0:0]rf_mux_ctl_ex;
  input primask_i_5;
  input [0:0]CO;
  input [0:0]S;
  input fptr_align_reg_0;
  input fptr_align;
  input [0:0]E;
  input [0:0]\reg_file_a_reg[14][0] ;
  input [0:0]\reg_file_a_reg[13][0] ;
  input [0:0]\reg_file_a_reg[12][0] ;
  input [0:0]\reg_file_a_reg[11][0] ;
  input [0:0]\reg_file_a_reg[10][0] ;
  input [0:0]\reg_file_a_reg[9][0] ;
  input [0:0]\reg_file_a_reg[8][0] ;
  input [0:0]\reg_file_a_reg[7][0] ;
  input [0:0]\reg_file_a_reg[6][0] ;
  input [0:0]\reg_file_a_reg[5][0] ;
  input [0:0]\reg_file_a_reg[4][0] ;
  input [0:0]\reg_file_a_reg[3][0] ;
  input [0:0]\reg_file_a_reg[2][0] ;
  input [0:0]\reg_file_a_reg[1][0] ;
  input [0:0]\reg_file_a_reg[0][0] ;
  input [3:0]\rptr_a_ex_reg[3]_0 ;
  input [4:0]\m_amt_ex2_reg[4] ;
  input [0:0]\hold_reg1_reg[31]_4 ;
  input [0:0]\pc_reg[31]_2 ;
  input [0:0]\hold_reg2_reg[31]_1 ;
  input [31:0]\hold_reg2_reg[31]_2 ;
  input w_enable_ex;
  input [3:0]wptr_ex;
  input [3:0]nxt_rptr_b_ex;

  wire [0:0]CO;
  wire [7:0]D;
  wire [3:0]DTCMBYTEWR;
  wire [0:0]E;
  wire HCLK;
  wire [3:0]ITCMBYTEWR;
  wire [3:0]O;
  wire [30:0]Q;
  wire [0:0]S;
  wire [27:12]a_reg_0;
  wire au_a_use_pc_ex;
  wire [31:0]b_reg_0;
  wire \biu_addr_31_29_reg_reg[29] ;
  wire [0:0]biu_addr_mux_ctl_ex;
  wire biu_commit;
  wire biu_commit_reg_i_3_n_0;
  wire biu_commit_reg_i_4_n_0;
  wire biu_commit_reg_i_7_n_0;
  wire biu_commit_reg_i_8_n_0;
  wire biu_commit_reg_i_9_n_0;
  wire biu_commit_reg_reg;
  wire biu_commit_reg_reg_0;
  wire biu_drack;
  wire biu_dreq;
  wire biu_rdy;
  wire biu_rfault;
  wire c_flag;
  wire c_flag_mux;
  wire c_flag_mux_i_4;
  wire c_flag_mux_reg_0;
  wire c_flag_mux_reg_1;
  wire c_flag_mux_reg_2;
  wire c_flag_wf;
  wire c_flag_wf_reg_0;
  wire carry_in_ex;
  wire dbg_wdata_sel_ex;
  wire [31:0]doutA;
  wire \dp_ipsr_1to0_reg[1] ;
  wire \dp_ipsr_1to0_reg[1]_0 ;
  wire \dp_ipsr_1to0_reg[1]_1 ;
  wire \dp_ipsr_1to0_reg[1]_2 ;
  wire [1:0]en_itcm_core;
  wire force_c_in_ex;
  wire fptr_align;
  wire fptr_align_reg;
  wire fptr_align_reg_0;
  wire fptr_wdata;
  wire \genblk3[1].ram_block_reg_3_0 ;
  wire hi_pre_fetch_addr_i_5_n_0;
  wire hi_pre_fetch_addr_reg_i_2_n_0;
  wire hi_pre_fetch_addr_reg_i_2_n_1;
  wire hi_pre_fetch_addr_reg_i_2_n_2;
  wire hi_pre_fetch_addr_reg_i_2_n_3;
  wire [27:6]hold_reg1;
  wire [31:0]\hold_reg1[7]_i_7 ;
  wire [31:0]\hold_reg1[7]_i_7_0 ;
  wire \hold_reg1_reg[11]_0 ;
  wire \hold_reg1_reg[12]_0 ;
  wire \hold_reg1_reg[13]_0 ;
  wire \hold_reg1_reg[13]_1 ;
  wire \hold_reg1_reg[14]_0 ;
  wire \hold_reg1_reg[15]_0 ;
  wire \hold_reg1_reg[16]_0 ;
  wire \hold_reg1_reg[17]_0 ;
  wire \hold_reg1_reg[18]_0 ;
  wire \hold_reg1_reg[18]_1 ;
  wire \hold_reg1_reg[19]_0 ;
  wire \hold_reg1_reg[20]_0 ;
  wire \hold_reg1_reg[21]_0 ;
  wire \hold_reg1_reg[22]_0 ;
  wire \hold_reg1_reg[22]_1 ;
  wire [8:0]\hold_reg1_reg[25]_0 ;
  wire \hold_reg1_reg[26]_0 ;
  wire \hold_reg1_reg[27]_0 ;
  wire \hold_reg1_reg[30]_0 ;
  wire [1:0]\hold_reg1_reg[30]_1 ;
  wire [2:0]\hold_reg1_reg[31]_0 ;
  wire [16:0]\hold_reg1_reg[31]_1 ;
  wire \hold_reg1_reg[31]_2 ;
  wire \hold_reg1_reg[31]_3 ;
  wire [0:0]\hold_reg1_reg[31]_4 ;
  wire \hold_reg1_reg[6]_0 ;
  wire \hold_reg1_reg[6]_1 ;
  wire \hold_reg1_reg[6]_2 ;
  wire \hold_reg1_reg[7]_0 ;
  wire \hold_reg1_reg[8]_0 ;
  wire [22:8]hold_reg2;
  wire \hold_reg2_reg[1]_0 ;
  wire [20:0]\hold_reg2_reg[31]_0 ;
  wire [0:0]\hold_reg2_reg[31]_1 ;
  wire [31:0]\hold_reg2_reg[31]_2 ;
  wire [15:0]\i_mult_out_reg[15]__1 ;
  wire irack;
  wire ireq_ldpc;
  wire itcm_sel_i_5;
  wire itcm_sel_i_6;
  wire itcm_sel_reg;
  wire itcm_sel_reg_0;
  wire load_fptr;
  wire load_xpsr_ex;
  wire load_xpsr_ex_reg;
  wire ls_byte_ex;
  wire ls_byte_ex_reg;
  wire ls_byte_ex_reg_0;
  wire ls_byte_ex_reg_1;
  wire ls_byte_ex_reg_2;
  wire ls_half_ex;
  wire ls_half_ex_reg;
  wire ls_half_ex_reg_0;
  wire ls_half_ex_reg_1;
  wire ls_half_ex_reg_2;
  wire [4:0]\m_amt_ex2_reg[4] ;
  wire m_ext;
  wire m_ext_ex2_reg;
  wire m_ext_ex2_reg_0;
  wire m_ext_ex2_reg_1;
  wire m_ext_ex2_reg_10;
  wire m_ext_ex2_reg_11;
  wire m_ext_ex2_reg_12;
  wire m_ext_ex2_reg_13;
  wire m_ext_ex2_reg_14;
  wire m_ext_ex2_reg_15;
  wire m_ext_ex2_reg_16;
  wire m_ext_ex2_reg_2;
  wire m_ext_ex2_reg_3;
  wire m_ext_ex2_reg_4;
  wire m_ext_ex2_reg_5;
  wire m_ext_ex2_reg_6;
  wire m_ext_ex2_reg_7;
  wire m_ext_ex2_reg_8;
  wire m_ext_ex2_reg_9;
  wire m_invert;
  wire \mem_held_addr_reg[0]_0 ;
  wire \mem_held_addr_reg[10]_0 ;
  wire \mem_held_addr_reg[11]_0 ;
  wire \mem_held_addr_reg[11]_1 ;
  wire \mem_held_addr_reg[12]_0 ;
  wire \mem_held_addr_reg[14]_0 ;
  wire \mem_held_addr_reg[15]_0 ;
  wire \mem_held_addr_reg[15]_1 ;
  wire \mem_held_addr_reg[15]_2 ;
  wire \mem_held_addr_reg[19]_0 ;
  wire \mem_held_addr_reg[19]_i_1 ;
  wire \mem_held_addr_reg[1]_0 ;
  wire \mem_held_addr_reg[1]_1 ;
  wire \mem_held_addr_reg[1]_2 ;
  wire \mem_held_addr_reg[1]_3 ;
  wire \mem_held_addr_reg[1]_4 ;
  wire \mem_held_addr_reg[20]_0 ;
  wire \mem_held_addr_reg[21]_0 ;
  wire \mem_held_addr_reg[23]_0 ;
  wire [19:0]\mem_held_addr_reg[23]_1 ;
  wire \mem_held_addr_reg[24]_0 ;
  wire \mem_held_addr_reg[25]_0 ;
  wire \mem_held_addr_reg[26]_0 ;
  wire \mem_held_addr_reg[27]_0 ;
  wire \mem_held_addr_reg[27]_1 ;
  wire \mem_held_addr_reg[27]_2 ;
  wire \mem_held_addr_reg[2]_0 ;
  wire \mem_held_addr_reg[31]_0 ;
  wire \mem_held_addr_reg[31]_1 ;
  wire [7:0]\mem_held_addr_reg[31]_2 ;
  wire \mem_held_addr_reg[31]_i_1 ;
  wire [0:0]\mem_held_addr_reg[31]_i_1_0 ;
  wire \mem_held_addr_reg[3]_0 ;
  wire \mem_held_addr_reg[4]_0 ;
  wire \mem_held_addr_reg[5]_0 ;
  wire \mem_held_addr_reg[6]_0 ;
  wire \mem_held_addr_reg[7]_0 ;
  wire \mem_held_addr_reg[8]_0 ;
  wire \mem_held_addr_reg[9]_0 ;
  wire \mem_held_addr_reg_n_0_[10] ;
  wire \mem_held_addr_reg_n_0_[11] ;
  wire \mem_held_addr_reg_n_0_[12] ;
  wire \mem_held_addr_reg_n_0_[13] ;
  wire \mem_held_addr_reg_n_0_[14] ;
  wire \mem_held_addr_reg_n_0_[15] ;
  wire \mem_held_addr_reg_n_0_[16] ;
  wire \mem_held_addr_reg_n_0_[17] ;
  wire \mem_held_addr_reg_n_0_[18] ;
  wire \mem_held_addr_reg_n_0_[19] ;
  wire \mem_held_addr_reg_n_0_[20] ;
  wire \mem_held_addr_reg_n_0_[21] ;
  wire \mem_held_addr_reg_n_0_[22] ;
  wire \mem_held_addr_reg_n_0_[23] ;
  wire \mem_held_addr_reg_n_0_[24] ;
  wire \mem_held_addr_reg_n_0_[25] ;
  wire \mem_held_addr_reg_n_0_[26] ;
  wire \mem_held_addr_reg_n_0_[27] ;
  wire \mem_held_addr_reg_n_0_[28] ;
  wire \mem_held_addr_reg_n_0_[29] ;
  wire \mem_held_addr_reg_n_0_[2] ;
  wire \mem_held_addr_reg_n_0_[30] ;
  wire \mem_held_addr_reg_n_0_[31] ;
  wire \mem_held_addr_reg_n_0_[3] ;
  wire \mem_held_addr_reg_n_0_[4] ;
  wire \mem_held_addr_reg_n_0_[5] ;
  wire \mem_held_addr_reg_n_0_[6] ;
  wire \mem_held_addr_reg_n_0_[7] ;
  wire \mem_held_addr_reg_n_0_[8] ;
  wire \mem_held_addr_reg_n_0_[9] ;
  wire [31:16]mem_r_data_s;
  wire [1:1]mem_r_data_u;
  wire micro_code_fe;
  wire micro_code_fe_reg;
  wire mode;
  wire [15:0]mult_out;
  wire n_flag;
  wire [31:0]n_rot3;
  wire nxt_drack;
  wire nxt_dtcm_sel;
  wire nxt_dwack;
  wire nxt_irack;
  wire nxt_itcm_sel;
  wire nxt_mult_out0_carry__2;
  wire [3:0]nxt_rptr_b_ex;
  wire nxt_z_flag_mux;
  wire [31:24]p_0_in__0;
  wire [14:0]p_1_in2_in;
  wire \pc[28]_i_2_n_0 ;
  wire \pc[29]_i_2_n_0 ;
  wire \pc[31]_i_5_n_0 ;
  wire \pc_reg[10]_0 ;
  wire [1:0]\pc_reg[11]_0 ;
  wire \pc_reg[11]_1 ;
  wire \pc_reg[11]_i_2_n_0 ;
  wire \pc_reg[11]_i_2_n_1 ;
  wire \pc_reg[11]_i_2_n_2 ;
  wire \pc_reg[11]_i_2_n_3 ;
  wire [1:0]\pc_reg[15]_0 ;
  wire \pc_reg[15]_i_2_n_0 ;
  wire \pc_reg[15]_i_2_n_1 ;
  wire \pc_reg[15]_i_2_n_2 ;
  wire \pc_reg[15]_i_2_n_3 ;
  wire \pc_reg[16]_0 ;
  wire \pc_reg[17]_0 ;
  wire \pc_reg[18]_0 ;
  wire \pc_reg[19]_0 ;
  wire \pc_reg[19]_i_2_n_0 ;
  wire \pc_reg[19]_i_2_n_1 ;
  wire \pc_reg[19]_i_2_n_2 ;
  wire \pc_reg[19]_i_2_n_3 ;
  wire \pc_reg[20]_0 ;
  wire \pc_reg[21]_0 ;
  wire \pc_reg[22]_0 ;
  wire [22:0]\pc_reg[23]_0 ;
  wire \pc_reg[23]_1 ;
  wire [22:0]\pc_reg[23]_2 ;
  wire \pc_reg[23]_i_2_n_0 ;
  wire \pc_reg[23]_i_2_n_1 ;
  wire \pc_reg[23]_i_2_n_2 ;
  wire \pc_reg[23]_i_2_n_3 ;
  wire \pc_reg[24]_0 ;
  wire \pc_reg[25]_0 ;
  wire \pc_reg[27]_i_2_n_0 ;
  wire \pc_reg[27]_i_2_n_1 ;
  wire \pc_reg[27]_i_2_n_2 ;
  wire \pc_reg[27]_i_2_n_3 ;
  wire \pc_reg[28]_0 ;
  wire \pc_reg[29]_0 ;
  wire [7:0]\pc_reg[30]_0 ;
  wire \pc_reg[30]_1 ;
  wire \pc_reg[31]_0 ;
  wire \pc_reg[31]_1 ;
  wire [0:0]\pc_reg[31]_2 ;
  wire \pc_reg[31]_i_4_n_1 ;
  wire \pc_reg[31]_i_4_n_2 ;
  wire \pc_reg[31]_i_4_n_3 ;
  wire \pc_reg[4]_0 ;
  wire \pc_reg[5]_0 ;
  wire \pc_reg[6]_0 ;
  wire \pc_reg[7]_0 ;
  wire \pc_reg[7]_i_2_n_0 ;
  wire \pc_reg[7]_i_2_n_1 ;
  wire \pc_reg[7]_i_2_n_2 ;
  wire \pc_reg[7]_i_2_n_3 ;
  wire \pc_reg[8]_0 ;
  wire \pc_reg[9]_0 ;
  wire primask_i_5;
  wire r_amt4_ex2_reg;
  wire r_amt4_ex2_reg_0;
  wire rd_mux_a_ex;
  wire [6:0]rd_mux_a_ex_reg;
  wire rd_mux_a_ex_reg_0;
  wire rd_mux_a_ex_reg_1;
  wire rd_mux_a_ex_reg_10;
  wire rd_mux_a_ex_reg_11;
  wire rd_mux_a_ex_reg_12;
  wire rd_mux_a_ex_reg_13;
  wire rd_mux_a_ex_reg_14;
  wire rd_mux_a_ex_reg_15;
  wire rd_mux_a_ex_reg_16;
  wire rd_mux_a_ex_reg_17;
  wire rd_mux_a_ex_reg_18;
  wire rd_mux_a_ex_reg_19;
  wire rd_mux_a_ex_reg_2;
  wire rd_mux_a_ex_reg_20;
  wire rd_mux_a_ex_reg_21;
  wire rd_mux_a_ex_reg_22;
  wire rd_mux_a_ex_reg_23;
  wire rd_mux_a_ex_reg_24;
  wire rd_mux_a_ex_reg_25;
  wire rd_mux_a_ex_reg_26;
  wire rd_mux_a_ex_reg_27;
  wire rd_mux_a_ex_reg_28;
  wire rd_mux_a_ex_reg_29;
  wire rd_mux_a_ex_reg_3;
  wire rd_mux_a_ex_reg_30;
  wire rd_mux_a_ex_reg_31;
  wire rd_mux_a_ex_reg_32;
  wire rd_mux_a_ex_reg_4;
  wire rd_mux_a_ex_reg_5;
  wire rd_mux_a_ex_reg_6;
  wire rd_mux_a_ex_reg_7;
  wire rd_mux_a_ex_reg_8;
  wire rd_mux_a_ex_reg_9;
  wire [0:0]\reg_file_a_reg[0][0] ;
  wire [0:0]\reg_file_a_reg[10][0] ;
  wire [0:0]\reg_file_a_reg[11][0] ;
  wire [0:0]\reg_file_a_reg[12][0] ;
  wire [0:0]\reg_file_a_reg[13][0] ;
  wire [0:0]\reg_file_a_reg[14][0] ;
  wire [0:0]\reg_file_a_reg[1][0] ;
  wire [0:0]\reg_file_a_reg[2][0] ;
  wire [0:0]\reg_file_a_reg[3][0] ;
  wire [0:0]\reg_file_a_reg[4][0] ;
  wire [0:0]\reg_file_a_reg[5][0] ;
  wire [0:0]\reg_file_a_reg[6][0] ;
  wire [0:0]\reg_file_a_reg[7][0] ;
  wire [0:0]\reg_file_a_reg[8][0] ;
  wire [0:0]\reg_file_a_reg[9][0] ;
  wire [1:0]rf0_mux_ctl_ex;
  wire [0:0]rf_mux_ctl_ex;
  wire \rf_mux_ctl_ex_reg[2] ;
  wire [31:0]rf_wdata;
  wire [0:0]\rot3[30]_i_5 ;
  wire \rot3_reg[0] ;
  wire \rot3_reg[24] ;
  wire \rot3_reg[24]_0 ;
  wire \rot3_reg[24]_1 ;
  wire [26:0]\rptr_a_ex_reg[3] ;
  wire [3:0]\rptr_a_ex_reg[3]_0 ;
  wire se_half_wb;
  wire sel_wf_c;
  wire sel_wf_c_reg_0;
  wire sel_wf_v;
  wire sel_wf_v_reg_0;
  wire sel_wf_z;
  wire [31:24]seq_fetch_addr;
  wire u_alu_dec_n_0;
  wire u_alu_dec_n_1;
  wire update_n_ex;
  wire use_c_flag_ex;
  wire use_imm_ex;
  wire v_flag;
  wire v_flag_au;
  wire v_flag_au_reg_0;
  wire v_flag_wf;
  wire v_flag_wf_reg_0;
  wire w_enable_ex;
  wire w_u_fault_reg;
  wire \wdata_reg[15] ;
  wire \wdata_reg[15]_0 ;
  wire \wdata_reg[23] ;
  wire [3:0]wptr_ex;
  wire write_flags_ex;
  wire z_flag;
  wire z_flag_mux;
  wire z_flag_mux_i_10_n_0;
  wire z_flag_mux_i_26_n_0;
  wire z_flag_mux_i_27_n_0;
  wire z_flag_mux_i_8_n_0;
  wire z_flag_mux_reg_0;
  wire z_flag_wf;
  wire ze_half_wb;
  wire ze_half_wb_reg;
  wire ze_half_wb_reg_0;
  wire ze_half_wb_reg_1;
  wire ze_half_wb_reg_10;
  wire ze_half_wb_reg_11;
  wire ze_half_wb_reg_12;
  wire ze_half_wb_reg_13;
  wire ze_half_wb_reg_2;
  wire ze_half_wb_reg_3;
  wire ze_half_wb_reg_4;
  wire ze_half_wb_reg_5;
  wire ze_half_wb_reg_6;
  wire ze_half_wb_reg_7;
  wire ze_half_wb_reg_8;
  wire ze_half_wb_reg_9;
  wire zero_a_ex;
  wire zero_a_ex_reg;
  wire zero_a_ex_reg_0;
  wire [0:0]zero_a_ex_reg_1;
  wire zero_a_ex_reg_2;
  wire [0:0]zero_a_ex_reg_3;
  wire zero_a_ex_reg_4;
  wire zero_a_ex_reg_5;
  wire zero_a_ex_reg_6;
  wire [0:0]NLW_hi_pre_fetch_addr_reg_i_2_O_UNCONNECTED;
  wire [3:3]\NLW_pc_reg[31]_i_4_CO_UNCONNECTED ;

  (* SOFT_HLUTNM = "soft_lutpair246" *) 
  LUT3 #(
    .INIT(8'hA3)) 
    \HADDR[28]_i_1 
       (.I0(D[4]),
        .I1(\pc[28]_i_2_n_0 ),
        .I2(biu_addr_mux_ctl_ex),
        .O(\hold_reg1_reg[31]_0 [0]));
  (* SOFT_HLUTNM = "soft_lutpair244" *) 
  LUT3 #(
    .INIT(8'hA3)) 
    \HADDR[29]_i_1 
       (.I0(D[5]),
        .I1(\pc[29]_i_2_n_0 ),
        .I2(biu_addr_mux_ctl_ex),
        .O(\hold_reg1_reg[31]_0 [1]));
  (* SOFT_HLUTNM = "soft_lutpair245" *) 
  LUT3 #(
    .INIT(8'hA3)) 
    \biu_addr_31_29_reg[31]_i_1 
       (.I0(D[7]),
        .I1(\pc[31]_i_5_n_0 ),
        .I2(biu_addr_mux_ctl_ex),
        .O(\hold_reg1_reg[31]_0 [2]));
  LUT4 #(
    .INIT(16'hFFFD)) 
    biu_commit_reg_i_3
       (.I0(\hold_reg1_reg[30]_0 ),
        .I1(\mem_held_addr_reg[20]_0 ),
        .I2(\hold_reg1_reg[17]_0 ),
        .I3(biu_commit_reg_i_7_n_0),
        .O(biu_commit_reg_i_3_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF07A7)) 
    biu_commit_reg_i_4
       (.I0(\pc[29]_i_2_n_0 ),
        .I1(en_itcm_core[1]),
        .I2(\pc[28]_i_2_n_0 ),
        .I3(en_itcm_core[0]),
        .I4(biu_commit_reg_i_8_n_0),
        .I5(biu_commit_reg_i_9_n_0),
        .O(biu_commit_reg_i_4_n_0));
  LUT4 #(
    .INIT(16'hFFEF)) 
    biu_commit_reg_i_7
       (.I0(\mem_held_addr_reg[27]_0 ),
        .I1(\mem_held_addr_reg[24]_0 ),
        .I2(\pc[31]_i_5_n_0 ),
        .I3(\hold_reg1_reg[18]_0 ),
        .O(biu_commit_reg_i_7_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    biu_commit_reg_i_8
       (.I0(\mem_held_addr_reg[26]_0 ),
        .I1(\mem_held_addr_reg[25]_0 ),
        .I2(\hold_reg1_reg[16]_0 ),
        .I3(\mem_held_addr_reg[23]_0 ),
        .O(biu_commit_reg_i_8_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    biu_commit_reg_i_9
       (.I0(\mem_held_addr_reg[15]_0 ),
        .I1(\hold_reg1_reg[22]_0 ),
        .I2(\mem_held_addr_reg[19]_0 ),
        .I3(\mem_held_addr_reg[21]_0 ),
        .O(biu_commit_reg_i_9_n_0));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    c_flag_mux_i_7
       (.I0(c_flag_wf),
        .I1(sel_wf_c),
        .I2(c_flag_mux),
        .I3(use_c_flag_ex),
        .I4(force_c_in_ex),
        .O(carry_in_ex));
  FDCE c_flag_mux_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(r_amt4_ex2_reg),
        .D(c_flag_mux_reg_0),
        .Q(c_flag_mux));
  FDCE c_flag_wf_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(r_amt4_ex2_reg),
        .D(c_flag_wf_reg_0),
        .Q(c_flag_wf));
  LUT2 #(
    .INIT(4'h2)) 
    \dp_ipsr_1to0[1]_i_27 
       (.I0(\hold_reg2_reg[31]_0 [1]),
        .I1(dbg_wdata_sel_ex),
        .O(\hold_reg2_reg[1]_0 ));
  LUT6 #(
    .INIT(64'h0000400000000000)) 
    excpt_ret_de_i_2
       (.I0(micro_code_fe),
        .I1(Q[27]),
        .I2(Q[28]),
        .I3(Q[30]),
        .I4(mode),
        .I5(Q[29]),
        .O(micro_code_fe_reg));
  LUT6 #(
    .INIT(64'h000A00CF000A00C0)) 
    \genblk3[1].ram_block_reg_0_0_i_20 
       (.I0(\mem_held_addr_reg_n_0_[14] ),
        .I1(hold_reg1[14]),
        .I2(ireq_ldpc),
        .I3(dbg_wdata_sel_ex),
        .I4(\biu_addr_31_29_reg_reg[29] ),
        .I5(\pc_reg[23]_0 [13]),
        .O(\mem_held_addr_reg[14]_0 ));
  LUT6 #(
    .INIT(64'h000F00CA000000CA)) 
    \genblk3[1].ram_block_reg_0_0_i_21 
       (.I0(\pc_reg[23]_0 [12]),
        .I1(hold_reg1[13]),
        .I2(ireq_ldpc),
        .I3(dbg_wdata_sel_ex),
        .I4(\biu_addr_31_29_reg_reg[29] ),
        .I5(\mem_held_addr_reg_n_0_[13] ),
        .O(\hold_reg1_reg[13]_0 ));
  LUT6 #(
    .INIT(64'h000A00CF000A00C0)) 
    \genblk3[1].ram_block_reg_0_0_i_22 
       (.I0(\mem_held_addr_reg_n_0_[12] ),
        .I1(hold_reg1[12]),
        .I2(ireq_ldpc),
        .I3(dbg_wdata_sel_ex),
        .I4(\biu_addr_31_29_reg_reg[29] ),
        .I5(\pc_reg[23]_0 [11]),
        .O(\mem_held_addr_reg[12]_0 ));
  LUT6 #(
    .INIT(64'h000A00CF000A00C0)) 
    \genblk3[1].ram_block_reg_0_0_i_23 
       (.I0(\mem_held_addr_reg_n_0_[11] ),
        .I1(hold_reg1[11]),
        .I2(ireq_ldpc),
        .I3(dbg_wdata_sel_ex),
        .I4(\biu_addr_31_29_reg_reg[29] ),
        .I5(\pc_reg[23]_0 [10]),
        .O(\mem_held_addr_reg[11]_0 ));
  LUT6 #(
    .INIT(64'h000A00CF000A00C0)) 
    \genblk3[1].ram_block_reg_0_0_i_24 
       (.I0(\mem_held_addr_reg_n_0_[10] ),
        .I1(\hold_reg1_reg[31]_1 [7]),
        .I2(ireq_ldpc),
        .I3(dbg_wdata_sel_ex),
        .I4(\biu_addr_31_29_reg_reg[29] ),
        .I5(\pc_reg[23]_0 [9]),
        .O(\mem_held_addr_reg[10]_0 ));
  LUT6 #(
    .INIT(64'h000A00CF000A00C0)) 
    \genblk3[1].ram_block_reg_0_0_i_25 
       (.I0(\mem_held_addr_reg_n_0_[9] ),
        .I1(\hold_reg1_reg[31]_1 [6]),
        .I2(ireq_ldpc),
        .I3(dbg_wdata_sel_ex),
        .I4(\biu_addr_31_29_reg_reg[29] ),
        .I5(\pc_reg[23]_0 [8]),
        .O(\mem_held_addr_reg[9]_0 ));
  LUT6 #(
    .INIT(64'h000A00CF000A00C0)) 
    \genblk3[1].ram_block_reg_0_0_i_26 
       (.I0(\mem_held_addr_reg_n_0_[8] ),
        .I1(hold_reg1[8]),
        .I2(ireq_ldpc),
        .I3(dbg_wdata_sel_ex),
        .I4(\biu_addr_31_29_reg_reg[29] ),
        .I5(\pc_reg[23]_0 [7]),
        .O(\mem_held_addr_reg[8]_0 ));
  LUT6 #(
    .INIT(64'h000A00CF000A00C0)) 
    \genblk3[1].ram_block_reg_0_0_i_27 
       (.I0(\mem_held_addr_reg_n_0_[7] ),
        .I1(hold_reg1[7]),
        .I2(ireq_ldpc),
        .I3(dbg_wdata_sel_ex),
        .I4(\biu_addr_31_29_reg_reg[29] ),
        .I5(\pc_reg[23]_0 [6]),
        .O(\mem_held_addr_reg[7]_0 ));
  LUT6 #(
    .INIT(64'h000A00CF000A00C0)) 
    \genblk3[1].ram_block_reg_0_0_i_28 
       (.I0(\mem_held_addr_reg_n_0_[6] ),
        .I1(hold_reg1[6]),
        .I2(ireq_ldpc),
        .I3(dbg_wdata_sel_ex),
        .I4(\biu_addr_31_29_reg_reg[29] ),
        .I5(\pc_reg[23]_0 [5]),
        .O(\mem_held_addr_reg[6]_0 ));
  LUT6 #(
    .INIT(64'h000A00FC000A000C)) 
    \genblk3[1].ram_block_reg_0_0_i_29 
       (.I0(\mem_held_addr_reg_n_0_[5] ),
        .I1(\pc_reg[23]_0 [4]),
        .I2(ireq_ldpc),
        .I3(dbg_wdata_sel_ex),
        .I4(\biu_addr_31_29_reg_reg[29] ),
        .I5(\hold_reg1_reg[31]_1 [5]),
        .O(\mem_held_addr_reg[5]_0 ));
  LUT6 #(
    .INIT(64'h000A00CF000A00C0)) 
    \genblk3[1].ram_block_reg_0_0_i_30 
       (.I0(\mem_held_addr_reg_n_0_[4] ),
        .I1(\hold_reg1_reg[31]_1 [4]),
        .I2(ireq_ldpc),
        .I3(dbg_wdata_sel_ex),
        .I4(\biu_addr_31_29_reg_reg[29] ),
        .I5(\pc_reg[23]_0 [3]),
        .O(\mem_held_addr_reg[4]_0 ));
  LUT6 #(
    .INIT(64'h000A00CF000A00C0)) 
    \genblk3[1].ram_block_reg_0_0_i_31 
       (.I0(\mem_held_addr_reg_n_0_[3] ),
        .I1(\hold_reg1_reg[31]_1 [3]),
        .I2(ireq_ldpc),
        .I3(dbg_wdata_sel_ex),
        .I4(\biu_addr_31_29_reg_reg[29] ),
        .I5(\pc_reg[23]_0 [2]),
        .O(\mem_held_addr_reg[3]_0 ));
  LUT6 #(
    .INIT(64'h000A00CF000A00C0)) 
    \genblk3[1].ram_block_reg_0_0_i_32 
       (.I0(\mem_held_addr_reg_n_0_[2] ),
        .I1(\hold_reg1_reg[31]_1 [2]),
        .I2(ireq_ldpc),
        .I3(dbg_wdata_sel_ex),
        .I4(\biu_addr_31_29_reg_reg[29] ),
        .I5(\pc_reg[23]_0 [1]),
        .O(\mem_held_addr_reg[2]_0 ));
  LUT6 #(
    .INIT(64'h000A00CF000A00C0)) 
    hi_pre_fetch_addr_i_4
       (.I0(\mem_held_addr_reg[1]_0 ),
        .I1(\hold_reg1_reg[31]_1 [1]),
        .I2(ireq_ldpc),
        .I3(dbg_wdata_sel_ex),
        .I4(\biu_addr_31_29_reg_reg[29] ),
        .I5(\pc_reg[23]_0 [0]),
        .O(\mem_held_addr_reg[1]_1 ));
  LUT1 #(
    .INIT(2'h1)) 
    hi_pre_fetch_addr_i_5
       (.I0(Q[0]),
        .O(hi_pre_fetch_addr_i_5_n_0));
  CARRY4 hi_pre_fetch_addr_reg_i_2
       (.CI(1'b0),
        .CO({hi_pre_fetch_addr_reg_i_2_n_0,hi_pre_fetch_addr_reg_i_2_n_1,hi_pre_fetch_addr_reg_i_2_n_2,hi_pre_fetch_addr_reg_i_2_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,Q[0],1'b0}),
        .O({\pc_reg[23]_0 [2:0],NLW_hi_pre_fetch_addr_reg_i_2_O_UNCONNECTED[0]}),
        .S({Q[2:1],hi_pre_fetch_addr_i_5_n_0,1'b0}));
  FDCE \hold_reg1_reg[0] 
       (.C(HCLK),
        .CE(\hold_reg1_reg[31]_4 ),
        .CLR(r_amt4_ex2_reg),
        .D(rd_mux_a_ex_reg[0]),
        .Q(\hold_reg1_reg[31]_1 [0]));
  FDCE \hold_reg1_reg[10] 
       (.C(HCLK),
        .CE(\hold_reg1_reg[31]_4 ),
        .CLR(r_amt4_ex2_reg),
        .D(\hold_reg1_reg[25]_0 [2]),
        .Q(\hold_reg1_reg[31]_1 [7]));
  FDCE \hold_reg1_reg[11] 
       (.C(HCLK),
        .CE(\hold_reg1_reg[31]_4 ),
        .CLR(r_amt4_ex2_reg),
        .D(\hold_reg1_reg[25]_0 [3]),
        .Q(hold_reg1[11]));
  FDCE \hold_reg1_reg[12] 
       (.C(HCLK),
        .CE(\hold_reg1_reg[31]_4 ),
        .CLR(r_amt4_ex2_reg),
        .D(\hold_reg1_reg[25]_0 [4]),
        .Q(hold_reg1[12]));
  FDCE \hold_reg1_reg[13] 
       (.C(HCLK),
        .CE(\hold_reg1_reg[31]_4 ),
        .CLR(r_amt4_ex2_reg),
        .D(\hold_reg1_reg[25]_0 [5]),
        .Q(hold_reg1[13]));
  FDCE \hold_reg1_reg[14] 
       (.C(HCLK),
        .CE(\hold_reg1_reg[31]_4 ),
        .CLR(r_amt4_ex2_reg),
        .D(\hold_reg1_reg[25]_0 [6]),
        .Q(hold_reg1[14]));
  FDCE \hold_reg1_reg[15] 
       (.C(HCLK),
        .CE(\hold_reg1_reg[31]_4 ),
        .CLR(r_amt4_ex2_reg),
        .D(\hold_reg1_reg[25]_0 [7]),
        .Q(hold_reg1[15]));
  FDCE \hold_reg1_reg[16] 
       (.C(HCLK),
        .CE(\hold_reg1_reg[31]_4 ),
        .CLR(r_amt4_ex2_reg),
        .D(mem_r_data_s[16]),
        .Q(\hold_reg1_reg[31]_1 [8]));
  FDCE \hold_reg1_reg[17] 
       (.C(HCLK),
        .CE(\hold_reg1_reg[31]_4 ),
        .CLR(r_amt4_ex2_reg),
        .D(mem_r_data_s[17]),
        .Q(\hold_reg1_reg[31]_1 [9]));
  FDCE \hold_reg1_reg[18] 
       (.C(HCLK),
        .CE(\hold_reg1_reg[31]_4 ),
        .CLR(r_amt4_ex2_reg),
        .D(mem_r_data_s[18]),
        .Q(hold_reg1[18]));
  FDCE \hold_reg1_reg[19] 
       (.C(HCLK),
        .CE(\hold_reg1_reg[31]_4 ),
        .CLR(r_amt4_ex2_reg),
        .D(mem_r_data_s[19]),
        .Q(hold_reg1[19]));
  FDCE \hold_reg1_reg[1] 
       (.C(HCLK),
        .CE(\hold_reg1_reg[31]_4 ),
        .CLR(r_amt4_ex2_reg),
        .D(mem_r_data_u),
        .Q(\hold_reg1_reg[31]_1 [1]));
  FDCE \hold_reg1_reg[20] 
       (.C(HCLK),
        .CE(\hold_reg1_reg[31]_4 ),
        .CLR(r_amt4_ex2_reg),
        .D(mem_r_data_s[20]),
        .Q(hold_reg1[20]));
  FDCE \hold_reg1_reg[21] 
       (.C(HCLK),
        .CE(\hold_reg1_reg[31]_4 ),
        .CLR(r_amt4_ex2_reg),
        .D(mem_r_data_s[21]),
        .Q(hold_reg1[21]));
  FDCE \hold_reg1_reg[22] 
       (.C(HCLK),
        .CE(\hold_reg1_reg[31]_4 ),
        .CLR(r_amt4_ex2_reg),
        .D(mem_r_data_s[22]),
        .Q(hold_reg1[22]));
  FDCE \hold_reg1_reg[23] 
       (.C(HCLK),
        .CE(\hold_reg1_reg[31]_4 ),
        .CLR(r_amt4_ex2_reg),
        .D(mem_r_data_s[23]),
        .Q(\hold_reg1_reg[31]_1 [10]));
  FDCE \hold_reg1_reg[24] 
       (.C(HCLK),
        .CE(\hold_reg1_reg[31]_4 ),
        .CLR(r_amt4_ex2_reg),
        .D(mem_r_data_s[24]),
        .Q(\hold_reg1_reg[31]_1 [11]));
  FDCE \hold_reg1_reg[25] 
       (.C(HCLK),
        .CE(\hold_reg1_reg[31]_4 ),
        .CLR(r_amt4_ex2_reg),
        .D(\hold_reg1_reg[25]_0 [8]),
        .Q(\hold_reg1_reg[31]_1 [12]));
  FDCE \hold_reg1_reg[26] 
       (.C(HCLK),
        .CE(\hold_reg1_reg[31]_4 ),
        .CLR(r_amt4_ex2_reg),
        .D(mem_r_data_s[26]),
        .Q(hold_reg1[26]));
  FDCE \hold_reg1_reg[27] 
       (.C(HCLK),
        .CE(\hold_reg1_reg[31]_4 ),
        .CLR(r_amt4_ex2_reg),
        .D(mem_r_data_s[27]),
        .Q(hold_reg1[27]));
  FDCE \hold_reg1_reg[28] 
       (.C(HCLK),
        .CE(\hold_reg1_reg[31]_4 ),
        .CLR(r_amt4_ex2_reg),
        .D(mem_r_data_s[28]),
        .Q(\hold_reg1_reg[31]_1 [13]));
  FDCE \hold_reg1_reg[29] 
       (.C(HCLK),
        .CE(\hold_reg1_reg[31]_4 ),
        .CLR(r_amt4_ex2_reg),
        .D(mem_r_data_s[29]),
        .Q(\hold_reg1_reg[31]_1 [14]));
  FDCE \hold_reg1_reg[2] 
       (.C(HCLK),
        .CE(\hold_reg1_reg[31]_4 ),
        .CLR(r_amt4_ex2_reg),
        .D(rd_mux_a_ex_reg[1]),
        .Q(\hold_reg1_reg[31]_1 [2]));
  FDCE \hold_reg1_reg[30] 
       (.C(HCLK),
        .CE(\hold_reg1_reg[31]_4 ),
        .CLR(r_amt4_ex2_reg),
        .D(mem_r_data_s[30]),
        .Q(\hold_reg1_reg[31]_1 [15]));
  FDCE \hold_reg1_reg[31] 
       (.C(HCLK),
        .CE(\hold_reg1_reg[31]_4 ),
        .CLR(r_amt4_ex2_reg),
        .D(mem_r_data_s[31]),
        .Q(\hold_reg1_reg[31]_1 [16]));
  FDCE \hold_reg1_reg[3] 
       (.C(HCLK),
        .CE(\hold_reg1_reg[31]_4 ),
        .CLR(r_amt4_ex2_reg),
        .D(rd_mux_a_ex_reg[2]),
        .Q(\hold_reg1_reg[31]_1 [3]));
  FDCE \hold_reg1_reg[4] 
       (.C(HCLK),
        .CE(\hold_reg1_reg[31]_4 ),
        .CLR(r_amt4_ex2_reg),
        .D(rd_mux_a_ex_reg[3]),
        .Q(\hold_reg1_reg[31]_1 [4]));
  FDCE \hold_reg1_reg[5] 
       (.C(HCLK),
        .CE(\hold_reg1_reg[31]_4 ),
        .CLR(r_amt4_ex2_reg),
        .D(rd_mux_a_ex_reg[4]),
        .Q(\hold_reg1_reg[31]_1 [5]));
  FDCE \hold_reg1_reg[6] 
       (.C(HCLK),
        .CE(\hold_reg1_reg[31]_4 ),
        .CLR(r_amt4_ex2_reg),
        .D(rd_mux_a_ex_reg[5]),
        .Q(hold_reg1[6]));
  FDCE \hold_reg1_reg[7] 
       (.C(HCLK),
        .CE(\hold_reg1_reg[31]_4 ),
        .CLR(r_amt4_ex2_reg),
        .D(rd_mux_a_ex_reg[6]),
        .Q(hold_reg1[7]));
  FDCE \hold_reg1_reg[8] 
       (.C(HCLK),
        .CE(\hold_reg1_reg[31]_4 ),
        .CLR(r_amt4_ex2_reg),
        .D(\hold_reg1_reg[25]_0 [0]),
        .Q(hold_reg1[8]));
  FDCE \hold_reg1_reg[9] 
       (.C(HCLK),
        .CE(\hold_reg1_reg[31]_4 ),
        .CLR(r_amt4_ex2_reg),
        .D(\hold_reg1_reg[25]_0 [1]),
        .Q(\hold_reg1_reg[31]_1 [6]));
  FDCE \hold_reg2_reg[0] 
       (.C(HCLK),
        .CE(\hold_reg2_reg[31]_1 ),
        .CLR(r_amt4_ex2_reg),
        .D(\hold_reg2_reg[31]_2 [0]),
        .Q(\hold_reg2_reg[31]_0 [0]));
  FDCE \hold_reg2_reg[10] 
       (.C(HCLK),
        .CE(\hold_reg2_reg[31]_1 ),
        .CLR(r_amt4_ex2_reg),
        .D(\hold_reg2_reg[31]_2 [10]),
        .Q(\hold_reg2_reg[31]_0 [9]));
  FDCE \hold_reg2_reg[11] 
       (.C(HCLK),
        .CE(\hold_reg2_reg[31]_1 ),
        .CLR(r_amt4_ex2_reg),
        .D(\hold_reg2_reg[31]_2 [11]),
        .Q(hold_reg2[11]));
  FDCE \hold_reg2_reg[12] 
       (.C(HCLK),
        .CE(\hold_reg2_reg[31]_1 ),
        .CLR(r_amt4_ex2_reg),
        .D(\hold_reg2_reg[31]_2 [12]),
        .Q(hold_reg2[12]));
  FDCE \hold_reg2_reg[13] 
       (.C(HCLK),
        .CE(\hold_reg2_reg[31]_1 ),
        .CLR(r_amt4_ex2_reg),
        .D(\hold_reg2_reg[31]_2 [13]),
        .Q(hold_reg2[13]));
  FDCE \hold_reg2_reg[14] 
       (.C(HCLK),
        .CE(\hold_reg2_reg[31]_1 ),
        .CLR(r_amt4_ex2_reg),
        .D(\hold_reg2_reg[31]_2 [14]),
        .Q(hold_reg2[14]));
  FDCE \hold_reg2_reg[15] 
       (.C(HCLK),
        .CE(\hold_reg2_reg[31]_1 ),
        .CLR(r_amt4_ex2_reg),
        .D(\hold_reg2_reg[31]_2 [15]),
        .Q(hold_reg2[15]));
  FDCE \hold_reg2_reg[16] 
       (.C(HCLK),
        .CE(\hold_reg2_reg[31]_1 ),
        .CLR(r_amt4_ex2_reg),
        .D(\hold_reg2_reg[31]_2 [16]),
        .Q(\hold_reg2_reg[31]_0 [10]));
  FDCE \hold_reg2_reg[17] 
       (.C(HCLK),
        .CE(\hold_reg2_reg[31]_1 ),
        .CLR(r_amt4_ex2_reg),
        .D(\hold_reg2_reg[31]_2 [17]),
        .Q(\hold_reg2_reg[31]_0 [11]));
  FDCE \hold_reg2_reg[18] 
       (.C(HCLK),
        .CE(\hold_reg2_reg[31]_1 ),
        .CLR(r_amt4_ex2_reg),
        .D(\hold_reg2_reg[31]_2 [18]),
        .Q(hold_reg2[18]));
  FDCE \hold_reg2_reg[19] 
       (.C(HCLK),
        .CE(\hold_reg2_reg[31]_1 ),
        .CLR(r_amt4_ex2_reg),
        .D(\hold_reg2_reg[31]_2 [19]),
        .Q(hold_reg2[19]));
  FDCE \hold_reg2_reg[1] 
       (.C(HCLK),
        .CE(\hold_reg2_reg[31]_1 ),
        .CLR(r_amt4_ex2_reg),
        .D(\hold_reg2_reg[31]_2 [1]),
        .Q(\hold_reg2_reg[31]_0 [1]));
  FDCE \hold_reg2_reg[20] 
       (.C(HCLK),
        .CE(\hold_reg2_reg[31]_1 ),
        .CLR(r_amt4_ex2_reg),
        .D(\hold_reg2_reg[31]_2 [20]),
        .Q(hold_reg2[20]));
  FDCE \hold_reg2_reg[21] 
       (.C(HCLK),
        .CE(\hold_reg2_reg[31]_1 ),
        .CLR(r_amt4_ex2_reg),
        .D(\hold_reg2_reg[31]_2 [21]),
        .Q(hold_reg2[21]));
  FDCE \hold_reg2_reg[22] 
       (.C(HCLK),
        .CE(\hold_reg2_reg[31]_1 ),
        .CLR(r_amt4_ex2_reg),
        .D(\hold_reg2_reg[31]_2 [22]),
        .Q(hold_reg2[22]));
  FDCE \hold_reg2_reg[23] 
       (.C(HCLK),
        .CE(\hold_reg2_reg[31]_1 ),
        .CLR(r_amt4_ex2_reg),
        .D(\hold_reg2_reg[31]_2 [23]),
        .Q(\hold_reg2_reg[31]_0 [12]));
  FDCE \hold_reg2_reg[24] 
       (.C(HCLK),
        .CE(\hold_reg2_reg[31]_1 ),
        .CLR(r_amt4_ex2_reg),
        .D(\hold_reg2_reg[31]_2 [24]),
        .Q(\hold_reg2_reg[31]_0 [13]));
  FDCE \hold_reg2_reg[25] 
       (.C(HCLK),
        .CE(\hold_reg2_reg[31]_1 ),
        .CLR(r_amt4_ex2_reg),
        .D(\hold_reg2_reg[31]_2 [25]),
        .Q(\hold_reg2_reg[31]_0 [14]));
  FDCE \hold_reg2_reg[26] 
       (.C(HCLK),
        .CE(\hold_reg2_reg[31]_1 ),
        .CLR(r_amt4_ex2_reg),
        .D(\hold_reg2_reg[31]_2 [26]),
        .Q(\hold_reg2_reg[31]_0 [15]));
  FDCE \hold_reg2_reg[27] 
       (.C(HCLK),
        .CE(\hold_reg2_reg[31]_1 ),
        .CLR(r_amt4_ex2_reg),
        .D(\hold_reg2_reg[31]_2 [27]),
        .Q(\hold_reg2_reg[31]_0 [16]));
  FDCE \hold_reg2_reg[28] 
       (.C(HCLK),
        .CE(\hold_reg2_reg[31]_1 ),
        .CLR(r_amt4_ex2_reg),
        .D(\hold_reg2_reg[31]_2 [28]),
        .Q(\hold_reg2_reg[31]_0 [17]));
  FDCE \hold_reg2_reg[29] 
       (.C(HCLK),
        .CE(\hold_reg2_reg[31]_1 ),
        .CLR(r_amt4_ex2_reg),
        .D(\hold_reg2_reg[31]_2 [29]),
        .Q(\hold_reg2_reg[31]_0 [18]));
  FDCE \hold_reg2_reg[2] 
       (.C(HCLK),
        .CE(\hold_reg2_reg[31]_1 ),
        .CLR(r_amt4_ex2_reg),
        .D(\hold_reg2_reg[31]_2 [2]),
        .Q(\hold_reg2_reg[31]_0 [2]));
  FDCE \hold_reg2_reg[30] 
       (.C(HCLK),
        .CE(\hold_reg2_reg[31]_1 ),
        .CLR(r_amt4_ex2_reg),
        .D(\hold_reg2_reg[31]_2 [30]),
        .Q(\hold_reg2_reg[31]_0 [19]));
  FDCE \hold_reg2_reg[31] 
       (.C(HCLK),
        .CE(\hold_reg2_reg[31]_1 ),
        .CLR(r_amt4_ex2_reg),
        .D(\hold_reg2_reg[31]_2 [31]),
        .Q(\hold_reg2_reg[31]_0 [20]));
  FDCE \hold_reg2_reg[3] 
       (.C(HCLK),
        .CE(\hold_reg2_reg[31]_1 ),
        .CLR(r_amt4_ex2_reg),
        .D(\hold_reg2_reg[31]_2 [3]),
        .Q(\hold_reg2_reg[31]_0 [3]));
  FDCE \hold_reg2_reg[4] 
       (.C(HCLK),
        .CE(\hold_reg2_reg[31]_1 ),
        .CLR(r_amt4_ex2_reg),
        .D(\hold_reg2_reg[31]_2 [4]),
        .Q(\hold_reg2_reg[31]_0 [4]));
  FDCE \hold_reg2_reg[5] 
       (.C(HCLK),
        .CE(\hold_reg2_reg[31]_1 ),
        .CLR(r_amt4_ex2_reg),
        .D(\hold_reg2_reg[31]_2 [5]),
        .Q(\hold_reg2_reg[31]_0 [5]));
  FDCE \hold_reg2_reg[6] 
       (.C(HCLK),
        .CE(\hold_reg2_reg[31]_1 ),
        .CLR(r_amt4_ex2_reg),
        .D(\hold_reg2_reg[31]_2 [6]),
        .Q(\hold_reg2_reg[31]_0 [6]));
  FDCE \hold_reg2_reg[7] 
       (.C(HCLK),
        .CE(\hold_reg2_reg[31]_1 ),
        .CLR(r_amt4_ex2_reg),
        .D(\hold_reg2_reg[31]_2 [7]),
        .Q(\hold_reg2_reg[31]_0 [7]));
  FDCE \hold_reg2_reg[8] 
       (.C(HCLK),
        .CE(\hold_reg2_reg[31]_1 ),
        .CLR(r_amt4_ex2_reg),
        .D(\hold_reg2_reg[31]_2 [8]),
        .Q(hold_reg2[8]));
  FDCE \hold_reg2_reg[9] 
       (.C(HCLK),
        .CE(\hold_reg2_reg[31]_1 ),
        .CLR(r_amt4_ex2_reg),
        .D(\hold_reg2_reg[31]_2 [9]),
        .Q(\hold_reg2_reg[31]_0 [8]));
  FDCE \mem_held_addr_reg[0] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(r_amt4_ex2_reg),
        .D(O[0]),
        .Q(\mem_held_addr_reg[0]_0 ));
  FDCE \mem_held_addr_reg[10] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(r_amt4_ex2_reg),
        .D(\mem_held_addr_reg[23]_1 [6]),
        .Q(\mem_held_addr_reg_n_0_[10] ));
  FDCE \mem_held_addr_reg[11] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(r_amt4_ex2_reg),
        .D(\mem_held_addr_reg[23]_1 [7]),
        .Q(\mem_held_addr_reg_n_0_[11] ));
  FDCE \mem_held_addr_reg[12] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(r_amt4_ex2_reg),
        .D(\mem_held_addr_reg[23]_1 [8]),
        .Q(\mem_held_addr_reg_n_0_[12] ));
  FDCE \mem_held_addr_reg[13] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(r_amt4_ex2_reg),
        .D(\mem_held_addr_reg[23]_1 [9]),
        .Q(\mem_held_addr_reg_n_0_[13] ));
  FDCE \mem_held_addr_reg[14] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(r_amt4_ex2_reg),
        .D(\mem_held_addr_reg[23]_1 [10]),
        .Q(\mem_held_addr_reg_n_0_[14] ));
  FDCE \mem_held_addr_reg[15] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(r_amt4_ex2_reg),
        .D(\mem_held_addr_reg[23]_1 [11]),
        .Q(\mem_held_addr_reg_n_0_[15] ));
  FDCE \mem_held_addr_reg[16] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(r_amt4_ex2_reg),
        .D(\mem_held_addr_reg[23]_1 [12]),
        .Q(\mem_held_addr_reg_n_0_[16] ));
  FDCE \mem_held_addr_reg[17] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(r_amt4_ex2_reg),
        .D(\mem_held_addr_reg[23]_1 [13]),
        .Q(\mem_held_addr_reg_n_0_[17] ));
  FDCE \mem_held_addr_reg[18] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(r_amt4_ex2_reg),
        .D(\mem_held_addr_reg[23]_1 [14]),
        .Q(\mem_held_addr_reg_n_0_[18] ));
  FDCE \mem_held_addr_reg[19] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(r_amt4_ex2_reg),
        .D(\mem_held_addr_reg[23]_1 [15]),
        .Q(\mem_held_addr_reg_n_0_[19] ));
  FDCE \mem_held_addr_reg[1] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(r_amt4_ex2_reg),
        .D(O[1]),
        .Q(\mem_held_addr_reg[1]_0 ));
  FDCE \mem_held_addr_reg[20] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(r_amt4_ex2_reg),
        .D(\mem_held_addr_reg[23]_1 [16]),
        .Q(\mem_held_addr_reg_n_0_[20] ));
  FDCE \mem_held_addr_reg[21] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(r_amt4_ex2_reg),
        .D(\mem_held_addr_reg[23]_1 [17]),
        .Q(\mem_held_addr_reg_n_0_[21] ));
  FDCE \mem_held_addr_reg[22] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(r_amt4_ex2_reg),
        .D(\mem_held_addr_reg[23]_1 [18]),
        .Q(\mem_held_addr_reg_n_0_[22] ));
  FDCE \mem_held_addr_reg[23] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(r_amt4_ex2_reg),
        .D(\mem_held_addr_reg[23]_1 [19]),
        .Q(\mem_held_addr_reg_n_0_[23] ));
  FDCE \mem_held_addr_reg[24] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(r_amt4_ex2_reg),
        .D(D[0]),
        .Q(\mem_held_addr_reg_n_0_[24] ));
  FDCE \mem_held_addr_reg[25] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(r_amt4_ex2_reg),
        .D(D[1]),
        .Q(\mem_held_addr_reg_n_0_[25] ));
  FDCE \mem_held_addr_reg[26] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(r_amt4_ex2_reg),
        .D(D[2]),
        .Q(\mem_held_addr_reg_n_0_[26] ));
  FDCE \mem_held_addr_reg[27] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(r_amt4_ex2_reg),
        .D(D[3]),
        .Q(\mem_held_addr_reg_n_0_[27] ));
  FDCE \mem_held_addr_reg[28] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(r_amt4_ex2_reg),
        .D(D[4]),
        .Q(\mem_held_addr_reg_n_0_[28] ));
  FDCE \mem_held_addr_reg[29] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(r_amt4_ex2_reg),
        .D(D[5]),
        .Q(\mem_held_addr_reg_n_0_[29] ));
  FDCE \mem_held_addr_reg[2] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(r_amt4_ex2_reg),
        .D(O[2]),
        .Q(\mem_held_addr_reg_n_0_[2] ));
  FDCE \mem_held_addr_reg[30] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(r_amt4_ex2_reg),
        .D(D[6]),
        .Q(\mem_held_addr_reg_n_0_[30] ));
  FDCE \mem_held_addr_reg[31] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(r_amt4_ex2_reg),
        .D(D[7]),
        .Q(\mem_held_addr_reg_n_0_[31] ));
  FDCE \mem_held_addr_reg[3] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(r_amt4_ex2_reg),
        .D(O[3]),
        .Q(\mem_held_addr_reg_n_0_[3] ));
  FDCE \mem_held_addr_reg[4] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(r_amt4_ex2_reg),
        .D(\mem_held_addr_reg[23]_1 [0]),
        .Q(\mem_held_addr_reg_n_0_[4] ));
  FDCE \mem_held_addr_reg[5] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(r_amt4_ex2_reg),
        .D(\mem_held_addr_reg[23]_1 [1]),
        .Q(\mem_held_addr_reg_n_0_[5] ));
  FDCE \mem_held_addr_reg[6] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(r_amt4_ex2_reg),
        .D(\mem_held_addr_reg[23]_1 [2]),
        .Q(\mem_held_addr_reg_n_0_[6] ));
  FDCE \mem_held_addr_reg[7] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(r_amt4_ex2_reg),
        .D(\mem_held_addr_reg[23]_1 [3]),
        .Q(\mem_held_addr_reg_n_0_[7] ));
  FDCE \mem_held_addr_reg[8] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(r_amt4_ex2_reg),
        .D(\mem_held_addr_reg[23]_1 [4]),
        .Q(\mem_held_addr_reg_n_0_[8] ));
  FDCE \mem_held_addr_reg[9] 
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(r_amt4_ex2_reg),
        .D(\mem_held_addr_reg[23]_1 [5]),
        .Q(\mem_held_addr_reg_n_0_[9] ));
  FDCE n_flag_reg
       (.C(HCLK),
        .CE(update_n_ex),
        .CLR(r_amt4_ex2_reg),
        .D(rf_wdata[31]),
        .Q(n_flag));
  LUT6 #(
    .INIT(64'h000F00CA000000CA)) 
    \pc[15]_i_3 
       (.I0(\pc_reg[23]_0 [14]),
        .I1(\mem_held_addr_reg_n_0_[15] ),
        .I2(\biu_addr_31_29_reg_reg[29] ),
        .I3(dbg_wdata_sel_ex),
        .I4(ireq_ldpc),
        .I5(hold_reg1[15]),
        .O(\mem_held_addr_reg[15]_0 ));
  LUT6 #(
    .INIT(64'h000F00CA000000CA)) 
    \pc[16]_i_2 
       (.I0(\pc_reg[23]_0 [15]),
        .I1(\hold_reg1_reg[31]_1 [8]),
        .I2(ireq_ldpc),
        .I3(dbg_wdata_sel_ex),
        .I4(\biu_addr_31_29_reg_reg[29] ),
        .I5(\mem_held_addr_reg_n_0_[16] ),
        .O(\hold_reg1_reg[16]_0 ));
  LUT6 #(
    .INIT(64'h000F00CA000000CA)) 
    \pc[17]_i_2 
       (.I0(\pc_reg[23]_0 [16]),
        .I1(\hold_reg1_reg[31]_1 [9]),
        .I2(ireq_ldpc),
        .I3(dbg_wdata_sel_ex),
        .I4(\biu_addr_31_29_reg_reg[29] ),
        .I5(\mem_held_addr_reg_n_0_[17] ),
        .O(\hold_reg1_reg[17]_0 ));
  LUT6 #(
    .INIT(64'h000F00AC000000AC)) 
    \pc[18]_i_2 
       (.I0(hold_reg1[18]),
        .I1(\pc_reg[23]_0 [17]),
        .I2(ireq_ldpc),
        .I3(dbg_wdata_sel_ex),
        .I4(\biu_addr_31_29_reg_reg[29] ),
        .I5(\mem_held_addr_reg_n_0_[18] ),
        .O(\hold_reg1_reg[18]_0 ));
  LUT6 #(
    .INIT(64'h000A00FC000A000C)) 
    \pc[19]_i_3 
       (.I0(\mem_held_addr_reg_n_0_[19] ),
        .I1(\pc_reg[23]_0 [18]),
        .I2(ireq_ldpc),
        .I3(dbg_wdata_sel_ex),
        .I4(\biu_addr_31_29_reg_reg[29] ),
        .I5(hold_reg1[19]),
        .O(\mem_held_addr_reg[19]_0 ));
  LUT6 #(
    .INIT(64'h000F00CA000000CA)) 
    \pc[20]_i_2 
       (.I0(\pc_reg[23]_0 [19]),
        .I1(\mem_held_addr_reg_n_0_[20] ),
        .I2(\biu_addr_31_29_reg_reg[29] ),
        .I3(dbg_wdata_sel_ex),
        .I4(ireq_ldpc),
        .I5(hold_reg1[20]),
        .O(\mem_held_addr_reg[20]_0 ));
  LUT6 #(
    .INIT(64'h000A00FC000A000C)) 
    \pc[21]_i_2 
       (.I0(\mem_held_addr_reg_n_0_[21] ),
        .I1(\pc_reg[23]_0 [20]),
        .I2(ireq_ldpc),
        .I3(dbg_wdata_sel_ex),
        .I4(\biu_addr_31_29_reg_reg[29] ),
        .I5(hold_reg1[21]),
        .O(\mem_held_addr_reg[21]_0 ));
  LUT6 #(
    .INIT(64'h000F00AC000000AC)) 
    \pc[22]_i_2 
       (.I0(hold_reg1[22]),
        .I1(\pc_reg[23]_0 [21]),
        .I2(ireq_ldpc),
        .I3(dbg_wdata_sel_ex),
        .I4(\biu_addr_31_29_reg_reg[29] ),
        .I5(\mem_held_addr_reg_n_0_[22] ),
        .O(\hold_reg1_reg[22]_0 ));
  LUT6 #(
    .INIT(64'h000F00CA000000CA)) 
    \pc[23]_i_3 
       (.I0(\pc_reg[23]_0 [22]),
        .I1(\mem_held_addr_reg_n_0_[23] ),
        .I2(\biu_addr_31_29_reg_reg[29] ),
        .I3(dbg_wdata_sel_ex),
        .I4(ireq_ldpc),
        .I5(\hold_reg1_reg[31]_1 [10]),
        .O(\mem_held_addr_reg[23]_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \pc[24]_i_1 
       (.I0(seq_fetch_addr[24]),
        .I1(\pc_reg[31]_1 ),
        .I2(D[0]),
        .I3(biu_addr_mux_ctl_ex),
        .I4(\mem_held_addr_reg[24]_0 ),
        .O(p_0_in__0[24]));
  LUT6 #(
    .INIT(64'h000A00FC000A000C)) 
    \pc[24]_i_2 
       (.I0(\mem_held_addr_reg_n_0_[24] ),
        .I1(seq_fetch_addr[24]),
        .I2(ireq_ldpc),
        .I3(dbg_wdata_sel_ex),
        .I4(\biu_addr_31_29_reg_reg[29] ),
        .I5(\hold_reg1_reg[31]_1 [11]),
        .O(\mem_held_addr_reg[24]_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \pc[25]_i_1 
       (.I0(seq_fetch_addr[25]),
        .I1(\pc_reg[31]_1 ),
        .I2(D[1]),
        .I3(biu_addr_mux_ctl_ex),
        .I4(\mem_held_addr_reg[25]_0 ),
        .O(p_0_in__0[25]));
  LUT6 #(
    .INIT(64'h000A00FC000A000C)) 
    \pc[25]_i_2 
       (.I0(\mem_held_addr_reg_n_0_[25] ),
        .I1(seq_fetch_addr[25]),
        .I2(ireq_ldpc),
        .I3(dbg_wdata_sel_ex),
        .I4(\biu_addr_31_29_reg_reg[29] ),
        .I5(\hold_reg1_reg[31]_1 [12]),
        .O(\mem_held_addr_reg[25]_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \pc[26]_i_1 
       (.I0(seq_fetch_addr[26]),
        .I1(\pc_reg[31]_1 ),
        .I2(D[2]),
        .I3(biu_addr_mux_ctl_ex),
        .I4(\mem_held_addr_reg[26]_0 ),
        .O(p_0_in__0[26]));
  LUT6 #(
    .INIT(64'h000A00FC000A000C)) 
    \pc[26]_i_2 
       (.I0(\mem_held_addr_reg_n_0_[26] ),
        .I1(seq_fetch_addr[26]),
        .I2(ireq_ldpc),
        .I3(dbg_wdata_sel_ex),
        .I4(\biu_addr_31_29_reg_reg[29] ),
        .I5(hold_reg1[26]),
        .O(\mem_held_addr_reg[26]_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \pc[27]_i_1 
       (.I0(seq_fetch_addr[27]),
        .I1(\pc_reg[31]_1 ),
        .I2(D[3]),
        .I3(biu_addr_mux_ctl_ex),
        .I4(\mem_held_addr_reg[27]_0 ),
        .O(p_0_in__0[27]));
  LUT6 #(
    .INIT(64'h000A00FC000A000C)) 
    \pc[27]_i_3 
       (.I0(\mem_held_addr_reg_n_0_[27] ),
        .I1(seq_fetch_addr[27]),
        .I2(ireq_ldpc),
        .I3(dbg_wdata_sel_ex),
        .I4(\biu_addr_31_29_reg_reg[29] ),
        .I5(hold_reg1[27]),
        .O(\mem_held_addr_reg[27]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair246" *) 
  LUT5 #(
    .INIT(32'hB8B888BB)) 
    \pc[28]_i_1 
       (.I0(seq_fetch_addr[28]),
        .I1(\pc_reg[31]_1 ),
        .I2(D[4]),
        .I3(\pc[28]_i_2_n_0 ),
        .I4(biu_addr_mux_ctl_ex),
        .O(p_0_in__0[28]));
  LUT6 #(
    .INIT(64'hFFF5FF30FFF5FF3F)) 
    \pc[28]_i_2 
       (.I0(\mem_held_addr_reg_n_0_[28] ),
        .I1(\hold_reg1_reg[31]_1 [13]),
        .I2(ireq_ldpc),
        .I3(dbg_wdata_sel_ex),
        .I4(\biu_addr_31_29_reg_reg[29] ),
        .I5(seq_fetch_addr[28]),
        .O(\pc[28]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair244" *) 
  LUT5 #(
    .INIT(32'hB8B888BB)) 
    \pc[29]_i_1 
       (.I0(seq_fetch_addr[29]),
        .I1(\pc_reg[31]_1 ),
        .I2(D[5]),
        .I3(\pc[29]_i_2_n_0 ),
        .I4(biu_addr_mux_ctl_ex),
        .O(p_0_in__0[29]));
  LUT6 #(
    .INIT(64'hFFF0FF35FFFFFF35)) 
    \pc[29]_i_2 
       (.I0(seq_fetch_addr[29]),
        .I1(\mem_held_addr_reg_n_0_[29] ),
        .I2(\biu_addr_31_29_reg_reg[29] ),
        .I3(dbg_wdata_sel_ex),
        .I4(ireq_ldpc),
        .I5(\hold_reg1_reg[31]_1 [14]),
        .O(\pc[29]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB888B8BB)) 
    \pc[30]_i_1 
       (.I0(seq_fetch_addr[30]),
        .I1(\pc_reg[31]_1 ),
        .I2(D[6]),
        .I3(biu_addr_mux_ctl_ex),
        .I4(\hold_reg1_reg[30]_0 ),
        .O(p_0_in__0[30]));
  LUT6 #(
    .INIT(64'hFFF0FF35FFFFFF35)) 
    \pc[30]_i_2 
       (.I0(seq_fetch_addr[30]),
        .I1(\hold_reg1_reg[31]_1 [15]),
        .I2(ireq_ldpc),
        .I3(dbg_wdata_sel_ex),
        .I4(\biu_addr_31_29_reg_reg[29] ),
        .I5(\mem_held_addr_reg_n_0_[30] ),
        .O(\hold_reg1_reg[30]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair245" *) 
  LUT5 #(
    .INIT(32'hB8B888BB)) 
    \pc[31]_i_2 
       (.I0(seq_fetch_addr[31]),
        .I1(\pc_reg[31]_1 ),
        .I2(D[7]),
        .I3(\pc[31]_i_5_n_0 ),
        .I4(biu_addr_mux_ctl_ex),
        .O(p_0_in__0[31]));
  LUT6 #(
    .INIT(64'hFFF0FF35FFFFFF35)) 
    \pc[31]_i_5 
       (.I0(seq_fetch_addr[31]),
        .I1(\hold_reg1_reg[31]_1 [16]),
        .I2(ireq_ldpc),
        .I3(dbg_wdata_sel_ex),
        .I4(\biu_addr_31_29_reg_reg[29] ),
        .I5(\mem_held_addr_reg_n_0_[31] ),
        .O(\pc[31]_i_5_n_0 ));
  FDPE \pc_reg[10] 
       (.C(HCLK),
        .CE(\pc_reg[31]_2 ),
        .D(\pc_reg[23]_2 [9]),
        .PRE(r_amt4_ex2_reg),
        .Q(Q[9]));
  FDPE \pc_reg[11] 
       (.C(HCLK),
        .CE(\pc_reg[31]_2 ),
        .D(\pc_reg[23]_2 [10]),
        .PRE(r_amt4_ex2_reg),
        .Q(Q[10]));
  CARRY4 \pc_reg[11]_i_2 
       (.CI(\pc_reg[7]_i_2_n_0 ),
        .CO({\pc_reg[11]_i_2_n_0 ,\pc_reg[11]_i_2_n_1 ,\pc_reg[11]_i_2_n_2 ,\pc_reg[11]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\pc_reg[23]_0 [10:7]),
        .S(Q[10:7]));
  FDPE \pc_reg[12] 
       (.C(HCLK),
        .CE(\pc_reg[31]_2 ),
        .D(\pc_reg[23]_2 [11]),
        .PRE(r_amt4_ex2_reg),
        .Q(Q[11]));
  FDPE \pc_reg[13] 
       (.C(HCLK),
        .CE(\pc_reg[31]_2 ),
        .D(\pc_reg[23]_2 [12]),
        .PRE(r_amt4_ex2_reg),
        .Q(Q[12]));
  FDPE \pc_reg[14] 
       (.C(HCLK),
        .CE(\pc_reg[31]_2 ),
        .D(\pc_reg[23]_2 [13]),
        .PRE(r_amt4_ex2_reg),
        .Q(Q[13]));
  FDPE \pc_reg[15] 
       (.C(HCLK),
        .CE(\pc_reg[31]_2 ),
        .D(\pc_reg[23]_2 [14]),
        .PRE(r_amt4_ex2_reg),
        .Q(Q[14]));
  CARRY4 \pc_reg[15]_i_2 
       (.CI(\pc_reg[11]_i_2_n_0 ),
        .CO({\pc_reg[15]_i_2_n_0 ,\pc_reg[15]_i_2_n_1 ,\pc_reg[15]_i_2_n_2 ,\pc_reg[15]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\pc_reg[23]_0 [14:11]),
        .S(Q[14:11]));
  FDPE \pc_reg[16] 
       (.C(HCLK),
        .CE(\pc_reg[31]_2 ),
        .D(\pc_reg[23]_2 [15]),
        .PRE(r_amt4_ex2_reg),
        .Q(Q[15]));
  FDPE \pc_reg[17] 
       (.C(HCLK),
        .CE(\pc_reg[31]_2 ),
        .D(\pc_reg[23]_2 [16]),
        .PRE(r_amt4_ex2_reg),
        .Q(Q[16]));
  FDPE \pc_reg[18] 
       (.C(HCLK),
        .CE(\pc_reg[31]_2 ),
        .D(\pc_reg[23]_2 [17]),
        .PRE(r_amt4_ex2_reg),
        .Q(Q[17]));
  FDPE \pc_reg[19] 
       (.C(HCLK),
        .CE(\pc_reg[31]_2 ),
        .D(\pc_reg[23]_2 [18]),
        .PRE(r_amt4_ex2_reg),
        .Q(Q[18]));
  CARRY4 \pc_reg[19]_i_2 
       (.CI(\pc_reg[15]_i_2_n_0 ),
        .CO({\pc_reg[19]_i_2_n_0 ,\pc_reg[19]_i_2_n_1 ,\pc_reg[19]_i_2_n_2 ,\pc_reg[19]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\pc_reg[23]_0 [18:15]),
        .S(Q[18:15]));
  FDPE \pc_reg[1] 
       (.C(HCLK),
        .CE(\pc_reg[31]_2 ),
        .D(\pc_reg[23]_2 [0]),
        .PRE(r_amt4_ex2_reg),
        .Q(Q[0]));
  FDPE \pc_reg[20] 
       (.C(HCLK),
        .CE(\pc_reg[31]_2 ),
        .D(\pc_reg[23]_2 [19]),
        .PRE(r_amt4_ex2_reg),
        .Q(Q[19]));
  FDPE \pc_reg[21] 
       (.C(HCLK),
        .CE(\pc_reg[31]_2 ),
        .D(\pc_reg[23]_2 [20]),
        .PRE(r_amt4_ex2_reg),
        .Q(Q[20]));
  FDPE \pc_reg[22] 
       (.C(HCLK),
        .CE(\pc_reg[31]_2 ),
        .D(\pc_reg[23]_2 [21]),
        .PRE(r_amt4_ex2_reg),
        .Q(Q[21]));
  FDPE \pc_reg[23] 
       (.C(HCLK),
        .CE(\pc_reg[31]_2 ),
        .D(\pc_reg[23]_2 [22]),
        .PRE(r_amt4_ex2_reg),
        .Q(Q[22]));
  CARRY4 \pc_reg[23]_i_2 
       (.CI(\pc_reg[19]_i_2_n_0 ),
        .CO({\pc_reg[23]_i_2_n_0 ,\pc_reg[23]_i_2_n_1 ,\pc_reg[23]_i_2_n_2 ,\pc_reg[23]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\pc_reg[23]_0 [22:19]),
        .S(Q[22:19]));
  FDPE \pc_reg[24] 
       (.C(HCLK),
        .CE(\pc_reg[31]_2 ),
        .D(p_0_in__0[24]),
        .PRE(r_amt4_ex2_reg),
        .Q(Q[23]));
  FDPE \pc_reg[25] 
       (.C(HCLK),
        .CE(\pc_reg[31]_2 ),
        .D(p_0_in__0[25]),
        .PRE(r_amt4_ex2_reg),
        .Q(Q[24]));
  FDPE \pc_reg[26] 
       (.C(HCLK),
        .CE(\pc_reg[31]_2 ),
        .D(p_0_in__0[26]),
        .PRE(r_amt4_ex2_reg),
        .Q(Q[25]));
  FDPE \pc_reg[27] 
       (.C(HCLK),
        .CE(\pc_reg[31]_2 ),
        .D(p_0_in__0[27]),
        .PRE(r_amt4_ex2_reg),
        .Q(Q[26]));
  CARRY4 \pc_reg[27]_i_2 
       (.CI(\pc_reg[23]_i_2_n_0 ),
        .CO({\pc_reg[27]_i_2_n_0 ,\pc_reg[27]_i_2_n_1 ,\pc_reg[27]_i_2_n_2 ,\pc_reg[27]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(seq_fetch_addr[27:24]),
        .S(Q[26:23]));
  FDPE \pc_reg[28] 
       (.C(HCLK),
        .CE(\pc_reg[31]_2 ),
        .D(p_0_in__0[28]),
        .PRE(r_amt4_ex2_reg),
        .Q(Q[27]));
  FDPE \pc_reg[29] 
       (.C(HCLK),
        .CE(\pc_reg[31]_2 ),
        .D(p_0_in__0[29]),
        .PRE(r_amt4_ex2_reg),
        .Q(Q[28]));
  FDPE \pc_reg[2] 
       (.C(HCLK),
        .CE(\pc_reg[31]_2 ),
        .D(\pc_reg[23]_2 [1]),
        .PRE(r_amt4_ex2_reg),
        .Q(Q[1]));
  FDPE \pc_reg[30] 
       (.C(HCLK),
        .CE(\pc_reg[31]_2 ),
        .D(p_0_in__0[30]),
        .PRE(r_amt4_ex2_reg),
        .Q(Q[29]));
  FDPE \pc_reg[31] 
       (.C(HCLK),
        .CE(\pc_reg[31]_2 ),
        .D(p_0_in__0[31]),
        .PRE(r_amt4_ex2_reg),
        .Q(Q[30]));
  CARRY4 \pc_reg[31]_i_4 
       (.CI(\pc_reg[27]_i_2_n_0 ),
        .CO({\NLW_pc_reg[31]_i_4_CO_UNCONNECTED [3],\pc_reg[31]_i_4_n_1 ,\pc_reg[31]_i_4_n_2 ,\pc_reg[31]_i_4_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(seq_fetch_addr[31:28]),
        .S(Q[30:27]));
  FDPE \pc_reg[3] 
       (.C(HCLK),
        .CE(\pc_reg[31]_2 ),
        .D(\pc_reg[23]_2 [2]),
        .PRE(r_amt4_ex2_reg),
        .Q(Q[2]));
  FDPE \pc_reg[4] 
       (.C(HCLK),
        .CE(\pc_reg[31]_2 ),
        .D(\pc_reg[23]_2 [3]),
        .PRE(r_amt4_ex2_reg),
        .Q(Q[3]));
  FDPE \pc_reg[5] 
       (.C(HCLK),
        .CE(\pc_reg[31]_2 ),
        .D(\pc_reg[23]_2 [4]),
        .PRE(r_amt4_ex2_reg),
        .Q(Q[4]));
  FDPE \pc_reg[6] 
       (.C(HCLK),
        .CE(\pc_reg[31]_2 ),
        .D(\pc_reg[23]_2 [5]),
        .PRE(r_amt4_ex2_reg),
        .Q(Q[5]));
  FDPE \pc_reg[7] 
       (.C(HCLK),
        .CE(\pc_reg[31]_2 ),
        .D(\pc_reg[23]_2 [6]),
        .PRE(r_amt4_ex2_reg),
        .Q(Q[6]));
  CARRY4 \pc_reg[7]_i_2 
       (.CI(hi_pre_fetch_addr_reg_i_2_n_0),
        .CO({\pc_reg[7]_i_2_n_0 ,\pc_reg[7]_i_2_n_1 ,\pc_reg[7]_i_2_n_2 ,\pc_reg[7]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\pc_reg[23]_0 [6:3]),
        .S(Q[6:3]));
  FDPE \pc_reg[8] 
       (.C(HCLK),
        .CE(\pc_reg[31]_2 ),
        .D(\pc_reg[23]_2 [7]),
        .PRE(r_amt4_ex2_reg),
        .Q(Q[7]));
  FDPE \pc_reg[9] 
       (.C(HCLK),
        .CE(\pc_reg[31]_2 ),
        .D(\pc_reg[23]_2 [8]),
        .PRE(r_amt4_ex2_reg),
        .Q(Q[8]));
  FDCE sel_wf_c_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(r_amt4_ex2_reg),
        .D(sel_wf_c_reg_0),
        .Q(sel_wf_c));
  FDCE sel_wf_v_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(r_amt4_ex2_reg),
        .D(sel_wf_v_reg_0),
        .Q(sel_wf_v));
  FDCE sel_wf_z_reg
       (.C(HCLK),
        .CE(update_n_ex),
        .CLR(r_amt4_ex2_reg),
        .D(write_flags_ex),
        .Q(sel_wf_z));
  design_1_CORTEXM1_AXI_0_1_cm1_alu_dec u_alu_dec
       (.S(u_alu_dec_n_0),
        .\mem_held_addr_reg[31] ({\pc_reg[30]_0 [7],\pc_reg[30]_0 [4]}),
        .\mem_held_addr_reg[31]_0 ({\mem_held_addr_reg[31]_2 [6],\mem_held_addr_reg[31]_2 [4]}),
        .\pc_reg[30] (u_alu_dec_n_1));
  design_1_CORTEXM1_AXI_0_1_cm1_mem_ctl u_mem_ctl
       (.D({\rptr_a_ex_reg[3] [26:23],a_reg_0[27:26],\rptr_a_ex_reg[3] [22:13],a_reg_0[15],\rptr_a_ex_reg[3] [12:11],a_reg_0[12],\rptr_a_ex_reg[3] [10:2],fptr_wdata,\rptr_a_ex_reg[3] [1:0]}),
        .DTCMBYTEWR(DTCMBYTEWR),
        .HCLK(HCLK),
        .ITCMBYTEWR(ITCMBYTEWR),
        .O(D[7:5]),
        .biu_addr_mux_ctl_ex(biu_addr_mux_ctl_ex),
        .biu_commit(biu_commit),
        .biu_commit_reg_i_5({D[3:0],\mem_held_addr_reg[23]_1 [19:11]}),
        .biu_commit_reg_reg(biu_commit_reg_i_3_n_0),
        .biu_commit_reg_reg_0(biu_commit_reg_i_4_n_0),
        .biu_commit_reg_reg_1(biu_commit_reg_reg),
        .biu_commit_reg_reg_2(biu_commit_reg_reg_0),
        .biu_commit_reg_reg_3(\hold_reg1_reg[30]_0 ),
        .biu_commit_reg_reg_4(\pc[29]_i_2_n_0 ),
        .biu_commit_reg_reg_5(\pc[31]_i_5_n_0 ),
        .biu_drack(biu_drack),
        .biu_dreq(biu_dreq),
        .biu_rdy(biu_rdy),
        .biu_rfault(biu_rfault),
        .doutA(doutA),
        .\dp_ipsr_1to0_reg[1] (\dp_ipsr_1to0_reg[1] ),
        .\dp_ipsr_1to0_reg[1]_0 (\dp_ipsr_1to0_reg[1]_0 ),
        .\dp_ipsr_1to0_reg[1]_1 (\dp_ipsr_1to0_reg[1]_1 ),
        .\dp_ipsr_1to0_reg[1]_2 (\dp_ipsr_1to0_reg[1]_2 ),
        .dwack_reg_0(r_amt4_ex2_reg),
        .fptr_align(fptr_align),
        .fptr_align_reg(fptr_align_reg),
        .fptr_align_reg_0(fptr_align_reg_0),
        .\genblk3[1].ram_block_reg_3_0 (\genblk3[1].ram_block_reg_3_0 ),
        .\genblk3[1].ram_block_reg_3_1 (\mem_held_addr_reg[1]_0 ),
        .\genblk3[1].ram_block_reg_3_1_0 (\mem_held_addr_reg[0]_0 ),
        .\hold_reg1[7]_i_7_0 (\hold_reg1[7]_i_7 ),
        .\hold_reg1[7]_i_7_1 (\hold_reg1[7]_i_7_0 ),
        .\hold_reg1_reg[16] (ze_half_wb_reg),
        .\hold_reg1_reg[17] (ze_half_wb_reg_0),
        .\hold_reg1_reg[18] (ze_half_wb_reg_1),
        .\hold_reg1_reg[19] (ze_half_wb_reg_2),
        .\hold_reg1_reg[20] (ze_half_wb_reg_3),
        .\hold_reg1_reg[21] (ze_half_wb_reg_4),
        .\hold_reg1_reg[22] (ze_half_wb_reg_5),
        .\hold_reg1_reg[23] (ze_half_wb_reg_6),
        .\hold_reg1_reg[24] (ze_half_wb_reg_7),
        .\hold_reg1_reg[26] (ze_half_wb_reg_8),
        .\hold_reg1_reg[27] (ze_half_wb_reg_9),
        .\hold_reg1_reg[28] (ze_half_wb_reg_10),
        .\hold_reg1_reg[29] (ze_half_wb_reg_11),
        .\hold_reg1_reg[30] (ze_half_wb_reg_12),
        .\hold_reg1_reg[31] (ze_half_wb_reg_13),
        .\hold_reg1_reg[31]_0 (\hold_reg1_reg[31]_2 ),
        .\hold_reg1_reg[31]_1 (\hold_reg1_reg[31]_3 ),
        .\hold_reg1_reg[6] (\hold_reg1_reg[6]_1 ),
        .\hold_reg1_reg[6]_0 (\hold_reg1_reg[6]_2 ),
        .irack(irack),
        .itcm_sel_i_6_0(itcm_sel_i_6),
        .itcm_sel_reg_0(itcm_sel_reg),
        .itcm_sel_reg_1(itcm_sel_reg_0),
        .load_fptr(load_fptr),
        .load_xpsr_ex(load_xpsr_ex),
        .load_xpsr_ex_reg(load_xpsr_ex_reg),
        .ls_byte_ex(ls_byte_ex),
        .ls_half_ex(ls_half_ex),
        .\mem_held_addr_reg[19]_i_1 (\mem_held_addr_reg[19]_i_1 ),
        .\mem_held_addr_reg[1] (\mem_held_addr_reg[1]_2 ),
        .\mem_held_addr_reg[1]_0 (\mem_held_addr_reg[1]_3 ),
        .\mem_held_addr_reg[1]_1 (\mem_held_addr_reg[1]_4 ),
        .\mem_held_addr_reg[31]_i_1 (\mem_held_addr_reg[31]_i_1 ),
        .nxt_drack(nxt_drack),
        .nxt_dtcm_sel(nxt_dtcm_sel),
        .nxt_dwack(nxt_dwack),
        .nxt_irack(nxt_irack),
        .nxt_itcm_sel(nxt_itcm_sel),
        .rd_mux_a_ex(rd_mux_a_ex),
        .rd_mux_a_ex_reg(rd_mux_a_ex_reg_0),
        .rd_mux_a_ex_reg_0(rd_mux_a_ex_reg_1),
        .rd_mux_a_ex_reg_1(rd_mux_a_ex_reg_2),
        .rd_mux_a_ex_reg_10(rd_mux_a_ex_reg_11),
        .rd_mux_a_ex_reg_11(rd_mux_a_ex_reg_12),
        .rd_mux_a_ex_reg_12(rd_mux_a_ex_reg_13),
        .rd_mux_a_ex_reg_13(rd_mux_a_ex_reg_14),
        .rd_mux_a_ex_reg_14(rd_mux_a_ex_reg_15),
        .rd_mux_a_ex_reg_15(rd_mux_a_ex_reg_16),
        .rd_mux_a_ex_reg_16(rd_mux_a_ex_reg_17),
        .rd_mux_a_ex_reg_17(rd_mux_a_ex_reg_18),
        .rd_mux_a_ex_reg_18(rd_mux_a_ex_reg_19),
        .rd_mux_a_ex_reg_19(rd_mux_a_ex_reg_20),
        .rd_mux_a_ex_reg_2(rd_mux_a_ex_reg_3),
        .rd_mux_a_ex_reg_20(rd_mux_a_ex_reg_21),
        .rd_mux_a_ex_reg_21(rd_mux_a_ex_reg_22),
        .rd_mux_a_ex_reg_22(rd_mux_a_ex_reg_23),
        .rd_mux_a_ex_reg_23(rd_mux_a_ex_reg_24),
        .rd_mux_a_ex_reg_24(rd_mux_a_ex_reg_25),
        .rd_mux_a_ex_reg_25(rd_mux_a_ex_reg_26),
        .rd_mux_a_ex_reg_26(rd_mux_a_ex_reg_27),
        .rd_mux_a_ex_reg_27(rd_mux_a_ex_reg_28),
        .rd_mux_a_ex_reg_28(rd_mux_a_ex_reg_29),
        .rd_mux_a_ex_reg_29(rd_mux_a_ex_reg_30),
        .rd_mux_a_ex_reg_3(rd_mux_a_ex_reg_4),
        .rd_mux_a_ex_reg_30(rd_mux_a_ex_reg_31),
        .rd_mux_a_ex_reg_31(rd_mux_a_ex_reg_32),
        .rd_mux_a_ex_reg_4(rd_mux_a_ex_reg_5),
        .rd_mux_a_ex_reg_5(rd_mux_a_ex_reg_6),
        .rd_mux_a_ex_reg_6(rd_mux_a_ex_reg_7),
        .rd_mux_a_ex_reg_7(rd_mux_a_ex_reg_8),
        .rd_mux_a_ex_reg_8(rd_mux_a_ex_reg_9),
        .rd_mux_a_ex_reg_9(rd_mux_a_ex_reg_10),
        .se_half_wb(se_half_wb),
        .se_half_wb_reg({mem_r_data_s[31:26],mem_r_data_s[24:16],rd_mux_a_ex_reg[6:1],mem_r_data_u,rd_mux_a_ex_reg[0]}),
        .w_u_fault_reg_0(w_u_fault_reg));
  design_1_CORTEXM1_AXI_0_1_cm1_multiply_shift u_mul_shft
       (.D(n_rot3),
        .HCLK(HCLK),
        .Q({hold_reg1[27:26],hold_reg1[22:18],hold_reg1[15:11],hold_reg1[8:6]}),
        .\a_term_reg[31] ({\rptr_a_ex_reg[3] [26:23],a_reg_0[27:26],\rptr_a_ex_reg[3] [22:13],a_reg_0[15],\rptr_a_ex_reg[3] [12:11],a_reg_0[12],\rptr_a_ex_reg[3] [10:2],fptr_wdata,\rptr_a_ex_reg[3] [1:0]}),
        .b_reg_0(b_reg_0),
        .c_flag_mux_i_4(c_flag_mux_i_4),
        .c_flag_mux_reg(c_flag_mux_reg_1),
        .c_flag_mux_reg_0(c_flag_mux_reg_2),
        .carry_in_ex(carry_in_ex),
        .\hold_reg1_reg[11] (\hold_reg1_reg[11]_0 ),
        .\hold_reg1_reg[12] (\hold_reg1_reg[12]_0 ),
        .\hold_reg1_reg[13] (\hold_reg1_reg[13]_1 ),
        .\hold_reg1_reg[14] (\hold_reg1_reg[14]_0 ),
        .\hold_reg1_reg[15] (\hold_reg1_reg[15]_0 ),
        .\hold_reg1_reg[18] (\hold_reg1_reg[18]_1 ),
        .\hold_reg1_reg[19] (\hold_reg1_reg[19]_0 ),
        .\hold_reg1_reg[20] (\hold_reg1_reg[20]_0 ),
        .\hold_reg1_reg[21] (\hold_reg1_reg[21]_0 ),
        .\hold_reg1_reg[22] (\hold_reg1_reg[22]_1 ),
        .\hold_reg1_reg[26] (\hold_reg1_reg[26]_0 ),
        .\hold_reg1_reg[27] (\hold_reg1_reg[27]_0 ),
        .\hold_reg1_reg[6] (\hold_reg1_reg[6]_0 ),
        .\hold_reg1_reg[7] (\hold_reg1_reg[7]_0 ),
        .\hold_reg1_reg[8] (\hold_reg1_reg[8]_0 ),
        .\i_mult_out_reg[15]__1 (\i_mult_out_reg[15]__1 ),
        .\m_amt_ex2_reg[4] (\m_amt_ex2_reg[4] ),
        .m_ext(m_ext),
        .m_ext_ex2_reg(m_ext_ex2_reg),
        .m_ext_ex2_reg_0(m_ext_ex2_reg_0),
        .m_ext_ex2_reg_1(m_ext_ex2_reg_1),
        .m_ext_ex2_reg_10(m_ext_ex2_reg_10),
        .m_ext_ex2_reg_11(m_ext_ex2_reg_11),
        .m_ext_ex2_reg_12(m_ext_ex2_reg_12),
        .m_ext_ex2_reg_13(m_ext_ex2_reg_13),
        .m_ext_ex2_reg_14(m_ext_ex2_reg_14),
        .m_ext_ex2_reg_15(m_ext_ex2_reg_15),
        .m_ext_ex2_reg_16(m_ext_ex2_reg_16),
        .m_ext_ex2_reg_2(m_ext_ex2_reg_2),
        .m_ext_ex2_reg_3(m_ext_ex2_reg_3),
        .m_ext_ex2_reg_4(m_ext_ex2_reg_4),
        .m_ext_ex2_reg_5(m_ext_ex2_reg_5),
        .m_ext_ex2_reg_6(m_ext_ex2_reg_6),
        .m_ext_ex2_reg_7(m_ext_ex2_reg_7),
        .m_ext_ex2_reg_8(m_ext_ex2_reg_8),
        .m_ext_ex2_reg_9(m_ext_ex2_reg_9),
        .m_invert(m_invert),
        .mult_out(mult_out),
        .nxt_mult_out0_carry__2(nxt_mult_out0_carry__2),
        .primask_i_5(primask_i_5),
        .r_amt4_ex2_reg(r_amt4_ex2_reg),
        .r_amt4_ex2_reg_0(r_amt4_ex2_reg_0),
        .\reg_file_a[15][27]_i_2 (\wdata_reg[15]_0 ),
        .\reg_file_a[15][27]_i_2_0 ({\hold_reg2_reg[31]_0 [16:15],hold_reg2[22:18],hold_reg2[15:11],hold_reg2[8],\hold_reg2_reg[31]_0 [7:6]}),
        .rf0_mux_ctl_ex(rf0_mux_ctl_ex),
        .rf_mux_ctl_ex(rf_mux_ctl_ex),
        .\rf_mux_ctl_ex_reg[2] (\rf_mux_ctl_ex_reg[2] ),
        .\rot3_reg[0] (\rot3_reg[0] ));
  design_1_CORTEXM1_AXI_0_1_cm1_reg_bank u_r_bank
       (.CO(CO),
        .D(n_rot3),
        .E(E),
        .HCLK(HCLK),
        .Q({Q[30:22],Q[18],Q[14],Q[11:8],Q[4:3]}),
        .S(u_alu_dec_n_0),
        .au_a_use_pc_ex(au_a_use_pc_ex),
        .b_reg_0(b_reg_0),
        .c_flag(c_flag),
        .c_flag_mux(c_flag_mux),
        .c_flag_wf(c_flag_wf),
        .\hold_reg1_reg[16] (rd_mux_a_ex_reg_6),
        .\hold_reg1_reg[17] (rd_mux_a_ex_reg_9),
        .\hold_reg1_reg[18] (rd_mux_a_ex_reg_13),
        .\hold_reg1_reg[19] (rd_mux_a_ex_reg_17),
        .\hold_reg1_reg[20] (rd_mux_a_ex_reg_21),
        .\hold_reg1_reg[21] (rd_mux_a_ex_reg_25),
        .\hold_reg1_reg[22] (rd_mux_a_ex_reg_29),
        .\hold_reg1_reg[23] (rd_mux_a_ex_reg_1),
        .\hold_reg1_reg[24] (rd_mux_a_ex_reg_8),
        .\hold_reg1_reg[26] (rd_mux_a_ex_reg_15),
        .\hold_reg1_reg[27] (rd_mux_a_ex_reg_19),
        .\hold_reg1_reg[28] (rd_mux_a_ex_reg_23),
        .\hold_reg1_reg[29] (rd_mux_a_ex_reg_27),
        .\hold_reg1_reg[30] (\hold_reg1_reg[30]_1 ),
        .\hold_reg1_reg[30]_0 (rd_mux_a_ex_reg_31),
        .\hold_reg1_reg[31] (rd_mux_a_ex_reg_3),
        .invert_b_ex_reg(D),
        .ls_byte_ex(ls_byte_ex),
        .ls_byte_ex_reg(ls_byte_ex_reg),
        .ls_byte_ex_reg_0(ls_byte_ex_reg_0),
        .ls_byte_ex_reg_1(ls_byte_ex_reg_1),
        .ls_byte_ex_reg_2(ls_byte_ex_reg_2),
        .ls_half_ex(ls_half_ex),
        .ls_half_ex_reg(ls_half_ex_reg),
        .ls_half_ex_reg_0(ls_half_ex_reg_0),
        .ls_half_ex_reg_1(ls_half_ex_reg_1),
        .ls_half_ex_reg_2(ls_half_ex_reg_2),
        .\mem_held_addr_reg[11] (\mem_held_addr_reg[11]_1 ),
        .\mem_held_addr_reg[15] (\mem_held_addr_reg[15]_1 ),
        .\mem_held_addr_reg[15]_0 (\mem_held_addr_reg[15]_2 ),
        .\mem_held_addr_reg[27] (\mem_held_addr_reg[27]_1 ),
        .\mem_held_addr_reg[27]_0 (\mem_held_addr_reg[27]_2 ),
        .\mem_held_addr_reg[31] (\mem_held_addr_reg[31]_0 ),
        .\mem_held_addr_reg[31]_0 (\mem_held_addr_reg[31]_1 ),
        .\mem_held_addr_reg[31]_1 ({\mem_held_addr_reg[31]_2 [7],\mem_held_addr_reg[31]_2 [5],\mem_held_addr_reg[31]_2 [3:0]}),
        .\mem_held_addr_reg[31]_2 ({S,u_alu_dec_n_1}),
        .\mem_held_addr_reg[31]_i_1_0 (\mem_held_addr_reg[31]_i_1_0 ),
        .nxt_rptr_b_ex(nxt_rptr_b_ex),
        .p_1_in2_in(p_1_in2_in),
        .\pc_reg[11] (\pc_reg[11]_0 ),
        .\pc_reg[15] (\pc_reg[15]_0 ),
        .\pc_reg[24] (\pc_reg[24]_0 ),
        .\pc_reg[25] (\pc_reg[25]_0 ),
        .\pc_reg[28] (\pc_reg[28]_0 ),
        .\pc_reg[29] (\pc_reg[29]_0 ),
        .\pc_reg[30] (\pc_reg[30]_0 ),
        .\pc_reg[30]_0 (\pc_reg[30]_1 ),
        .\pc_reg[31] (\pc_reg[31]_0 ),
        .\pc_reg[4] (\pc_reg[4]_0 ),
        .\pc_reg[5] (\pc_reg[5]_0 ),
        .\pc_reg[9] (\pc_reg[9]_0 ),
        .\reg_file_a_reg[0][0]_0 (\reg_file_a_reg[0][0] ),
        .\reg_file_a_reg[10][0]_0 (\reg_file_a_reg[10][0] ),
        .\reg_file_a_reg[11][0]_0 (\reg_file_a_reg[11][0] ),
        .\reg_file_a_reg[12][0]_0 (\reg_file_a_reg[12][0] ),
        .\reg_file_a_reg[13][0]_0 (\reg_file_a_reg[13][0] ),
        .\reg_file_a_reg[14][0]_0 (\reg_file_a_reg[14][0] ),
        .\reg_file_a_reg[1][0]_0 (\reg_file_a_reg[1][0] ),
        .\reg_file_a_reg[2][0]_0 (\reg_file_a_reg[2][0] ),
        .\reg_file_a_reg[3][0]_0 (\reg_file_a_reg[3][0] ),
        .\reg_file_a_reg[4][0]_0 (\reg_file_a_reg[4][0] ),
        .\reg_file_a_reg[5][0]_0 (\reg_file_a_reg[5][0] ),
        .\reg_file_a_reg[6][0]_0 (\reg_file_a_reg[6][0] ),
        .\reg_file_a_reg[7][0]_0 (\reg_file_a_reg[7][0] ),
        .\reg_file_a_reg[8][0]_0 (\reg_file_a_reg[8][0] ),
        .\reg_file_a_reg[9][0]_0 (\reg_file_a_reg[9][0] ),
        .rf_wdata(rf_wdata),
        .\rot3[30]_i_5_0 (\rot3[30]_i_5 ),
        .\rot3_reg[24] (\rot3_reg[24] ),
        .\rot3_reg[24]_0 (\rot3_reg[24]_0 ),
        .\rot3_reg[24]_1 (\rot3_reg[24]_1 ),
        .\rptr_a_ex_reg[3]_0 ({\rptr_a_ex_reg[3] [26:23],a_reg_0[27:26],\rptr_a_ex_reg[3] [22:13],a_reg_0[15],\rptr_a_ex_reg[3] [12:11],a_reg_0[12],\rptr_a_ex_reg[3] [10:2],fptr_wdata,\rptr_a_ex_reg[3] [1:0]}),
        .\rptr_a_ex_reg[3]_1 (\rptr_a_ex_reg[3]_0 ),
        .sel_wf_c(sel_wf_c),
        .sel_wf_v(sel_wf_v),
        .sel_wf_z(sel_wf_z),
        .use_imm_ex(use_imm_ex),
        .v_flag(v_flag),
        .v_flag_au(v_flag_au),
        .v_flag_wf(v_flag_wf),
        .w_enable_ex(w_enable_ex),
        .\wdata_reg[15] (\wdata_reg[15] ),
        .\wdata_reg[15]_0 (\wdata_reg[15]_0 ),
        .\wdata_reg[23] (\wdata_reg[23] ),
        .\wdata_reg[23]_0 ({\hold_reg2_reg[31]_0 [12],hold_reg2[22:18],\hold_reg2_reg[31]_0 [11:10],hold_reg2[15:11],\hold_reg2_reg[31]_0 [9],hold_reg2[8]}),
        .wptr_ex(wptr_ex),
        .z_flag(z_flag),
        .z_flag_mux(z_flag_mux),
        .z_flag_wf(z_flag_wf),
        .ze_half_wb(ze_half_wb),
        .ze_half_wb_reg(ze_half_wb_reg_13),
        .ze_half_wb_reg_0(ze_half_wb_reg_6),
        .ze_half_wb_reg_1(ze_half_wb_reg),
        .ze_half_wb_reg_10(ze_half_wb_reg_9),
        .ze_half_wb_reg_11(ze_half_wb_reg_10),
        .ze_half_wb_reg_12(ze_half_wb_reg_11),
        .ze_half_wb_reg_13(ze_half_wb_reg_12),
        .ze_half_wb_reg_2(ze_half_wb_reg_0),
        .ze_half_wb_reg_3(ze_half_wb_reg_1),
        .ze_half_wb_reg_4(ze_half_wb_reg_2),
        .ze_half_wb_reg_5(ze_half_wb_reg_3),
        .ze_half_wb_reg_6(ze_half_wb_reg_4),
        .ze_half_wb_reg_7(ze_half_wb_reg_5),
        .ze_half_wb_reg_8(ze_half_wb_reg_7),
        .ze_half_wb_reg_9(ze_half_wb_reg_8),
        .zero_a_ex(zero_a_ex),
        .zero_a_ex_reg(zero_a_ex_reg),
        .zero_a_ex_reg_0(zero_a_ex_reg_0),
        .zero_a_ex_reg_1(zero_a_ex_reg_1),
        .zero_a_ex_reg_2(zero_a_ex_reg_2),
        .zero_a_ex_reg_3(zero_a_ex_reg_3),
        .zero_a_ex_reg_4(zero_a_ex_reg_4),
        .zero_a_ex_reg_5(zero_a_ex_reg_5),
        .zero_a_ex_reg_6(zero_a_ex_reg_6));
  FDCE v_flag_au_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(r_amt4_ex2_reg),
        .D(v_flag_au_reg_0),
        .Q(v_flag_au));
  FDCE v_flag_wf_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(r_amt4_ex2_reg),
        .D(v_flag_wf_reg_0),
        .Q(v_flag_wf));
  LUT5 #(
    .INIT(32'h00000001)) 
    z_flag_mux_i_10
       (.I0(\mem_held_addr_reg[23]_1 [3]),
        .I1(\mem_held_addr_reg[23]_1 [5]),
        .I2(\mem_held_addr_reg[23]_1 [1]),
        .I3(\mem_held_addr_reg[23]_1 [2]),
        .I4(z_flag_mux_i_27_n_0),
        .O(z_flag_mux_i_10_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    z_flag_mux_i_26
       (.I0(\mem_held_addr_reg[23]_1 [7]),
        .I1(\mem_held_addr_reg[23]_1 [0]),
        .I2(\mem_held_addr_reg[23]_1 [9]),
        .I3(\mem_held_addr_reg[23]_1 [6]),
        .O(z_flag_mux_i_26_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    z_flag_mux_i_27
       (.I0(O[1]),
        .I1(O[0]),
        .I2(\mem_held_addr_reg[23]_1 [10]),
        .I3(\mem_held_addr_reg[23]_1 [4]),
        .O(z_flag_mux_i_27_n_0));
  LUT6 #(
    .INIT(64'h0000000001000000)) 
    z_flag_mux_i_3
       (.I0(z_flag_mux_i_8_n_0),
        .I1(D[5]),
        .I2(z_flag_mux_reg_0),
        .I3(itcm_sel_i_6),
        .I4(z_flag_mux_i_10_n_0),
        .I5(\mem_held_addr_reg[19]_i_1 ),
        .O(itcm_sel_i_5));
  (* SOFT_HLUTNM = "soft_lutpair251" *) 
  LUT2 #(
    .INIT(4'h8)) 
    z_flag_mux_i_54
       (.I0(Q[9]),
        .I1(au_a_use_pc_ex),
        .O(\pc_reg[10]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair251" *) 
  LUT2 #(
    .INIT(4'h8)) 
    z_flag_mux_i_55
       (.I0(Q[10]),
        .I1(au_a_use_pc_ex),
        .O(\pc_reg[11]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair252" *) 
  LUT2 #(
    .INIT(4'h8)) 
    z_flag_mux_i_56
       (.I0(Q[7]),
        .I1(au_a_use_pc_ex),
        .O(\pc_reg[8]_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    z_flag_mux_i_57
       (.I0(Q[5]),
        .I1(au_a_use_pc_ex),
        .O(\pc_reg[6]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair252" *) 
  LUT2 #(
    .INIT(4'h8)) 
    z_flag_mux_i_58
       (.I0(Q[6]),
        .I1(au_a_use_pc_ex),
        .O(\pc_reg[7]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair249" *) 
  LUT2 #(
    .INIT(4'h8)) 
    z_flag_mux_i_59
       (.I0(Q[17]),
        .I1(au_a_use_pc_ex),
        .O(\pc_reg[18]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair249" *) 
  LUT2 #(
    .INIT(4'h8)) 
    z_flag_mux_i_60
       (.I0(Q[18]),
        .I1(au_a_use_pc_ex),
        .O(\pc_reg[19]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair250" *) 
  LUT2 #(
    .INIT(4'h8)) 
    z_flag_mux_i_61
       (.I0(Q[15]),
        .I1(au_a_use_pc_ex),
        .O(\pc_reg[16]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair250" *) 
  LUT2 #(
    .INIT(4'h8)) 
    z_flag_mux_i_62
       (.I0(Q[16]),
        .I1(au_a_use_pc_ex),
        .O(\pc_reg[17]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair248" *) 
  LUT2 #(
    .INIT(4'h8)) 
    z_flag_mux_i_63
       (.I0(Q[19]),
        .I1(au_a_use_pc_ex),
        .O(\pc_reg[20]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair248" *) 
  LUT2 #(
    .INIT(4'h8)) 
    z_flag_mux_i_64
       (.I0(Q[20]),
        .I1(au_a_use_pc_ex),
        .O(\pc_reg[21]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair247" *) 
  LUT2 #(
    .INIT(4'h8)) 
    z_flag_mux_i_65
       (.I0(Q[21]),
        .I1(au_a_use_pc_ex),
        .O(\pc_reg[22]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair247" *) 
  LUT2 #(
    .INIT(4'h8)) 
    z_flag_mux_i_66
       (.I0(Q[22]),
        .I1(au_a_use_pc_ex),
        .O(\pc_reg[23]_1 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    z_flag_mux_i_8
       (.I0(D[4]),
        .I1(O[3]),
        .I2(\mem_held_addr_reg[23]_1 [8]),
        .I3(O[2]),
        .I4(z_flag_mux_i_26_n_0),
        .O(z_flag_mux_i_8_n_0));
  FDCE z_flag_mux_reg
       (.C(HCLK),
        .CE(update_n_ex),
        .CLR(r_amt4_ex2_reg),
        .D(nxt_z_flag_mux),
        .Q(z_flag_mux));
  FDCE z_flag_wf_reg
       (.C(HCLK),
        .CE(update_n_ex),
        .CLR(r_amt4_ex2_reg),
        .D(rf_wdata[30]),
        .Q(z_flag_wf));
endmodule

(* ORIG_REF_NAME = "cm1_excpt" *) 
module design_1_CORTEXM1_AXI_0_1_cm1_excpt
   (SYSRESETn_0,
    load_xpsr_ex_reg_0,
    lockup_br_de,
    locked_up_reg_0,
    micro_code_fe_reg_0,
    micro_code_de,
    nvic_excpt_taken,
    instr_faulted_reg_0,
    int_fault_ex_reg_0,
    nvic_excpt_svc_valid,
    excpt_isb_de,
    rst_fptr_align_ex,
    dbg_wdata_sel_de,
    i_dbg_wdata_sel_ex_reg_0,
    fptr_align,
    \instr_de_reg[10] ,
    micro_code_de_reg_0,
    \instr_de_reg[14] ,
    \instr_de_reg[11] ,
    D,
    last_uncond_phase_ex_reg,
    last_uncond_phase_ex_reg_0,
    \instr_de_reg[14]_0 ,
    first32_ex_reg,
    \instr_de_reg[14]_1 ,
    \imm_held_reg[5] ,
    \instr_de_reg[9] ,
    micro_code_de_reg_1,
    first32_ex_reg_0,
    branch_ex_reg,
    force_hf_reg_0,
    nvic_primask,
    last_uncond_phase_ex_reg_1,
    branch_ex0,
    update_n,
    update_c,
    \write_addr_reg[0] ,
    branching_ex_reg,
    \pc_reg[23] ,
    O,
    branch_ex_reg_0,
    \pc_reg[11] ,
    zero_a_ex_reg,
    invert_b_ex_reg,
    nxt_fetch_internal,
    nxt_int_rack,
    micro_code_fe_reg_1,
    nxt_invert_b_ex,
    nxt_dreq_rd_ex,
    nxt_ifetch,
    p_8_in,
    nxt_last_uncond_phase_ex,
    nxt_w_phase_ex,
    \instr_de_reg[12] ,
    last_uncond_phase_ex_reg_2,
    nxt_first_pop_pc_ex,
    \instr_de_reg[9]_0 ,
    \instr_de_reg[14]_2 ,
    ldm_pop_de,
    i_dbg_wdata_sel_de_reg_0,
    nxt_dreq_wr_ex,
    store_de,
    tbit,
    \instr_de_reg[12]_0 ,
    update_v,
    cps_de,
    any_dsb_ex0,
    nxt_second32_ex,
    mul_de,
    stm_push_de,
    first32_ex_reg_1,
    \instr_de_reg[10]_0 ,
    \instr_de_reg[13] ,
    zero_a_ex0,
    \instr_de_reg[11]_0 ,
    nxt_invert_b_ex2,
    mode_reg_0,
    first32_de,
    i_dbg_wdata_sel_de_reg_1,
    i_dbg_wdata_sel_de_reg_2,
    load_ex_reg,
    last_uncond_phase_ex_reg_3,
    excpt_ret_fe,
    \write_addr_reg[0]_0 ,
    \write_addr_reg[0]_1 ,
    nxt_pf_fault_de,
    micro_code_de_reg_2,
    locked_up_reg_1,
    \dp_ipsr_7to2_reg[6]_0 ,
    \dp_ipsr_7to2_reg[5]_0 ,
    micro_code_de_reg_3,
    nvic_excpt_fault_req,
    first_ex_phase_reg,
    p_1_in2_in,
    rf_wdata,
    \pc_reg[31] ,
    invert_b_ex_reg_0,
    invert_b_ex_reg_1,
    dreq_rd_ex_reg,
    first_ex_phase_reg_0,
    nxt_irack,
    nxt_z_flag_mux,
    i_dbg_wdata_sel_ex_reg_1,
    CO,
    IRQ_0_sp_1,
    \dp_ipsr_7to2_reg[7]_0 ,
    r_hdf_actv_reg,
    nmi_actv,
    \i_svc_lvl_reg[1] ,
    \dp_ipsr_7to2_reg[4]_0 ,
    \dp_ipsr_7to2_reg[7]_1 ,
    \dp_ipsr_7to2_reg[4]_1 ,
    int_actv,
    i_nvic_excpt_svc_valid_reg_0,
    hdf_actv,
    \dp_ipsr_7to2_reg[7]_2 ,
    biu_write_reg,
    \wptr_ex_reg[1] ,
    \wptr_ex_reg[1]_0 ,
    \wptr_ex_reg[2] ,
    \wptr_ex_reg[1]_1 ,
    \wptr_ex_reg[3] ,
    \wptr_ex_reg[1]_2 ,
    \wptr_ex_reg[3]_0 ,
    \wptr_ex_reg[1]_3 ,
    \wptr_ex_reg[1]_4 ,
    \wptr_ex_reg[2]_0 ,
    \wptr_ex_reg[3]_1 ,
    \wptr_ex_reg[1]_5 ,
    \wptr_ex_reg[2]_1 ,
    \wptr_ex_reg[1]_6 ,
    \wptr_ex_reg[0] ,
    \wptr_ex_reg[1]_7 ,
    i_dbg_wdata_sel_de_reg_3,
    HCLK,
    biu_rdy,
    adv_de_to_ex,
    nxt_instr_faulted,
    fptr_align_reg_0,
    Q,
    push_ex_reg,
    push_ex_reg_0,
    load_ex_reg_0,
    dreq_rd_ex_reg_0,
    bcc_first_ex_reg,
    tbit_ex_reg,
    \pre_pc_mux_ctl_ex_reg[1] ,
    invert_b_ex_reg_2,
    msr_ex_reg,
    sbit_ex_reg,
    sbit_ex_reg_0,
    shift_ex_reg,
    pop_pc_ex_reg,
    pf_fault_de,
    first_pop_pc_ex_reg,
    \wdata_reg[25] ,
    \wdata_reg[9] ,
    dreq_rd_ex,
    \HADDR_reg[1] ,
    use_primask_ex,
    \wdata_reg[5] ,
    br_first_ex,
    fetch_internal_reg,
    fetch_phase,
    au_in_b,
    \mem_held_addr_reg[3] ,
    \mem_held_addr_reg[3]_0 ,
    a_reg_0,
    \reg_file_a_reg[15][23] ,
    \mem_held_addr_reg[23] ,
    \rptr_a_ex_reg[3] ,
    rptr_a_ex,
    branch_ex_reg_1,
    pre_update_v_ex_reg,
    mul_ex_reg,
    \rf_mux_ctl_ex_reg[2] ,
    \write_addr_reg[0]_2 ,
    branching_ex,
    \write_addr_reg[1] ,
    \read_addr_reg[1] ,
    \pc_reg[14] ,
    seq_fetch_addr,
    \pc_reg[2] ,
    \pc_reg[13] ,
    \pc_reg[12] ,
    \pc_reg[11]_0 ,
    \pc_reg[10] ,
    \pc_reg[9] ,
    \pc_reg[8] ,
    \pc_reg[7] ,
    \pc_reg[6] ,
    \pc_reg[5] ,
    \pc_reg[4] ,
    \pc_reg[3] ,
    \pc_reg[2]_0 ,
    SYSRESETn,
    \instr_de_reg[0] ,
    \instr_de_reg[15] ,
    \instr_de_reg[1] ,
    \instr_de_reg[2] ,
    \instr_de_reg[3] ,
    \instr_de_reg[4] ,
    \instr_de_reg[5] ,
    \instr_de_reg[6] ,
    \instr_de_reg[7] ,
    \instr_de_reg[8] ,
    \instr_de_reg[9]_1 ,
    \instr_de_reg[10]_1 ,
    \instr_de_reg[11]_1 ,
    \instr_de_reg[12]_1 ,
    \instr_de_reg[13]_0 ,
    \instr_de_reg[14]_3 ,
    \instr_de_reg[15]_0 ,
    invert_b_ex_reg_3,
    invert_b_ex2,
    dreq_rd_ex_reg_1,
    dreq_rd_ex_reg_2,
    ifetch_reg,
    stm_push_ex,
    lsm_last_a_phase_ex,
    last_uncond_phase_ex_reg_4,
    last_uncond_phase_ex_reg_5,
    w_phase_ex_reg,
    w_phase_ex_reg_0,
    \wptr_decoded_reg[1] ,
    \wptr_decoded_reg[1]_0 ,
    br_first_ex_reg,
    br_first_ex_reg_0,
    \rptr_b_ex2[1]_i_3_0 ,
    dreq_wr_ex_reg,
    \wdata_mux_ctl_ex_reg[0] ,
    nxt_branching_ex,
    ifetch_reg_0,
    dreq_wr_ex_reg_0,
    \wdata_mux_ctl_ex_reg[1] ,
    second_ex_phase,
    cps_ex_reg,
    any_dsb_ex_reg,
    \wptr_decoded[3]_i_2 ,
    zero_a_ex_reg_0,
    zero_a_ex_reg_1,
    zero_a_ex_reg_2,
    invert_b_ex2_reg,
    invert_b_ex2_reg_0,
    invert_b_ex2_reg_1,
    invert_b_ex2_reg_2,
    \rptr_b_ex2[1]_i_4_0 ,
    nvic_lockup,
    first32_ex_reg_2,
    int_fault_ex_reg_1,
    excpt_ret_de,
    E,
    use_dp_tbit_reg_0,
    first_ex_phase,
    use_dp_tbit_reg_1,
    msr_ex,
    use_control_ex,
    \reg_file_a_reg[15][24] ,
    \reg_file_a_reg[0][25] ,
    cps_ex,
    nxt_ldm_base,
    pop_pc_ex,
    ifetch_reg_1,
    \hold_reg2_reg[0] ,
    \hold_reg2_reg[31] ,
    branch_ex,
    \rf1_mux_ctl_ex_reg[1] ,
    \rf_mux_ctl_ex_reg[2]_0 ,
    \rf_mux_ctl_ex_reg[2]_1 ,
    \rf_mux_ctl_ex_reg[2]_2 ,
    load_ex,
    \rf0_mux_ctl_ex_reg[0] ,
    \rf0_mux_ctl_ex_reg[0]_0 ,
    \rptr_a_ex2_reg[3] ,
    two_phase_ex,
    lsm_last_d_phase_ex,
    ldm_pop_ex,
    ldm_base_loaded,
    br_lr_ex,
    excpt_ret_de_reg,
    tbit_ex,
    excpt_ret_de_reg_0,
    \write_addr_reg[1]_0 ,
    \write_addr_reg[1]_1 ,
    held_fault1,
    held_fault0,
    pf_fault_fe,
    \read_addr_reg[0] ,
    \reg_sel_reg[3] ,
    p_1_in16_in,
    p_0_in18_in,
    \reg_sel_reg[3]_0 ,
    second32_ex,
    dp_tbit_reg_reg_0,
    \dp_ipsr_1to0_reg[1]_0 ,
    \dp_ipsr_1to0_reg[1]_1 ,
    \dp_ipsr_1to0_reg[1]_2 ,
    ldm_base,
    w_phase_ex,
    use_dp_tbit_i_3_0,
    biu_wfault,
    \reg_file_a_reg[15][24]_0 ,
    \wdata_reg[24] ,
    \wdata_reg[24]_0 ,
    \HADDR_reg[27] ,
    mult_out,
    \reg_file_a_reg[15][9] ,
    \reg_file_a_reg[15][9]_0 ,
    dp_tbit_reg_reg_1,
    \reg_file_a_reg[0][25]_0 ,
    \reg_file_a_reg[15][24]_1 ,
    \wdata_reg[24]_1 ,
    \wdata_reg[27] ,
    \hold_reg2_reg[0]_0 ,
    \hold_reg2_reg[31]_0 ,
    \hold_reg2_reg[31]_1 ,
    \hold_reg2_reg[1] ,
    \hold_reg2_reg[31]_2 ,
    \hold_reg2_reg[2] ,
    \hold_reg2_reg[3] ,
    \hold_reg2_reg[4] ,
    \hold_reg2_reg[5] ,
    \hold_reg2_reg[6] ,
    \hold_reg2_reg[7] ,
    \hold_reg2_reg[8] ,
    load_fptr,
    \hold_reg2_reg[10] ,
    \hold_reg2_reg[11] ,
    \hold_reg2_reg[12] ,
    \hold_reg2_reg[13] ,
    \hold_reg2_reg[14] ,
    \hold_reg2_reg[15] ,
    \hold_reg2_reg[16] ,
    \hold_reg2_reg[17] ,
    \hold_reg2_reg[18] ,
    \hold_reg2_reg[19] ,
    \hold_reg2_reg[20] ,
    \hold_reg2_reg[21] ,
    \hold_reg2_reg[22] ,
    \hold_reg2_reg[23] ,
    \hold_reg2_reg[24] ,
    \hold_reg2_reg[25] ,
    \hold_reg2_reg[26] ,
    \hold_reg2_reg[27] ,
    \hold_reg2_reg[28] ,
    \hold_reg2_reg[29] ,
    \hold_reg2_reg[30] ,
    \hold_reg2_reg[31]_3 ,
    \HADDR_reg[23] ,
    \HADDR_reg[22] ,
    \HADDR_reg[21] ,
    \HADDR_reg[20] ,
    \HADDR_reg[19] ,
    \HADDR_reg[18] ,
    \HADDR_reg[17] ,
    \HADDR_reg[16] ,
    \HADDR_reg[15] ,
    hi_pre_fetch_addr_reg,
    biu_commit_reg_reg,
    biu_commit_reg_reg_0,
    \biu_addr_31_29_reg_reg[30] ,
    \HADDR_reg[27]_0 ,
    \HADDR_reg[26] ,
    \HADDR_reg[25] ,
    \HADDR_reg[24] ,
    \HADDR_reg[0] ,
    ldm_base_load,
    \reg_file_a_reg[15][10] ,
    \dp_ipsr_7to2_reg[5]_1 ,
    \dp_ipsr_7to2_reg[5]_2 ,
    \dp_ipsr_7to2_reg[5]_3 ,
    b_reg_0,
    \dp_ipsr_7to2_reg[4]_2 ,
    \dp_ipsr_7to2_reg[4]_3 ,
    \dp_ipsr_7to2_reg[3]_0 ,
    \dp_ipsr_7to2_reg[3]_1 ,
    \dp_ipsr_7to2_reg[2]_0 ,
    write_sp,
    \dp_ipsr_1to0_reg[1]_3 ,
    \dp_ipsr_1to0_reg[1]_4 ,
    \dp_ipsr_1to0[1]_i_7_0 ,
    \dp_ipsr_1to0[1]_i_7_1 ,
    \reg_file_a_reg[0][0] ,
    \reg_file_a_reg[0][0]_0 ,
    \reg_file_a_reg[0][0]_1 ,
    \reg_file_a_reg[0][0]_2 ,
    primask_i_3_0,
    primask_i_3_1,
    primask_i_3_2,
    primask_i_3_3,
    primask_i_3_4,
    \dp_ipsr_1to0_reg[0]_0 ,
    \wdata_reg[25]_0 ,
    \wdata_reg[25]_1 ,
    \reg_file_a_reg[0][25]_1 ,
    \reg_file_a_reg[0][25]_2 ,
    \reg_file_a_reg[15][9]_1 ,
    \reg_file_a_reg[15][9]_2 ,
    \reg_file_a_reg[15][9]_3 ,
    z_flag_mux_reg,
    z_flag_mux_reg_0,
    z_flag_mux_reg_1,
    z_flag_mux_reg_2,
    z_flag_mux_reg_3,
    z_flag_mux_reg_4,
    z_flag_mux_reg_5,
    z_flag_mux_reg_6,
    z_flag_mux_reg_7,
    z_flag_mux_reg_8,
    \reg_file_a_reg[15][23]_0 ,
    \reg_file_a_reg[15][10]_0 ,
    \reg_file_a_reg[15][16] ,
    \reg_file_a_reg[15][17] ,
    DI,
    \reg_file_a_reg[15][23]_1 ,
    \reg_file_a_reg[15][23]_2 ,
    \reg_file_a_reg[15][17]_0 ,
    \reg_file_a_reg[15][17]_1 ,
    \reg_file_a_reg[15][16]_0 ,
    \mem_held_addr_reg[11] ,
    \reg_file_a_reg[15][10]_1 ,
    fptr_wdata,
    \wdata_reg[26] ,
    \wdata_reg[27]_0 ,
    \reg_file_a[15][10]_i_2_0 ,
    \reg_file_a[15][16]_i_2_0 ,
    \reg_file_a[15][17]_i_2_0 ,
    \reg_file_a[15][23]_i_2_0 ,
    \mem_held_addr_reg[3]_1 ,
    S,
    \mem_held_addr_reg[7] ,
    \mem_held_addr_reg[11]_0 ,
    \mem_held_addr_reg[15] ,
    \mem_held_addr_reg[15]_0 ,
    \mem_held_addr_reg[19] ,
    \mem_held_addr_reg[19]_0 ,
    \mem_held_addr_reg[23]_0 ,
    IRQ,
    int_prev,
    \i_pend_state_reg[0] ,
    \i_pend_state_reg[0]_0 ,
    NMI,
    \i_pend_state_reg[1] ,
    irq_lvl,
    svc_lvl_0,
    \r_int_actv_lvl_reg[1] ,
    \r_int_actv_lvl_reg[1]_0 ,
    r_hdf_actv,
    r_nmi_actv,
    \HRDATA_reg[5] ,
    \HRDATA_reg[5]_0 ,
    \HRDATA_reg[2] ,
    \i_pend_state_reg[1]_0 ,
    \dp_ipsr_7to2_reg[7]_3 ,
    cps_data_ex,
    \latched_excpt_num_reg[4]_0 ,
    \reg_file_a_reg[0][0]_3 ,
    \reg_file_a_reg[0][0]_4 );
  output SYSRESETn_0;
  output load_xpsr_ex_reg_0;
  output lockup_br_de;
  output locked_up_reg_0;
  output micro_code_fe_reg_0;
  output micro_code_de;
  output nvic_excpt_taken;
  output instr_faulted_reg_0;
  output int_fault_ex_reg_0;
  output nvic_excpt_svc_valid;
  output excpt_isb_de;
  output rst_fptr_align_ex;
  output dbg_wdata_sel_de;
  output i_dbg_wdata_sel_ex_reg_0;
  output fptr_align;
  output \instr_de_reg[10] ;
  output micro_code_de_reg_0;
  output \instr_de_reg[14] ;
  output \instr_de_reg[11] ;
  output [1:0]D;
  output last_uncond_phase_ex_reg;
  output last_uncond_phase_ex_reg_0;
  output \instr_de_reg[14]_0 ;
  output [0:0]first32_ex_reg;
  output \instr_de_reg[14]_1 ;
  output \imm_held_reg[5] ;
  output \instr_de_reg[9] ;
  output micro_code_de_reg_1;
  output first32_ex_reg_0;
  output [28:0]branch_ex_reg;
  output force_hf_reg_0;
  output nvic_primask;
  output [1:0]last_uncond_phase_ex_reg_1;
  output branch_ex0;
  output update_n;
  output update_c;
  output [1:0]\write_addr_reg[0] ;
  output [1:0]branching_ex_reg;
  output [22:0]\pc_reg[23] ;
  output [3:0]O;
  output branch_ex_reg_0;
  output [3:0]\pc_reg[11] ;
  output [3:0]zero_a_ex_reg;
  output [3:0]invert_b_ex_reg;
  output nxt_fetch_internal;
  output nxt_int_rack;
  output [15:0]micro_code_fe_reg_1;
  output nxt_invert_b_ex;
  output nxt_dreq_rd_ex;
  output nxt_ifetch;
  output p_8_in;
  output nxt_last_uncond_phase_ex;
  output nxt_w_phase_ex;
  output \instr_de_reg[12] ;
  output last_uncond_phase_ex_reg_2;
  output nxt_first_pop_pc_ex;
  output \instr_de_reg[9]_0 ;
  output \instr_de_reg[14]_2 ;
  output ldm_pop_de;
  output [1:0]i_dbg_wdata_sel_de_reg_0;
  output nxt_dreq_wr_ex;
  output store_de;
  output tbit;
  output \instr_de_reg[12]_0 ;
  output update_v;
  output cps_de;
  output any_dsb_ex0;
  output nxt_second32_ex;
  output mul_de;
  output stm_push_de;
  output first32_ex_reg_1;
  output \instr_de_reg[10]_0 ;
  output \instr_de_reg[13] ;
  output zero_a_ex0;
  output \instr_de_reg[11]_0 ;
  output nxt_invert_b_ex2;
  output mode_reg_0;
  output first32_de;
  output [1:0]i_dbg_wdata_sel_de_reg_1;
  output i_dbg_wdata_sel_de_reg_2;
  output load_ex_reg;
  output last_uncond_phase_ex_reg_3;
  output excpt_ret_fe;
  output [0:0]\write_addr_reg[0]_0 ;
  output [0:0]\write_addr_reg[0]_1 ;
  output nxt_pf_fault_de;
  output [0:0]micro_code_de_reg_2;
  output [0:0]locked_up_reg_1;
  output \dp_ipsr_7to2_reg[6]_0 ;
  output [1:0]\dp_ipsr_7to2_reg[5]_0 ;
  output micro_code_de_reg_3;
  output nvic_excpt_fault_req;
  output first_ex_phase_reg;
  output [12:0]p_1_in2_in;
  output [12:0]rf_wdata;
  output [31:0]\pc_reg[31] ;
  output [3:0]invert_b_ex_reg_0;
  output [3:0]invert_b_ex_reg_1;
  output dreq_rd_ex_reg;
  output [0:0]first_ex_phase_reg_0;
  output nxt_irack;
  output nxt_z_flag_mux;
  output i_dbg_wdata_sel_ex_reg_1;
  output [0:0]CO;
  output IRQ_0_sp_1;
  output \dp_ipsr_7to2_reg[7]_0 ;
  output [1:0]r_hdf_actv_reg;
  output nmi_actv;
  output [1:0]\i_svc_lvl_reg[1] ;
  output \dp_ipsr_7to2_reg[4]_0 ;
  output \dp_ipsr_7to2_reg[7]_1 ;
  output \dp_ipsr_7to2_reg[4]_1 ;
  output int_actv;
  output i_nvic_excpt_svc_valid_reg_0;
  output hdf_actv;
  output [1:0]\dp_ipsr_7to2_reg[7]_2 ;
  output biu_write_reg;
  output [0:0]\wptr_ex_reg[1] ;
  output [0:0]\wptr_ex_reg[1]_0 ;
  output [0:0]\wptr_ex_reg[2] ;
  output [0:0]\wptr_ex_reg[1]_1 ;
  output [0:0]\wptr_ex_reg[3] ;
  output [0:0]\wptr_ex_reg[1]_2 ;
  output [0:0]\wptr_ex_reg[3]_0 ;
  output [0:0]\wptr_ex_reg[1]_3 ;
  output [0:0]\wptr_ex_reg[1]_4 ;
  output [0:0]\wptr_ex_reg[2]_0 ;
  output [0:0]\wptr_ex_reg[3]_1 ;
  output [0:0]\wptr_ex_reg[1]_5 ;
  output [0:0]\wptr_ex_reg[2]_1 ;
  output [0:0]\wptr_ex_reg[1]_6 ;
  output [0:0]\wptr_ex_reg[0] ;
  output [0:0]\wptr_ex_reg[1]_7 ;
  input i_dbg_wdata_sel_de_reg_3;
  input HCLK;
  input biu_rdy;
  input adv_de_to_ex;
  input nxt_instr_faulted;
  input fptr_align_reg_0;
  input [15:0]Q;
  input push_ex_reg;
  input push_ex_reg_0;
  input load_ex_reg_0;
  input dreq_rd_ex_reg_0;
  input bcc_first_ex_reg;
  input tbit_ex_reg;
  input \pre_pc_mux_ctl_ex_reg[1] ;
  input invert_b_ex_reg_2;
  input [0:0]msr_ex_reg;
  input sbit_ex_reg;
  input sbit_ex_reg_0;
  input shift_ex_reg;
  input pop_pc_ex_reg;
  input pf_fault_de;
  input first_pop_pc_ex_reg;
  input \wdata_reg[25] ;
  input \wdata_reg[9] ;
  input dreq_rd_ex;
  input \HADDR_reg[1] ;
  input use_primask_ex;
  input [2:0]\wdata_reg[5] ;
  input br_first_ex;
  input fetch_internal_reg;
  input fetch_phase;
  input [3:0]au_in_b;
  input \mem_held_addr_reg[3] ;
  input \mem_held_addr_reg[3]_0 ;
  input [0:0]a_reg_0;
  input [1:0]\reg_file_a_reg[15][23] ;
  input [14:0]\mem_held_addr_reg[23] ;
  input [1:0]\rptr_a_ex_reg[3] ;
  input [1:0]rptr_a_ex;
  input branch_ex_reg_1;
  input pre_update_v_ex_reg;
  input mul_ex_reg;
  input \rf_mux_ctl_ex_reg[2] ;
  input \write_addr_reg[0]_2 ;
  input branching_ex;
  input [1:0]\write_addr_reg[1] ;
  input [1:0]\read_addr_reg[1] ;
  input \pc_reg[14] ;
  input [22:0]seq_fetch_addr;
  input \pc_reg[2] ;
  input \pc_reg[13] ;
  input \pc_reg[12] ;
  input \pc_reg[11]_0 ;
  input \pc_reg[10] ;
  input \pc_reg[9] ;
  input \pc_reg[8] ;
  input \pc_reg[7] ;
  input \pc_reg[6] ;
  input \pc_reg[5] ;
  input \pc_reg[4] ;
  input \pc_reg[3] ;
  input \pc_reg[2]_0 ;
  input SYSRESETn;
  input \instr_de_reg[0] ;
  input [15:0]\instr_de_reg[15] ;
  input \instr_de_reg[1] ;
  input \instr_de_reg[2] ;
  input \instr_de_reg[3] ;
  input \instr_de_reg[4] ;
  input \instr_de_reg[5] ;
  input \instr_de_reg[6] ;
  input \instr_de_reg[7] ;
  input \instr_de_reg[8] ;
  input \instr_de_reg[9]_1 ;
  input \instr_de_reg[10]_1 ;
  input \instr_de_reg[11]_1 ;
  input \instr_de_reg[12]_1 ;
  input \instr_de_reg[13]_0 ;
  input \instr_de_reg[14]_3 ;
  input \instr_de_reg[15]_0 ;
  input invert_b_ex_reg_3;
  input invert_b_ex2;
  input dreq_rd_ex_reg_1;
  input dreq_rd_ex_reg_2;
  input ifetch_reg;
  input stm_push_ex;
  input lsm_last_a_phase_ex;
  input last_uncond_phase_ex_reg_4;
  input last_uncond_phase_ex_reg_5;
  input w_phase_ex_reg;
  input w_phase_ex_reg_0;
  input \wptr_decoded_reg[1] ;
  input \wptr_decoded_reg[1]_0 ;
  input br_first_ex_reg;
  input br_first_ex_reg_0;
  input \rptr_b_ex2[1]_i_3_0 ;
  input dreq_wr_ex_reg;
  input \wdata_mux_ctl_ex_reg[0] ;
  input nxt_branching_ex;
  input ifetch_reg_0;
  input dreq_wr_ex_reg_0;
  input \wdata_mux_ctl_ex_reg[1] ;
  input second_ex_phase;
  input cps_ex_reg;
  input any_dsb_ex_reg;
  input \wptr_decoded[3]_i_2 ;
  input zero_a_ex_reg_0;
  input zero_a_ex_reg_1;
  input zero_a_ex_reg_2;
  input invert_b_ex2_reg;
  input invert_b_ex2_reg_0;
  input invert_b_ex2_reg_1;
  input invert_b_ex2_reg_2;
  input \rptr_b_ex2[1]_i_4_0 ;
  input nvic_lockup;
  input first32_ex_reg_2;
  input int_fault_ex_reg_1;
  input excpt_ret_de;
  input [0:0]E;
  input use_dp_tbit_reg_0;
  input first_ex_phase;
  input use_dp_tbit_reg_1;
  input msr_ex;
  input use_control_ex;
  input [1:0]\reg_file_a_reg[15][24] ;
  input \reg_file_a_reg[0][25] ;
  input cps_ex;
  input nxt_ldm_base;
  input pop_pc_ex;
  input ifetch_reg_1;
  input [0:0]\hold_reg2_reg[0] ;
  input [0:0]\hold_reg2_reg[31] ;
  input branch_ex;
  input \rf1_mux_ctl_ex_reg[1] ;
  input \rf_mux_ctl_ex_reg[2]_0 ;
  input \rf_mux_ctl_ex_reg[2]_1 ;
  input \rf_mux_ctl_ex_reg[2]_2 ;
  input load_ex;
  input \rf0_mux_ctl_ex_reg[0] ;
  input \rf0_mux_ctl_ex_reg[0]_0 ;
  input \rptr_a_ex2_reg[3] ;
  input two_phase_ex;
  input lsm_last_d_phase_ex;
  input ldm_pop_ex;
  input ldm_base_loaded;
  input br_lr_ex;
  input excpt_ret_de_reg;
  input tbit_ex;
  input excpt_ret_de_reg_0;
  input \write_addr_reg[1]_0 ;
  input \write_addr_reg[1]_1 ;
  input held_fault1;
  input held_fault0;
  input pf_fault_fe;
  input \read_addr_reg[0] ;
  input [0:0]\reg_sel_reg[3] ;
  input p_1_in16_in;
  input p_0_in18_in;
  input \reg_sel_reg[3]_0 ;
  input second32_ex;
  input dp_tbit_reg_reg_0;
  input \dp_ipsr_1to0_reg[1]_0 ;
  input \dp_ipsr_1to0_reg[1]_1 ;
  input \dp_ipsr_1to0_reg[1]_2 ;
  input ldm_base;
  input w_phase_ex;
  input use_dp_tbit_i_3_0;
  input biu_wfault;
  input \reg_file_a_reg[15][24]_0 ;
  input \wdata_reg[24] ;
  input [1:0]\wdata_reg[24]_0 ;
  input [3:0]\HADDR_reg[27] ;
  input [4:0]mult_out;
  input \reg_file_a_reg[15][9] ;
  input \reg_file_a_reg[15][9]_0 ;
  input dp_tbit_reg_reg_1;
  input [12:0]\reg_file_a_reg[0][25]_0 ;
  input \reg_file_a_reg[15][24]_1 ;
  input \wdata_reg[24]_1 ;
  input [16:0]\wdata_reg[27] ;
  input \hold_reg2_reg[0]_0 ;
  input [31:0]\hold_reg2_reg[31]_0 ;
  input [31:0]\hold_reg2_reg[31]_1 ;
  input \hold_reg2_reg[1] ;
  input [30:0]\hold_reg2_reg[31]_2 ;
  input \hold_reg2_reg[2] ;
  input \hold_reg2_reg[3] ;
  input \hold_reg2_reg[4] ;
  input \hold_reg2_reg[5] ;
  input \hold_reg2_reg[6] ;
  input \hold_reg2_reg[7] ;
  input \hold_reg2_reg[8] ;
  input load_fptr;
  input \hold_reg2_reg[10] ;
  input \hold_reg2_reg[11] ;
  input \hold_reg2_reg[12] ;
  input \hold_reg2_reg[13] ;
  input \hold_reg2_reg[14] ;
  input \hold_reg2_reg[15] ;
  input \hold_reg2_reg[16] ;
  input \hold_reg2_reg[17] ;
  input \hold_reg2_reg[18] ;
  input \hold_reg2_reg[19] ;
  input \hold_reg2_reg[20] ;
  input \hold_reg2_reg[21] ;
  input \hold_reg2_reg[22] ;
  input \hold_reg2_reg[23] ;
  input \hold_reg2_reg[24] ;
  input \hold_reg2_reg[25] ;
  input \hold_reg2_reg[26] ;
  input \hold_reg2_reg[27] ;
  input \hold_reg2_reg[28] ;
  input \hold_reg2_reg[29] ;
  input \hold_reg2_reg[30] ;
  input \hold_reg2_reg[31]_3 ;
  input \HADDR_reg[23] ;
  input \HADDR_reg[22] ;
  input \HADDR_reg[21] ;
  input \HADDR_reg[20] ;
  input \HADDR_reg[19] ;
  input \HADDR_reg[18] ;
  input \HADDR_reg[17] ;
  input \HADDR_reg[16] ;
  input \HADDR_reg[15] ;
  input hi_pre_fetch_addr_reg;
  input biu_commit_reg_reg;
  input [2:0]biu_commit_reg_reg_0;
  input \biu_addr_31_29_reg_reg[30] ;
  input \HADDR_reg[27]_0 ;
  input \HADDR_reg[26] ;
  input \HADDR_reg[25] ;
  input \HADDR_reg[24] ;
  input \HADDR_reg[0] ;
  input ldm_base_load;
  input [6:0]\reg_file_a_reg[15][10] ;
  input [4:0]\dp_ipsr_7to2_reg[5]_1 ;
  input \dp_ipsr_7to2_reg[5]_2 ;
  input \dp_ipsr_7to2_reg[5]_3 ;
  input [9:0]b_reg_0;
  input \dp_ipsr_7to2_reg[4]_2 ;
  input \dp_ipsr_7to2_reg[4]_3 ;
  input \dp_ipsr_7to2_reg[3]_0 ;
  input \dp_ipsr_7to2_reg[3]_1 ;
  input \dp_ipsr_7to2_reg[2]_0 ;
  input write_sp;
  input \dp_ipsr_1to0_reg[1]_3 ;
  input \dp_ipsr_1to0_reg[1]_4 ;
  input \dp_ipsr_1to0[1]_i_7_0 ;
  input \dp_ipsr_1to0[1]_i_7_1 ;
  input \reg_file_a_reg[0][0] ;
  input \reg_file_a_reg[0][0]_0 ;
  input \reg_file_a_reg[0][0]_1 ;
  input \reg_file_a_reg[0][0]_2 ;
  input primask_i_3_0;
  input primask_i_3_1;
  input primask_i_3_2;
  input primask_i_3_3;
  input primask_i_3_4;
  input \dp_ipsr_1to0_reg[0]_0 ;
  input \wdata_reg[25]_0 ;
  input \wdata_reg[25]_1 ;
  input \reg_file_a_reg[0][25]_1 ;
  input \reg_file_a_reg[0][25]_2 ;
  input \reg_file_a_reg[15][9]_1 ;
  input \reg_file_a_reg[15][9]_2 ;
  input \reg_file_a_reg[15][9]_3 ;
  input z_flag_mux_reg;
  input z_flag_mux_reg_0;
  input z_flag_mux_reg_1;
  input z_flag_mux_reg_2;
  input z_flag_mux_reg_3;
  input z_flag_mux_reg_4;
  input z_flag_mux_reg_5;
  input z_flag_mux_reg_6;
  input z_flag_mux_reg_7;
  input z_flag_mux_reg_8;
  input \reg_file_a_reg[15][23]_0 ;
  input \reg_file_a_reg[15][10]_0 ;
  input \reg_file_a_reg[15][16] ;
  input \reg_file_a_reg[15][17] ;
  input [0:0]DI;
  input \reg_file_a_reg[15][23]_1 ;
  input \reg_file_a_reg[15][23]_2 ;
  input \reg_file_a_reg[15][17]_0 ;
  input \reg_file_a_reg[15][17]_1 ;
  input \reg_file_a_reg[15][16]_0 ;
  input [1:0]\mem_held_addr_reg[11] ;
  input \reg_file_a_reg[15][10]_1 ;
  input fptr_wdata;
  input \wdata_reg[26] ;
  input \wdata_reg[27]_0 ;
  input \reg_file_a[15][10]_i_2_0 ;
  input \reg_file_a[15][16]_i_2_0 ;
  input \reg_file_a[15][17]_i_2_0 ;
  input \reg_file_a[15][23]_i_2_0 ;
  input [0:0]\mem_held_addr_reg[3]_1 ;
  input [2:0]S;
  input [3:0]\mem_held_addr_reg[7] ;
  input [3:0]\mem_held_addr_reg[11]_0 ;
  input [1:0]\mem_held_addr_reg[15] ;
  input [3:0]\mem_held_addr_reg[15]_0 ;
  input [0:0]\mem_held_addr_reg[19] ;
  input [3:0]\mem_held_addr_reg[19]_0 ;
  input [3:0]\mem_held_addr_reg[23]_0 ;
  input [0:0]IRQ;
  input [1:0]int_prev;
  input \i_pend_state_reg[0] ;
  input [0:0]\i_pend_state_reg[0]_0 ;
  input NMI;
  input [1:0]\i_pend_state_reg[1] ;
  input [1:0]irq_lvl;
  input [1:0]svc_lvl_0;
  input [1:0]\r_int_actv_lvl_reg[1] ;
  input [1:0]\r_int_actv_lvl_reg[1]_0 ;
  input r_hdf_actv;
  input r_nmi_actv;
  input \HRDATA_reg[5] ;
  input \HRDATA_reg[5]_0 ;
  input \HRDATA_reg[2] ;
  input \i_pend_state_reg[1]_0 ;
  input [1:0]\dp_ipsr_7to2_reg[7]_3 ;
  input cps_data_ex;
  input [4:0]\latched_excpt_num_reg[4]_0 ;
  input \reg_file_a_reg[0][0]_3 ;
  input [2:0]\reg_file_a_reg[0][0]_4 ;

  wire [0:0]CO;
  wire [1:0]D;
  wire [0:0]DI;
  wire [0:0]E;
  wire \HADDR[1]_i_2_n_0 ;
  wire \HADDR_reg[0] ;
  wire \HADDR_reg[15] ;
  wire \HADDR_reg[16] ;
  wire \HADDR_reg[17] ;
  wire \HADDR_reg[18] ;
  wire \HADDR_reg[19] ;
  wire \HADDR_reg[1] ;
  wire \HADDR_reg[20] ;
  wire \HADDR_reg[21] ;
  wire \HADDR_reg[22] ;
  wire \HADDR_reg[23] ;
  wire \HADDR_reg[24] ;
  wire \HADDR_reg[25] ;
  wire \HADDR_reg[26] ;
  wire [3:0]\HADDR_reg[27] ;
  wire \HADDR_reg[27]_0 ;
  wire HCLK;
  wire \HRDATA_reg[2] ;
  wire \HRDATA_reg[5] ;
  wire \HRDATA_reg[5]_0 ;
  wire [0:0]IRQ;
  wire IRQ_0_sn_1;
  wire NMI;
  wire [3:0]O;
  wire [15:0]Q;
  wire [2:0]S;
  wire SYSRESETn;
  wire SYSRESETn_0;
  wire [0:0]a_reg_0;
  wire active_sp;
  wire adv_de_to_ex;
  wire any_dsb_ex0;
  wire any_dsb_ex_i_2_n_0;
  wire any_dsb_ex_reg;
  wire [3:0]au_in_b;
  wire [9:0]b_reg_0;
  wire bcc_first_ex_reg;
  wire \biu_addr_31_29_reg_reg[30] ;
  wire biu_commit_reg_i_12_n_0;
  wire biu_commit_reg_reg;
  wire [2:0]biu_commit_reg_reg_0;
  wire biu_rdy;
  wire biu_wfault;
  wire biu_write_reg;
  wire br_first_ex;
  wire br_first_ex_reg;
  wire br_first_ex_reg_0;
  wire br_lr_ex;
  wire branch_ex;
  wire branch_ex0;
  wire [28:0]branch_ex_reg;
  wire branch_ex_reg_0;
  wire branch_ex_reg_1;
  wire branching_ex;
  wire [1:0]branching_ex_reg;
  wire cps_data_ex;
  wire cps_de;
  wire cps_ex;
  wire cps_ex_reg;
  wire dbg_wdata_sel;
  wire dbg_wdata_sel_de;
  wire [1:0]dp_ipsr_1to0;
  wire \dp_ipsr_1to0[0]_i_1_n_0 ;
  wire \dp_ipsr_1to0[0]_i_2_n_0 ;
  wire \dp_ipsr_1to0[0]_i_3_n_0 ;
  wire \dp_ipsr_1to0[1]_i_22_n_0 ;
  wire \dp_ipsr_1to0[1]_i_2_n_0 ;
  wire \dp_ipsr_1to0[1]_i_7_0 ;
  wire \dp_ipsr_1to0[1]_i_7_1 ;
  wire \dp_ipsr_1to0[1]_i_7_n_0 ;
  wire \dp_ipsr_1to0_reg[0]_0 ;
  wire \dp_ipsr_1to0_reg[1]_0 ;
  wire \dp_ipsr_1to0_reg[1]_1 ;
  wire \dp_ipsr_1to0_reg[1]_2 ;
  wire \dp_ipsr_1to0_reg[1]_3 ;
  wire \dp_ipsr_1to0_reg[1]_4 ;
  wire [7:2]dp_ipsr_7to2;
  wire \dp_ipsr_7to2[2]_i_2_n_0 ;
  wire \dp_ipsr_7to2[2]_i_3_n_0 ;
  wire \dp_ipsr_7to2[2]_i_4_n_0 ;
  wire \dp_ipsr_7to2[3]_i_2_n_0 ;
  wire \dp_ipsr_7to2[4]_i_2_n_0 ;
  wire \dp_ipsr_7to2[5]_i_2_n_0 ;
  wire \dp_ipsr_7to2_reg[2]_0 ;
  wire \dp_ipsr_7to2_reg[3]_0 ;
  wire \dp_ipsr_7to2_reg[3]_1 ;
  wire \dp_ipsr_7to2_reg[4]_0 ;
  wire \dp_ipsr_7to2_reg[4]_1 ;
  wire \dp_ipsr_7to2_reg[4]_2 ;
  wire \dp_ipsr_7to2_reg[4]_3 ;
  wire [1:0]\dp_ipsr_7to2_reg[5]_0 ;
  wire [4:0]\dp_ipsr_7to2_reg[5]_1 ;
  wire \dp_ipsr_7to2_reg[5]_2 ;
  wire \dp_ipsr_7to2_reg[5]_3 ;
  wire \dp_ipsr_7to2_reg[6]_0 ;
  wire \dp_ipsr_7to2_reg[7]_0 ;
  wire \dp_ipsr_7to2_reg[7]_1 ;
  wire [1:0]\dp_ipsr_7to2_reg[7]_2 ;
  wire [1:0]\dp_ipsr_7to2_reg[7]_3 ;
  wire dp_tbit_reg;
  wire dp_tbit_reg_i_1_n_0;
  wire dp_tbit_reg_i_2_n_0;
  wire dp_tbit_reg_i_3_n_0;
  wire dp_tbit_reg_i_6_n_0;
  wire dp_tbit_reg_reg_0;
  wire dp_tbit_reg_reg_1;
  wire dreq_rd_ex;
  wire dreq_rd_ex_reg;
  wire dreq_rd_ex_reg_0;
  wire dreq_rd_ex_reg_1;
  wire dreq_rd_ex_reg_2;
  wire dreq_wr_ex_reg;
  wire dreq_wr_ex_reg_0;
  wire \exc_ret[2]_i_1_n_0 ;
  wire \exc_ret[3]_i_1_n_0 ;
  wire \exc_ret[3]_i_2_n_0 ;
  wire \exc_ret_reg_n_0_[2] ;
  wire excpt_inv_imm;
  wire excpt_inv_imm_de;
  wire excpt_isb;
  wire excpt_isb_de;
  wire excpt_ld_pc_de;
  wire excpt_ld_pc_de_i_1_n_0;
  wire excpt_ld_pc_ex;
  wire excpt_mask_sp;
  wire excpt_mask_sp_de;
  wire excpt_mask_write_de;
  wire excpt_mask_write_ex;
  wire excpt_ret_de;
  wire excpt_ret_de_reg;
  wire excpt_ret_de_reg_0;
  wire excpt_ret_fe;
  wire excpt_ret_ld_pc;
  wire excpt_ret_ld_pc_de;
  wire excpt_ret_ld_pc_ex;
  wire [4:0]excpt_state;
  wire \excpt_state[0]_i_2_n_0 ;
  wire \excpt_state[0]_i_3_n_0 ;
  wire \excpt_state[0]_i_4_n_0 ;
  wire \excpt_state[0]_i_5_n_0 ;
  wire \excpt_state[2]_i_2_n_0 ;
  wire \excpt_state[3]_i_2_n_0 ;
  wire excpt_up_ipsr;
  wire excpt_up_ipsr_de;
  wire excpt_up_ipsr_ex;
  wire excpt_zero_a;
  wire excpt_zero_a_de;
  wire fetch_internal_reg;
  wire fetch_phase;
  wire first32_de;
  wire first32_ex_i_2_n_0;
  wire [0:0]first32_ex_reg;
  wire first32_ex_reg_0;
  wire first32_ex_reg_1;
  wire first32_ex_reg_2;
  wire first_ex_phase;
  wire first_ex_phase_reg;
  wire [0:0]first_ex_phase_reg_0;
  wire first_pop_pc_ex_i_2_n_0;
  wire first_pop_pc_ex_reg;
  wire force_hf;
  wire force_hf_reg_0;
  wire force_ipsr;
  wire fptr_align;
  wire fptr_align_reg_0;
  wire fptr_wdata;
  wire g0_b0_n_0;
  wire \genblk3[1].ram_block_reg_0_0_i_33_n_0 ;
  wire \genblk3[1].ram_block_reg_0_0_i_34_n_0 ;
  wire \genblk3[1].ram_block_reg_0_0_i_36_n_0 ;
  wire \genblk3[1].ram_block_reg_0_0_i_38_n_0 ;
  wire \genblk3[1].ram_block_reg_0_1_i_5_n_0 ;
  wire \genblk3[1].ram_block_reg_0_1_i_6_n_0 ;
  wire \genblk3[1].ram_block_reg_1_0_i_8_n_0 ;
  wire \genblk3[1].ram_block_reg_3_0_i_11_n_0 ;
  wire \genblk3[1].ram_block_reg_3_0_i_12_n_0 ;
  wire \genblk3[1].ram_block_reg_3_0_i_9_n_0 ;
  wire halt_hold1_de;
  wire hdf_actv;
  wire held_fault0;
  wire held_fault1;
  wire \held_instr0[15]_i_3_n_0 ;
  wire hi_pre_fetch_addr_reg;
  wire [0:0]\hold_reg2_reg[0] ;
  wire \hold_reg2_reg[0]_0 ;
  wire \hold_reg2_reg[10] ;
  wire \hold_reg2_reg[11] ;
  wire \hold_reg2_reg[12] ;
  wire \hold_reg2_reg[13] ;
  wire \hold_reg2_reg[14] ;
  wire \hold_reg2_reg[15] ;
  wire \hold_reg2_reg[16] ;
  wire \hold_reg2_reg[17] ;
  wire \hold_reg2_reg[18] ;
  wire \hold_reg2_reg[19] ;
  wire \hold_reg2_reg[1] ;
  wire \hold_reg2_reg[20] ;
  wire \hold_reg2_reg[21] ;
  wire \hold_reg2_reg[22] ;
  wire \hold_reg2_reg[23] ;
  wire \hold_reg2_reg[24] ;
  wire \hold_reg2_reg[25] ;
  wire \hold_reg2_reg[26] ;
  wire \hold_reg2_reg[27] ;
  wire \hold_reg2_reg[28] ;
  wire \hold_reg2_reg[29] ;
  wire \hold_reg2_reg[2] ;
  wire \hold_reg2_reg[30] ;
  wire [0:0]\hold_reg2_reg[31] ;
  wire [31:0]\hold_reg2_reg[31]_0 ;
  wire [31:0]\hold_reg2_reg[31]_1 ;
  wire [30:0]\hold_reg2_reg[31]_2 ;
  wire \hold_reg2_reg[31]_3 ;
  wire \hold_reg2_reg[3] ;
  wire \hold_reg2_reg[4] ;
  wire \hold_reg2_reg[5] ;
  wire \hold_reg2_reg[6] ;
  wire \hold_reg2_reg[7] ;
  wire \hold_reg2_reg[8] ;
  wire i_active_sp0;
  wire i_active_sp_i_10_n_0;
  wire i_active_sp_i_11_n_0;
  wire i_active_sp_i_1_n_0;
  wire i_active_sp_i_2_n_0;
  wire i_active_sp_i_3_n_0;
  wire i_active_sp_i_4_n_0;
  wire i_active_sp_i_6_n_0;
  wire i_active_sp_i_7_n_0;
  wire i_active_sp_i_8_n_0;
  wire i_active_sp_i_9_n_0;
  wire [1:0]i_dbg_wdata_sel_de_reg_0;
  wire [1:0]i_dbg_wdata_sel_de_reg_1;
  wire i_dbg_wdata_sel_de_reg_2;
  wire i_dbg_wdata_sel_de_reg_3;
  wire i_dbg_wdata_sel_ex_reg_0;
  wire i_dbg_wdata_sel_ex_reg_1;
  wire [0:0]i_mcode_dec;
  wire \i_mcode_dec[0]_i_1_n_0 ;
  wire i_nvic_excpt_svc_valid_reg_0;
  wire \i_pend_state[0]_i_2_n_0 ;
  wire \i_pend_state[3]_i_3_n_0 ;
  wire \i_pend_state[4]_i_6_n_0 ;
  wire \i_pend_state[4]_i_7_n_0 ;
  wire \i_pend_state_reg[0] ;
  wire [0:0]\i_pend_state_reg[0]_0 ;
  wire [1:0]\i_pend_state_reg[1] ;
  wire \i_pend_state_reg[1]_0 ;
  wire [1:0]\i_svc_lvl_reg[1] ;
  wire ifetch_i_3_n_0;
  wire ifetch_i_4_n_0;
  wire ifetch_i_5_n_0;
  wire ifetch_i_6_n_0;
  wire ifetch_reg;
  wire ifetch_reg_0;
  wire ifetch_reg_1;
  wire \imm_held_reg[5] ;
  wire \instr_de[0]_i_3_n_0 ;
  wire \instr_de[0]_i_4_n_0 ;
  wire \instr_de[10]_i_2_n_0 ;
  wire \instr_de[11]_i_3_n_0 ;
  wire \instr_de[12]_i_2_n_0 ;
  wire \instr_de[13]_i_2_n_0 ;
  wire \instr_de[14]_i_3_n_0 ;
  wire \instr_de[14]_i_4_n_0 ;
  wire \instr_de[14]_i_5_n_0 ;
  wire \instr_de[15]_i_3_n_0 ;
  wire \instr_de[1]_i_2_n_0 ;
  wire \instr_de[1]_i_3_n_0 ;
  wire \instr_de[1]_i_5_n_0 ;
  wire \instr_de[2]_i_2_n_0 ;
  wire \instr_de[2]_i_4_n_0 ;
  wire \instr_de[2]_i_5_n_0 ;
  wire \instr_de[2]_i_6_n_0 ;
  wire \instr_de[3]_i_2_n_0 ;
  wire \instr_de[3]_i_4_n_0 ;
  wire \instr_de[3]_i_5_n_0 ;
  wire \instr_de[4]_i_2_n_0 ;
  wire \instr_de[4]_i_3_n_0 ;
  wire \instr_de[4]_i_5_n_0 ;
  wire \instr_de[4]_i_6_n_0 ;
  wire \instr_de[5]_i_2_n_0 ;
  wire \instr_de[5]_i_4_n_0 ;
  wire \instr_de[6]_i_2_n_0 ;
  wire \instr_de[7]_i_2_n_0 ;
  wire \instr_de[7]_i_4_n_0 ;
  wire \instr_de[8]_i_2_n_0 ;
  wire \instr_de[9]_i_2_n_0 ;
  wire \instr_de_reg[0] ;
  wire \instr_de_reg[10] ;
  wire \instr_de_reg[10]_0 ;
  wire \instr_de_reg[10]_1 ;
  wire \instr_de_reg[11] ;
  wire \instr_de_reg[11]_0 ;
  wire \instr_de_reg[11]_1 ;
  wire \instr_de_reg[12] ;
  wire \instr_de_reg[12]_0 ;
  wire \instr_de_reg[12]_1 ;
  wire \instr_de_reg[13] ;
  wire \instr_de_reg[13]_0 ;
  wire \instr_de_reg[14] ;
  wire \instr_de_reg[14]_0 ;
  wire \instr_de_reg[14]_1 ;
  wire \instr_de_reg[14]_2 ;
  wire \instr_de_reg[14]_3 ;
  wire [15:0]\instr_de_reg[15] ;
  wire \instr_de_reg[15]_0 ;
  wire \instr_de_reg[1] ;
  wire \instr_de_reg[2] ;
  wire \instr_de_reg[3] ;
  wire \instr_de_reg[4] ;
  wire \instr_de_reg[5] ;
  wire \instr_de_reg[6] ;
  wire \instr_de_reg[7] ;
  wire \instr_de_reg[8] ;
  wire \instr_de_reg[9] ;
  wire \instr_de_reg[9]_0 ;
  wire \instr_de_reg[9]_1 ;
  wire instr_faulted_reg_0;
  wire int_actv;
  wire int_fault_ex_i_10_n_0;
  wire int_fault_ex_i_11_n_0;
  wire int_fault_ex_i_14_n_0;
  wire int_fault_ex_i_15_n_0;
  wire int_fault_ex_i_4_n_0;
  wire int_fault_ex_i_7_n_0;
  wire int_fault_ex_i_8_n_0;
  wire int_fault_ex_reg_0;
  wire int_fault_ex_reg_1;
  wire [1:0]int_prev;
  wire inter_tbit_reg;
  wire inter_tbit_reg_i_1_n_0;
  wire inter_tbit_reg_i_2_n_0;
  wire inter_tbit_reg_i_3_n_0;
  wire inter_tbit_reg_i_4_n_0;
  wire invert_b_ex2;
  wire invert_b_ex2_i_2_n_0;
  wire invert_b_ex2_reg;
  wire invert_b_ex2_reg_0;
  wire invert_b_ex2_reg_1;
  wire invert_b_ex2_reg_2;
  wire [3:0]invert_b_ex_reg;
  wire [3:0]invert_b_ex_reg_0;
  wire [3:0]invert_b_ex_reg_1;
  wire invert_b_ex_reg_2;
  wire invert_b_ex_reg_3;
  wire [1:0]irq_lvl;
  wire last_instr_faulted;
  wire last_uncond_phase_ex_i_2_n_0;
  wire last_uncond_phase_ex_i_3_n_0;
  wire last_uncond_phase_ex_i_4_n_0;
  wire last_uncond_phase_ex_reg;
  wire last_uncond_phase_ex_reg_0;
  wire [1:0]last_uncond_phase_ex_reg_1;
  wire last_uncond_phase_ex_reg_2;
  wire last_uncond_phase_ex_reg_3;
  wire last_uncond_phase_ex_reg_4;
  wire last_uncond_phase_ex_reg_5;
  wire [4:0]\latched_excpt_num_reg[4]_0 ;
  wire \latched_excpt_num_reg_n_0_[0] ;
  wire \latched_excpt_num_reg_n_0_[1] ;
  wire \latched_excpt_num_reg_n_0_[2] ;
  wire \latched_excpt_num_reg_n_0_[3] ;
  wire \latched_excpt_num_reg_n_0_[4] ;
  wire ldm_base;
  wire ldm_base_load;
  wire ldm_base_loaded;
  wire ldm_pop_de;
  wire ldm_pop_ex;
  wire ldm_pop_ex_i_3_n_0;
  wire load_ex;
  wire load_ex_reg;
  wire load_ex_reg_0;
  wire load_fptr;
  wire load_xpsr;
  wire load_xpsr_de;
  wire load_xpsr_ex_reg_0;
  wire locked_up_i_8_n_0;
  wire locked_up_reg_0;
  wire [0:0]locked_up_reg_1;
  wire lockup_br_de;
  wire lockup_br_de_i_1_n_0;
  wire lockup_br_ex;
  wire lsm_last_a_phase_ex;
  wire lsm_last_d_phase_ex;
  wire mask_sp_ex;
  wire [1:0]\mem_held_addr_reg[11] ;
  wire [3:0]\mem_held_addr_reg[11]_0 ;
  wire \mem_held_addr_reg[11]_i_1_n_0 ;
  wire \mem_held_addr_reg[11]_i_1_n_1 ;
  wire \mem_held_addr_reg[11]_i_1_n_2 ;
  wire \mem_held_addr_reg[11]_i_1_n_3 ;
  wire [1:0]\mem_held_addr_reg[15] ;
  wire [3:0]\mem_held_addr_reg[15]_0 ;
  wire \mem_held_addr_reg[15]_i_1_n_0 ;
  wire \mem_held_addr_reg[15]_i_1_n_1 ;
  wire \mem_held_addr_reg[15]_i_1_n_2 ;
  wire \mem_held_addr_reg[15]_i_1_n_3 ;
  wire [0:0]\mem_held_addr_reg[19] ;
  wire [3:0]\mem_held_addr_reg[19]_0 ;
  wire \mem_held_addr_reg[19]_i_1_n_0 ;
  wire \mem_held_addr_reg[19]_i_1_n_1 ;
  wire \mem_held_addr_reg[19]_i_1_n_2 ;
  wire \mem_held_addr_reg[19]_i_1_n_3 ;
  wire [14:0]\mem_held_addr_reg[23] ;
  wire [3:0]\mem_held_addr_reg[23]_0 ;
  wire \mem_held_addr_reg[23]_i_1_n_1 ;
  wire \mem_held_addr_reg[23]_i_1_n_2 ;
  wire \mem_held_addr_reg[23]_i_1_n_3 ;
  wire \mem_held_addr_reg[3] ;
  wire \mem_held_addr_reg[3]_0 ;
  wire [0:0]\mem_held_addr_reg[3]_1 ;
  wire \mem_held_addr_reg[3]_i_1_n_0 ;
  wire \mem_held_addr_reg[3]_i_1_n_1 ;
  wire \mem_held_addr_reg[3]_i_1_n_2 ;
  wire \mem_held_addr_reg[3]_i_1_n_3 ;
  wire [3:0]\mem_held_addr_reg[7] ;
  wire \mem_held_addr_reg[7]_i_1_n_0 ;
  wire \mem_held_addr_reg[7]_i_1_n_1 ;
  wire \mem_held_addr_reg[7]_i_1_n_2 ;
  wire \mem_held_addr_reg[7]_i_1_n_3 ;
  wire micro_code_de;
  wire micro_code_de_reg_0;
  wire micro_code_de_reg_1;
  wire [0:0]micro_code_de_reg_2;
  wire micro_code_de_reg_3;
  wire micro_code_fe_i_1_n_0;
  wire micro_code_fe_i_2_n_0;
  wire micro_code_fe_reg_0;
  wire [15:0]micro_code_fe_reg_1;
  wire mode_i_1_n_0;
  wire mode_i_2_n_0;
  wire mode_i_3_n_0;
  wire mode_reg_0;
  wire msr_ex;
  wire [0:0]msr_ex_reg;
  wire mul_de;
  wire mul_ex_reg;
  wire [4:0]mult_out;
  wire nmi_actv;
  wire nvic_excpt_fault_req;
  wire [5:2]nvic_excpt_num;
  wire nvic_excpt_ret_taken;
  wire nvic_excpt_svc_valid;
  wire nvic_excpt_taken;
  wire nvic_lockup;
  wire nvic_primask;
  wire nxt_branching_ex;
  wire nxt_dreq_rd_ex;
  wire nxt_dreq_wr_ex;
  wire [4:0]nxt_excpt_state;
  wire nxt_fetch_internal;
  wire nxt_first_pop_pc_ex;
  wire nxt_force_hf;
  wire nxt_ifetch;
  wire nxt_instr_faulted;
  wire nxt_int_fault_ex;
  wire nxt_int_rack;
  wire nxt_invert_b_ex;
  wire nxt_invert_b_ex2;
  wire nxt_irack;
  wire nxt_last_uncond_phase_ex;
  wire nxt_ldm_base;
  wire nxt_locked_up;
  wire nxt_mask_sp_ex;
  wire nxt_nvic_svc_valid;
  wire nxt_pf_fault_de;
  wire nxt_reset_code;
  wire nxt_second32_ex;
  wire nxt_use_dp_ipsr;
  wire nxt_w_phase_ex;
  wire nxt_z_flag_mux;
  wire p_0_in18_in;
  wire p_0_in7_in;
  wire p_1_in16_in;
  wire [12:0]p_1_in2_in;
  wire p_8_in;
  wire \pc[31]_i_3_n_0 ;
  wire [0:0]pc_mux_ctl_ex;
  wire \pc_reg[10] ;
  wire [3:0]\pc_reg[11] ;
  wire \pc_reg[11]_0 ;
  wire \pc_reg[12] ;
  wire \pc_reg[13] ;
  wire \pc_reg[14] ;
  wire [22:0]\pc_reg[23] ;
  wire \pc_reg[2] ;
  wire \pc_reg[2]_0 ;
  wire [31:0]\pc_reg[31] ;
  wire \pc_reg[3] ;
  wire \pc_reg[4] ;
  wire \pc_reg[5] ;
  wire \pc_reg[6] ;
  wire \pc_reg[7] ;
  wire \pc_reg[8] ;
  wire \pc_reg[9] ;
  wire pf_fault_de;
  wire pf_fault_fe;
  wire pop_pc_ex;
  wire pop_pc_ex_reg;
  wire \pre_pc_mux_ctl_ex_reg[1] ;
  wire pre_update_v_ex_reg;
  wire primask0;
  wire primask_i_1_n_0;
  wire primask_i_2_n_0;
  wire primask_i_3_0;
  wire primask_i_3_1;
  wire primask_i_3_2;
  wire primask_i_3_3;
  wire primask_i_3_4;
  wire primask_i_3_n_0;
  wire primask_i_5_n_0;
  wire push_ex_reg;
  wire push_ex_reg_0;
  wire push_xpsr_ex;
  wire r_hdf_actv;
  wire r_hdf_actv_i_2_n_0;
  wire r_hdf_actv_i_3_n_0;
  wire [1:0]r_hdf_actv_reg;
  wire \r_int_actv_lvl[0]_i_3_n_0 ;
  wire \r_int_actv_lvl[0]_i_4_n_0 ;
  wire \r_int_actv_lvl[1]_i_2_n_0 ;
  wire [1:0]\r_int_actv_lvl_reg[1] ;
  wire [1:0]\r_int_actv_lvl_reg[1]_0 ;
  wire r_nmi_actv;
  wire \read_addr[1]_i_3_n_0 ;
  wire \read_addr_reg[0] ;
  wire [1:0]\read_addr_reg[1] ;
  wire \reg_file_a[15][10]_i_2_0 ;
  wire \reg_file_a[15][10]_i_2_n_0 ;
  wire \reg_file_a[15][10]_i_5_n_0 ;
  wire \reg_file_a[15][16]_i_2_0 ;
  wire \reg_file_a[15][16]_i_2_n_0 ;
  wire \reg_file_a[15][16]_i_5_n_0 ;
  wire \reg_file_a[15][17]_i_2_0 ;
  wire \reg_file_a[15][17]_i_2_n_0 ;
  wire \reg_file_a[15][17]_i_6_n_0 ;
  wire \reg_file_a[15][23]_i_2_0 ;
  wire \reg_file_a[15][23]_i_2_n_0 ;
  wire \reg_file_a[15][23]_i_5_n_0 ;
  wire \reg_file_a[15][24]_i_2_n_0 ;
  wire \reg_file_a[15][25]_i_2_n_0 ;
  wire \reg_file_a[15][9]_i_2_n_0 ;
  wire \reg_file_a_reg[0][0] ;
  wire \reg_file_a_reg[0][0]_0 ;
  wire \reg_file_a_reg[0][0]_1 ;
  wire \reg_file_a_reg[0][0]_2 ;
  wire \reg_file_a_reg[0][0]_3 ;
  wire [2:0]\reg_file_a_reg[0][0]_4 ;
  wire \reg_file_a_reg[0][25] ;
  wire [12:0]\reg_file_a_reg[0][25]_0 ;
  wire \reg_file_a_reg[0][25]_1 ;
  wire \reg_file_a_reg[0][25]_2 ;
  wire [6:0]\reg_file_a_reg[15][10] ;
  wire \reg_file_a_reg[15][10]_0 ;
  wire \reg_file_a_reg[15][10]_1 ;
  wire \reg_file_a_reg[15][16] ;
  wire \reg_file_a_reg[15][16]_0 ;
  wire \reg_file_a_reg[15][17] ;
  wire \reg_file_a_reg[15][17]_0 ;
  wire \reg_file_a_reg[15][17]_1 ;
  wire [1:0]\reg_file_a_reg[15][23] ;
  wire \reg_file_a_reg[15][23]_0 ;
  wire \reg_file_a_reg[15][23]_1 ;
  wire \reg_file_a_reg[15][23]_2 ;
  wire [1:0]\reg_file_a_reg[15][24] ;
  wire \reg_file_a_reg[15][24]_0 ;
  wire \reg_file_a_reg[15][24]_1 ;
  wire \reg_file_a_reg[15][9] ;
  wire \reg_file_a_reg[15][9]_0 ;
  wire \reg_file_a_reg[15][9]_1 ;
  wire \reg_file_a_reg[15][9]_2 ;
  wire \reg_file_a_reg[15][9]_3 ;
  wire [0:0]\reg_sel_reg[3] ;
  wire \reg_sel_reg[3]_0 ;
  wire reset_code;
  wire \rf0_mux_ctl_ex[0]_i_3_n_0 ;
  wire \rf0_mux_ctl_ex_reg[0] ;
  wire \rf0_mux_ctl_ex_reg[0]_0 ;
  wire \rf1_mux_ctl_ex_reg[1] ;
  wire \rf_mux_ctl_ex_reg[2] ;
  wire \rf_mux_ctl_ex_reg[2]_0 ;
  wire \rf_mux_ctl_ex_reg[2]_1 ;
  wire \rf_mux_ctl_ex_reg[2]_2 ;
  wire [12:0]rf_wdata;
  wire [1:0]rptr_a_ex;
  wire \rptr_a_ex2[1]_i_3_n_0 ;
  wire \rptr_a_ex2[1]_i_4_n_0 ;
  wire \rptr_a_ex2[3]_i_2_n_0 ;
  wire \rptr_a_ex2_reg[1]_i_2_n_0 ;
  wire \rptr_a_ex2_reg[3] ;
  wire [1:0]\rptr_a_ex_reg[3] ;
  wire \rptr_b_ex2[1]_i_3_0 ;
  wire \rptr_b_ex2[1]_i_4_0 ;
  wire \rptr_b_ex2[1]_i_4_n_0 ;
  wire \rptr_b_ex2[1]_i_5_n_0 ;
  wire rst_fptr_align;
  wire rst_fptr_align_ex;
  wire sbit_ex_reg;
  wire sbit_ex_reg_0;
  wire second32_ex;
  wire second_ex_phase;
  wire [22:0]seq_fetch_addr;
  wire shift_ex_reg;
  wire stm_push_de;
  wire stm_push_ex;
  wire store_de;
  wire [1:0]svc_lvl_0;
  wire tbit;
  wire tbit_ex;
  wire tbit_ex_reg;
  wire two_phase_ex;
  wire \u_alu_dec/u_adder/mem_held_addr[3]_i_8_n_0 ;
  wire [2:2]\u_dp/au_in_a ;
  wire update_c;
  wire update_ipsr;
  wire update_ipsr0;
  wire update_n;
  wire update_tbit;
  wire update_v;
  wire use_control_ex;
  wire use_dp_ipsr;
  wire use_dp_ipsr_i_2_n_0;
  wire use_dp_tbit;
  wire use_dp_tbit_i_1_n_0;
  wire use_dp_tbit_i_2_n_0;
  wire use_dp_tbit_i_3_0;
  wire use_dp_tbit_i_4_n_0;
  wire use_dp_tbit_reg_0;
  wire use_dp_tbit_reg_1;
  wire use_primask_ex;
  wire w_phase_ex;
  wire w_phase_ex_reg;
  wire w_phase_ex_reg_0;
  wire \wdata_mux_ctl_ex[0]_i_3_n_0 ;
  wire \wdata_mux_ctl_ex_reg[0] ;
  wire \wdata_mux_ctl_ex_reg[1] ;
  wire \wdata_reg[24] ;
  wire [1:0]\wdata_reg[24]_0 ;
  wire \wdata_reg[24]_1 ;
  wire \wdata_reg[25] ;
  wire \wdata_reg[25]_0 ;
  wire \wdata_reg[25]_1 ;
  wire \wdata_reg[26] ;
  wire [16:0]\wdata_reg[27] ;
  wire \wdata_reg[27]_0 ;
  wire [2:0]\wdata_reg[5] ;
  wire \wdata_reg[9] ;
  wire \wptr_decoded[1]_i_6_n_0 ;
  wire \wptr_decoded[1]_i_7_n_0 ;
  wire \wptr_decoded[3]_i_2 ;
  wire \wptr_decoded_reg[1] ;
  wire \wptr_decoded_reg[1]_0 ;
  wire [0:0]\wptr_ex_reg[0] ;
  wire [0:0]\wptr_ex_reg[1] ;
  wire [0:0]\wptr_ex_reg[1]_0 ;
  wire [0:0]\wptr_ex_reg[1]_1 ;
  wire [0:0]\wptr_ex_reg[1]_2 ;
  wire [0:0]\wptr_ex_reg[1]_3 ;
  wire [0:0]\wptr_ex_reg[1]_4 ;
  wire [0:0]\wptr_ex_reg[1]_5 ;
  wire [0:0]\wptr_ex_reg[1]_6 ;
  wire [0:0]\wptr_ex_reg[1]_7 ;
  wire [0:0]\wptr_ex_reg[2] ;
  wire [0:0]\wptr_ex_reg[2]_0 ;
  wire [0:0]\wptr_ex_reg[2]_1 ;
  wire [0:0]\wptr_ex_reg[3] ;
  wire [0:0]\wptr_ex_reg[3]_0 ;
  wire [0:0]\wptr_ex_reg[3]_1 ;
  wire [1:0]\write_addr_reg[0] ;
  wire [0:0]\write_addr_reg[0]_0 ;
  wire [0:0]\write_addr_reg[0]_1 ;
  wire \write_addr_reg[0]_2 ;
  wire [1:0]\write_addr_reg[1] ;
  wire \write_addr_reg[1]_0 ;
  wire \write_addr_reg[1]_1 ;
  wire write_sp;
  wire [1:1]xpsr_ex;
  wire z_flag_mux_i_14_n_0;
  wire z_flag_mux_i_5_n_0;
  wire z_flag_mux_reg;
  wire z_flag_mux_reg_0;
  wire z_flag_mux_reg_1;
  wire z_flag_mux_reg_2;
  wire z_flag_mux_reg_3;
  wire z_flag_mux_reg_4;
  wire z_flag_mux_reg_5;
  wire z_flag_mux_reg_6;
  wire z_flag_mux_reg_7;
  wire z_flag_mux_reg_8;
  wire zero_a_ex0;
  wire [3:0]zero_a_ex_reg;
  wire zero_a_ex_reg_0;
  wire zero_a_ex_reg_1;
  wire zero_a_ex_reg_2;

  assign IRQ_0_sp_1 = IRQ_0_sn_1;
  LUT4 #(
    .INIT(16'h8880)) 
    \HADDR[0]_i_1 
       (.I0(inter_tbit_reg_i_2_n_0),
        .I1(\wdata_reg[9] ),
        .I2(dreq_rd_ex),
        .I3(\HADDR_reg[1] ),
        .O(branch_ex_reg[0]));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \HADDR[15]_i_1 
       (.I0(O[3]),
        .I1(branch_ex_reg_0),
        .I2(\HADDR_reg[15] ),
        .O(branch_ex_reg[15]));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \HADDR[16]_i_1 
       (.I0(invert_b_ex_reg_1[0]),
        .I1(branch_ex_reg_0),
        .I2(\HADDR_reg[16] ),
        .O(branch_ex_reg[16]));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \HADDR[17]_i_1 
       (.I0(invert_b_ex_reg_1[1]),
        .I1(branch_ex_reg_0),
        .I2(\HADDR_reg[17] ),
        .O(branch_ex_reg[17]));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \HADDR[18]_i_1 
       (.I0(invert_b_ex_reg_1[2]),
        .I1(branch_ex_reg_0),
        .I2(\HADDR_reg[18] ),
        .O(branch_ex_reg[18]));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \HADDR[19]_i_1 
       (.I0(invert_b_ex_reg_1[3]),
        .I1(branch_ex_reg_0),
        .I2(\HADDR_reg[19] ),
        .O(branch_ex_reg[19]));
  LUT5 #(
    .INIT(32'hA8A8A800)) 
    \HADDR[1]_i_1 
       (.I0(\HADDR[1]_i_2_n_0 ),
        .I1(\wdata_reg[25] ),
        .I2(\wdata_reg[9] ),
        .I3(dreq_rd_ex),
        .I4(\HADDR_reg[1] ),
        .O(branch_ex_reg[1]));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \HADDR[1]_i_2 
       (.I0(invert_b_ex_reg[1]),
        .I1(branch_ex_reg_0),
        .I2(hi_pre_fetch_addr_reg),
        .O(\HADDR[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \HADDR[20]_i_1 
       (.I0(invert_b_ex_reg_0[0]),
        .I1(branch_ex_reg_0),
        .I2(\HADDR_reg[20] ),
        .O(branch_ex_reg[20]));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \HADDR[21]_i_1 
       (.I0(invert_b_ex_reg_0[1]),
        .I1(branch_ex_reg_0),
        .I2(\HADDR_reg[21] ),
        .O(branch_ex_reg[21]));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \HADDR[22]_i_1 
       (.I0(invert_b_ex_reg_0[2]),
        .I1(branch_ex_reg_0),
        .I2(\HADDR_reg[22] ),
        .O(branch_ex_reg[22]));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \HADDR[23]_i_1 
       (.I0(invert_b_ex_reg_0[3]),
        .I1(branch_ex_reg_0),
        .I2(\HADDR_reg[23] ),
        .O(branch_ex_reg[23]));
  LUT3 #(
    .INIT(8'hB8)) 
    \HADDR[24]_i_1 
       (.I0(\HADDR_reg[27] [0]),
        .I1(branch_ex_reg_0),
        .I2(\HADDR_reg[24] ),
        .O(branch_ex_reg[24]));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \HADDR[25]_i_1 
       (.I0(\HADDR_reg[27] [1]),
        .I1(branch_ex_reg_0),
        .I2(\HADDR_reg[25] ),
        .O(branch_ex_reg[25]));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \HADDR[26]_i_1 
       (.I0(\HADDR_reg[27] [2]),
        .I1(branch_ex_reg_0),
        .I2(\HADDR_reg[26] ),
        .O(branch_ex_reg[26]));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \HADDR[27]_i_1 
       (.I0(\HADDR_reg[27] [3]),
        .I1(branch_ex_reg_0),
        .I2(\HADDR_reg[27]_0 ),
        .O(branch_ex_reg[27]));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT3 #(
    .INIT(8'h8B)) 
    \HADDR[30]_i_1 
       (.I0(biu_commit_reg_reg_0[1]),
        .I1(branch_ex_reg_0),
        .I2(\biu_addr_31_29_reg_reg[30] ),
        .O(branch_ex_reg[28]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \HRDATA[1]_i_2 
       (.I0(force_hf),
        .I1(force_ipsr),
        .I2(dp_ipsr_1to0[1]),
        .I3(use_dp_ipsr),
        .I4(dp_ipsr_7to2[3]),
        .O(\dp_ipsr_7to2_reg[5]_0 [0]));
  LUT6 #(
    .INIT(64'hAAAAAAAABBBAAABA)) 
    \HRDATA[2]_i_1 
       (.I0(\HRDATA_reg[2] ),
        .I1(\HRDATA_reg[5] ),
        .I2(dp_ipsr_7to2[4]),
        .I3(use_dp_ipsr),
        .I4(dp_ipsr_7to2[2]),
        .I5(force_ipsr),
        .O(\dp_ipsr_7to2_reg[7]_2 [0]));
  LUT6 #(
    .INIT(64'hFFFFFFFF00005404)) 
    \HRDATA[5]_i_1 
       (.I0(\HRDATA_reg[5] ),
        .I1(dp_ipsr_7to2[7]),
        .I2(use_dp_ipsr),
        .I3(dp_ipsr_7to2[5]),
        .I4(force_ipsr),
        .I5(\HRDATA_reg[5]_0 ),
        .O(\dp_ipsr_7to2_reg[7]_2 [1]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAABAAAA)) 
    any_dsb_ex_i_1
       (.I0(any_dsb_ex_i_2_n_0),
        .I1(any_dsb_ex_reg),
        .I2(Q[5]),
        .I3(Q[14]),
        .I4(push_ex_reg),
        .I5(micro_code_de_reg_0),
        .O(any_dsb_ex0));
  LUT6 #(
    .INIT(64'h0000000000004044)) 
    any_dsb_ex_i_2
       (.I0(excpt_state[1]),
        .I1(excpt_state[0]),
        .I2(excpt_state[2]),
        .I3(reset_code),
        .I4(excpt_state[3]),
        .I5(excpt_state[4]),
        .O(any_dsb_ex_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT3 #(
    .INIT(8'h10)) 
    bcc_first_ex_i_1
       (.I0(last_uncond_phase_ex_reg_0),
        .I1(micro_code_de_reg_0),
        .I2(bcc_first_ex_reg),
        .O(last_uncond_phase_ex_reg));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT4 #(
    .INIT(16'h4544)) 
    biu_commit_reg_i_12
       (.I0(micro_code_de),
        .I1(br_first_ex),
        .I2(fetch_internal_reg),
        .I3(fetch_phase),
        .O(biu_commit_reg_i_12_n_0));
  LUT6 #(
    .INIT(64'h0808088888880888)) 
    biu_commit_reg_i_6
       (.I0(biu_commit_reg_reg),
        .I1(branch_ex_reg_0),
        .I2(biu_commit_reg_i_12_n_0),
        .I3(biu_commit_reg_reg_0[1]),
        .I4(biu_commit_reg_reg_0[0]),
        .I5(biu_commit_reg_reg_0[2]),
        .O(dreq_rd_ex_reg));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAABA)) 
    br_first_ex_i_1
       (.I0(nxt_first_pop_pc_ex),
        .I1(br_first_ex_reg),
        .I2(br_first_ex_reg_0),
        .I3(int_fault_ex_i_4_n_0),
        .I4(ldm_pop_ex_i_3_n_0),
        .I5(last_uncond_phase_ex_reg_0),
        .O(p_8_in));
  LUT6 #(
    .INIT(64'h4044404040404040)) 
    br_lr_ex_i_1
       (.I0(micro_code_de_reg_0),
        .I1(Q[14]),
        .I2(push_ex_reg),
        .I3(tbit_ex_reg),
        .I4(Q[8]),
        .I5(Q[7]),
        .O(\instr_de_reg[14]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT3 #(
    .INIT(8'hAE)) 
    branch_ex_i_1
       (.I0(lockup_br_de),
        .I1(branch_ex_reg_1),
        .I2(micro_code_de_reg_0),
        .O(branch_ex0));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT5 #(
    .INIT(32'h00000040)) 
    cps_ex_i_1
       (.I0(Q[11]),
        .I1(Q[1]),
        .I2(Q[9]),
        .I3(cps_ex_reg),
        .I4(micro_code_de_reg_0),
        .O(cps_de));
  LUT6 #(
    .INIT(64'h0FAC00ACFFACF0AC)) 
    \dp_ipsr_1to0[0]_i_1 
       (.I0(\dp_ipsr_7to2_reg[5]_1 [0]),
        .I1(invert_b_ex_reg[0]),
        .I2(\reg_file_a_reg[15][24] [0]),
        .I3(\reg_file_a_reg[15][24] [1]),
        .I4(\reg_file_a_reg[15][10] [0]),
        .I5(\dp_ipsr_1to0[0]_i_2_n_0 ),
        .O(\dp_ipsr_1to0[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0035F0350F35FF35)) 
    \dp_ipsr_1to0[0]_i_2 
       (.I0(\dp_ipsr_1to0[0]_i_3_n_0 ),
        .I1(\dp_ipsr_1to0_reg[0]_0 ),
        .I2(\reg_file_a_reg[15][9]_0 ),
        .I3(\reg_file_a_reg[15][9] ),
        .I4(\reg_file_a_reg[0][25]_0 [0]),
        .I5(\genblk3[1].ram_block_reg_0_0_i_36_n_0 ),
        .O(\dp_ipsr_1to0[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hABAAA9AAABAA0200)) 
    \dp_ipsr_1to0[0]_i_3 
       (.I0(au_in_b[0]),
        .I1(\mem_held_addr_reg[3] ),
        .I2(\mem_held_addr_reg[3]_0 ),
        .I3(a_reg_0),
        .I4(\reg_file_a_reg[15][23] [0]),
        .I5(\reg_file_a_reg[15][23] [1]),
        .O(\dp_ipsr_1to0[0]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hEEEA)) 
    \dp_ipsr_1to0[1]_i_1 
       (.I0(use_dp_tbit_reg_0),
        .I1(first_ex_phase),
        .I2(load_xpsr_ex_reg_0),
        .I3(excpt_up_ipsr_ex),
        .O(update_ipsr));
  LUT6 #(
    .INIT(64'hAAFEAAAAFFFEAAAA)) 
    \dp_ipsr_1to0[1]_i_2 
       (.I0(\dp_ipsr_1to0_reg[1]_2 ),
        .I1(\dp_ipsr_1to0_reg[1]_1 ),
        .I2(\dp_ipsr_1to0_reg[1]_0 ),
        .I3(\reg_file_a_reg[15][24] [1]),
        .I4(\reg_file_a_reg[15][24] [0]),
        .I5(\dp_ipsr_1to0[1]_i_7_n_0 ),
        .O(\dp_ipsr_1to0[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00E2FFFF00E20000)) 
    \dp_ipsr_1to0[1]_i_22 
       (.I0(\dp_ipsr_7to2_reg[5]_0 [0]),
        .I1(use_control_ex),
        .I2(active_sp),
        .I3(\dp_ipsr_1to0[1]_i_7_0 ),
        .I4(\wdata_reg[24]_1 ),
        .I5(\dp_ipsr_1to0[1]_i_7_1 ),
        .O(\dp_ipsr_1to0[1]_i_22_n_0 ));
  LUT6 #(
    .INIT(64'h00350F35F035FF35)) 
    \dp_ipsr_1to0[1]_i_7 
       (.I0(\dp_ipsr_1to0_reg[1]_3 ),
        .I1(\dp_ipsr_1to0_reg[1]_4 ),
        .I2(\reg_file_a_reg[15][9]_0 ),
        .I3(\reg_file_a_reg[15][9] ),
        .I4(\dp_ipsr_1to0[1]_i_22_n_0 ),
        .I5(\reg_file_a_reg[0][25]_0 [1]),
        .O(\dp_ipsr_1to0[1]_i_7_n_0 ));
  FDPE \dp_ipsr_1to0_reg[0] 
       (.C(HCLK),
        .CE(update_ipsr),
        .D(\dp_ipsr_1to0[0]_i_1_n_0 ),
        .PRE(SYSRESETn_0),
        .Q(dp_ipsr_1to0[0]));
  FDPE \dp_ipsr_1to0_reg[1] 
       (.C(HCLK),
        .CE(update_ipsr),
        .D(\dp_ipsr_1to0[1]_i_2_n_0 ),
        .PRE(SYSRESETn_0),
        .Q(dp_ipsr_1to0[1]));
  LUT5 #(
    .INIT(32'hDDCCFCCC)) 
    \dp_ipsr_7to2[2]_i_1 
       (.I0(\dp_ipsr_7to2[2]_i_2_n_0 ),
        .I1(\dp_ipsr_7to2[2]_i_3_n_0 ),
        .I2(\dp_ipsr_7to2_reg[5]_1 [1]),
        .I3(\reg_file_a_reg[15][24] [0]),
        .I4(\reg_file_a_reg[15][24] [1]),
        .O(rf_wdata[2]));
  LUT6 #(
    .INIT(64'h00350F35F035FF35)) 
    \dp_ipsr_7to2[2]_i_2 
       (.I0(\dp_ipsr_7to2[2]_i_4_n_0 ),
        .I1(\dp_ipsr_7to2_reg[2]_0 ),
        .I2(\reg_file_a_reg[15][9]_0 ),
        .I3(\reg_file_a_reg[15][9] ),
        .I4(\genblk3[1].ram_block_reg_0_0_i_34_n_0 ),
        .I5(\reg_file_a_reg[0][25]_0 [2]),
        .O(\dp_ipsr_7to2[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00FF00F8000000F8)) 
    \dp_ipsr_7to2[2]_i_3 
       (.I0(rst_fptr_align_ex),
        .I1(fptr_align),
        .I2(invert_b_ex_reg[2]),
        .I3(\reg_file_a_reg[15][24] [0]),
        .I4(\reg_file_a_reg[15][24] [1]),
        .I5(\reg_file_a_reg[15][10] [1]),
        .O(\dp_ipsr_7to2[2]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hE6E8)) 
    \dp_ipsr_7to2[2]_i_4 
       (.I0(au_in_b[1]),
        .I1(\u_dp/au_in_a ),
        .I2(\reg_file_a_reg[15][23] [0]),
        .I3(\reg_file_a_reg[15][23] [1]),
        .O(\dp_ipsr_7to2[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h5FFC50FC5F0C500C)) 
    \dp_ipsr_7to2[3]_i_1 
       (.I0(\dp_ipsr_7to2[3]_i_2_n_0 ),
        .I1(invert_b_ex_reg[3]),
        .I2(\reg_file_a_reg[15][24] [0]),
        .I3(\reg_file_a_reg[15][24] [1]),
        .I4(\reg_file_a_reg[15][10] [2]),
        .I5(\dp_ipsr_7to2_reg[5]_1 [2]),
        .O(rf_wdata[3]));
  LUT6 #(
    .INIT(64'h00350F35F035FF35)) 
    \dp_ipsr_7to2[3]_i_2 
       (.I0(\dp_ipsr_7to2_reg[3]_0 ),
        .I1(\dp_ipsr_7to2_reg[3]_1 ),
        .I2(\reg_file_a_reg[15][9]_0 ),
        .I3(\reg_file_a_reg[15][9] ),
        .I4(\genblk3[1].ram_block_reg_0_0_i_33_n_0 ),
        .I5(\reg_file_a_reg[0][25]_0 [3]),
        .O(\dp_ipsr_7to2[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h5FFC50FC5F0C500C)) 
    \dp_ipsr_7to2[4]_i_1 
       (.I0(\dp_ipsr_7to2[4]_i_2_n_0 ),
        .I1(zero_a_ex_reg[0]),
        .I2(\reg_file_a_reg[15][24] [0]),
        .I3(\reg_file_a_reg[15][24] [1]),
        .I4(\reg_file_a_reg[15][10] [3]),
        .I5(\dp_ipsr_7to2_reg[5]_1 [3]),
        .O(rf_wdata[4]));
  LUT6 #(
    .INIT(64'h0305F30503F5F3F5)) 
    \dp_ipsr_7to2[4]_i_2 
       (.I0(\dp_ipsr_7to2_reg[4]_2 ),
        .I1(\genblk3[1].ram_block_reg_0_1_i_6_n_0 ),
        .I2(\reg_file_a_reg[15][9]_0 ),
        .I3(\reg_file_a_reg[15][9] ),
        .I4(\reg_file_a_reg[0][25]_0 [4]),
        .I5(\dp_ipsr_7to2_reg[4]_3 ),
        .O(\dp_ipsr_7to2[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h5FFC50FC5F0C500C)) 
    \dp_ipsr_7to2[5]_i_1 
       (.I0(\dp_ipsr_7to2[5]_i_2_n_0 ),
        .I1(zero_a_ex_reg[1]),
        .I2(\reg_file_a_reg[15][24] [0]),
        .I3(\reg_file_a_reg[15][24] [1]),
        .I4(\reg_file_a_reg[15][10] [4]),
        .I5(\dp_ipsr_7to2_reg[5]_1 [4]),
        .O(rf_wdata[5]));
  LUT6 #(
    .INIT(64'h00350F35F035FF35)) 
    \dp_ipsr_7to2[5]_i_2 
       (.I0(\dp_ipsr_7to2_reg[5]_2 ),
        .I1(\dp_ipsr_7to2_reg[5]_3 ),
        .I2(\reg_file_a_reg[15][9]_0 ),
        .I3(\reg_file_a_reg[15][9] ),
        .I4(\genblk3[1].ram_block_reg_0_1_i_5_n_0 ),
        .I5(\reg_file_a_reg[0][25]_0 [5]),
        .O(\dp_ipsr_7to2[5]_i_2_n_0 ));
  FDCE \dp_ipsr_7to2_reg[2] 
       (.C(HCLK),
        .CE(update_ipsr),
        .CLR(SYSRESETn_0),
        .D(rf_wdata[2]),
        .Q(dp_ipsr_7to2[2]));
  FDCE \dp_ipsr_7to2_reg[3] 
       (.C(HCLK),
        .CE(update_ipsr),
        .CLR(SYSRESETn_0),
        .D(rf_wdata[3]),
        .Q(dp_ipsr_7to2[3]));
  FDCE \dp_ipsr_7to2_reg[4] 
       (.C(HCLK),
        .CE(update_ipsr),
        .CLR(SYSRESETn_0),
        .D(rf_wdata[4]),
        .Q(dp_ipsr_7to2[4]));
  FDCE \dp_ipsr_7to2_reg[5] 
       (.C(HCLK),
        .CE(update_ipsr),
        .CLR(SYSRESETn_0),
        .D(rf_wdata[5]),
        .Q(dp_ipsr_7to2[5]));
  FDCE \dp_ipsr_7to2_reg[6] 
       (.C(HCLK),
        .CE(update_ipsr),
        .CLR(SYSRESETn_0),
        .D(\dp_ipsr_7to2_reg[7]_3 [0]),
        .Q(dp_ipsr_7to2[6]));
  FDCE \dp_ipsr_7to2_reg[7] 
       (.C(HCLK),
        .CE(update_ipsr),
        .CLR(SYSRESETn_0),
        .D(\dp_ipsr_7to2_reg[7]_3 [1]),
        .Q(dp_ipsr_7to2[7]));
  LUT6 #(
    .INIT(64'hEEFEFFFFEEFE0000)) 
    dp_tbit_reg_i_1
       (.I0(dp_tbit_reg_i_2_n_0),
        .I1(dp_tbit_reg_i_3_n_0),
        .I2(\reg_file_a_reg[15][24]_0 ),
        .I3(dp_tbit_reg_reg_0),
        .I4(update_tbit),
        .I5(dp_tbit_reg),
        .O(dp_tbit_reg_i_1_n_0));
  LUT6 #(
    .INIT(64'h8080808880808080)) 
    dp_tbit_reg_i_2
       (.I0(\reg_file_a_reg[15][24] [0]),
        .I1(\reg_file_a_reg[15][24] [1]),
        .I2(dp_tbit_reg_i_6_n_0),
        .I3(\reg_file_a_reg[15][9] ),
        .I4(\reg_file_a_reg[15][9]_0 ),
        .I5(dp_tbit_reg_reg_1),
        .O(dp_tbit_reg_i_2_n_0));
  LUT4 #(
    .INIT(16'h3202)) 
    dp_tbit_reg_i_3
       (.I0(\HADDR_reg[27] [0]),
        .I1(\reg_file_a_reg[15][24] [0]),
        .I2(\reg_file_a_reg[15][24] [1]),
        .I3(mult_out[3]),
        .O(dp_tbit_reg_i_3_n_0));
  LUT5 #(
    .INIT(32'hCAF0CA00)) 
    dp_tbit_reg_i_6
       (.I0(\reg_file_a_reg[15][24]_1 ),
        .I1(\reg_file_a_reg[0][25]_0 [11]),
        .I2(\reg_file_a_reg[15][9] ),
        .I3(\reg_file_a_reg[15][9]_0 ),
        .I4(\genblk3[1].ram_block_reg_3_0_i_11_n_0 ),
        .O(dp_tbit_reg_i_6_n_0));
  FDCE dp_tbit_reg_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(SYSRESETn_0),
        .D(dp_tbit_reg_i_1_n_0),
        .Q(dp_tbit_reg));
  LUT5 #(
    .INIT(32'h8888B8BB)) 
    dreq_rd_ex_i_1
       (.I0(dreq_rd_ex_reg_1),
        .I1(last_uncond_phase_ex_reg_0),
        .I2(dreq_rd_ex_reg_2),
        .I3(dreq_rd_ex_reg_0),
        .I4(micro_code_de_reg_0),
        .O(nxt_dreq_rd_ex));
  LUT6 #(
    .INIT(64'h00FF00000E0E0E0E)) 
    dreq_wr_ex_i_1
       (.I0(dreq_wr_ex_reg),
        .I1(dreq_wr_ex_reg_0),
        .I2(micro_code_de_reg_0),
        .I3(lsm_last_a_phase_ex),
        .I4(stm_push_ex),
        .I5(last_uncond_phase_ex_reg_0),
        .O(nxt_dreq_wr_ex));
  LUT6 #(
    .INIT(64'hFFFFFF45FFFFFFFF)) 
    \en_itcm_core[1]_i_2 
       (.I0(micro_code_de),
        .I1(pf_fault_de),
        .I2(tbit),
        .I3(int_fault_ex_i_4_n_0),
        .I4(\instr_de_reg[11] ),
        .I5(load_ex_reg_0),
        .O(micro_code_de_reg_0));
  LUT5 #(
    .INIT(32'hFFBF0080)) 
    \exc_ret[2]_i_1 
       (.I0(\hold_reg2_reg[31]_1 [2]),
        .I1(\exc_ret[3]_i_2_n_0 ),
        .I2(biu_rdy),
        .I3(excpt_state[4]),
        .I4(\exc_ret_reg_n_0_[2] ),
        .O(\exc_ret[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFBF0080)) 
    \exc_ret[3]_i_1 
       (.I0(\hold_reg2_reg[31]_1 [3]),
        .I1(\exc_ret[3]_i_2_n_0 ),
        .I2(biu_rdy),
        .I3(excpt_state[4]),
        .I4(p_0_in7_in),
        .O(\exc_ret[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT5 #(
    .INIT(32'h00000008)) 
    \exc_ret[3]_i_2 
       (.I0(\excpt_state[0]_i_5_n_0 ),
        .I1(excpt_state[2]),
        .I2(excpt_state[3]),
        .I3(excpt_state[1]),
        .I4(excpt_state[0]),
        .O(\exc_ret[3]_i_2_n_0 ));
  FDPE \exc_ret_reg[2] 
       (.C(HCLK),
        .CE(1'b1),
        .D(\exc_ret[2]_i_1_n_0 ),
        .PRE(SYSRESETn_0),
        .Q(\exc_ret_reg_n_0_[2] ));
  FDPE \exc_ret_reg[3] 
       (.C(HCLK),
        .CE(1'b1),
        .D(\exc_ret[3]_i_1_n_0 ),
        .PRE(SYSRESETn_0),
        .Q(p_0_in7_in));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT5 #(
    .INIT(32'h00000010)) 
    excpt_inv_imm_de_i_1
       (.I0(excpt_state[4]),
        .I1(excpt_state[3]),
        .I2(excpt_state[0]),
        .I3(excpt_state[1]),
        .I4(excpt_state[2]),
        .O(excpt_inv_imm));
  FDCE excpt_inv_imm_de_reg
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg_3),
        .CLR(SYSRESETn_0),
        .D(excpt_inv_imm),
        .Q(excpt_inv_imm_de));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT5 #(
    .INIT(32'hE0000041)) 
    excpt_isb_de_i_1
       (.I0(excpt_state[1]),
        .I1(excpt_state[2]),
        .I2(excpt_state[0]),
        .I3(excpt_state[4]),
        .I4(excpt_state[3]),
        .O(excpt_isb));
  FDCE excpt_isb_de_reg
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg_3),
        .CLR(SYSRESETn_0),
        .D(excpt_isb),
        .Q(excpt_isb_de));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT5 #(
    .INIT(32'h00040000)) 
    excpt_ld_pc_de_i_1
       (.I0(excpt_state[2]),
        .I1(excpt_state[1]),
        .I2(excpt_state[4]),
        .I3(excpt_state[3]),
        .I4(excpt_state[0]),
        .O(excpt_ld_pc_de_i_1_n_0));
  FDCE excpt_ld_pc_de_reg
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg_3),
        .CLR(SYSRESETn_0),
        .D(excpt_ld_pc_de_i_1_n_0),
        .Q(excpt_ld_pc_de));
  FDCE excpt_ld_pc_ex_reg
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg_3),
        .CLR(SYSRESETn_0),
        .D(excpt_ld_pc_de),
        .Q(excpt_ld_pc_ex));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT5 #(
    .INIT(32'h10000000)) 
    excpt_mask_sp_de_i_1
       (.I0(excpt_state[4]),
        .I1(excpt_state[3]),
        .I2(excpt_state[1]),
        .I3(excpt_state[2]),
        .I4(excpt_state[0]),
        .O(excpt_mask_sp));
  FDCE excpt_mask_sp_de_reg
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg_3),
        .CLR(SYSRESETn_0),
        .D(excpt_mask_sp),
        .Q(excpt_mask_sp_de));
  FDCE excpt_mask_write_de_reg
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg_3),
        .CLR(SYSRESETn_0),
        .D(g0_b0_n_0),
        .Q(excpt_mask_write_de));
  FDCE excpt_mask_write_ex_reg
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg_3),
        .CLR(SYSRESETn_0),
        .D(excpt_mask_write_de),
        .Q(excpt_mask_write_ex));
  LUT6 #(
    .INIT(64'h20AA202000000000)) 
    excpt_ret_de_i_1
       (.I0(excpt_ret_de_reg),
        .I1(instr_faulted_reg_0),
        .I2(pop_pc_ex),
        .I3(br_lr_ex),
        .I4(tbit_ex),
        .I5(excpt_ret_de_reg_0),
        .O(excpt_ret_fe));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    excpt_ret_ld_pc_de_i_1
       (.I0(excpt_state[2]),
        .I1(excpt_state[1]),
        .I2(excpt_state[0]),
        .I3(excpt_state[3]),
        .O(excpt_ret_ld_pc));
  FDCE excpt_ret_ld_pc_de_reg
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg_3),
        .CLR(SYSRESETn_0),
        .D(excpt_ret_ld_pc),
        .Q(excpt_ret_ld_pc_de));
  FDCE excpt_ret_ld_pc_ex_reg
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg_3),
        .CLR(SYSRESETn_0),
        .D(excpt_ret_ld_pc_de),
        .Q(excpt_ret_ld_pc_ex));
  LUT6 #(
    .INIT(64'h00000000F2FFFEFF)) 
    \excpt_state[0]_i_1 
       (.I0(excpt_state[1]),
        .I1(excpt_state[2]),
        .I2(excpt_state[3]),
        .I3(excpt_state[4]),
        .I4(excpt_state[0]),
        .I5(\excpt_state[0]_i_2_n_0 ),
        .O(nxt_excpt_state[0]));
  LUT6 #(
    .INIT(64'hC0A8C0AAC0AAC0AA)) 
    \excpt_state[0]_i_2 
       (.I0(\excpt_state[0]_i_3_n_0 ),
        .I1(excpt_state[3]),
        .I2(\excpt_state[0]_i_4_n_0 ),
        .I3(excpt_state[4]),
        .I4(\excpt_state[0]_i_5_n_0 ),
        .I5(excpt_state[2]),
        .O(\excpt_state[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFF0E0FFFFF000F00)) 
    \excpt_state[0]_i_3 
       (.I0(nvic_lockup),
        .I1(i_mcode_dec),
        .I2(excpt_state[3]),
        .I3(excpt_state[0]),
        .I4(excpt_state[1]),
        .I5(excpt_state[2]),
        .O(\excpt_state[0]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \excpt_state[0]_i_4 
       (.I0(excpt_state[1]),
        .I1(excpt_state[0]),
        .O(\excpt_state[0]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT4 #(
    .INIT(16'hAAFE)) 
    \excpt_state[0]_i_5 
       (.I0(excpt_ret_de),
        .I1(nvic_lockup),
        .I2(E),
        .I3(micro_code_de),
        .O(\excpt_state[0]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h32339C0C32339C4C)) 
    \excpt_state[1]_i_1 
       (.I0(excpt_state[4]),
        .I1(excpt_state[1]),
        .I2(excpt_state[2]),
        .I3(excpt_state[3]),
        .I4(excpt_state[0]),
        .I5(nvic_lockup),
        .O(nxt_excpt_state[1]));
  LUT6 #(
    .INIT(64'hF000FCCC00C3B8CC)) 
    \excpt_state[2]_i_1 
       (.I0(\excpt_state[2]_i_2_n_0 ),
        .I1(excpt_state[2]),
        .I2(excpt_state[0]),
        .I3(excpt_state[1]),
        .I4(excpt_state[4]),
        .I5(excpt_state[3]),
        .O(nxt_excpt_state[2]));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \excpt_state[2]_i_2 
       (.I0(nvic_lockup),
        .I1(i_mcode_dec),
        .I2(excpt_state[0]),
        .O(\excpt_state[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h5B5AFFFF5B5A2AA2)) 
    \excpt_state[3]_i_1 
       (.I0(excpt_state[3]),
        .I1(excpt_state[0]),
        .I2(excpt_state[1]),
        .I3(excpt_state[2]),
        .I4(excpt_state[4]),
        .I5(\excpt_state[3]_i_2_n_0 ),
        .O(nxt_excpt_state[3]));
  LUT6 #(
    .INIT(64'h0808080800000800)) 
    \excpt_state[3]_i_2 
       (.I0(excpt_state[1]),
        .I1(excpt_state[2]),
        .I2(excpt_state[3]),
        .I3(i_mcode_dec),
        .I4(nvic_lockup),
        .I5(excpt_state[0]),
        .O(\excpt_state[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h22BA22AAAAAAAA88)) 
    \excpt_state[4]_i_1 
       (.I0(excpt_state[4]),
        .I1(excpt_state[0]),
        .I2(nvic_lockup),
        .I3(excpt_state[3]),
        .I4(excpt_state[2]),
        .I5(excpt_state[1]),
        .O(nxt_excpt_state[4]));
  FDCE \excpt_state_reg[0] 
       (.C(HCLK),
        .CE(adv_de_to_ex),
        .CLR(SYSRESETn_0),
        .D(nxt_excpt_state[0]),
        .Q(excpt_state[0]));
  FDCE \excpt_state_reg[1] 
       (.C(HCLK),
        .CE(adv_de_to_ex),
        .CLR(SYSRESETn_0),
        .D(nxt_excpt_state[1]),
        .Q(excpt_state[1]));
  FDCE \excpt_state_reg[2] 
       (.C(HCLK),
        .CE(adv_de_to_ex),
        .CLR(SYSRESETn_0),
        .D(nxt_excpt_state[2]),
        .Q(excpt_state[2]));
  FDCE \excpt_state_reg[3] 
       (.C(HCLK),
        .CE(adv_de_to_ex),
        .CLR(SYSRESETn_0),
        .D(nxt_excpt_state[3]),
        .Q(excpt_state[3]));
  FDCE \excpt_state_reg[4] 
       (.C(HCLK),
        .CE(adv_de_to_ex),
        .CLR(SYSRESETn_0),
        .D(nxt_excpt_state[4]),
        .Q(excpt_state[4]));
  LUT6 #(
    .INIT(64'h0000000100000000)) 
    excpt_up_ipsr_de_i_1
       (.I0(reset_code),
        .I1(excpt_state[3]),
        .I2(excpt_state[4]),
        .I3(excpt_state[0]),
        .I4(excpt_state[2]),
        .I5(excpt_state[1]),
        .O(excpt_up_ipsr));
  FDCE excpt_up_ipsr_de_reg
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg_3),
        .CLR(SYSRESETn_0),
        .D(excpt_up_ipsr),
        .Q(excpt_up_ipsr_de));
  FDCE excpt_up_ipsr_ex_reg
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg_3),
        .CLR(SYSRESETn_0),
        .D(excpt_up_ipsr_de),
        .Q(excpt_up_ipsr_ex));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT5 #(
    .INIT(32'h00000007)) 
    excpt_zero_a_de_i_1
       (.I0(excpt_state[4]),
        .I1(excpt_state[1]),
        .I2(excpt_state[3]),
        .I3(excpt_state[0]),
        .I4(excpt_state[2]),
        .O(excpt_zero_a));
  FDCE excpt_zero_a_de_reg
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg_3),
        .CLR(SYSRESETn_0),
        .D(excpt_zero_a),
        .Q(excpt_zero_a_de));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT5 #(
    .INIT(32'h10FF1110)) 
    fetch_internal_i_1
       (.I0(\pc_reg[23] [0]),
        .I1(micro_code_de),
        .I2(br_first_ex),
        .I3(fetch_phase),
        .I4(fetch_internal_reg),
        .O(nxt_fetch_internal));
  LUT6 #(
    .INIT(64'h0100000000000000)) 
    first32_ex_i_1
       (.I0(first32_ex_i_2_n_0),
        .I1(Q[11]),
        .I2(push_ex_reg),
        .I3(first32_ex_reg_2),
        .I4(Q[14]),
        .I5(Q[12]),
        .O(first32_de));
  LUT6 #(
    .INIT(64'hFFFFFFFF0E0EFF0E)) 
    first32_ex_i_2
       (.I0(\excpt_state[0]_i_5_n_0 ),
        .I1(excpt_state[0]),
        .I2(int_fault_ex_i_11_n_0),
        .I3(locked_up_reg_0),
        .I4(micro_code_de),
        .I5(ldm_pop_ex_i_3_n_0),
        .O(first32_ex_i_2_n_0));
  LUT6 #(
    .INIT(64'h20FF202020002020)) 
    first_pop_pc_ex_i_1
       (.I0(nxt_ldm_base),
        .I1(instr_faulted_reg_0),
        .I2(pop_pc_ex),
        .I3(first_pop_pc_ex_reg),
        .I4(invert_b_ex_reg_2),
        .I5(first_pop_pc_ex_i_2_n_0),
        .O(nxt_first_pop_pc_ex));
  LUT4 #(
    .INIT(16'h4F44)) 
    first_pop_pc_ex_i_2
       (.I0(instr_faulted_reg_0),
        .I1(excpt_ld_pc_de),
        .I2(last_instr_faulted),
        .I3(excpt_ret_ld_pc_de),
        .O(first_pop_pc_ex_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT3 #(
    .INIT(8'h08)) 
    force_hf_i_1
       (.I0(load_xpsr_ex_reg_0),
        .I1(first_ex_phase),
        .I2(active_sp),
        .O(nxt_force_hf));
  FDCE force_hf_reg
       (.C(HCLK),
        .CE(update_ipsr),
        .CLR(SYSRESETn_0),
        .D(nxt_force_hf),
        .Q(force_hf));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT2 #(
    .INIT(4'h8)) 
    force_ipsr_i_1
       (.I0(first_ex_phase),
        .I1(load_xpsr_ex_reg_0),
        .O(nvic_excpt_ret_taken));
  FDCE force_ipsr_reg
       (.C(HCLK),
        .CE(update_ipsr),
        .CLR(SYSRESETn_0),
        .D(nvic_excpt_ret_taken),
        .Q(force_ipsr));
  LUT2 #(
    .INIT(4'h8)) 
    fptr_align_i_3
       (.I0(first_ex_phase),
        .I1(push_xpsr_ex),
        .O(first_ex_phase_reg));
  FDCE fptr_align_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(SYSRESETn_0),
        .D(fptr_align_reg_0),
        .Q(fptr_align));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT5 #(
    .INIT(32'h0049C80C)) 
    g0_b0
       (.I0(excpt_state[0]),
        .I1(excpt_state[1]),
        .I2(excpt_state[2]),
        .I3(excpt_state[3]),
        .I4(excpt_state[4]),
        .O(g0_b0_n_0));
  LUT3 #(
    .INIT(8'hB8)) 
    \genblk3[1].ram_block_reg_0_0_i_1 
       (.I0(O[2]),
        .I1(branch_ex_reg_0),
        .I2(\pc_reg[14] ),
        .O(branch_ex_reg[14]));
  LUT3 #(
    .INIT(8'hB8)) 
    \genblk3[1].ram_block_reg_0_0_i_10 
       (.I0(zero_a_ex_reg[1]),
        .I1(branch_ex_reg_0),
        .I2(\pc_reg[5] ),
        .O(branch_ex_reg[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    \genblk3[1].ram_block_reg_0_0_i_11 
       (.I0(zero_a_ex_reg[0]),
        .I1(branch_ex_reg_0),
        .I2(\pc_reg[4] ),
        .O(branch_ex_reg[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    \genblk3[1].ram_block_reg_0_0_i_12 
       (.I0(invert_b_ex_reg[3]),
        .I1(branch_ex_reg_0),
        .I2(\pc_reg[3] ),
        .O(branch_ex_reg[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    \genblk3[1].ram_block_reg_0_0_i_13 
       (.I0(invert_b_ex_reg[2]),
        .I1(branch_ex_reg_0),
        .I2(\pc_reg[2]_0 ),
        .O(branch_ex_reg[2]));
  LUT4 #(
    .INIT(16'hFE02)) 
    \genblk3[1].ram_block_reg_0_0_i_14 
       (.I0(b_reg_0[3]),
        .I1(\wdata_reg[24]_0 [0]),
        .I2(\wdata_reg[24]_0 [1]),
        .I3(\genblk3[1].ram_block_reg_0_0_i_33_n_0 ),
        .O(p_1_in2_in[3]));
  LUT4 #(
    .INIT(16'hFE02)) 
    \genblk3[1].ram_block_reg_0_0_i_15 
       (.I0(b_reg_0[2]),
        .I1(\wdata_reg[24]_0 [0]),
        .I2(\wdata_reg[24]_0 [1]),
        .I3(\genblk3[1].ram_block_reg_0_0_i_34_n_0 ),
        .O(p_1_in2_in[2]));
  LUT6 #(
    .INIT(64'h32023202FECE3202)) 
    \genblk3[1].ram_block_reg_0_0_i_16 
       (.I0(b_reg_0[1]),
        .I1(\wdata_reg[24]_0 [0]),
        .I2(\wdata_reg[24]_0 [1]),
        .I3(xpsr_ex),
        .I4(\wdata_reg[27] [1]),
        .I5(i_dbg_wdata_sel_ex_reg_0),
        .O(p_1_in2_in[1]));
  LUT4 #(
    .INIT(16'hFE02)) 
    \genblk3[1].ram_block_reg_0_0_i_17 
       (.I0(b_reg_0[0]),
        .I1(\wdata_reg[24]_0 [0]),
        .I2(\wdata_reg[24]_0 [1]),
        .I3(\genblk3[1].ram_block_reg_0_0_i_36_n_0 ),
        .O(p_1_in2_in[0]));
  LUT6 #(
    .INIT(64'h00000000EAEAFFEA)) 
    \genblk3[1].ram_block_reg_0_0_i_19 
       (.I0(first_pop_pc_ex_reg),
        .I1(branch_ex),
        .I2(first_ex_phase),
        .I3(dreq_rd_ex),
        .I4(\HADDR_reg[1] ),
        .I5(i_dbg_wdata_sel_ex_reg_0),
        .O(branch_ex_reg_0));
  LUT3 #(
    .INIT(8'hB8)) 
    \genblk3[1].ram_block_reg_0_0_i_2 
       (.I0(O[1]),
        .I1(branch_ex_reg_0),
        .I2(\pc_reg[13] ),
        .O(branch_ex_reg[13]));
  LUT3 #(
    .INIT(8'hB8)) 
    \genblk3[1].ram_block_reg_0_0_i_3 
       (.I0(O[0]),
        .I1(branch_ex_reg_0),
        .I2(\pc_reg[12] ),
        .O(branch_ex_reg[12]));
  LUT6 #(
    .INIT(64'h0800080008FF0800)) 
    \genblk3[1].ram_block_reg_0_0_i_33 
       (.I0(\dp_ipsr_7to2_reg[5]_0 [1]),
        .I1(\wdata_reg[5] [0]),
        .I2(\wdata_reg[5] [2]),
        .I3(\wdata_reg[24]_1 ),
        .I4(\wdata_reg[27] [3]),
        .I5(i_dbg_wdata_sel_ex_reg_0),
        .O(\genblk3[1].ram_block_reg_0_0_i_33_n_0 ));
  LUT6 #(
    .INIT(64'h0800080008FF0800)) 
    \genblk3[1].ram_block_reg_0_0_i_34 
       (.I0(nvic_excpt_num[2]),
        .I1(\wdata_reg[5] [0]),
        .I2(\wdata_reg[5] [2]),
        .I3(\wdata_reg[24]_1 ),
        .I4(\wdata_reg[27] [2]),
        .I5(i_dbg_wdata_sel_ex_reg_0),
        .O(\genblk3[1].ram_block_reg_0_0_i_34_n_0 ));
  LUT5 #(
    .INIT(32'h00E2E200)) 
    \genblk3[1].ram_block_reg_0_0_i_35 
       (.I0(\dp_ipsr_7to2_reg[5]_0 [0]),
        .I1(use_control_ex),
        .I2(active_sp),
        .I3(\wdata_reg[5] [2]),
        .I4(\wdata_reg[5] [0]),
        .O(xpsr_ex));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT5 #(
    .INIT(32'h0808FB08)) 
    \genblk3[1].ram_block_reg_0_0_i_36 
       (.I0(\genblk3[1].ram_block_reg_0_0_i_38_n_0 ),
        .I1(\wdata_reg[24]_0 [1]),
        .I2(\wdata_reg[24]_0 [0]),
        .I3(\wdata_reg[27] [0]),
        .I4(i_dbg_wdata_sel_ex_reg_0),
        .O(\genblk3[1].ram_block_reg_0_0_i_36_n_0 ));
  LUT4 #(
    .INIT(16'hE200)) 
    \genblk3[1].ram_block_reg_0_0_i_38 
       (.I0(force_hf_reg_0),
        .I1(use_primask_ex),
        .I2(nvic_primask),
        .I3(\wdata_reg[5] [0]),
        .O(\genblk3[1].ram_block_reg_0_0_i_38_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \genblk3[1].ram_block_reg_0_0_i_4 
       (.I0(\pc_reg[11] [3]),
        .I1(branch_ex_reg_0),
        .I2(\pc_reg[11]_0 ),
        .O(branch_ex_reg[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    \genblk3[1].ram_block_reg_0_0_i_5 
       (.I0(\pc_reg[11] [2]),
        .I1(branch_ex_reg_0),
        .I2(\pc_reg[10] ),
        .O(branch_ex_reg[10]));
  LUT3 #(
    .INIT(8'hB8)) 
    \genblk3[1].ram_block_reg_0_0_i_6 
       (.I0(\pc_reg[11] [1]),
        .I1(branch_ex_reg_0),
        .I2(\pc_reg[9] ),
        .O(branch_ex_reg[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    \genblk3[1].ram_block_reg_0_0_i_7 
       (.I0(\pc_reg[11] [0]),
        .I1(branch_ex_reg_0),
        .I2(\pc_reg[8] ),
        .O(branch_ex_reg[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    \genblk3[1].ram_block_reg_0_0_i_8 
       (.I0(zero_a_ex_reg[3]),
        .I1(branch_ex_reg_0),
        .I2(\pc_reg[7] ),
        .O(branch_ex_reg[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    \genblk3[1].ram_block_reg_0_0_i_9 
       (.I0(zero_a_ex_reg[2]),
        .I1(branch_ex_reg_0),
        .I2(\pc_reg[6] ),
        .O(branch_ex_reg[6]));
  LUT5 #(
    .INIT(32'h0202CE02)) 
    \genblk3[1].ram_block_reg_0_1_i_1 
       (.I0(b_reg_0[7]),
        .I1(\wdata_reg[24]_0 [0]),
        .I2(\wdata_reg[24]_0 [1]),
        .I3(\wdata_reg[27] [7]),
        .I4(i_dbg_wdata_sel_ex_reg_0),
        .O(p_1_in2_in[7]));
  LUT5 #(
    .INIT(32'h0202CE02)) 
    \genblk3[1].ram_block_reg_0_1_i_2 
       (.I0(b_reg_0[6]),
        .I1(\wdata_reg[24]_0 [0]),
        .I2(\wdata_reg[24]_0 [1]),
        .I3(\wdata_reg[27] [6]),
        .I4(i_dbg_wdata_sel_ex_reg_0),
        .O(p_1_in2_in[6]));
  LUT4 #(
    .INIT(16'hFE02)) 
    \genblk3[1].ram_block_reg_0_1_i_3 
       (.I0(b_reg_0[5]),
        .I1(\wdata_reg[24]_0 [0]),
        .I2(\wdata_reg[24]_0 [1]),
        .I3(\genblk3[1].ram_block_reg_0_1_i_5_n_0 ),
        .O(p_1_in2_in[5]));
  LUT4 #(
    .INIT(16'hFE02)) 
    \genblk3[1].ram_block_reg_0_1_i_4 
       (.I0(b_reg_0[4]),
        .I1(\wdata_reg[24]_0 [0]),
        .I2(\wdata_reg[24]_0 [1]),
        .I3(\genblk3[1].ram_block_reg_0_1_i_6_n_0 ),
        .O(p_1_in2_in[4]));
  LUT6 #(
    .INIT(64'h0800080008FF0800)) 
    \genblk3[1].ram_block_reg_0_1_i_5 
       (.I0(nvic_excpt_num[5]),
        .I1(\wdata_reg[5] [0]),
        .I2(\wdata_reg[5] [2]),
        .I3(\wdata_reg[24]_1 ),
        .I4(\wdata_reg[27] [5]),
        .I5(i_dbg_wdata_sel_ex_reg_0),
        .O(\genblk3[1].ram_block_reg_0_1_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0800080008FF0800)) 
    \genblk3[1].ram_block_reg_0_1_i_6 
       (.I0(\dp_ipsr_7to2_reg[6]_0 ),
        .I1(\wdata_reg[5] [0]),
        .I2(\wdata_reg[5] [2]),
        .I3(\wdata_reg[24]_1 ),
        .I4(\wdata_reg[27] [4]),
        .I5(i_dbg_wdata_sel_ex_reg_0),
        .O(\genblk3[1].ram_block_reg_0_1_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFB8000000B8)) 
    \genblk3[1].ram_block_reg_1_0_i_3 
       (.I0(b_reg_0[1]),
        .I1(\wdata_reg[9] ),
        .I2(b_reg_0[8]),
        .I3(\wdata_reg[24]_0 [0]),
        .I4(\wdata_reg[24]_0 [1]),
        .I5(\genblk3[1].ram_block_reg_1_0_i_8_n_0 ),
        .O(p_1_in2_in[8]));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \genblk3[1].ram_block_reg_1_0_i_7 
       (.I0(i_dbg_wdata_sel_ex_reg_0),
        .I1(\wdata_reg[24]_0 [0]),
        .I2(\wdata_reg[24]_0 [1]),
        .O(i_dbg_wdata_sel_ex_reg_1));
  LUT6 #(
    .INIT(64'h00800080FF8F0080)) 
    \genblk3[1].ram_block_reg_1_0_i_8 
       (.I0(push_xpsr_ex),
        .I1(fptr_align),
        .I2(\wdata_reg[24]_0 [1]),
        .I3(\wdata_reg[24]_0 [0]),
        .I4(\wdata_reg[27] [8]),
        .I5(i_dbg_wdata_sel_ex_reg_0),
        .O(\genblk3[1].ram_block_reg_1_0_i_8_n_0 ));
  LUT5 #(
    .INIT(32'h00001D11)) 
    \genblk3[1].ram_block_reg_3_0_i_1 
       (.I0(\wdata_reg[24]_0 [1]),
        .I1(\wdata_reg[24]_0 [0]),
        .I2(i_dbg_wdata_sel_ex_reg_0),
        .I3(\wdata_reg[27] [16]),
        .I4(\wdata_reg[27]_0 ),
        .O(p_1_in2_in[12]));
  LUT6 #(
    .INIT(64'h8A008A008AFF8A00)) 
    \genblk3[1].ram_block_reg_3_0_i_11 
       (.I0(tbit),
        .I1(push_xpsr_ex),
        .I2(\genblk3[1].ram_block_reg_3_0_i_12_n_0 ),
        .I3(\wdata_reg[24]_1 ),
        .I4(\wdata_reg[27] [13]),
        .I5(i_dbg_wdata_sel_ex_reg_0),
        .O(\genblk3[1].ram_block_reg_3_0_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFDFFFFFFF)) 
    \genblk3[1].ram_block_reg_3_0_i_12 
       (.I0(\wdata_reg[5] [1]),
        .I1(\wdata_reg[5] [2]),
        .I2(excpt_state[1]),
        .I3(excpt_state[4]),
        .I4(excpt_state[3]),
        .I5(excpt_state[0]),
        .O(\genblk3[1].ram_block_reg_3_0_i_12_n_0 ));
  LUT5 #(
    .INIT(32'h00001D11)) 
    \genblk3[1].ram_block_reg_3_0_i_2 
       (.I0(\wdata_reg[24]_0 [1]),
        .I1(\wdata_reg[24]_0 [0]),
        .I2(i_dbg_wdata_sel_ex_reg_0),
        .I3(\wdata_reg[27] [15]),
        .I4(\wdata_reg[26] ),
        .O(p_1_in2_in[11]));
  LUT6 #(
    .INIT(64'hFE02FFFFFE020000)) 
    \genblk3[1].ram_block_reg_3_0_i_3 
       (.I0(b_reg_0[9]),
        .I1(\wdata_reg[25] ),
        .I2(\wdata_reg[9] ),
        .I3(\wdata_reg[25]_0 ),
        .I4(\wdata_reg[25]_1 ),
        .I5(\genblk3[1].ram_block_reg_3_0_i_9_n_0 ),
        .O(p_1_in2_in[10]));
  LUT4 #(
    .INIT(16'hFE02)) 
    \genblk3[1].ram_block_reg_3_0_i_4 
       (.I0(\wdata_reg[24] ),
        .I1(\wdata_reg[24]_0 [0]),
        .I2(\wdata_reg[24]_0 [1]),
        .I3(\genblk3[1].ram_block_reg_3_0_i_11_n_0 ),
        .O(p_1_in2_in[9]));
  LUT6 #(
    .INIT(64'h8000800080FF8000)) 
    \genblk3[1].ram_block_reg_3_0_i_9 
       (.I0(use_dp_tbit_i_2_n_0),
        .I1(use_primask_ex),
        .I2(active_sp),
        .I3(\wdata_reg[24]_1 ),
        .I4(\wdata_reg[27] [14]),
        .I5(i_dbg_wdata_sel_ex_reg_0),
        .O(\genblk3[1].ram_block_reg_3_0_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \held_instr0[15]_i_1 
       (.I0(\write_addr_reg[1] [0]),
        .I1(\held_instr0[15]_i_3_n_0 ),
        .O(\write_addr_reg[0]_1 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFC00A800)) 
    \held_instr0[15]_i_3 
       (.I0(\write_addr_reg[1]_0 ),
        .I1(branching_ex),
        .I2(invert_b_ex_reg_2),
        .I3(biu_rdy),
        .I4(micro_code_de),
        .I5(\write_addr_reg[1]_1 ),
        .O(\held_instr0[15]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \held_instr1[15]_i_1 
       (.I0(\write_addr_reg[1] [0]),
        .I1(\held_instr0[15]_i_3_n_0 ),
        .O(\write_addr_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    hi_pre_fetch_addr_i_1
       (.I0(seq_fetch_addr[0]),
        .I1(\pc_reg[2] ),
        .I2(invert_b_ex_reg[1]),
        .I3(branch_ex_reg_0),
        .I4(hi_pre_fetch_addr_reg),
        .O(\pc_reg[23] [0]));
  LUT6 #(
    .INIT(64'h00000000DC1CD010)) 
    \hold_reg2[0]_i_1 
       (.I0(\hold_reg2_reg[0]_0 ),
        .I1(\hold_reg2_reg[0] ),
        .I2(pc_mux_ctl_ex),
        .I3(\hold_reg2_reg[31]_0 [0]),
        .I4(\hold_reg2_reg[31]_1 [0]),
        .I5(invert_b_ex_reg_2),
        .O(\pc_reg[31] [0]));
  LUT6 #(
    .INIT(64'hF5FC05FCF50C050C)) 
    \hold_reg2[10]_i_1 
       (.I0(\hold_reg2_reg[10] ),
        .I1(\hold_reg2_reg[31]_2 [9]),
        .I2(\hold_reg2_reg[0] ),
        .I3(pc_mux_ctl_ex),
        .I4(\hold_reg2_reg[31]_0 [10]),
        .I5(\hold_reg2_reg[31]_1 [10]),
        .O(\pc_reg[31] [10]));
  LUT6 #(
    .INIT(64'hF5FC05FCF50C050C)) 
    \hold_reg2[11]_i_1 
       (.I0(\hold_reg2_reg[11] ),
        .I1(\hold_reg2_reg[31]_2 [10]),
        .I2(\hold_reg2_reg[0] ),
        .I3(pc_mux_ctl_ex),
        .I4(\hold_reg2_reg[31]_0 [11]),
        .I5(\hold_reg2_reg[31]_1 [11]),
        .O(\pc_reg[31] [11]));
  LUT6 #(
    .INIT(64'hF5FC05FCF50C050C)) 
    \hold_reg2[12]_i_1 
       (.I0(\hold_reg2_reg[12] ),
        .I1(\hold_reg2_reg[31]_2 [11]),
        .I2(\hold_reg2_reg[0] ),
        .I3(pc_mux_ctl_ex),
        .I4(\hold_reg2_reg[31]_0 [12]),
        .I5(\hold_reg2_reg[31]_1 [12]),
        .O(\pc_reg[31] [12]));
  LUT6 #(
    .INIT(64'hF5FC05FCF50C050C)) 
    \hold_reg2[13]_i_1 
       (.I0(\hold_reg2_reg[13] ),
        .I1(\hold_reg2_reg[31]_2 [12]),
        .I2(\hold_reg2_reg[0] ),
        .I3(pc_mux_ctl_ex),
        .I4(\hold_reg2_reg[31]_0 [13]),
        .I5(\hold_reg2_reg[31]_1 [13]),
        .O(\pc_reg[31] [13]));
  LUT6 #(
    .INIT(64'hF5FC05FCF50C050C)) 
    \hold_reg2[14]_i_1 
       (.I0(\hold_reg2_reg[14] ),
        .I1(\hold_reg2_reg[31]_2 [13]),
        .I2(\hold_reg2_reg[0] ),
        .I3(pc_mux_ctl_ex),
        .I4(\hold_reg2_reg[31]_0 [14]),
        .I5(\hold_reg2_reg[31]_1 [14]),
        .O(\pc_reg[31] [14]));
  LUT6 #(
    .INIT(64'hF5FC05FCF50C050C)) 
    \hold_reg2[15]_i_1 
       (.I0(\hold_reg2_reg[15] ),
        .I1(\hold_reg2_reg[31]_2 [14]),
        .I2(\hold_reg2_reg[0] ),
        .I3(pc_mux_ctl_ex),
        .I4(\hold_reg2_reg[31]_0 [15]),
        .I5(\hold_reg2_reg[31]_1 [15]),
        .O(\pc_reg[31] [15]));
  LUT6 #(
    .INIT(64'hF5FC05FCF50C050C)) 
    \hold_reg2[16]_i_1 
       (.I0(\hold_reg2_reg[16] ),
        .I1(\hold_reg2_reg[31]_2 [15]),
        .I2(\hold_reg2_reg[0] ),
        .I3(pc_mux_ctl_ex),
        .I4(\hold_reg2_reg[31]_0 [16]),
        .I5(\hold_reg2_reg[31]_1 [16]),
        .O(\pc_reg[31] [16]));
  LUT6 #(
    .INIT(64'hF5FC05FCF50C050C)) 
    \hold_reg2[17]_i_1 
       (.I0(\hold_reg2_reg[17] ),
        .I1(\hold_reg2_reg[31]_2 [16]),
        .I2(\hold_reg2_reg[0] ),
        .I3(pc_mux_ctl_ex),
        .I4(\hold_reg2_reg[31]_0 [17]),
        .I5(\hold_reg2_reg[31]_1 [17]),
        .O(\pc_reg[31] [17]));
  LUT6 #(
    .INIT(64'hFF5CF05C0F5C005C)) 
    \hold_reg2[18]_i_1 
       (.I0(\hold_reg2_reg[18] ),
        .I1(\hold_reg2_reg[31]_2 [17]),
        .I2(pc_mux_ctl_ex),
        .I3(\hold_reg2_reg[0] ),
        .I4(\hold_reg2_reg[31]_1 [18]),
        .I5(\hold_reg2_reg[31]_0 [18]),
        .O(\pc_reg[31] [18]));
  LUT6 #(
    .INIT(64'hF5FC05FCF50C050C)) 
    \hold_reg2[19]_i_1 
       (.I0(\hold_reg2_reg[19] ),
        .I1(\hold_reg2_reg[31]_2 [18]),
        .I2(\hold_reg2_reg[0] ),
        .I3(pc_mux_ctl_ex),
        .I4(\hold_reg2_reg[31]_0 [19]),
        .I5(\hold_reg2_reg[31]_1 [19]),
        .O(\pc_reg[31] [19]));
  LUT6 #(
    .INIT(64'hF5FC05FCF50C050C)) 
    \hold_reg2[1]_i_1 
       (.I0(\hold_reg2_reg[1] ),
        .I1(\hold_reg2_reg[31]_2 [0]),
        .I2(\hold_reg2_reg[0] ),
        .I3(pc_mux_ctl_ex),
        .I4(\hold_reg2_reg[31]_0 [1]),
        .I5(\hold_reg2_reg[31]_1 [1]),
        .O(\pc_reg[31] [1]));
  LUT6 #(
    .INIT(64'hFF5CF05C0F5C005C)) 
    \hold_reg2[20]_i_1 
       (.I0(\hold_reg2_reg[20] ),
        .I1(\hold_reg2_reg[31]_2 [19]),
        .I2(pc_mux_ctl_ex),
        .I3(\hold_reg2_reg[0] ),
        .I4(\hold_reg2_reg[31]_1 [20]),
        .I5(\hold_reg2_reg[31]_0 [20]),
        .O(\pc_reg[31] [20]));
  LUT6 #(
    .INIT(64'hF5FC05FCF50C050C)) 
    \hold_reg2[21]_i_1 
       (.I0(\hold_reg2_reg[21] ),
        .I1(\hold_reg2_reg[31]_2 [20]),
        .I2(\hold_reg2_reg[0] ),
        .I3(pc_mux_ctl_ex),
        .I4(\hold_reg2_reg[31]_0 [21]),
        .I5(\hold_reg2_reg[31]_1 [21]),
        .O(\pc_reg[31] [21]));
  LUT6 #(
    .INIT(64'hF5FC05FCF50C050C)) 
    \hold_reg2[22]_i_1 
       (.I0(\hold_reg2_reg[22] ),
        .I1(\hold_reg2_reg[31]_2 [21]),
        .I2(\hold_reg2_reg[0] ),
        .I3(pc_mux_ctl_ex),
        .I4(\hold_reg2_reg[31]_0 [22]),
        .I5(\hold_reg2_reg[31]_1 [22]),
        .O(\pc_reg[31] [22]));
  LUT6 #(
    .INIT(64'hF5FC05FCF50C050C)) 
    \hold_reg2[23]_i_1 
       (.I0(\hold_reg2_reg[23] ),
        .I1(\hold_reg2_reg[31]_2 [22]),
        .I2(\hold_reg2_reg[0] ),
        .I3(pc_mux_ctl_ex),
        .I4(\hold_reg2_reg[31]_0 [23]),
        .I5(\hold_reg2_reg[31]_1 [23]),
        .O(\pc_reg[31] [23]));
  LUT6 #(
    .INIT(64'hF5FC05FCF50C050C)) 
    \hold_reg2[24]_i_1 
       (.I0(\hold_reg2_reg[24] ),
        .I1(\hold_reg2_reg[31]_2 [23]),
        .I2(\hold_reg2_reg[0] ),
        .I3(pc_mux_ctl_ex),
        .I4(\hold_reg2_reg[31]_0 [24]),
        .I5(\hold_reg2_reg[31]_1 [24]),
        .O(\pc_reg[31] [24]));
  LUT6 #(
    .INIT(64'hF5FC05FCF50C050C)) 
    \hold_reg2[25]_i_1 
       (.I0(\hold_reg2_reg[25] ),
        .I1(\hold_reg2_reg[31]_2 [24]),
        .I2(\hold_reg2_reg[0] ),
        .I3(pc_mux_ctl_ex),
        .I4(\hold_reg2_reg[31]_0 [25]),
        .I5(\hold_reg2_reg[31]_1 [25]),
        .O(\pc_reg[31] [25]));
  LUT6 #(
    .INIT(64'hF5FC05FCF50C050C)) 
    \hold_reg2[26]_i_1 
       (.I0(\hold_reg2_reg[26] ),
        .I1(\hold_reg2_reg[31]_2 [25]),
        .I2(\hold_reg2_reg[0] ),
        .I3(pc_mux_ctl_ex),
        .I4(\hold_reg2_reg[31]_0 [26]),
        .I5(\hold_reg2_reg[31]_1 [26]),
        .O(\pc_reg[31] [26]));
  LUT6 #(
    .INIT(64'hF5FC05FCF50C050C)) 
    \hold_reg2[27]_i_1 
       (.I0(\hold_reg2_reg[27] ),
        .I1(\hold_reg2_reg[31]_2 [26]),
        .I2(\hold_reg2_reg[0] ),
        .I3(pc_mux_ctl_ex),
        .I4(\hold_reg2_reg[31]_0 [27]),
        .I5(\hold_reg2_reg[31]_1 [27]),
        .O(\pc_reg[31] [27]));
  LUT6 #(
    .INIT(64'hF5FC05FCF50C050C)) 
    \hold_reg2[28]_i_1 
       (.I0(\hold_reg2_reg[28] ),
        .I1(\hold_reg2_reg[31]_2 [27]),
        .I2(\hold_reg2_reg[0] ),
        .I3(pc_mux_ctl_ex),
        .I4(\hold_reg2_reg[31]_0 [28]),
        .I5(\hold_reg2_reg[31]_1 [28]),
        .O(\pc_reg[31] [28]));
  LUT6 #(
    .INIT(64'hF5FC05FCF50C050C)) 
    \hold_reg2[29]_i_1 
       (.I0(\hold_reg2_reg[29] ),
        .I1(\hold_reg2_reg[31]_2 [28]),
        .I2(\hold_reg2_reg[0] ),
        .I3(pc_mux_ctl_ex),
        .I4(\hold_reg2_reg[31]_0 [29]),
        .I5(\hold_reg2_reg[31]_1 [29]),
        .O(\pc_reg[31] [29]));
  LUT6 #(
    .INIT(64'hF5FC05FCF50C050C)) 
    \hold_reg2[2]_i_1 
       (.I0(\hold_reg2_reg[2] ),
        .I1(\hold_reg2_reg[31]_2 [1]),
        .I2(\hold_reg2_reg[0] ),
        .I3(pc_mux_ctl_ex),
        .I4(\hold_reg2_reg[31]_0 [2]),
        .I5(\hold_reg2_reg[31]_1 [2]),
        .O(\pc_reg[31] [2]));
  LUT6 #(
    .INIT(64'hF5FC05FCF50C050C)) 
    \hold_reg2[30]_i_1 
       (.I0(\hold_reg2_reg[30] ),
        .I1(\hold_reg2_reg[31]_2 [29]),
        .I2(\hold_reg2_reg[0] ),
        .I3(pc_mux_ctl_ex),
        .I4(\hold_reg2_reg[31]_0 [30]),
        .I5(\hold_reg2_reg[31]_1 [30]),
        .O(\pc_reg[31] [30]));
  LUT6 #(
    .INIT(64'h0000AA80AAAAAA80)) 
    \hold_reg2[31]_i_1 
       (.I0(biu_rdy),
        .I1(first_ex_phase),
        .I2(br_lr_ex),
        .I3(ldm_base_load),
        .I4(invert_b_ex_reg_2),
        .I5(micro_code_fe_reg_0),
        .O(first_ex_phase_reg_0));
  LUT6 #(
    .INIT(64'hFF5CF05C0F5C005C)) 
    \hold_reg2[31]_i_2 
       (.I0(\hold_reg2_reg[31]_3 ),
        .I1(\hold_reg2_reg[31]_2 [30]),
        .I2(pc_mux_ctl_ex),
        .I3(\hold_reg2_reg[0] ),
        .I4(\hold_reg2_reg[31]_1 [31]),
        .I5(\hold_reg2_reg[31]_0 [31]),
        .O(\pc_reg[31] [31]));
  LUT5 #(
    .INIT(32'hBBBBBBB8)) 
    \hold_reg2[31]_i_3 
       (.I0(\hold_reg2_reg[31] ),
        .I1(last_uncond_phase_ex_reg_0),
        .I2(push_ex_reg),
        .I3(int_fault_ex_reg_0),
        .I4(instr_faulted_reg_0),
        .O(pc_mux_ctl_ex));
  LUT6 #(
    .INIT(64'hF5FC05FCF50C050C)) 
    \hold_reg2[3]_i_1 
       (.I0(\hold_reg2_reg[3] ),
        .I1(\hold_reg2_reg[31]_2 [2]),
        .I2(\hold_reg2_reg[0] ),
        .I3(pc_mux_ctl_ex),
        .I4(\hold_reg2_reg[31]_0 [3]),
        .I5(\hold_reg2_reg[31]_1 [3]),
        .O(\pc_reg[31] [3]));
  LUT6 #(
    .INIT(64'hF5FC05FCF50C050C)) 
    \hold_reg2[4]_i_1 
       (.I0(\hold_reg2_reg[4] ),
        .I1(\hold_reg2_reg[31]_2 [3]),
        .I2(\hold_reg2_reg[0] ),
        .I3(pc_mux_ctl_ex),
        .I4(\hold_reg2_reg[31]_0 [4]),
        .I5(\hold_reg2_reg[31]_1 [4]),
        .O(\pc_reg[31] [4]));
  LUT6 #(
    .INIT(64'hF5FC05FCF50C050C)) 
    \hold_reg2[5]_i_1 
       (.I0(\hold_reg2_reg[5] ),
        .I1(\hold_reg2_reg[31]_2 [4]),
        .I2(\hold_reg2_reg[0] ),
        .I3(pc_mux_ctl_ex),
        .I4(\hold_reg2_reg[31]_0 [5]),
        .I5(\hold_reg2_reg[31]_1 [5]),
        .O(\pc_reg[31] [5]));
  LUT6 #(
    .INIT(64'hFF5CF05C0F5C005C)) 
    \hold_reg2[6]_i_1 
       (.I0(\hold_reg2_reg[6] ),
        .I1(\hold_reg2_reg[31]_2 [5]),
        .I2(pc_mux_ctl_ex),
        .I3(\hold_reg2_reg[0] ),
        .I4(\hold_reg2_reg[31]_1 [6]),
        .I5(\hold_reg2_reg[31]_0 [6]),
        .O(\pc_reg[31] [6]));
  LUT6 #(
    .INIT(64'hF5FC05FCF50C050C)) 
    \hold_reg2[7]_i_1 
       (.I0(\hold_reg2_reg[7] ),
        .I1(\hold_reg2_reg[31]_2 [6]),
        .I2(\hold_reg2_reg[0] ),
        .I3(pc_mux_ctl_ex),
        .I4(\hold_reg2_reg[31]_0 [7]),
        .I5(\hold_reg2_reg[31]_1 [7]),
        .O(\pc_reg[31] [7]));
  LUT6 #(
    .INIT(64'hFF5CF05C0F5C005C)) 
    \hold_reg2[8]_i_1 
       (.I0(\hold_reg2_reg[8] ),
        .I1(\hold_reg2_reg[31]_2 [7]),
        .I2(pc_mux_ctl_ex),
        .I3(\hold_reg2_reg[0] ),
        .I4(\hold_reg2_reg[31]_1 [8]),
        .I5(\hold_reg2_reg[31]_0 [8]),
        .O(\pc_reg[31] [8]));
  LUT6 #(
    .INIT(64'hFAFC0AFCFA0C0A0C)) 
    \hold_reg2[9]_i_1 
       (.I0(load_fptr),
        .I1(\hold_reg2_reg[31]_2 [8]),
        .I2(\hold_reg2_reg[0] ),
        .I3(pc_mux_ctl_ex),
        .I4(\hold_reg2_reg[31]_0 [9]),
        .I5(\hold_reg2_reg[31]_1 [9]),
        .O(\pc_reg[31] [9]));
  LUT6 #(
    .INIT(64'hFFD0FFFFFFD00000)) 
    i_active_sp_i_1
       (.I0(i_active_sp_i_2_n_0),
        .I1(i_active_sp_i_3_n_0),
        .I2(mode_reg_0),
        .I3(i_active_sp_i_4_n_0),
        .I4(i_active_sp0),
        .I5(active_sp),
        .O(i_active_sp_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT5 #(
    .INIT(32'h00040400)) 
    i_active_sp_i_10
       (.I0(excpt_state[2]),
        .I1(excpt_state[1]),
        .I2(excpt_state[4]),
        .I3(excpt_state[0]),
        .I4(excpt_state[3]),
        .O(i_active_sp_i_10_n_0));
  LUT5 #(
    .INIT(32'hAFC0A0C0)) 
    i_active_sp_i_11
       (.I0(\reg_file_a_reg[0][25]_0 [1]),
        .I1(\dp_ipsr_1to0[1]_i_22_n_0 ),
        .I2(\reg_file_a_reg[15][9] ),
        .I3(\reg_file_a_reg[15][9]_0 ),
        .I4(\dp_ipsr_1to0_reg[1]_4 ),
        .O(i_active_sp_i_11_n_0));
  LUT6 #(
    .INIT(64'h0000888AFFFFFFFF)) 
    i_active_sp_i_2
       (.I0(i_active_sp_i_6_n_0),
        .I1(dp_tbit_reg_reg_0),
        .I2(\dp_ipsr_1to0_reg[1]_0 ),
        .I3(\dp_ipsr_1to0_reg[1]_1 ),
        .I4(\dp_ipsr_1to0_reg[1]_2 ),
        .I5(i_active_sp_i_7_n_0),
        .O(i_active_sp_i_2_n_0));
  LUT6 #(
    .INIT(64'hFF40FFC800000000)) 
    i_active_sp_i_3
       (.I0(\reg_file_a_reg[15][24] [1]),
        .I1(\reg_file_a_reg[15][24] [0]),
        .I2(\reg_file_a_reg[0][25] ),
        .I3(i_active_sp_i_8_n_0),
        .I4(\reg_file_a[15][25]_i_2_n_0 ),
        .I5(i_active_sp_i_9_n_0),
        .O(i_active_sp_i_3_n_0));
  LUT6 #(
    .INIT(64'h0000800000000000)) 
    i_active_sp_i_4
       (.I0(mode_i_3_n_0),
        .I1(p_0_in7_in),
        .I2(\exc_ret_reg_n_0_[2] ),
        .I3(excpt_state[1]),
        .I4(excpt_state[0]),
        .I5(excpt_state[3]),
        .O(i_active_sp_i_4_n_0));
  LUT6 #(
    .INIT(64'hAAA8A8A8A8A8A8A8)) 
    i_active_sp_i_5
       (.I0(biu_rdy),
        .I1(i_active_sp_i_9_n_0),
        .I2(i_active_sp_i_10_n_0),
        .I3(first_ex_phase),
        .I4(msr_ex),
        .I5(use_control_ex),
        .O(i_active_sp0));
  LUT6 #(
    .INIT(64'h5455FFFFFFFFFFFF)) 
    i_active_sp_i_6
       (.I0(i_active_sp_i_11_n_0),
        .I1(\reg_file_a_reg[15][9] ),
        .I2(\reg_file_a_reg[15][9]_0 ),
        .I3(\dp_ipsr_1to0_reg[1]_3 ),
        .I4(\reg_file_a_reg[15][24] [0]),
        .I5(\reg_file_a_reg[15][24] [1]),
        .O(i_active_sp_i_6_n_0));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT3 #(
    .INIT(8'h80)) 
    i_active_sp_i_7
       (.I0(use_control_ex),
        .I1(msr_ex),
        .I2(first_ex_phase),
        .O(i_active_sp_i_7_n_0));
  LUT4 #(
    .INIT(16'h3202)) 
    i_active_sp_i_8
       (.I0(\HADDR_reg[27] [1]),
        .I1(\reg_file_a_reg[15][24] [0]),
        .I2(\reg_file_a_reg[15][24] [1]),
        .I3(mult_out[4]),
        .O(i_active_sp_i_8_n_0));
  LUT5 #(
    .INIT(32'hA8880000)) 
    i_active_sp_i_9
       (.I0(use_dp_tbit_i_2_n_0),
        .I1(cps_ex),
        .I2(use_primask_ex),
        .I3(msr_ex),
        .I4(first_ex_phase),
        .O(i_active_sp_i_9_n_0));
  FDCE i_active_sp_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(SYSRESETn_0),
        .D(i_active_sp_i_1_n_0),
        .Q(active_sp));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT5 #(
    .INIT(32'h10101000)) 
    i_dbg_wdata_sel_de_i_1
       (.I0(excpt_state[1]),
        .I1(excpt_state[0]),
        .I2(excpt_state[4]),
        .I3(excpt_state[2]),
        .I4(excpt_state[3]),
        .O(dbg_wdata_sel));
  FDCE i_dbg_wdata_sel_de_reg
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg_3),
        .CLR(SYSRESETn_0),
        .D(dbg_wdata_sel),
        .Q(dbg_wdata_sel_de));
  FDCE i_dbg_wdata_sel_ex_reg
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg_3),
        .CLR(SYSRESETn_0),
        .D(dbg_wdata_sel_de),
        .Q(i_dbg_wdata_sel_ex_reg_0));
  LUT5 #(
    .INIT(32'hFFBF0080)) 
    \i_mcode_dec[0]_i_1 
       (.I0(excpt_ret_de),
        .I1(\exc_ret[3]_i_2_n_0 ),
        .I2(biu_rdy),
        .I3(excpt_state[4]),
        .I4(i_mcode_dec),
        .O(\i_mcode_dec[0]_i_1_n_0 ));
  FDCE \i_mcode_dec_reg[0] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(SYSRESETn_0),
        .D(\i_mcode_dec[0]_i_1_n_0 ),
        .Q(i_mcode_dec));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT4 #(
    .INIT(16'h0008)) 
    i_nvic_excpt_svc_valid_i_1
       (.I0(\instr_de_reg[12]_0 ),
        .I1(biu_rdy),
        .I2(last_uncond_phase_ex_reg_0),
        .I3(micro_code_de_reg_0),
        .O(nxt_nvic_svc_valid));
  LUT6 #(
    .INIT(64'h0000800000000000)) 
    i_nvic_excpt_svc_valid_i_2
       (.I0(Q[12]),
        .I1(Q[15]),
        .I2(\instr_de_reg[14]_2 ),
        .I3(\instr_de_reg[11]_0 ),
        .I4(push_ex_reg),
        .I5(Q[10]),
        .O(\instr_de_reg[12]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT2 #(
    .INIT(4'hB)) 
    i_nvic_excpt_svc_valid_i_3
       (.I0(first_pop_pc_ex_reg),
        .I1(invert_b_ex_reg_2),
        .O(last_uncond_phase_ex_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT2 #(
    .INIT(4'h2)) 
    i_nvic_excpt_svc_valid_i_4
       (.I0(Q[14]),
        .I1(Q[13]),
        .O(\instr_de_reg[14]_2 ));
  FDCE i_nvic_excpt_svc_valid_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(SYSRESETn_0),
        .D(nxt_nvic_svc_valid),
        .Q(nvic_excpt_svc_valid));
  LUT3 #(
    .INIT(8'hBA)) 
    \i_pend_state[0]_i_1 
       (.I0(\i_pend_state[0]_i_2_n_0 ),
        .I1(\i_pend_state_reg[0] ),
        .I2(\i_pend_state_reg[0]_0 ),
        .O(r_hdf_actv_reg[0]));
  LUT6 #(
    .INIT(64'hD0FFFFFFD0D05050)) 
    \i_pend_state[0]_i_2 
       (.I0(int_prev[0]),
        .I1(nvic_excpt_ret_taken),
        .I2(NMI),
        .I3(nvic_excpt_taken),
        .I4(nmi_actv),
        .I5(\i_pend_state_reg[1] [0]),
        .O(\i_pend_state[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h01FFFFFF01010101)) 
    \i_pend_state[1]_i_1 
       (.I0(i_nvic_excpt_svc_valid_reg_0),
        .I1(r_hdf_actv),
        .I2(r_nmi_actv),
        .I3(nvic_excpt_taken),
        .I4(hdf_actv),
        .I5(\i_pend_state_reg[1] [1]),
        .O(r_hdf_actv_reg[1]));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT5 #(
    .INIT(32'h00000007)) 
    \i_pend_state[1]_i_2 
       (.I0(\i_pend_state_reg[1]_0 ),
        .I1(nvic_excpt_svc_valid),
        .I2(instr_faulted_reg_0),
        .I3(int_fault_ex_reg_0),
        .I4(biu_wfault),
        .O(i_nvic_excpt_svc_valid_reg_0));
  LUT6 #(
    .INIT(64'h00000000FF04FF15)) 
    \i_pend_state[2]_i_3 
       (.I0(dp_ipsr_7to2[4]),
        .I1(use_dp_ipsr),
        .I2(dp_ipsr_7to2[2]),
        .I3(force_ipsr),
        .I4(dp_ipsr_7to2[6]),
        .I5(\i_pend_state[4]_i_6_n_0 ),
        .O(\dp_ipsr_7to2_reg[4]_0 ));
  LUT5 #(
    .INIT(32'h00100000)) 
    \i_pend_state[3]_i_2 
       (.I0(\i_pend_state[3]_i_3_n_0 ),
        .I1(\dp_ipsr_7to2_reg[6]_0 ),
        .I2(nvic_excpt_num[2]),
        .I3(force_hf_reg_0),
        .I4(\dp_ipsr_7to2_reg[5]_0 [0]),
        .O(\dp_ipsr_7to2_reg[7]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT5 #(
    .INIT(32'hFFEECFFF)) 
    \i_pend_state[3]_i_3 
       (.I0(dp_ipsr_7to2[7]),
        .I1(force_ipsr),
        .I2(dp_ipsr_7to2[3]),
        .I3(use_dp_ipsr),
        .I4(dp_ipsr_7to2[5]),
        .O(\i_pend_state[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFBFFF9D)) 
    \i_pend_state[4]_i_3 
       (.I0(dp_ipsr_7to2[4]),
        .I1(use_dp_ipsr),
        .I2(dp_ipsr_7to2[2]),
        .I3(force_ipsr),
        .I4(dp_ipsr_7to2[6]),
        .I5(\i_pend_state[4]_i_6_n_0 ),
        .O(\dp_ipsr_7to2_reg[4]_1 ));
  LUT6 #(
    .INIT(64'hFFFFEFFFFFFFEBFB)) 
    \i_pend_state[4]_i_6 
       (.I0(\i_pend_state[4]_i_7_n_0 ),
        .I1(dp_ipsr_7to2[5]),
        .I2(use_dp_ipsr),
        .I3(dp_ipsr_7to2[3]),
        .I4(force_ipsr),
        .I5(dp_ipsr_7to2[7]),
        .O(\i_pend_state[4]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h001DFF1DFFFFFFFF)) 
    \i_pend_state[4]_i_7 
       (.I0(dp_ipsr_7to2[3]),
        .I1(use_dp_ipsr),
        .I2(dp_ipsr_1to0[1]),
        .I3(force_ipsr),
        .I4(force_hf),
        .I5(force_hf_reg_0),
        .O(\i_pend_state[4]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT5 #(
    .INIT(32'h0080AAAA)) 
    \i_pend_state[5]_i_3 
       (.I0(IRQ),
        .I1(load_xpsr_ex_reg_0),
        .I2(first_ex_phase),
        .I3(\dp_ipsr_7to2_reg[7]_0 ),
        .I4(int_prev[1]),
        .O(IRQ_0_sn_1));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF0045)) 
    ifetch_i_1
       (.I0(ifetch_reg),
        .I1(last_uncond_phase_ex_i_2_n_0),
        .I2(ifetch_i_3_n_0),
        .I3(ifetch_i_4_n_0),
        .I4(ifetch_i_5_n_0),
        .I5(p_8_in),
        .O(nxt_ifetch));
  LUT5 #(
    .INIT(32'h00000002)) 
    ifetch_i_3
       (.I0(load_ex_reg_0),
        .I1(\instr_de_reg[11] ),
        .I2(int_fault_ex_i_4_n_0),
        .I3(ldm_pop_ex_i_3_n_0),
        .I4(last_uncond_phase_ex_reg_0),
        .O(ifetch_i_3_n_0));
  LUT5 #(
    .INIT(32'h00020202)) 
    ifetch_i_4
       (.I0(last_uncond_phase_ex_reg_0),
        .I1(ifetch_i_6_n_0),
        .I2(ifetch_reg_1),
        .I3(lsm_last_a_phase_ex),
        .I4(stm_push_ex),
        .O(ifetch_i_4_n_0));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAABA)) 
    ifetch_i_5
       (.I0(nxt_branching_ex),
        .I1(ifetch_reg_0),
        .I2(br_first_ex_reg_0),
        .I3(int_fault_ex_i_4_n_0),
        .I4(ldm_pop_ex_i_3_n_0),
        .I5(last_uncond_phase_ex_reg_0),
        .O(ifetch_i_5_n_0));
  LUT6 #(
    .INIT(64'hFF8F888888888888)) 
    ifetch_i_6
       (.I0(two_phase_ex),
        .I1(first_ex_phase),
        .I2(pop_pc_ex),
        .I3(instr_faulted_reg_0),
        .I4(lsm_last_d_phase_ex),
        .I5(ldm_pop_ex),
        .O(ifetch_i_6_n_0));
  LUT5 #(
    .INIT(32'hFFFF4540)) 
    \instr_de[0]_i_1 
       (.I0(micro_code_fe_reg_0),
        .I1(\instr_de_reg[0] ),
        .I2(\read_addr[1]_i_3_n_0 ),
        .I3(\instr_de_reg[15] [0]),
        .I4(\instr_de[0]_i_3_n_0 ),
        .O(micro_code_fe_reg_1[0]));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT4 #(
    .INIT(16'hAABA)) 
    \instr_de[0]_i_3 
       (.I0(\instr_de[1]_i_3_n_0 ),
        .I1(\instr_de[0]_i_4_n_0 ),
        .I2(micro_code_fe_reg_0),
        .I3(excpt_state[4]),
        .O(\instr_de[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB6B6DCDCB6B7DCDC)) 
    \instr_de[0]_i_4 
       (.I0(excpt_state[3]),
        .I1(excpt_state[0]),
        .I2(excpt_state[2]),
        .I3(\latched_excpt_num_reg_n_0_[0] ),
        .I4(excpt_state[1]),
        .I5(reset_code),
        .O(\instr_de[0]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \instr_de[10]_i_1 
       (.I0(\instr_de[10]_i_2_n_0 ),
        .I1(micro_code_fe_reg_0),
        .I2(\instr_de_reg[10]_1 ),
        .I3(\read_addr[1]_i_3_n_0 ),
        .I4(\instr_de_reg[15] [10]),
        .O(micro_code_fe_reg_1[10]));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT5 #(
    .INIT(32'h653F97DA)) 
    \instr_de[10]_i_2 
       (.I0(excpt_state[4]),
        .I1(excpt_state[1]),
        .I2(excpt_state[3]),
        .I3(excpt_state[2]),
        .I4(excpt_state[0]),
        .O(\instr_de[10]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF4540)) 
    \instr_de[11]_i_1 
       (.I0(micro_code_fe_reg_0),
        .I1(\instr_de_reg[11]_1 ),
        .I2(\read_addr[1]_i_3_n_0 ),
        .I3(\instr_de_reg[15] [11]),
        .I4(\instr_de[11]_i_3_n_0 ),
        .I5(\instr_de[14]_i_4_n_0 ),
        .O(micro_code_fe_reg_1[11]));
  LUT6 #(
    .INIT(64'h4044044444444004)) 
    \instr_de[11]_i_3 
       (.I0(excpt_state[4]),
        .I1(micro_code_fe_reg_0),
        .I2(excpt_state[3]),
        .I3(excpt_state[0]),
        .I4(excpt_state[1]),
        .I5(excpt_state[2]),
        .O(\instr_de[11]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \instr_de[12]_i_1 
       (.I0(\instr_de[12]_i_2_n_0 ),
        .I1(micro_code_fe_reg_0),
        .I2(\instr_de_reg[12]_1 ),
        .I3(\read_addr[1]_i_3_n_0 ),
        .I4(\instr_de_reg[15] [12]),
        .O(micro_code_fe_reg_1[12]));
  LUT6 #(
    .INIT(64'h78FF78FF3DEE2DEE)) 
    \instr_de[12]_i_2 
       (.I0(excpt_state[3]),
        .I1(excpt_state[1]),
        .I2(excpt_state[0]),
        .I3(excpt_state[4]),
        .I4(locked_up_reg_0),
        .I5(excpt_state[2]),
        .O(\instr_de[12]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \instr_de[13]_i_1 
       (.I0(\instr_de[13]_i_2_n_0 ),
        .I1(micro_code_fe_reg_0),
        .I2(\instr_de_reg[13]_0 ),
        .I3(\read_addr[1]_i_3_n_0 ),
        .I4(\instr_de_reg[15] [13]),
        .O(micro_code_fe_reg_1[13]));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT5 #(
    .INIT(32'hFBF79D59)) 
    \instr_de[13]_i_2 
       (.I0(excpt_state[4]),
        .I1(excpt_state[1]),
        .I2(excpt_state[2]),
        .I3(excpt_state[3]),
        .I4(excpt_state[0]),
        .O(\instr_de[13]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000FEBA)) 
    \instr_de[14]_i_1 
       (.I0(micro_code_fe_reg_0),
        .I1(\read_addr[1]_i_3_n_0 ),
        .I2(\instr_de_reg[15] [14]),
        .I3(\instr_de_reg[14]_3 ),
        .I4(\instr_de[14]_i_3_n_0 ),
        .I5(\instr_de[14]_i_4_n_0 ),
        .O(micro_code_fe_reg_1[14]));
  LUT6 #(
    .INIT(64'h4444444444444440)) 
    \instr_de[14]_i_3 
       (.I0(excpt_state[4]),
        .I1(micro_code_fe_reg_0),
        .I2(excpt_state[3]),
        .I3(excpt_state[0]),
        .I4(excpt_state[2]),
        .I5(excpt_state[1]),
        .O(\instr_de[14]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h2A2A202A2A2A2022)) 
    \instr_de[14]_i_4 
       (.I0(\instr_de[14]_i_5_n_0 ),
        .I1(excpt_state[0]),
        .I2(excpt_state[1]),
        .I3(excpt_state[2]),
        .I4(excpt_state[3]),
        .I5(locked_up_reg_0),
        .O(\instr_de[14]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \instr_de[14]_i_5 
       (.I0(micro_code_fe_reg_0),
        .I1(excpt_state[4]),
        .O(\instr_de[14]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \instr_de[15]_i_2 
       (.I0(\instr_de[15]_i_3_n_0 ),
        .I1(micro_code_fe_reg_0),
        .I2(\instr_de_reg[15]_0 ),
        .I3(\read_addr[1]_i_3_n_0 ),
        .I4(\instr_de_reg[15] [15]),
        .O(micro_code_fe_reg_1[15]));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT5 #(
    .INIT(32'hFDEEFFFC)) 
    \instr_de[15]_i_3 
       (.I0(excpt_state[0]),
        .I1(excpt_state[3]),
        .I2(excpt_state[2]),
        .I3(excpt_state[1]),
        .I4(excpt_state[4]),
        .O(\instr_de[15]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hDDDDDDDDFFFCCCFC)) 
    \instr_de[1]_i_1 
       (.I0(\instr_de[1]_i_2_n_0 ),
        .I1(\instr_de[1]_i_3_n_0 ),
        .I2(\instr_de_reg[15] [1]),
        .I3(\read_addr[1]_i_3_n_0 ),
        .I4(\instr_de_reg[1] ),
        .I5(micro_code_fe_reg_0),
        .O(micro_code_fe_reg_1[1]));
  LUT6 #(
    .INIT(64'hFFFFB47FEBEBA06B)) 
    \instr_de[1]_i_2 
       (.I0(excpt_state[2]),
        .I1(excpt_state[0]),
        .I2(excpt_state[1]),
        .I3(excpt_state[3]),
        .I4(excpt_state[4]),
        .I5(\instr_de[1]_i_5_n_0 ),
        .O(\instr_de[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000080008008080)) 
    \instr_de[1]_i_3 
       (.I0(excpt_state[4]),
        .I1(micro_code_fe_reg_0),
        .I2(excpt_state[3]),
        .I3(excpt_state[2]),
        .I4(excpt_state[0]),
        .I5(excpt_state[1]),
        .O(\instr_de[1]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT5 #(
    .INIT(32'hFFFFFFF4)) 
    \instr_de[1]_i_5 
       (.I0(\latched_excpt_num_reg_n_0_[1] ),
        .I1(excpt_state[1]),
        .I2(reset_code),
        .I3(excpt_state[3]),
        .I4(excpt_state[4]),
        .O(\instr_de[1]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFAAAAFEAE)) 
    \instr_de[2]_i_1 
       (.I0(\instr_de[2]_i_2_n_0 ),
        .I1(\instr_de_reg[15] [2]),
        .I2(\read_addr[1]_i_3_n_0 ),
        .I3(\instr_de_reg[2] ),
        .I4(micro_code_fe_reg_0),
        .I5(\instr_de[5]_i_2_n_0 ),
        .O(micro_code_fe_reg_1[2]));
  LUT6 #(
    .INIT(64'hAAAAAAAA0080080A)) 
    \instr_de[2]_i_2 
       (.I0(\instr_de[2]_i_4_n_0 ),
        .I1(excpt_state[3]),
        .I2(excpt_state[0]),
        .I3(excpt_state[2]),
        .I4(excpt_state[1]),
        .I5(\instr_de[2]_i_5_n_0 ),
        .O(\instr_de[2]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \instr_de[2]_i_4 
       (.I0(micro_code_fe_reg_0),
        .I1(excpt_state[4]),
        .O(\instr_de[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h00800A8A0A8A0A8A)) 
    \instr_de[2]_i_5 
       (.I0(\instr_de[2]_i_6_n_0 ),
        .I1(\latched_excpt_num_reg_n_0_[2] ),
        .I2(excpt_state[1]),
        .I3(excpt_state[0]),
        .I4(mode_reg_0),
        .I5(active_sp),
        .O(\instr_de[2]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \instr_de[2]_i_6 
       (.I0(excpt_state[2]),
        .I1(excpt_state[3]),
        .I2(reset_code),
        .O(\instr_de[2]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \instr_de[3]_i_1 
       (.I0(\instr_de[3]_i_2_n_0 ),
        .I1(micro_code_fe_reg_0),
        .I2(\instr_de_reg[3] ),
        .I3(\read_addr[1]_i_3_n_0 ),
        .I4(\instr_de_reg[15] [3]),
        .O(micro_code_fe_reg_1[3]));
  LUT6 #(
    .INIT(64'hFFFFFFFF35050505)) 
    \instr_de[3]_i_2 
       (.I0(\instr_de[3]_i_4_n_0 ),
        .I1(excpt_state[3]),
        .I2(excpt_state[4]),
        .I3(excpt_state[2]),
        .I4(excpt_state[0]),
        .I5(\instr_de[4]_i_2_n_0 ),
        .O(\instr_de[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hA8A8A8A8AAAAAAA2)) 
    \instr_de[3]_i_4 
       (.I0(\instr_de[3]_i_5_n_0 ),
        .I1(excpt_state[0]),
        .I2(excpt_state[1]),
        .I3(mode_reg_0),
        .I4(excpt_state[2]),
        .I5(excpt_state[3]),
        .O(\instr_de[3]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFEFFFFFFFFFFFF)) 
    \instr_de[3]_i_5 
       (.I0(reset_code),
        .I1(excpt_state[3]),
        .I2(excpt_state[2]),
        .I3(excpt_state[0]),
        .I4(excpt_state[1]),
        .I5(\latched_excpt_num_reg_n_0_[3] ),
        .O(\instr_de[3]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hEFE0EFEFEFE0E0E0)) 
    \instr_de[4]_i_1 
       (.I0(\instr_de[4]_i_2_n_0 ),
        .I1(\instr_de[4]_i_3_n_0 ),
        .I2(micro_code_fe_reg_0),
        .I3(\instr_de_reg[4] ),
        .I4(\read_addr[1]_i_3_n_0 ),
        .I5(\instr_de_reg[15] [4]),
        .O(micro_code_fe_reg_1[4]));
  LUT6 #(
    .INIT(64'h0000000000000200)) 
    \instr_de[4]_i_2 
       (.I0(excpt_state[0]),
        .I1(excpt_state[1]),
        .I2(excpt_state[2]),
        .I3(excpt_state[4]),
        .I4(excpt_state[3]),
        .I5(locked_up_reg_0),
        .O(\instr_de[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000455555555)) 
    \instr_de[4]_i_3 
       (.I0(excpt_state[4]),
        .I1(\latched_excpt_num_reg_n_0_[4] ),
        .I2(reset_code),
        .I3(excpt_state[3]),
        .I4(\instr_de[4]_i_5_n_0 ),
        .I5(\instr_de[4]_i_6_n_0 ),
        .O(\instr_de[4]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT3 #(
    .INIT(8'hFD)) 
    \instr_de[4]_i_5 
       (.I0(excpt_state[1]),
        .I1(excpt_state[2]),
        .I2(excpt_state[0]),
        .O(\instr_de[4]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT3 #(
    .INIT(8'hEF)) 
    \instr_de[4]_i_6 
       (.I0(excpt_state[0]),
        .I1(excpt_state[1]),
        .I2(excpt_state[3]),
        .O(\instr_de[4]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hBABBBAAA)) 
    \instr_de[5]_i_1 
       (.I0(\instr_de[5]_i_2_n_0 ),
        .I1(micro_code_fe_reg_0),
        .I2(\instr_de_reg[5] ),
        .I3(\read_addr[1]_i_3_n_0 ),
        .I4(\instr_de_reg[15] [5]),
        .O(micro_code_fe_reg_1[5]));
  LUT6 #(
    .INIT(64'h2000000022000000)) 
    \instr_de[5]_i_2 
       (.I0(micro_code_fe_reg_0),
        .I1(excpt_state[1]),
        .I2(excpt_state[2]),
        .I3(excpt_state[0]),
        .I4(\instr_de[5]_i_4_n_0 ),
        .I5(locked_up_reg_0),
        .O(\instr_de[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \instr_de[5]_i_4 
       (.I0(excpt_state[4]),
        .I1(excpt_state[3]),
        .O(\instr_de[5]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \instr_de[6]_i_1 
       (.I0(\instr_de[6]_i_2_n_0 ),
        .I1(micro_code_fe_reg_0),
        .I2(\instr_de_reg[6] ),
        .I3(\read_addr[1]_i_3_n_0 ),
        .I4(\instr_de_reg[15] [6]),
        .O(micro_code_fe_reg_1[6]));
  LUT6 #(
    .INIT(64'h000F000703000000)) 
    \instr_de[6]_i_2 
       (.I0(locked_up_reg_0),
        .I1(excpt_state[0]),
        .I2(excpt_state[1]),
        .I3(excpt_state[3]),
        .I4(excpt_state[2]),
        .I5(excpt_state[4]),
        .O(\instr_de[6]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hBABBBAAA)) 
    \instr_de[7]_i_1 
       (.I0(\instr_de[7]_i_2_n_0 ),
        .I1(micro_code_fe_reg_0),
        .I2(\instr_de_reg[7] ),
        .I3(\read_addr[1]_i_3_n_0 ),
        .I4(\instr_de_reg[15] [7]),
        .O(micro_code_fe_reg_1[7]));
  LUT6 #(
    .INIT(64'h0080000000800080)) 
    \instr_de[7]_i_2 
       (.I0(micro_code_fe_reg_0),
        .I1(excpt_state[4]),
        .I2(excpt_state[0]),
        .I3(excpt_state[3]),
        .I4(\instr_de[7]_i_4_n_0 ),
        .I5(locked_up_reg_0),
        .O(\instr_de[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \instr_de[7]_i_4 
       (.I0(excpt_state[1]),
        .I1(excpt_state[2]),
        .O(\instr_de[7]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \instr_de[8]_i_1 
       (.I0(\instr_de[8]_i_2_n_0 ),
        .I1(micro_code_fe_reg_0),
        .I2(\instr_de_reg[8] ),
        .I3(\read_addr[1]_i_3_n_0 ),
        .I4(\instr_de_reg[15] [8]),
        .O(micro_code_fe_reg_1[8]));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT5 #(
    .INIT(32'h619EBE14)) 
    \instr_de[8]_i_2 
       (.I0(excpt_state[4]),
        .I1(excpt_state[3]),
        .I2(excpt_state[2]),
        .I3(excpt_state[0]),
        .I4(excpt_state[1]),
        .O(\instr_de[8]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \instr_de[9]_i_1 
       (.I0(\instr_de[9]_i_2_n_0 ),
        .I1(micro_code_fe_reg_0),
        .I2(\instr_de_reg[9]_1 ),
        .I3(\read_addr[1]_i_3_n_0 ),
        .I4(\instr_de_reg[15] [9]),
        .O(micro_code_fe_reg_1[9]));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT5 #(
    .INIT(32'h6B3F93E2)) 
    \instr_de[9]_i_2 
       (.I0(excpt_state[4]),
        .I1(excpt_state[3]),
        .I2(excpt_state[1]),
        .I3(excpt_state[2]),
        .I4(excpt_state[0]),
        .O(\instr_de[9]_i_2_n_0 ));
  FDCE instr_faulted_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(SYSRESETn_0),
        .D(nxt_instr_faulted),
        .Q(instr_faulted_reg_0));
  LUT6 #(
    .INIT(64'h00000000DDDDFFDF)) 
    int_fault_ex_i_1
       (.I0(load_ex_reg_0),
        .I1(\instr_de_reg[11] ),
        .I2(tbit),
        .I3(pf_fault_de),
        .I4(micro_code_de),
        .I5(int_fault_ex_i_4_n_0),
        .O(nxt_int_fault_ex));
  LUT6 #(
    .INIT(64'h00EF00FF00FFFFFF)) 
    int_fault_ex_i_10
       (.I0(\instr_de_reg[10]_0 ),
        .I1(Q[8]),
        .I2(Q[11]),
        .I3(Q[13]),
        .I4(Q[12]),
        .I5(Q[14]),
        .O(int_fault_ex_i_10_n_0));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT4 #(
    .INIT(16'hFFFD)) 
    int_fault_ex_i_11
       (.I0(excpt_state[2]),
        .I1(excpt_state[1]),
        .I2(excpt_state[4]),
        .I3(excpt_state[3]),
        .O(int_fault_ex_i_11_n_0));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT5 #(
    .INIT(32'hFFFFFF27)) 
    int_fault_ex_i_14
       (.I0(Q[10]),
        .I1(Q[9]),
        .I2(Q[8]),
        .I3(Q[11]),
        .I4(Q[14]),
        .O(int_fault_ex_i_14_n_0));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    int_fault_ex_i_15
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .I4(Q[10]),
        .I5(Q[8]),
        .O(int_fault_ex_i_15_n_0));
  LUT6 #(
    .INIT(64'h000000000000EEEA)) 
    int_fault_ex_i_3
       (.I0(int_fault_ex_i_7_n_0),
        .I1(Q[11]),
        .I2(int_fault_ex_i_8_n_0),
        .I3(Q[14]),
        .I4(first32_ex_reg_1),
        .I5(int_fault_ex_i_10_n_0),
        .O(\instr_de_reg[11] ));
  LUT6 #(
    .INIT(64'h33BB33BB30BA30BB)) 
    int_fault_ex_i_4
       (.I0(locked_up_reg_0),
        .I1(int_fault_ex_i_11_n_0),
        .I2(excpt_state[0]),
        .I3(micro_code_de),
        .I4(int_fault_ex_reg_1),
        .I5(excpt_ret_de),
        .O(int_fault_ex_i_4_n_0));
  LUT6 #(
    .INIT(64'h54555555FFFFFFFF)) 
    int_fault_ex_i_7
       (.I0(int_fault_ex_i_14_n_0),
        .I1(Q[7]),
        .I2(Q[8]),
        .I3(Q[5]),
        .I4(Q[6]),
        .I5(Q[13]),
        .O(int_fault_ex_i_7_n_0));
  LUT6 #(
    .INIT(64'h00FF00AE000000FF)) 
    int_fault_ex_i_8
       (.I0(Q[8]),
        .I1(Q[7]),
        .I2(Q[6]),
        .I3(int_fault_ex_i_15_n_0),
        .I4(Q[10]),
        .I5(Q[9]),
        .O(int_fault_ex_i_8_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    int_fault_ex_i_9
       (.I0(push_ex_reg),
        .I1(Q[15]),
        .O(first32_ex_reg_1));
  FDCE int_fault_ex_reg
       (.C(HCLK),
        .CE(adv_de_to_ex),
        .CLR(SYSRESETn_0),
        .D(nxt_int_fault_ex),
        .Q(int_fault_ex_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT5 #(
    .INIT(32'h8A000000)) 
    int_rack_i_1
       (.I0(biu_rdy),
        .I1(micro_code_de),
        .I2(br_first_ex),
        .I3(fetch_phase),
        .I4(fetch_internal_reg),
        .O(nxt_int_rack));
  LUT4 #(
    .INIT(16'h2F20)) 
    inter_tbit_reg_i_1
       (.I0(inter_tbit_reg_i_2_n_0),
        .I1(\pc_reg[2] ),
        .I2(update_tbit),
        .I3(inter_tbit_reg),
        .O(inter_tbit_reg_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFFF00004F444F44)) 
    inter_tbit_reg_i_2
       (.I0(inter_tbit_reg_i_3_n_0),
        .I1(\HADDR_reg[0] ),
        .I2(inter_tbit_reg_i_4_n_0),
        .I3(\reg_file_a_reg[0][25]_0 [0]),
        .I4(invert_b_ex_reg[0]),
        .I5(branch_ex_reg_0),
        .O(inter_tbit_reg_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT3 #(
    .INIT(8'hEF)) 
    inter_tbit_reg_i_3
       (.I0(use_dp_tbit_i_3_0),
        .I1(i_dbg_wdata_sel_ex_reg_0),
        .I2(\HADDR_reg[1] ),
        .O(inter_tbit_reg_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT3 #(
    .INIT(8'hEF)) 
    inter_tbit_reg_i_4
       (.I0(\HADDR_reg[1] ),
        .I1(i_dbg_wdata_sel_ex_reg_0),
        .I2(use_dp_tbit_i_3_0),
        .O(inter_tbit_reg_i_4_n_0));
  FDCE inter_tbit_reg_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(SYSRESETn_0),
        .D(inter_tbit_reg_i_1_n_0),
        .Q(inter_tbit_reg));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT1 #(
    .INIT(2'h1)) 
    invert_b_ex2_i_1
       (.I0(invert_b_ex2_i_2_n_0),
        .O(nxt_invert_b_ex2));
  LUT6 #(
    .INIT(64'h5555555500001115)) 
    invert_b_ex2_i_2
       (.I0(excpt_inv_imm_de),
        .I1(invert_b_ex2_reg),
        .I2(invert_b_ex2_reg_0),
        .I3(invert_b_ex2_reg_1),
        .I4(invert_b_ex2_reg_2),
        .I5(push_ex_reg),
        .O(invert_b_ex2_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT4 #(
    .INIT(16'hBFB0)) 
    invert_b_ex_i_1
       (.I0(invert_b_ex_reg_3),
        .I1(invert_b_ex2_i_2_n_0),
        .I2(invert_b_ex_reg_2),
        .I3(invert_b_ex2),
        .O(nxt_invert_b_ex));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT5 #(
    .INIT(32'h00F20000)) 
    irack_i_1
       (.I0(fetch_phase),
        .I1(fetch_internal_reg),
        .I2(br_first_ex),
        .I3(micro_code_de),
        .I4(biu_rdy),
        .O(nxt_irack));
  FDCE last_instr_faulted_reg
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg_3),
        .CLR(SYSRESETn_0),
        .D(instr_faulted_reg_0),
        .Q(last_instr_faulted));
  LUT6 #(
    .INIT(64'hFFFFF000EEEEEEEE)) 
    last_uncond_phase_ex_i_1
       (.I0(last_uncond_phase_ex_i_2_n_0),
        .I1(micro_code_de_reg_0),
        .I2(stm_push_ex),
        .I3(lsm_last_a_phase_ex),
        .I4(last_uncond_phase_ex_i_3_n_0),
        .I5(last_uncond_phase_ex_reg_0),
        .O(nxt_last_uncond_phase_ex));
  LUT6 #(
    .INIT(64'hAAAAAAEFAAAAAAAA)) 
    last_uncond_phase_ex_i_2
       (.I0(bcc_first_ex_reg),
        .I1(micro_code_fe_reg_0),
        .I2(branch_ex_reg_1),
        .I3(last_uncond_phase_ex_i_4_n_0),
        .I4(last_uncond_phase_ex_reg_4),
        .I5(last_uncond_phase_ex_reg_5),
        .O(last_uncond_phase_ex_i_2_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFF8A8A8A)) 
    last_uncond_phase_ex_i_3
       (.I0(nxt_ldm_base),
        .I1(instr_faulted_reg_0),
        .I2(pop_pc_ex),
        .I3(first_ex_phase),
        .I4(two_phase_ex),
        .I5(ifetch_reg_1),
        .O(last_uncond_phase_ex_i_3_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    last_uncond_phase_ex_i_4
       (.I0(dreq_wr_ex_reg),
        .I1(mul_ex_reg),
        .I2(push_ex_reg),
        .I3(lockup_br_de),
        .I4(first_pop_pc_ex_i_2_n_0),
        .I5(dreq_rd_ex_reg_2),
        .O(last_uncond_phase_ex_i_4_n_0));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \latched_excpt_num[0]_i_2 
       (.I0(biu_wfault),
        .I1(int_fault_ex_reg_0),
        .I2(instr_faulted_reg_0),
        .O(nvic_excpt_fault_req));
  FDCE \latched_excpt_num_reg[0] 
       (.C(HCLK),
        .CE(E),
        .CLR(SYSRESETn_0),
        .D(\latched_excpt_num_reg[4]_0 [0]),
        .Q(\latched_excpt_num_reg_n_0_[0] ));
  FDCE \latched_excpt_num_reg[1] 
       (.C(HCLK),
        .CE(E),
        .CLR(SYSRESETn_0),
        .D(\latched_excpt_num_reg[4]_0 [1]),
        .Q(\latched_excpt_num_reg_n_0_[1] ));
  FDCE \latched_excpt_num_reg[2] 
       (.C(HCLK),
        .CE(E),
        .CLR(SYSRESETn_0),
        .D(\latched_excpt_num_reg[4]_0 [2]),
        .Q(\latched_excpt_num_reg_n_0_[2] ));
  FDCE \latched_excpt_num_reg[3] 
       (.C(HCLK),
        .CE(E),
        .CLR(SYSRESETn_0),
        .D(\latched_excpt_num_reg[4]_0 [3]),
        .Q(\latched_excpt_num_reg_n_0_[3] ));
  FDCE \latched_excpt_num_reg[4] 
       (.C(HCLK),
        .CE(E),
        .CLR(SYSRESETn_0),
        .D(\latched_excpt_num_reg[4]_0 [4]),
        .Q(\latched_excpt_num_reg_n_0_[4] ));
  LUT5 #(
    .INIT(32'h00000008)) 
    ldm_pop_ex_i_1
       (.I0(dreq_rd_ex_reg_2),
        .I1(load_ex_reg_0),
        .I2(\instr_de_reg[11] ),
        .I3(int_fault_ex_i_4_n_0),
        .I4(ldm_pop_ex_i_3_n_0),
        .O(ldm_pop_de));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT5 #(
    .INIT(32'h45444555)) 
    ldm_pop_ex_i_3
       (.I0(micro_code_de),
        .I1(pf_fault_de),
        .I2(dp_tbit_reg),
        .I3(use_dp_tbit),
        .I4(inter_tbit_reg),
        .O(ldm_pop_ex_i_3_n_0));
  LUT5 #(
    .INIT(32'h00000002)) 
    load_ex_i_1
       (.I0(load_ex_reg_0),
        .I1(\instr_de_reg[11] ),
        .I2(int_fault_ex_i_4_n_0),
        .I3(ldm_pop_ex_i_3_n_0),
        .I4(dreq_rd_ex_reg_0),
        .O(\instr_de_reg[14] ));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT5 #(
    .INIT(32'h04000000)) 
    load_xpsr_de_i_2
       (.I0(excpt_state[2]),
        .I1(excpt_state[1]),
        .I2(excpt_state[4]),
        .I3(excpt_state[0]),
        .I4(excpt_state[3]),
        .O(load_xpsr));
  FDCE load_xpsr_de_reg
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg_3),
        .CLR(SYSRESETn_0),
        .D(load_xpsr),
        .Q(load_xpsr_de));
  FDCE load_xpsr_ex_reg
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg_3),
        .CLR(SYSRESETn_0),
        .D(load_xpsr_de),
        .Q(load_xpsr_ex_reg_0));
  LUT6 #(
    .INIT(64'h1111111100001101)) 
    locked_up_i_10
       (.I0(\HADDR_reg[1] ),
        .I1(dreq_rd_ex),
        .I2(fetch_phase),
        .I3(fetch_internal_reg),
        .I4(br_first_ex),
        .I5(micro_code_de),
        .O(biu_write_reg));
  LUT5 #(
    .INIT(32'h88888F88)) 
    locked_up_i_2
       (.I0(lockup_br_ex),
        .I1(first_ex_phase),
        .I2(locked_up_i_8_n_0),
        .I3(locked_up_reg_0),
        .I4(excpt_mask_sp),
        .O(nxt_locked_up));
  LUT1 #(
    .INIT(2'h1)) 
    locked_up_i_3
       (.I0(SYSRESETn),
        .O(SYSRESETn_0));
  LUT6 #(
    .INIT(64'h0000000010000000)) 
    locked_up_i_8
       (.I0(excpt_state[1]),
        .I1(excpt_state[2]),
        .I2(excpt_state[4]),
        .I3(i_dbg_wdata_sel_de_reg_3),
        .I4(excpt_state[0]),
        .I5(excpt_state[3]),
        .O(locked_up_i_8_n_0));
  FDCE locked_up_reg
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(nxt_locked_up),
        .Q(locked_up_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT5 #(
    .INIT(32'h00010000)) 
    lockup_br_de_i_1
       (.I0(excpt_state[1]),
        .I1(excpt_state[2]),
        .I2(excpt_state[0]),
        .I3(excpt_state[3]),
        .I4(excpt_state[4]),
        .O(lockup_br_de_i_1_n_0));
  FDCE lockup_br_de_reg
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg_3),
        .CLR(SYSRESETn_0),
        .D(lockup_br_de_i_1_n_0),
        .Q(lockup_br_de));
  FDCE lockup_br_ex_reg
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg_3),
        .CLR(SYSRESETn_0),
        .D(lockup_br_de),
        .Q(lockup_br_ex));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ls_byte_ex_i_2
       (.I0(Q[11]),
        .I1(Q[9]),
        .O(\instr_de_reg[11]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT2 #(
    .INIT(4'h8)) 
    mask_sp_ex_i_1
       (.I0(invert_b_ex_reg_2),
        .I1(excpt_mask_sp_de),
        .O(nxt_mask_sp_ex));
  FDCE mask_sp_ex_reg
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(SYSRESETn_0),
        .D(nxt_mask_sp_ex),
        .Q(mask_sp_ex));
  LUT5 #(
    .INIT(32'hFF100010)) 
    \mem_held_addr[3]_i_4 
       (.I0(mask_sp_ex),
        .I1(\mem_held_addr_reg[3] ),
        .I2(fptr_wdata),
        .I3(\mem_held_addr_reg[3]_0 ),
        .I4(\hold_reg2_reg[31]_2 [1]),
        .O(\u_dp/au_in_a ));
  CARRY4 \mem_held_addr_reg[11]_i_1 
       (.CI(\mem_held_addr_reg[7]_i_1_n_0 ),
        .CO({\mem_held_addr_reg[11]_i_1_n_0 ,\mem_held_addr_reg[11]_i_1_n_1 ,\mem_held_addr_reg[11]_i_1_n_2 ,\mem_held_addr_reg[11]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\mem_held_addr_reg[11] ,\mem_held_addr_reg[23] [7:6]}),
        .O(\pc_reg[11] ),
        .S(\mem_held_addr_reg[11]_0 ));
  CARRY4 \mem_held_addr_reg[15]_i_1 
       (.CI(\mem_held_addr_reg[11]_i_1_n_0 ),
        .CO({\mem_held_addr_reg[15]_i_1_n_0 ,\mem_held_addr_reg[15]_i_1_n_1 ,\mem_held_addr_reg[15]_i_1_n_2 ,\mem_held_addr_reg[15]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\mem_held_addr_reg[15] [1],\mem_held_addr_reg[23] [9:8],\mem_held_addr_reg[15] [0]}),
        .O(O),
        .S(\mem_held_addr_reg[15]_0 ));
  CARRY4 \mem_held_addr_reg[19]_i_1 
       (.CI(\mem_held_addr_reg[15]_i_1_n_0 ),
        .CO({\mem_held_addr_reg[19]_i_1_n_0 ,\mem_held_addr_reg[19]_i_1_n_1 ,\mem_held_addr_reg[19]_i_1_n_2 ,\mem_held_addr_reg[19]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\mem_held_addr_reg[19] ,\mem_held_addr_reg[23] [11:10],au_in_b[3]}),
        .O(invert_b_ex_reg_1),
        .S(\mem_held_addr_reg[19]_0 ));
  CARRY4 \mem_held_addr_reg[23]_i_1 
       (.CI(\mem_held_addr_reg[19]_i_1_n_0 ),
        .CO({CO,\mem_held_addr_reg[23]_i_1_n_1 ,\mem_held_addr_reg[23]_i_1_n_2 ,\mem_held_addr_reg[23]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({DI,\mem_held_addr_reg[23] [14:12]}),
        .O(invert_b_ex_reg_0),
        .S(\mem_held_addr_reg[23]_0 ));
  CARRY4 \mem_held_addr_reg[3]_i_1 
       (.CI(1'b0),
        .CO({\mem_held_addr_reg[3]_i_1_n_0 ,\mem_held_addr_reg[3]_i_1_n_1 ,\mem_held_addr_reg[3]_i_1_n_2 ,\mem_held_addr_reg[3]_i_1_n_3 }),
        .CYINIT(au_in_b[0]),
        .DI({\mem_held_addr_reg[23] [1],\u_dp/au_in_a ,\mem_held_addr_reg[23] [0],\mem_held_addr_reg[3]_1 }),
        .O(invert_b_ex_reg),
        .S({S[2],\u_alu_dec/u_adder/mem_held_addr[3]_i_8_n_0 ,S[1:0]}));
  CARRY4 \mem_held_addr_reg[7]_i_1 
       (.CI(\mem_held_addr_reg[3]_i_1_n_0 ),
        .CO({\mem_held_addr_reg[7]_i_1_n_0 ,\mem_held_addr_reg[7]_i_1_n_1 ,\mem_held_addr_reg[7]_i_1_n_2 ,\mem_held_addr_reg[7]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(\mem_held_addr_reg[23] [5:2]),
        .O(zero_a_ex_reg),
        .S(\mem_held_addr_reg[7] ));
  FDPE micro_code_de_reg
       (.C(HCLK),
        .CE(adv_de_to_ex),
        .D(micro_code_fe_reg_0),
        .PRE(SYSRESETn_0),
        .Q(micro_code_de));
  LUT5 #(
    .INIT(32'hEFEFFFEF)) 
    micro_code_fe_i_1
       (.I0(nxt_excpt_state[3]),
        .I1(nxt_excpt_state[1]),
        .I2(nxt_excpt_state[2]),
        .I3(micro_code_fe_i_2_n_0),
        .I4(\excpt_state[0]_i_2_n_0 ),
        .O(micro_code_fe_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT5 #(
    .INIT(32'hF7FFF7F3)) 
    micro_code_fe_i_2
       (.I0(excpt_state[0]),
        .I1(excpt_state[4]),
        .I2(excpt_state[3]),
        .I3(excpt_state[2]),
        .I4(excpt_state[1]),
        .O(micro_code_fe_i_2_n_0));
  FDPE micro_code_fe_reg
       (.C(HCLK),
        .CE(adv_de_to_ex),
        .D(micro_code_fe_i_1_n_0),
        .PRE(SYSRESETn_0),
        .Q(micro_code_fe_reg_0));
  LUT6 #(
    .INIT(64'hD7FFFFFF14000000)) 
    mode_i_1
       (.I0(mode_i_2_n_0),
        .I1(excpt_state[3]),
        .I2(excpt_state[0]),
        .I3(mode_i_3_n_0),
        .I4(biu_rdy),
        .I5(mode_reg_0),
        .O(mode_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT4 #(
    .INIT(16'hD3DF)) 
    mode_i_2
       (.I0(p_0_in7_in),
        .I1(excpt_state[0]),
        .I2(excpt_state[3]),
        .I3(reset_code),
        .O(mode_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT3 #(
    .INIT(8'h04)) 
    mode_i_3
       (.I0(excpt_state[4]),
        .I1(excpt_state[1]),
        .I2(excpt_state[2]),
        .O(mode_i_3_n_0));
  FDPE mode_reg
       (.C(HCLK),
        .CE(1'b1),
        .D(mode_i_1_n_0),
        .PRE(SYSRESETn_0),
        .Q(mode_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT4 #(
    .INIT(16'h0010)) 
    msr_ex_i_1
       (.I0(micro_code_de_reg_0),
        .I1(msr_ex_reg),
        .I2(push_ex_reg),
        .I3(Q[14]),
        .O(\imm_held_reg[5] ));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT2 #(
    .INIT(4'h2)) 
    mul_ex_i_1
       (.I0(mul_ex_reg),
        .I1(micro_code_de_reg_0),
        .O(mul_de));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT2 #(
    .INIT(4'h8)) 
    nvic_excpt_taken_i_1
       (.I0(first_ex_phase),
        .I1(excpt_up_ipsr_ex),
        .O(update_ipsr0));
  FDCE nvic_excpt_taken_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(SYSRESETn_0),
        .D(update_ipsr0),
        .Q(nvic_excpt_taken));
  LUT5 #(
    .INIT(32'hFF00B8B8)) 
    \pc[10]_i_1 
       (.I0(\pc_reg[11] [2]),
        .I1(branch_ex_reg_0),
        .I2(\pc_reg[10] ),
        .I3(seq_fetch_addr[9]),
        .I4(\pc_reg[2] ),
        .O(\pc_reg[23] [9]));
  LUT5 #(
    .INIT(32'hFF00B8B8)) 
    \pc[11]_i_1 
       (.I0(\pc_reg[11] [3]),
        .I1(branch_ex_reg_0),
        .I2(\pc_reg[11]_0 ),
        .I3(seq_fetch_addr[10]),
        .I4(\pc_reg[2] ),
        .O(\pc_reg[23] [10]));
  LUT5 #(
    .INIT(32'hFF00B8B8)) 
    \pc[12]_i_1 
       (.I0(O[0]),
        .I1(branch_ex_reg_0),
        .I2(\pc_reg[12] ),
        .I3(seq_fetch_addr[11]),
        .I4(\pc_reg[2] ),
        .O(\pc_reg[23] [11]));
  LUT5 #(
    .INIT(32'hFF00B8B8)) 
    \pc[13]_i_1 
       (.I0(O[1]),
        .I1(branch_ex_reg_0),
        .I2(\pc_reg[13] ),
        .I3(seq_fetch_addr[12]),
        .I4(\pc_reg[2] ),
        .O(\pc_reg[23] [12]));
  LUT5 #(
    .INIT(32'hFF00B8B8)) 
    \pc[14]_i_1 
       (.I0(O[2]),
        .I1(branch_ex_reg_0),
        .I2(\pc_reg[14] ),
        .I3(seq_fetch_addr[13]),
        .I4(\pc_reg[2] ),
        .O(\pc_reg[23] [13]));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \pc[15]_i_1 
       (.I0(seq_fetch_addr[14]),
        .I1(\pc_reg[2] ),
        .I2(O[3]),
        .I3(branch_ex_reg_0),
        .I4(\HADDR_reg[15] ),
        .O(\pc_reg[23] [14]));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \pc[16]_i_1 
       (.I0(seq_fetch_addr[15]),
        .I1(\pc_reg[2] ),
        .I2(invert_b_ex_reg_1[0]),
        .I3(branch_ex_reg_0),
        .I4(\HADDR_reg[16] ),
        .O(\pc_reg[23] [15]));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \pc[17]_i_1 
       (.I0(seq_fetch_addr[16]),
        .I1(\pc_reg[2] ),
        .I2(invert_b_ex_reg_1[1]),
        .I3(branch_ex_reg_0),
        .I4(\HADDR_reg[17] ),
        .O(\pc_reg[23] [16]));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \pc[18]_i_1 
       (.I0(seq_fetch_addr[17]),
        .I1(\pc_reg[2] ),
        .I2(invert_b_ex_reg_1[2]),
        .I3(branch_ex_reg_0),
        .I4(\HADDR_reg[18] ),
        .O(\pc_reg[23] [17]));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \pc[19]_i_1 
       (.I0(seq_fetch_addr[18]),
        .I1(\pc_reg[2] ),
        .I2(invert_b_ex_reg_1[3]),
        .I3(branch_ex_reg_0),
        .I4(\HADDR_reg[19] ),
        .O(\pc_reg[23] [18]));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \pc[20]_i_1 
       (.I0(seq_fetch_addr[19]),
        .I1(\pc_reg[2] ),
        .I2(invert_b_ex_reg_0[0]),
        .I3(branch_ex_reg_0),
        .I4(\HADDR_reg[20] ),
        .O(\pc_reg[23] [19]));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \pc[21]_i_1 
       (.I0(seq_fetch_addr[20]),
        .I1(\pc_reg[2] ),
        .I2(invert_b_ex_reg_0[1]),
        .I3(branch_ex_reg_0),
        .I4(\HADDR_reg[21] ),
        .O(\pc_reg[23] [20]));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \pc[22]_i_1 
       (.I0(seq_fetch_addr[21]),
        .I1(\pc_reg[2] ),
        .I2(invert_b_ex_reg_0[2]),
        .I3(branch_ex_reg_0),
        .I4(\HADDR_reg[22] ),
        .O(\pc_reg[23] [21]));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \pc[23]_i_1 
       (.I0(seq_fetch_addr[22]),
        .I1(\pc_reg[2] ),
        .I2(invert_b_ex_reg_0[3]),
        .I3(branch_ex_reg_0),
        .I4(\HADDR_reg[23] ),
        .O(\pc_reg[23] [22]));
  LUT5 #(
    .INIT(32'hFF00B8B8)) 
    \pc[2]_i_1 
       (.I0(invert_b_ex_reg[2]),
        .I1(branch_ex_reg_0),
        .I2(\pc_reg[2]_0 ),
        .I3(seq_fetch_addr[1]),
        .I4(\pc_reg[2] ),
        .O(\pc_reg[23] [1]));
  LUT3 #(
    .INIT(8'h08)) 
    \pc[31]_i_1 
       (.I0(\pc[31]_i_3_n_0 ),
        .I1(biu_rdy),
        .I2(locked_up_reg_0),
        .O(locked_up_reg_1));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF00BA)) 
    \pc[31]_i_3 
       (.I0(second32_ex),
        .I1(push_ex_reg),
        .I2(invert_b_ex_reg_2),
        .I3(micro_code_de),
        .I4(br_first_ex),
        .I5(branching_ex),
        .O(\pc[31]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFF00B8B8)) 
    \pc[3]_i_1 
       (.I0(invert_b_ex_reg[3]),
        .I1(branch_ex_reg_0),
        .I2(\pc_reg[3] ),
        .I3(seq_fetch_addr[2]),
        .I4(\pc_reg[2] ),
        .O(\pc_reg[23] [2]));
  LUT5 #(
    .INIT(32'hFF00B8B8)) 
    \pc[4]_i_1 
       (.I0(zero_a_ex_reg[0]),
        .I1(branch_ex_reg_0),
        .I2(\pc_reg[4] ),
        .I3(seq_fetch_addr[3]),
        .I4(\pc_reg[2] ),
        .O(\pc_reg[23] [3]));
  LUT5 #(
    .INIT(32'hFF00B8B8)) 
    \pc[5]_i_1 
       (.I0(zero_a_ex_reg[1]),
        .I1(branch_ex_reg_0),
        .I2(\pc_reg[5] ),
        .I3(seq_fetch_addr[4]),
        .I4(\pc_reg[2] ),
        .O(\pc_reg[23] [4]));
  LUT5 #(
    .INIT(32'hFF00B8B8)) 
    \pc[6]_i_1 
       (.I0(zero_a_ex_reg[2]),
        .I1(branch_ex_reg_0),
        .I2(\pc_reg[6] ),
        .I3(seq_fetch_addr[5]),
        .I4(\pc_reg[2] ),
        .O(\pc_reg[23] [5]));
  LUT5 #(
    .INIT(32'hFF00B8B8)) 
    \pc[7]_i_1 
       (.I0(zero_a_ex_reg[3]),
        .I1(branch_ex_reg_0),
        .I2(\pc_reg[7] ),
        .I3(seq_fetch_addr[6]),
        .I4(\pc_reg[2] ),
        .O(\pc_reg[23] [6]));
  LUT5 #(
    .INIT(32'hFF00B8B8)) 
    \pc[8]_i_1 
       (.I0(\pc_reg[11] [0]),
        .I1(branch_ex_reg_0),
        .I2(\pc_reg[8] ),
        .I3(seq_fetch_addr[7]),
        .I4(\pc_reg[2] ),
        .O(\pc_reg[23] [7]));
  LUT5 #(
    .INIT(32'hFF00B8B8)) 
    \pc[9]_i_1 
       (.I0(\pc_reg[11] [1]),
        .I1(branch_ex_reg_0),
        .I2(\pc_reg[9] ),
        .I3(seq_fetch_addr[8]),
        .I4(\pc_reg[2] ),
        .O(\pc_reg[23] [8]));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pc_de[0]_i_1 
       (.I0(dp_tbit_reg),
        .I1(use_dp_tbit),
        .I2(inter_tbit_reg),
        .O(tbit));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    pf_fault_de_i_1
       (.I0(held_fault1),
        .I1(\read_addr_reg[1] [0]),
        .I2(held_fault0),
        .I3(\read_addr[1]_i_3_n_0 ),
        .I4(pf_fault_fe),
        .O(nxt_pf_fault_de));
  LUT6 #(
    .INIT(64'h0000000000100000)) 
    pop_pc_ex_i_1
       (.I0(micro_code_de_reg_0),
        .I1(push_ex_reg),
        .I2(Q[11]),
        .I3(pop_pc_ex_reg),
        .I4(Q[8]),
        .I5(Q[9]),
        .O(first32_ex_reg_0));
  LUT6 #(
    .INIT(64'h0000F20000000000)) 
    \pre_pc_mux_ctl_ex[1]_i_1 
       (.I0(\pre_pc_mux_ctl_ex_reg[1] ),
        .I1(tbit_ex_reg),
        .I2(push_ex_reg),
        .I3(Q[14]),
        .I4(micro_code_de_reg_0),
        .I5(invert_b_ex_reg_2),
        .O(first32_ex_reg));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT4 #(
    .INIT(16'h000D)) 
    pre_update_c_ex_i_1
       (.I0(shift_ex_reg),
        .I1(pre_update_v_ex_reg),
        .I2(micro_code_de_reg_0),
        .I3(micro_code_de),
        .O(update_c));
  LUT6 #(
    .INIT(64'h000F000F000F000D)) 
    pre_update_n_ex_i_1
       (.I0(shift_ex_reg),
        .I1(pre_update_v_ex_reg),
        .I2(micro_code_de_reg_0),
        .I3(micro_code_de),
        .I4(mul_ex_reg),
        .I5(\rf_mux_ctl_ex_reg[2] ),
        .O(update_n));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT3 #(
    .INIT(8'h10)) 
    pre_update_v_ex_i_1
       (.I0(micro_code_de_reg_0),
        .I1(micro_code_de),
        .I2(pre_update_v_ex_reg),
        .O(update_v));
  LUT6 #(
    .INIT(64'hF111FFFFF1110000)) 
    primask_i_1
       (.I0(primask_i_2_n_0),
        .I1(primask_i_3_n_0),
        .I2(cps_data_ex),
        .I3(cps_ex),
        .I4(primask0),
        .I5(nvic_primask),
        .O(primask_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT2 #(
    .INIT(4'h7)) 
    primask_i_2
       (.I0(first_ex_phase),
        .I1(msr_ex),
        .O(primask_i_2_n_0));
  LUT6 #(
    .INIT(64'h2222222200000002)) 
    primask_i_3
       (.I0(primask_i_5_n_0),
        .I1(\reg_file_a_reg[0][0] ),
        .I2(\reg_file_a_reg[0][0]_0 ),
        .I3(\reg_file_a_reg[0][0]_1 ),
        .I4(\reg_file_a_reg[0][0]_2 ),
        .I5(dp_tbit_reg_reg_0),
        .O(primask_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT5 #(
    .INIT(32'hA8880000)) 
    primask_i_4
       (.I0(biu_rdy),
        .I1(cps_ex),
        .I2(use_primask_ex),
        .I3(msr_ex),
        .I4(first_ex_phase),
        .O(primask0));
  LUT6 #(
    .INIT(64'h00070000FFFFFFFF)) 
    primask_i_5
       (.I0(\genblk3[1].ram_block_reg_0_0_i_36_n_0 ),
        .I1(primask_i_3_0),
        .I2(primask_i_3_1),
        .I3(primask_i_3_2),
        .I4(primask_i_3_3),
        .I5(primask_i_3_4),
        .O(primask_i_5_n_0));
  FDCE primask_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(SYSRESETn_0),
        .D(primask_i_1_n_0),
        .Q(nvic_primask));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    push_ex_i_1
       (.I0(Q[10]),
        .I1(push_ex_reg),
        .I2(push_ex_reg_0),
        .I3(Q[11]),
        .I4(Q[9]),
        .I5(micro_code_de_reg_0),
        .O(\instr_de_reg[10] ));
  FDCE push_xpsr_ex_reg
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg_3),
        .CLR(SYSRESETn_0),
        .D(excpt_mask_sp_de),
        .Q(push_xpsr_ex));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT3 #(
    .INIT(8'h08)) 
    r_hdf_actv_i_1
       (.I0(force_hf_reg_0),
        .I1(\dp_ipsr_7to2_reg[5]_0 [0]),
        .I2(r_hdf_actv_i_2_n_0),
        .O(hdf_actv));
  LUT6 #(
    .INIT(64'hFFFFFFFF00FB00EA)) 
    r_hdf_actv_i_2
       (.I0(dp_ipsr_7to2[5]),
        .I1(use_dp_ipsr),
        .I2(dp_ipsr_7to2[3]),
        .I3(force_ipsr),
        .I4(dp_ipsr_7to2[7]),
        .I5(r_hdf_actv_i_3_n_0),
        .O(r_hdf_actv_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT5 #(
    .INIT(32'h33333022)) 
    r_hdf_actv_i_3
       (.I0(dp_ipsr_7to2[6]),
        .I1(force_ipsr),
        .I2(dp_ipsr_7to2[2]),
        .I3(use_dp_ipsr),
        .I4(dp_ipsr_7to2[4]),
        .O(r_hdf_actv_i_3_n_0));
  LUT6 #(
    .INIT(64'h0300000002000004)) 
    r_int_actv_i_1
       (.I0(nvic_excpt_num[2]),
        .I1(\dp_ipsr_7to2_reg[6]_0 ),
        .I2(nvic_excpt_num[5]),
        .I3(\dp_ipsr_7to2_reg[5]_0 [1]),
        .I4(\dp_ipsr_7to2_reg[5]_0 [0]),
        .I5(force_hf_reg_0),
        .O(int_actv));
  LUT4 #(
    .INIT(16'h00E2)) 
    r_int_actv_i_2
       (.I0(dp_ipsr_7to2[4]),
        .I1(use_dp_ipsr),
        .I2(dp_ipsr_7to2[2]),
        .I3(force_ipsr),
        .O(nvic_excpt_num[2]));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT4 #(
    .INIT(16'h00E2)) 
    r_int_actv_i_3
       (.I0(dp_ipsr_7to2[6]),
        .I1(use_dp_ipsr),
        .I2(dp_ipsr_7to2[4]),
        .I3(force_ipsr),
        .O(\dp_ipsr_7to2_reg[6]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT4 #(
    .INIT(16'h00E2)) 
    r_int_actv_i_4
       (.I0(dp_ipsr_7to2[7]),
        .I1(use_dp_ipsr),
        .I2(dp_ipsr_7to2[5]),
        .I3(force_ipsr),
        .O(nvic_excpt_num[5]));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT4 #(
    .INIT(16'h00E2)) 
    r_int_actv_i_5
       (.I0(dp_ipsr_7to2[5]),
        .I1(use_dp_ipsr),
        .I2(dp_ipsr_7to2[3]),
        .I3(force_ipsr),
        .O(\dp_ipsr_7to2_reg[5]_0 [1]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    r_int_actv_i_6
       (.I0(force_hf),
        .I1(force_ipsr),
        .I2(dp_ipsr_1to0[0]),
        .I3(use_dp_ipsr),
        .I4(dp_ipsr_7to2[2]),
        .O(force_hf_reg_0));
  LUT5 #(
    .INIT(32'hFFFFF222)) 
    \r_int_actv_lvl[0]_i_1 
       (.I0(irq_lvl[0]),
        .I1(\dp_ipsr_7to2_reg[7]_0 ),
        .I2(\dp_ipsr_7to2_reg[4]_0 ),
        .I3(svc_lvl_0[0]),
        .I4(\r_int_actv_lvl[0]_i_3_n_0 ),
        .O(\i_svc_lvl_reg[1] [0]));
  LUT5 #(
    .INIT(32'hFFFEFFFF)) 
    \r_int_actv_lvl[0]_i_2 
       (.I0(\r_int_actv_lvl[0]_i_4_n_0 ),
        .I1(force_hf_reg_0),
        .I2(nvic_excpt_num[2]),
        .I3(\dp_ipsr_7to2_reg[5]_0 [0]),
        .I4(\dp_ipsr_7to2_reg[6]_0 ),
        .O(\dp_ipsr_7to2_reg[7]_0 ));
  LUT4 #(
    .INIT(16'hF444)) 
    \r_int_actv_lvl[0]_i_3 
       (.I0(\dp_ipsr_7to2_reg[4]_1 ),
        .I1(\r_int_actv_lvl_reg[1]_0 [0]),
        .I2(\dp_ipsr_7to2_reg[7]_1 ),
        .I3(\r_int_actv_lvl_reg[1] [0]),
        .O(\r_int_actv_lvl[0]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT5 #(
    .INIT(32'h33333022)) 
    \r_int_actv_lvl[0]_i_4 
       (.I0(dp_ipsr_7to2[7]),
        .I1(force_ipsr),
        .I2(dp_ipsr_7to2[3]),
        .I3(use_dp_ipsr),
        .I4(dp_ipsr_7to2[5]),
        .O(\r_int_actv_lvl[0]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \r_int_actv_lvl[1]_i_1 
       (.I0(svc_lvl_0[1]),
        .I1(\dp_ipsr_7to2_reg[4]_0 ),
        .I2(\r_int_actv_lvl_reg[1] [1]),
        .I3(\dp_ipsr_7to2_reg[7]_1 ),
        .I4(\r_int_actv_lvl[1]_i_2_n_0 ),
        .O(\i_svc_lvl_reg[1] [1]));
  LUT4 #(
    .INIT(16'h4F44)) 
    \r_int_actv_lvl[1]_i_2 
       (.I0(\dp_ipsr_7to2_reg[4]_1 ),
        .I1(\r_int_actv_lvl_reg[1]_0 [1]),
        .I2(\dp_ipsr_7to2_reg[7]_0 ),
        .I3(irq_lvl[1]),
        .O(\r_int_actv_lvl[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT3 #(
    .INIT(8'h04)) 
    r_nmi_actv_i_1
       (.I0(r_hdf_actv_i_2_n_0),
        .I1(\dp_ipsr_7to2_reg[5]_0 [0]),
        .I2(force_hf_reg_0),
        .O(nmi_actv));
  LUT5 #(
    .INIT(32'h00FBFB00)) 
    \read_addr[0]_i_1 
       (.I0(\write_addr_reg[0]_2 ),
        .I1(biu_rdy),
        .I2(branching_ex),
        .I3(\read_addr[1]_i_3_n_0 ),
        .I4(\read_addr_reg[1] [0]),
        .O(branching_ex_reg[0]));
  LUT6 #(
    .INIT(64'h00FBFBFBFB000000)) 
    \read_addr[1]_i_1 
       (.I0(\write_addr_reg[0]_2 ),
        .I1(biu_rdy),
        .I2(branching_ex),
        .I3(\read_addr_reg[1] [0]),
        .I4(\read_addr[1]_i_3_n_0 ),
        .I5(\read_addr_reg[1] [1]),
        .O(branching_ex_reg[1]));
  LUT6 #(
    .INIT(64'h0000000000006FF6)) 
    \read_addr[1]_i_3 
       (.I0(\write_addr_reg[1] [0]),
        .I1(\read_addr_reg[1] [0]),
        .I2(\write_addr_reg[1] [1]),
        .I3(\read_addr_reg[1] [1]),
        .I4(\read_addr_reg[0] ),
        .I5(micro_code_de),
        .O(\read_addr[1]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT5 #(
    .INIT(32'h00000002)) 
    \reg_file_a[0][31]_i_1 
       (.I0(micro_code_de_reg_3),
        .I1(\reg_file_a_reg[0][0]_3 ),
        .I2(\reg_file_a_reg[0][0]_4 [0]),
        .I3(\reg_file_a_reg[0][0]_4 [1]),
        .I4(\reg_file_a_reg[0][0]_4 [2]),
        .O(\wptr_ex_reg[1]_7 ));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT5 #(
    .INIT(32'h00000080)) 
    \reg_file_a[10][31]_i_1 
       (.I0(micro_code_de_reg_3),
        .I1(\reg_file_a_reg[0][0]_4 [2]),
        .I2(\reg_file_a_reg[0][0]_3 ),
        .I3(\reg_file_a_reg[0][0]_4 [1]),
        .I4(\reg_file_a_reg[0][0]_4 [0]),
        .O(\wptr_ex_reg[3]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT5 #(
    .INIT(32'h00800000)) 
    \reg_file_a[11][31]_i_1 
       (.I0(micro_code_de_reg_3),
        .I1(\reg_file_a_reg[0][0]_3 ),
        .I2(\reg_file_a_reg[0][0]_4 [0]),
        .I3(\reg_file_a_reg[0][0]_4 [1]),
        .I4(\reg_file_a_reg[0][0]_4 [2]),
        .O(\wptr_ex_reg[1]_2 ));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT5 #(
    .INIT(32'h00000080)) 
    \reg_file_a[12][31]_i_1 
       (.I0(micro_code_de_reg_3),
        .I1(\reg_file_a_reg[0][0]_4 [1]),
        .I2(\reg_file_a_reg[0][0]_4 [2]),
        .I3(\reg_file_a_reg[0][0]_3 ),
        .I4(\reg_file_a_reg[0][0]_4 [0]),
        .O(\wptr_ex_reg[2]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT5 #(
    .INIT(32'h00800000)) 
    \reg_file_a[13][31]_i_1 
       (.I0(micro_code_de_reg_3),
        .I1(\reg_file_a_reg[0][0]_4 [2]),
        .I2(\reg_file_a_reg[0][0]_4 [0]),
        .I3(\reg_file_a_reg[0][0]_3 ),
        .I4(\reg_file_a_reg[0][0]_4 [1]),
        .O(\wptr_ex_reg[3]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT5 #(
    .INIT(32'h00800000)) 
    \reg_file_a[14][31]_i_1 
       (.I0(micro_code_de_reg_3),
        .I1(\reg_file_a_reg[0][0]_3 ),
        .I2(\reg_file_a_reg[0][0]_4 [2]),
        .I3(\reg_file_a_reg[0][0]_4 [0]),
        .I4(\reg_file_a_reg[0][0]_4 [1]),
        .O(\wptr_ex_reg[1]_4 ));
  LUT2 #(
    .INIT(4'h1)) 
    \reg_file_a[15][0]_i_1 
       (.I0(write_sp),
        .I1(primask_i_3_n_0),
        .O(rf_wdata[0]));
  LUT6 #(
    .INIT(64'h5FCF5FC050CF50C0)) 
    \reg_file_a[15][10]_i_1 
       (.I0(\reg_file_a[15][10]_i_2_n_0 ),
        .I1(\reg_file_a_reg[15][10] [6]),
        .I2(\reg_file_a_reg[15][24] [1]),
        .I3(\reg_file_a_reg[15][24] [0]),
        .I4(\pc_reg[11] [2]),
        .I5(\reg_file_a_reg[15][10]_0 ),
        .O(rf_wdata[7]));
  LUT6 #(
    .INIT(64'h00000000FFFF446D)) 
    \reg_file_a[15][10]_i_2 
       (.I0(\mem_held_addr_reg[11] [0]),
        .I1(\reg_file_a_reg[15][10]_1 ),
        .I2(\reg_file_a_reg[15][23] [1]),
        .I3(\reg_file_a_reg[15][23] [0]),
        .I4(\reg_file_a_reg[15][23]_2 ),
        .I5(\reg_file_a[15][10]_i_5_n_0 ),
        .O(\reg_file_a[15][10]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF0FF4400F0004400)) 
    \reg_file_a[15][10]_i_5 
       (.I0(i_dbg_wdata_sel_ex_reg_1),
        .I1(\wdata_reg[27] [9]),
        .I2(\reg_file_a_reg[0][25]_0 [7]),
        .I3(\reg_file_a_reg[15][9] ),
        .I4(\reg_file_a_reg[15][9]_0 ),
        .I5(\reg_file_a[15][10]_i_2_0 ),
        .O(\reg_file_a[15][10]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h5FFC50FC5F0C500C)) 
    \reg_file_a[15][16]_i_1 
       (.I0(\reg_file_a[15][16]_i_2_n_0 ),
        .I1(invert_b_ex_reg_1[0]),
        .I2(\reg_file_a_reg[15][24] [0]),
        .I3(\reg_file_a_reg[15][24] [1]),
        .I4(mult_out[0]),
        .I5(\reg_file_a_reg[15][16] ),
        .O(rf_wdata[8]));
  LUT6 #(
    .INIT(64'h00000000FFFF446D)) 
    \reg_file_a[15][16]_i_2 
       (.I0(au_in_b[3]),
        .I1(\reg_file_a_reg[15][16]_0 ),
        .I2(\reg_file_a_reg[15][23] [1]),
        .I3(\reg_file_a_reg[15][23] [0]),
        .I4(\reg_file_a_reg[15][23]_2 ),
        .I5(\reg_file_a[15][16]_i_5_n_0 ),
        .O(\reg_file_a[15][16]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF0FF4400F0004400)) 
    \reg_file_a[15][16]_i_5 
       (.I0(i_dbg_wdata_sel_ex_reg_1),
        .I1(\wdata_reg[27] [10]),
        .I2(\reg_file_a_reg[0][25]_0 [8]),
        .I3(\reg_file_a_reg[15][9] ),
        .I4(\reg_file_a_reg[15][9]_0 ),
        .I5(\reg_file_a[15][16]_i_2_0 ),
        .O(\reg_file_a[15][16]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h5FFC50FC5F0C500C)) 
    \reg_file_a[15][17]_i_1 
       (.I0(\reg_file_a[15][17]_i_2_n_0 ),
        .I1(invert_b_ex_reg_1[1]),
        .I2(\reg_file_a_reg[15][24] [0]),
        .I3(\reg_file_a_reg[15][24] [1]),
        .I4(mult_out[1]),
        .I5(\reg_file_a_reg[15][17] ),
        .O(rf_wdata[9]));
  LUT6 #(
    .INIT(64'h00000000FFFF898E)) 
    \reg_file_a[15][17]_i_2 
       (.I0(\reg_file_a_reg[15][17]_0 ),
        .I1(\reg_file_a_reg[15][17]_1 ),
        .I2(\reg_file_a_reg[15][23] [0]),
        .I3(\reg_file_a_reg[15][23] [1]),
        .I4(\reg_file_a_reg[15][23]_2 ),
        .I5(\reg_file_a[15][17]_i_6_n_0 ),
        .O(\reg_file_a[15][17]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF0FF4400F0004400)) 
    \reg_file_a[15][17]_i_6 
       (.I0(i_dbg_wdata_sel_ex_reg_1),
        .I1(\wdata_reg[27] [11]),
        .I2(\reg_file_a_reg[0][25]_0 [9]),
        .I3(\reg_file_a_reg[15][9] ),
        .I4(\reg_file_a_reg[15][9]_0 ),
        .I5(\reg_file_a[15][17]_i_2_0 ),
        .O(\reg_file_a[15][17]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \reg_file_a[15][1]_i_1 
       (.I0(\dp_ipsr_1to0[1]_i_2_n_0 ),
        .I1(write_sp),
        .O(rf_wdata[1]));
  LUT6 #(
    .INIT(64'h5FFC50FC5F0C500C)) 
    \reg_file_a[15][23]_i_1 
       (.I0(\reg_file_a[15][23]_i_2_n_0 ),
        .I1(invert_b_ex_reg_0[3]),
        .I2(\reg_file_a_reg[15][24] [0]),
        .I3(\reg_file_a_reg[15][24] [1]),
        .I4(mult_out[2]),
        .I5(\reg_file_a_reg[15][23]_0 ),
        .O(rf_wdata[10]));
  LUT6 #(
    .INIT(64'h00000000FFFF446D)) 
    \reg_file_a[15][23]_i_2 
       (.I0(DI),
        .I1(\reg_file_a_reg[15][23]_1 ),
        .I2(\reg_file_a_reg[15][23] [1]),
        .I3(\reg_file_a_reg[15][23] [0]),
        .I4(\reg_file_a_reg[15][23]_2 ),
        .I5(\reg_file_a[15][23]_i_5_n_0 ),
        .O(\reg_file_a[15][23]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF0FF4400F0004400)) 
    \reg_file_a[15][23]_i_5 
       (.I0(i_dbg_wdata_sel_ex_reg_1),
        .I1(\wdata_reg[27] [12]),
        .I2(\reg_file_a_reg[0][25]_0 [10]),
        .I3(\reg_file_a_reg[15][9] ),
        .I4(\reg_file_a_reg[15][9]_0 ),
        .I5(\reg_file_a[15][23]_i_2_0 ),
        .O(\reg_file_a[15][23]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h5FFC50FC5F0C500C)) 
    \reg_file_a[15][24]_i_1 
       (.I0(\reg_file_a[15][24]_i_2_n_0 ),
        .I1(\HADDR_reg[27] [0]),
        .I2(\reg_file_a_reg[15][24] [0]),
        .I3(\reg_file_a_reg[15][24] [1]),
        .I4(mult_out[3]),
        .I5(\reg_file_a_reg[15][24]_0 ),
        .O(rf_wdata[11]));
  LUT6 #(
    .INIT(64'h0305F30503F5F3F5)) 
    \reg_file_a[15][24]_i_2 
       (.I0(dp_tbit_reg_reg_1),
        .I1(\genblk3[1].ram_block_reg_3_0_i_11_n_0 ),
        .I2(\reg_file_a_reg[15][9]_0 ),
        .I3(\reg_file_a_reg[15][9] ),
        .I4(\reg_file_a_reg[0][25]_0 [11]),
        .I5(\reg_file_a_reg[15][24]_1 ),
        .O(\reg_file_a[15][24]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h5FFC50FC5F0C500C)) 
    \reg_file_a[15][25]_i_1 
       (.I0(\reg_file_a[15][25]_i_2_n_0 ),
        .I1(\HADDR_reg[27] [1]),
        .I2(\reg_file_a_reg[15][24] [0]),
        .I3(\reg_file_a_reg[15][24] [1]),
        .I4(mult_out[4]),
        .I5(\reg_file_a_reg[0][25] ),
        .O(rf_wdata[12]));
  LUT6 #(
    .INIT(64'h0035F0350F35FF35)) 
    \reg_file_a[15][25]_i_2 
       (.I0(\reg_file_a_reg[0][25]_1 ),
        .I1(\reg_file_a_reg[0][25]_2 ),
        .I2(\reg_file_a_reg[15][9]_0 ),
        .I3(\reg_file_a_reg[15][9] ),
        .I4(\reg_file_a_reg[0][25]_0 [12]),
        .I5(\genblk3[1].ram_block_reg_3_0_i_9_n_0 ),
        .O(\reg_file_a[15][25]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \reg_file_a[15][31]_i_1 
       (.I0(micro_code_de_reg_3),
        .I1(\reg_file_a_reg[0][0]_3 ),
        .I2(\reg_file_a_reg[0][0]_4 [0]),
        .I3(\reg_file_a_reg[0][0]_4 [1]),
        .I4(\reg_file_a_reg[0][0]_4 [2]),
        .O(\wptr_ex_reg[1]_3 ));
  LUT6 #(
    .INIT(64'h5FFC50FC5F0C500C)) 
    \reg_file_a[15][9]_i_1 
       (.I0(\reg_file_a[15][9]_i_2_n_0 ),
        .I1(\pc_reg[11] [1]),
        .I2(\reg_file_a_reg[15][24] [0]),
        .I3(\reg_file_a_reg[15][24] [1]),
        .I4(\reg_file_a_reg[15][10] [5]),
        .I5(\reg_file_a_reg[15][9]_1 ),
        .O(rf_wdata[6]));
  LUT6 #(
    .INIT(64'h0305F30503F5F3F5)) 
    \reg_file_a[15][9]_i_2 
       (.I0(\reg_file_a_reg[15][9]_2 ),
        .I1(\genblk3[1].ram_block_reg_1_0_i_8_n_0 ),
        .I2(\reg_file_a_reg[15][9]_0 ),
        .I3(\reg_file_a_reg[15][9] ),
        .I4(\reg_file_a_reg[0][25]_0 [6]),
        .I5(\reg_file_a_reg[15][9]_3 ),
        .O(\reg_file_a[15][9]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT5 #(
    .INIT(32'h00000020)) 
    \reg_file_a[1][31]_i_1 
       (.I0(micro_code_de_reg_3),
        .I1(\reg_file_a_reg[0][0]_3 ),
        .I2(\reg_file_a_reg[0][0]_4 [0]),
        .I3(\reg_file_a_reg[0][0]_4 [1]),
        .I4(\reg_file_a_reg[0][0]_4 [2]),
        .O(\wptr_ex_reg[1] ));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT5 #(
    .INIT(32'h00000020)) 
    \reg_file_a[2][31]_i_1 
       (.I0(micro_code_de_reg_3),
        .I1(\reg_file_a_reg[0][0]_4 [0]),
        .I2(\reg_file_a_reg[0][0]_3 ),
        .I3(\reg_file_a_reg[0][0]_4 [1]),
        .I4(\reg_file_a_reg[0][0]_4 [2]),
        .O(\wptr_ex_reg[0] ));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT5 #(
    .INIT(32'h00000080)) 
    \reg_file_a[3][31]_i_1 
       (.I0(micro_code_de_reg_3),
        .I1(\reg_file_a_reg[0][0]_3 ),
        .I2(\reg_file_a_reg[0][0]_4 [0]),
        .I3(\reg_file_a_reg[0][0]_4 [1]),
        .I4(\reg_file_a_reg[0][0]_4 [2]),
        .O(\wptr_ex_reg[1]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT5 #(
    .INIT(32'h00000020)) 
    \reg_file_a[4][31]_i_1 
       (.I0(micro_code_de_reg_3),
        .I1(\reg_file_a_reg[0][0]_3 ),
        .I2(\reg_file_a_reg[0][0]_4 [1]),
        .I3(\reg_file_a_reg[0][0]_4 [0]),
        .I4(\reg_file_a_reg[0][0]_4 [2]),
        .O(\wptr_ex_reg[1]_6 ));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT5 #(
    .INIT(32'h00000080)) 
    \reg_file_a[5][31]_i_1 
       (.I0(micro_code_de_reg_3),
        .I1(\reg_file_a_reg[0][0]_4 [1]),
        .I2(\reg_file_a_reg[0][0]_4 [0]),
        .I3(\reg_file_a_reg[0][0]_3 ),
        .I4(\reg_file_a_reg[0][0]_4 [2]),
        .O(\wptr_ex_reg[2] ));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT5 #(
    .INIT(32'h00000080)) 
    \reg_file_a[6][31]_i_1 
       (.I0(micro_code_de_reg_3),
        .I1(\reg_file_a_reg[0][0]_4 [1]),
        .I2(\reg_file_a_reg[0][0]_3 ),
        .I3(\reg_file_a_reg[0][0]_4 [0]),
        .I4(\reg_file_a_reg[0][0]_4 [2]),
        .O(\wptr_ex_reg[2]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT5 #(
    .INIT(32'h00800000)) 
    \reg_file_a[7][31]_i_1 
       (.I0(micro_code_de_reg_3),
        .I1(\reg_file_a_reg[0][0]_3 ),
        .I2(\reg_file_a_reg[0][0]_4 [0]),
        .I3(\reg_file_a_reg[0][0]_4 [2]),
        .I4(\reg_file_a_reg[0][0]_4 [1]),
        .O(\wptr_ex_reg[1]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT5 #(
    .INIT(32'h00000020)) 
    \reg_file_a[8][31]_i_1 
       (.I0(micro_code_de_reg_3),
        .I1(\reg_file_a_reg[0][0]_3 ),
        .I2(\reg_file_a_reg[0][0]_4 [2]),
        .I3(\reg_file_a_reg[0][0]_4 [1]),
        .I4(\reg_file_a_reg[0][0]_4 [0]),
        .O(\wptr_ex_reg[1]_5 ));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT5 #(
    .INIT(32'h00000080)) 
    \reg_file_a[9][31]_i_1 
       (.I0(micro_code_de_reg_3),
        .I1(\reg_file_a_reg[0][0]_4 [2]),
        .I2(\reg_file_a_reg[0][0]_4 [0]),
        .I3(\reg_file_a_reg[0][0]_4 [1]),
        .I4(\reg_file_a_reg[0][0]_3 ),
        .O(\wptr_ex_reg[3] ));
  LUT6 #(
    .INIT(64'h00008F0000000000)) 
    reg_file_b_reg_0_15_0_5_i_1
       (.I0(micro_code_de),
        .I1(ldm_base),
        .I2(instr_faulted_reg_0),
        .I3(biu_rdy),
        .I4(excpt_mask_write_ex),
        .I5(w_phase_ex),
        .O(micro_code_de_reg_3));
  LUT5 #(
    .INIT(32'h88888B88)) 
    \reg_sel[3]_i_1 
       (.I0(\reg_sel_reg[3] ),
        .I1(micro_code_de),
        .I2(p_1_in16_in),
        .I3(p_0_in18_in),
        .I4(\reg_sel_reg[3]_0 ),
        .O(micro_code_de_reg_2));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT2 #(
    .INIT(4'h8)) 
    reset_code_i_1
       (.I0(reset_code),
        .I1(micro_code_de),
        .O(nxt_reset_code));
  FDPE reset_code_reg
       (.C(HCLK),
        .CE(adv_de_to_ex),
        .D(nxt_reset_code),
        .PRE(SYSRESETn_0),
        .Q(reset_code));
  LUT6 #(
    .INIT(64'h00FBFFFF00FB00FB)) 
    \rf0_mux_ctl_ex[0]_i_1 
       (.I0(load_ex),
        .I1(\rf0_mux_ctl_ex_reg[0] ),
        .I2(\rf0_mux_ctl_ex_reg[0]_0 ),
        .I3(invert_b_ex_reg_2),
        .I4(sbit_ex_reg_0),
        .I5(\rf0_mux_ctl_ex[0]_i_3_n_0 ),
        .O(load_ex_reg));
  LUT6 #(
    .INIT(64'h0000200000202020)) 
    \rf0_mux_ctl_ex[0]_i_3 
       (.I0(invert_b_ex_reg_2),
        .I1(dbg_wdata_sel_de),
        .I2(Q[9]),
        .I3(Q[11]),
        .I4(Q[8]),
        .I5(Q[10]),
        .O(\rf0_mux_ctl_ex[0]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \rf1_mux_ctl_ex[0]_i_1 
       (.I0(i_dbg_wdata_sel_de_reg_2),
        .I1(load_ex_reg),
        .O(i_dbg_wdata_sel_de_reg_1[0]));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \rf1_mux_ctl_ex[1]_i_1 
       (.I0(i_dbg_wdata_sel_de_reg_2),
        .I1(\rf1_mux_ctl_ex_reg[1] ),
        .O(i_dbg_wdata_sel_de_reg_1[1]));
  LUT6 #(
    .INIT(64'h00000000FFFFFFFB)) 
    \rf_mux_ctl_ex[2]_i_1 
       (.I0(dbg_wdata_sel_de),
        .I1(invert_b_ex_reg_2),
        .I2(\rf_mux_ctl_ex_reg[2]_0 ),
        .I3(\rf_mux_ctl_ex_reg[2]_1 ),
        .I4(\rf_mux_ctl_ex_reg[2] ),
        .I5(\rf_mux_ctl_ex_reg[2]_2 ),
        .O(i_dbg_wdata_sel_de_reg_2));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT5 #(
    .INIT(32'hA002FFFF)) 
    \rptr_a_ex2[1]_i_1 
       (.I0(Q[4]),
        .I1(Q[12]),
        .I2(Q[13]),
        .I3(Q[14]),
        .I4(\rptr_a_ex2_reg[1]_i_2_n_0 ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hCC44FF77FC77FC77)) 
    \rptr_a_ex2[1]_i_3 
       (.I0(Q[9]),
        .I1(Q[13]),
        .I2(\wptr_decoded[1]_i_7_n_0 ),
        .I3(Q[14]),
        .I4(Q[4]),
        .I5(Q[12]),
        .O(\rptr_a_ex2[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000555F355F555F)) 
    \rptr_a_ex2[1]_i_4 
       (.I0(active_sp),
        .I1(Q[4]),
        .I2(Q[12]),
        .I3(Q[13]),
        .I4(Q[9]),
        .I5(Q[14]),
        .O(\rptr_a_ex2[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h00000000C8C8FFC8)) 
    \rptr_a_ex2[3]_i_1 
       (.I0(Q[13]),
        .I1(Q[15]),
        .I2(Q[12]),
        .I3(Q[14]),
        .I4(\rptr_a_ex2[3]_i_2_n_0 ),
        .I5(\rptr_a_ex2_reg[3] ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hEEEEEFFFFFFFEFFF)) 
    \rptr_a_ex2[3]_i_2 
       (.I0(Q[15]),
        .I1(Q[12]),
        .I2(Q[7]),
        .I3(Q[10]),
        .I4(Q[13]),
        .I5(micro_code_de),
        .O(\rptr_a_ex2[3]_i_2_n_0 ));
  MUXF7 \rptr_a_ex2_reg[1]_i_2 
       (.I0(\rptr_a_ex2[1]_i_3_n_0 ),
        .I1(\rptr_a_ex2[1]_i_4_n_0 ),
        .O(\rptr_a_ex2_reg[1]_i_2_n_0 ),
        .S(Q[15]));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rptr_a_ex[1]_i_1 
       (.I0(D[0]),
        .I1(invert_b_ex_reg_2),
        .I2(\rptr_a_ex_reg[3] [0]),
        .O(last_uncond_phase_ex_reg_2));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \rptr_a_ex[1]_i_1__0 
       (.I0(D[0]),
        .I1(invert_b_ex_reg_2),
        .I2(\rptr_a_ex_reg[3] [0]),
        .I3(biu_rdy),
        .I4(rptr_a_ex[0]),
        .O(last_uncond_phase_ex_reg_1[0]));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rptr_a_ex[3]_i_1 
       (.I0(D[1]),
        .I1(invert_b_ex_reg_2),
        .I2(\rptr_a_ex_reg[3] [1]),
        .O(last_uncond_phase_ex_reg_3));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \rptr_a_ex[3]_i_1__0 
       (.I0(D[1]),
        .I1(invert_b_ex_reg_2),
        .I2(\rptr_a_ex_reg[3] [1]),
        .I3(biu_rdy),
        .I4(rptr_a_ex[1]),
        .O(last_uncond_phase_ex_reg_1[1]));
  LUT6 #(
    .INIT(64'h0000000045455505)) 
    \rptr_b_ex2[1]_i_3 
       (.I0(\rptr_b_ex2[1]_i_4_n_0 ),
        .I1(Q[9]),
        .I2(Q[15]),
        .I3(Q[1]),
        .I4(Q[12]),
        .I5(push_ex_reg),
        .O(\instr_de_reg[9]_0 ));
  LUT6 #(
    .INIT(64'h00000000F1F100FF)) 
    \rptr_b_ex2[1]_i_4 
       (.I0(\instr_de_reg[14]_2 ),
        .I1(Q[1]),
        .I2(\rptr_b_ex2[1]_i_5_n_0 ),
        .I3(Q[7]),
        .I4(\rptr_b_ex2[1]_i_3_0 ),
        .I5(Q[15]),
        .O(\rptr_b_ex2[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h000000007FFF0000)) 
    \rptr_b_ex2[1]_i_5 
       (.I0(active_sp),
        .I1(Q[10]),
        .I2(Q[3]),
        .I3(\rptr_b_ex2[1]_i_4_0 ),
        .I4(\instr_de_reg[14]_2 ),
        .I5(Q[4]),
        .O(\rptr_b_ex2[1]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT4 #(
    .INIT(16'h2000)) 
    rst_fptr_align_de_i_1
       (.I0(excpt_state[2]),
        .I1(excpt_state[1]),
        .I2(excpt_state[0]),
        .I3(excpt_state[3]),
        .O(rst_fptr_align));
  FDCE rst_fptr_align_de_reg
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg_3),
        .CLR(SYSRESETn_0),
        .D(rst_fptr_align),
        .Q(halt_hold1_de));
  FDCE rst_fptr_align_ex_reg
       (.C(HCLK),
        .CE(i_dbg_wdata_sel_de_reg_3),
        .CLR(SYSRESETn_0),
        .D(halt_hold1_de),
        .Q(rst_fptr_align_ex));
  LUT6 #(
    .INIT(64'h000000000000020C)) 
    sbit_ex_i_1
       (.I0(Q[9]),
        .I1(Q[7]),
        .I2(Q[10]),
        .I3(sbit_ex_reg),
        .I4(sbit_ex_reg_0),
        .I5(micro_code_de_reg_0),
        .O(\instr_de_reg[9] ));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT2 #(
    .INIT(4'h2)) 
    second32_ex_i_1
       (.I0(push_ex_reg),
        .I1(micro_code_de_reg_0),
        .O(nxt_second32_ex));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT2 #(
    .INIT(4'h1)) 
    shift_ex_i_1
       (.I0(micro_code_de_reg_0),
        .I1(shift_ex_reg),
        .O(micro_code_de_reg_1));
  LUT2 #(
    .INIT(4'h2)) 
    stm_push_ex_i_1
       (.I0(dreq_wr_ex_reg),
        .I1(micro_code_de_reg_0),
        .O(stm_push_de));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT2 #(
    .INIT(4'h2)) 
    store_ex_i_1
       (.I0(dreq_wr_ex_reg_0),
        .I1(micro_code_de_reg_0),
        .O(store_de));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT4 #(
    .INIT(16'h0040)) 
    tbit_ex_i_1
       (.I0(micro_code_de_reg_0),
        .I1(Q[14]),
        .I2(Q[8]),
        .I3(tbit_ex_reg),
        .O(\instr_de_reg[14]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT2 #(
    .INIT(4'h7)) 
    three_phase_ex_i_2
       (.I0(Q[10]),
        .I1(Q[9]),
        .O(\instr_de_reg[10]_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \u_alu_dec/u_adder/mem_held_addr[3]_i_8 
       (.I0(\u_dp/au_in_a ),
        .I1(au_in_b[1]),
        .O(\u_alu_dec/u_adder/mem_held_addr[3]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hBAAABABABABABABA)) 
    use_dp_ipsr_i_1
       (.I0(use_dp_tbit_reg_0),
        .I1(use_dp_ipsr_i_2_n_0),
        .I2(use_dp_ipsr),
        .I3(nvic_lockup),
        .I4(excpt_ld_pc_ex),
        .I5(first_ex_phase),
        .O(nxt_use_dp_ipsr));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT3 #(
    .INIT(8'hE0)) 
    use_dp_ipsr_i_2
       (.I0(excpt_up_ipsr_ex),
        .I1(load_xpsr_ex_reg_0),
        .I2(first_ex_phase),
        .O(use_dp_ipsr_i_2_n_0));
  FDPE use_dp_ipsr_reg
       (.C(HCLK),
        .CE(biu_rdy),
        .D(nxt_use_dp_ipsr),
        .PRE(SYSRESETn_0),
        .Q(use_dp_ipsr));
  LUT5 #(
    .INIT(32'hA8FFA800)) 
    use_dp_tbit_i_1
       (.I0(use_dp_tbit_reg_1),
        .I1(use_dp_tbit_i_2_n_0),
        .I2(use_dp_tbit_reg_0),
        .I3(update_tbit),
        .I4(use_dp_tbit),
        .O(use_dp_tbit_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT4 #(
    .INIT(16'h4000)) 
    use_dp_tbit_i_2
       (.I0(excpt_state[0]),
        .I1(excpt_state[3]),
        .I2(excpt_state[4]),
        .I3(excpt_state[1]),
        .O(use_dp_tbit_i_2_n_0));
  LUT4 #(
    .INIT(16'hFFE0)) 
    use_dp_tbit_i_3
       (.I0(use_dp_tbit_reg_0),
        .I1(use_dp_tbit_i_2_n_0),
        .I2(use_dp_tbit_reg_1),
        .I3(use_dp_tbit_i_4_n_0),
        .O(update_tbit));
  LUT5 #(
    .INIT(32'hAA080808)) 
    use_dp_tbit_i_4
       (.I0(biu_rdy),
        .I1(use_dp_tbit_i_3_0),
        .I2(excpt_ret_ld_pc_ex),
        .I3(first_ex_phase),
        .I4(tbit_ex),
        .O(use_dp_tbit_i_4_n_0));
  FDCE use_dp_tbit_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(SYSRESETn_0),
        .D(use_dp_tbit_i_1_n_0),
        .Q(use_dp_tbit));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT4 #(
    .INIT(16'h888B)) 
    w_phase_ex_i_1
       (.I0(w_phase_ex_reg),
        .I1(last_uncond_phase_ex_reg_0),
        .I2(micro_code_de_reg_0),
        .I3(w_phase_ex_reg_0),
        .O(nxt_w_phase_ex));
  LUT5 #(
    .INIT(32'hFFF011F0)) 
    \wdata_mux_ctl_ex[0]_i_1 
       (.I0(micro_code_de_reg_0),
        .I1(\wdata_mux_ctl_ex_reg[0] ),
        .I2(\wdata_mux_ctl_ex[0]_i_3_n_0 ),
        .I3(invert_b_ex_reg_2),
        .I4(dbg_wdata_sel_de),
        .O(i_dbg_wdata_sel_de_reg_0[0]));
  LUT6 #(
    .INIT(64'hFFFFFFFFF8888888)) 
    \wdata_mux_ctl_ex[0]_i_3 
       (.I0(push_xpsr_ex),
        .I1(first_ex_phase),
        .I2(ldm_base_loaded),
        .I3(ldm_pop_ex),
        .I4(lsm_last_d_phase_ex),
        .I5(br_lr_ex),
        .O(\wdata_mux_ctl_ex[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hF1F1F1F1FF000000)) 
    \wdata_mux_ctl_ex[1]_i_1 
       (.I0(micro_code_de_reg_0),
        .I1(\wdata_mux_ctl_ex_reg[1] ),
        .I2(dbg_wdata_sel_de),
        .I3(second_ex_phase),
        .I4(push_xpsr_ex),
        .I5(invert_b_ex_reg_2),
        .O(i_dbg_wdata_sel_de_reg_0[1]));
  LUT6 #(
    .INIT(64'hA8A8A8A8A8A8A8AA)) 
    \wptr_decoded[1]_i_3 
       (.I0(\wptr_decoded_reg[1] ),
        .I1(\wptr_decoded_reg[1]_0 ),
        .I2(\wptr_decoded[1]_i_6_n_0 ),
        .I3(\wptr_decoded[1]_i_7_n_0 ),
        .I4(Q[12]),
        .I5(Q[11]),
        .O(\instr_de_reg[12] ));
  LUT5 #(
    .INIT(32'hCFC0A0A0)) 
    \wptr_decoded[1]_i_6 
       (.I0(active_sp),
        .I1(Q[1]),
        .I2(Q[12]),
        .I3(Q[11]),
        .I4(Q[9]),
        .O(\wptr_decoded[1]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h1555555555555555)) 
    \wptr_decoded[1]_i_7 
       (.I0(Q[1]),
        .I1(Q[7]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(active_sp),
        .I5(Q[10]),
        .O(\wptr_decoded[1]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF51F1F1F1)) 
    \wptr_decoded[3]_i_3 
       (.I0(Q[13]),
        .I1(Q[14]),
        .I2(\rptr_a_ex2[3]_i_2_n_0 ),
        .I3(Q[12]),
        .I4(Q[15]),
        .I5(\wptr_decoded[3]_i_2 ),
        .O(\instr_de_reg[13] ));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT5 #(
    .INIT(32'hFB0000FB)) 
    \write_addr[0]_i_1 
       (.I0(\write_addr_reg[0]_2 ),
        .I1(biu_rdy),
        .I2(branching_ex),
        .I3(\held_instr0[15]_i_3_n_0 ),
        .I4(\write_addr_reg[1] [0]),
        .O(\write_addr_reg[0] [0]));
  LUT6 #(
    .INIT(64'hDDDDD0DD22222022)) 
    \write_addr[1]_i_1 
       (.I0(\write_addr_reg[1] [0]),
        .I1(\held_instr0[15]_i_3_n_0 ),
        .I2(\write_addr_reg[0]_2 ),
        .I3(biu_rdy),
        .I4(branching_ex),
        .I5(\write_addr_reg[1] [1]),
        .O(\write_addr_reg[0] [1]));
  LUT6 #(
    .INIT(64'hFFFFFFFF40454040)) 
    z_flag_mux_i_1
       (.I0(z_flag_mux_reg),
        .I1(z_flag_mux_reg_0),
        .I2(z_flag_mux_reg_1),
        .I3(z_flag_mux_i_5_n_0),
        .I4(z_flag_mux_reg_2),
        .I5(z_flag_mux_reg_3),
        .O(nxt_z_flag_mux));
  LUT6 #(
    .INIT(64'hFF6FFFF8FFF8EE68)) 
    z_flag_mux_i_14
       (.I0(\mem_held_addr_reg[23] [1]),
        .I1(au_in_b[2]),
        .I2(\reg_file_a_reg[15][23] [1]),
        .I3(\reg_file_a_reg[15][23] [0]),
        .I4(\u_dp/au_in_a ),
        .I5(au_in_b[1]),
        .O(z_flag_mux_i_14_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    z_flag_mux_i_5
       (.I0(z_flag_mux_reg_4),
        .I1(z_flag_mux_reg_5),
        .I2(z_flag_mux_reg_6),
        .I3(z_flag_mux_i_14_n_0),
        .I4(z_flag_mux_reg_7),
        .I5(z_flag_mux_reg_8),
        .O(z_flag_mux_i_5_n_0));
  LUT6 #(
    .INIT(64'hBBBBAABAAAAAAAAA)) 
    zero_a_ex_i_1
       (.I0(excpt_zero_a_de),
        .I1(zero_a_ex_reg_0),
        .I2(zero_a_ex_reg_1),
        .I3(Q[11]),
        .I4(push_ex_reg),
        .I5(zero_a_ex_reg_2),
        .O(zero_a_ex0));
endmodule

(* ORIG_REF_NAME = "cm1_fetch" *) 
module design_1_CORTEXM1_AXI_0_1_cm1_fetch
   (fetch_internal,
    hi_pre_fetch_addr,
    \uhalf_instr_reg[15]_0 ,
    int_rack_reg_0,
    biu_rdy,
    nxt_fetch_internal,
    HCLK,
    fetch_internal_reg_0,
    nxt_int_rack,
    hi_pre_fetch_addr_reg_0,
    rdata_fe,
    biu_irack,
    biu_commit_reg,
    irack,
    \uhalf_instr_reg[0]_0 ,
    \uhalf_instr_reg[15]_1 );
  output fetch_internal;
  output hi_pre_fetch_addr;
  output [15:0]\uhalf_instr_reg[15]_0 ;
  output int_rack_reg_0;
  input biu_rdy;
  input nxt_fetch_internal;
  input HCLK;
  input fetch_internal_reg_0;
  input nxt_int_rack;
  input [0:0]hi_pre_fetch_addr_reg_0;
  input [15:0]rdata_fe;
  input biu_irack;
  input biu_commit_reg;
  input irack;
  input [0:0]\uhalf_instr_reg[0]_0 ;
  input [15:0]\uhalf_instr_reg[15]_1 ;

  wire HCLK;
  wire biu_commit_reg;
  wire biu_irack;
  wire biu_rdy;
  wire fetch_internal;
  wire fetch_internal_reg_0;
  wire hi_pre_fetch_addr;
  wire [0:0]hi_pre_fetch_addr_reg_0;
  wire int_rack;
  wire int_rack_reg_0;
  wire irack;
  wire nxt_fetch_internal;
  wire nxt_int_rack;
  wire [15:0]rdata_fe;
  wire [15:0]uhalf_instr;
  wire [0:0]\uhalf_instr_reg[0]_0 ;
  wire [15:0]\uhalf_instr_reg[15]_0 ;
  wire [15:0]\uhalf_instr_reg[15]_1 ;

  FDCE fetch_internal_reg
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(fetch_internal_reg_0),
        .D(nxt_fetch_internal),
        .Q(fetch_internal));
  (* SOFT_HLUTNM = "soft_lutpair253" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \held_instr0[0]_i_1 
       (.I0(uhalf_instr[0]),
        .I1(int_rack),
        .I2(rdata_fe[0]),
        .O(\uhalf_instr_reg[15]_0 [0]));
  (* SOFT_HLUTNM = "soft_lutpair258" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \held_instr0[10]_i_1 
       (.I0(uhalf_instr[10]),
        .I1(int_rack),
        .I2(rdata_fe[10]),
        .O(\uhalf_instr_reg[15]_0 [10]));
  (* SOFT_HLUTNM = "soft_lutpair258" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \held_instr0[11]_i_1 
       (.I0(uhalf_instr[11]),
        .I1(int_rack),
        .I2(rdata_fe[11]),
        .O(\uhalf_instr_reg[15]_0 [11]));
  (* SOFT_HLUTNM = "soft_lutpair259" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \held_instr0[12]_i_1 
       (.I0(uhalf_instr[12]),
        .I1(int_rack),
        .I2(rdata_fe[12]),
        .O(\uhalf_instr_reg[15]_0 [12]));
  (* SOFT_HLUTNM = "soft_lutpair259" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \held_instr0[13]_i_1 
       (.I0(uhalf_instr[13]),
        .I1(int_rack),
        .I2(rdata_fe[13]),
        .O(\uhalf_instr_reg[15]_0 [13]));
  (* SOFT_HLUTNM = "soft_lutpair260" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \held_instr0[14]_i_1 
       (.I0(uhalf_instr[14]),
        .I1(int_rack),
        .I2(rdata_fe[14]),
        .O(\uhalf_instr_reg[15]_0 [14]));
  (* SOFT_HLUTNM = "soft_lutpair260" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \held_instr0[15]_i_2 
       (.I0(uhalf_instr[15]),
        .I1(int_rack),
        .I2(rdata_fe[15]),
        .O(\uhalf_instr_reg[15]_0 [15]));
  LUT4 #(
    .INIT(16'h1011)) 
    \held_instr0[15]_i_6 
       (.I0(int_rack),
        .I1(biu_irack),
        .I2(biu_commit_reg),
        .I3(irack),
        .O(int_rack_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair253" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \held_instr0[1]_i_1 
       (.I0(uhalf_instr[1]),
        .I1(int_rack),
        .I2(rdata_fe[1]),
        .O(\uhalf_instr_reg[15]_0 [1]));
  (* SOFT_HLUTNM = "soft_lutpair254" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \held_instr0[2]_i_1 
       (.I0(uhalf_instr[2]),
        .I1(int_rack),
        .I2(rdata_fe[2]),
        .O(\uhalf_instr_reg[15]_0 [2]));
  (* SOFT_HLUTNM = "soft_lutpair254" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \held_instr0[3]_i_1 
       (.I0(uhalf_instr[3]),
        .I1(int_rack),
        .I2(rdata_fe[3]),
        .O(\uhalf_instr_reg[15]_0 [3]));
  (* SOFT_HLUTNM = "soft_lutpair255" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \held_instr0[4]_i_1 
       (.I0(uhalf_instr[4]),
        .I1(int_rack),
        .I2(rdata_fe[4]),
        .O(\uhalf_instr_reg[15]_0 [4]));
  (* SOFT_HLUTNM = "soft_lutpair255" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \held_instr0[5]_i_1 
       (.I0(uhalf_instr[5]),
        .I1(int_rack),
        .I2(rdata_fe[5]),
        .O(\uhalf_instr_reg[15]_0 [5]));
  (* SOFT_HLUTNM = "soft_lutpair256" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \held_instr0[6]_i_1 
       (.I0(uhalf_instr[6]),
        .I1(int_rack),
        .I2(rdata_fe[6]),
        .O(\uhalf_instr_reg[15]_0 [6]));
  (* SOFT_HLUTNM = "soft_lutpair256" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \held_instr0[7]_i_1 
       (.I0(uhalf_instr[7]),
        .I1(int_rack),
        .I2(rdata_fe[7]),
        .O(\uhalf_instr_reg[15]_0 [7]));
  (* SOFT_HLUTNM = "soft_lutpair257" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \held_instr0[8]_i_1 
       (.I0(uhalf_instr[8]),
        .I1(int_rack),
        .I2(rdata_fe[8]),
        .O(\uhalf_instr_reg[15]_0 [8]));
  (* SOFT_HLUTNM = "soft_lutpair257" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \held_instr0[9]_i_1 
       (.I0(uhalf_instr[9]),
        .I1(int_rack),
        .I2(rdata_fe[9]),
        .O(\uhalf_instr_reg[15]_0 [9]));
  FDCE hi_pre_fetch_addr_reg
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(fetch_internal_reg_0),
        .D(hi_pre_fetch_addr_reg_0),
        .Q(hi_pre_fetch_addr));
  FDCE int_rack_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(fetch_internal_reg_0),
        .D(nxt_int_rack),
        .Q(int_rack));
  FDCE \uhalf_instr_reg[0] 
       (.C(HCLK),
        .CE(\uhalf_instr_reg[0]_0 ),
        .CLR(fetch_internal_reg_0),
        .D(\uhalf_instr_reg[15]_1 [0]),
        .Q(uhalf_instr[0]));
  FDCE \uhalf_instr_reg[10] 
       (.C(HCLK),
        .CE(\uhalf_instr_reg[0]_0 ),
        .CLR(fetch_internal_reg_0),
        .D(\uhalf_instr_reg[15]_1 [10]),
        .Q(uhalf_instr[10]));
  FDCE \uhalf_instr_reg[11] 
       (.C(HCLK),
        .CE(\uhalf_instr_reg[0]_0 ),
        .CLR(fetch_internal_reg_0),
        .D(\uhalf_instr_reg[15]_1 [11]),
        .Q(uhalf_instr[11]));
  FDCE \uhalf_instr_reg[12] 
       (.C(HCLK),
        .CE(\uhalf_instr_reg[0]_0 ),
        .CLR(fetch_internal_reg_0),
        .D(\uhalf_instr_reg[15]_1 [12]),
        .Q(uhalf_instr[12]));
  FDCE \uhalf_instr_reg[13] 
       (.C(HCLK),
        .CE(\uhalf_instr_reg[0]_0 ),
        .CLR(fetch_internal_reg_0),
        .D(\uhalf_instr_reg[15]_1 [13]),
        .Q(uhalf_instr[13]));
  FDCE \uhalf_instr_reg[14] 
       (.C(HCLK),
        .CE(\uhalf_instr_reg[0]_0 ),
        .CLR(fetch_internal_reg_0),
        .D(\uhalf_instr_reg[15]_1 [14]),
        .Q(uhalf_instr[14]));
  FDCE \uhalf_instr_reg[15] 
       (.C(HCLK),
        .CE(\uhalf_instr_reg[0]_0 ),
        .CLR(fetch_internal_reg_0),
        .D(\uhalf_instr_reg[15]_1 [15]),
        .Q(uhalf_instr[15]));
  FDCE \uhalf_instr_reg[1] 
       (.C(HCLK),
        .CE(\uhalf_instr_reg[0]_0 ),
        .CLR(fetch_internal_reg_0),
        .D(\uhalf_instr_reg[15]_1 [1]),
        .Q(uhalf_instr[1]));
  FDCE \uhalf_instr_reg[2] 
       (.C(HCLK),
        .CE(\uhalf_instr_reg[0]_0 ),
        .CLR(fetch_internal_reg_0),
        .D(\uhalf_instr_reg[15]_1 [2]),
        .Q(uhalf_instr[2]));
  FDCE \uhalf_instr_reg[3] 
       (.C(HCLK),
        .CE(\uhalf_instr_reg[0]_0 ),
        .CLR(fetch_internal_reg_0),
        .D(\uhalf_instr_reg[15]_1 [3]),
        .Q(uhalf_instr[3]));
  FDCE \uhalf_instr_reg[4] 
       (.C(HCLK),
        .CE(\uhalf_instr_reg[0]_0 ),
        .CLR(fetch_internal_reg_0),
        .D(\uhalf_instr_reg[15]_1 [4]),
        .Q(uhalf_instr[4]));
  FDCE \uhalf_instr_reg[5] 
       (.C(HCLK),
        .CE(\uhalf_instr_reg[0]_0 ),
        .CLR(fetch_internal_reg_0),
        .D(\uhalf_instr_reg[15]_1 [5]),
        .Q(uhalf_instr[5]));
  FDCE \uhalf_instr_reg[6] 
       (.C(HCLK),
        .CE(\uhalf_instr_reg[0]_0 ),
        .CLR(fetch_internal_reg_0),
        .D(\uhalf_instr_reg[15]_1 [6]),
        .Q(uhalf_instr[6]));
  FDCE \uhalf_instr_reg[7] 
       (.C(HCLK),
        .CE(\uhalf_instr_reg[0]_0 ),
        .CLR(fetch_internal_reg_0),
        .D(\uhalf_instr_reg[15]_1 [7]),
        .Q(uhalf_instr[7]));
  FDCE \uhalf_instr_reg[8] 
       (.C(HCLK),
        .CE(\uhalf_instr_reg[0]_0 ),
        .CLR(fetch_internal_reg_0),
        .D(\uhalf_instr_reg[15]_1 [8]),
        .Q(uhalf_instr[8]));
  FDCE \uhalf_instr_reg[9] 
       (.C(HCLK),
        .CE(\uhalf_instr_reg[0]_0 ),
        .CLR(fetch_internal_reg_0),
        .D(\uhalf_instr_reg[15]_1 [9]),
        .Q(uhalf_instr[9]));
endmodule

(* ORIG_REF_NAME = "cm1_mem_ctl" *) 
module design_1_CORTEXM1_AXI_0_1_cm1_mem_ctl
   (irack,
    \mem_held_addr_reg[31]_i_1 ,
    load_xpsr_ex_reg,
    biu_commit,
    se_half_wb_reg,
    rd_mux_a_ex_reg,
    rd_mux_a_ex_reg_0,
    rd_mux_a_ex_reg_1,
    rd_mux_a_ex_reg_2,
    rd_mux_a_ex_reg_3,
    rd_mux_a_ex_reg_4,
    rd_mux_a_ex_reg_5,
    rd_mux_a_ex_reg_6,
    rd_mux_a_ex_reg_7,
    \mem_held_addr_reg[1] ,
    load_fptr,
    rd_mux_a_ex_reg_8,
    rd_mux_a_ex_reg_9,
    rd_mux_a_ex_reg_10,
    \mem_held_addr_reg[1]_0 ,
    \genblk3[1].ram_block_reg_3_0 ,
    rd_mux_a_ex_reg_11,
    rd_mux_a_ex_reg_12,
    rd_mux_a_ex_reg_13,
    rd_mux_a_ex_reg_14,
    rd_mux_a_ex_reg_15,
    rd_mux_a_ex_reg_16,
    rd_mux_a_ex_reg_17,
    rd_mux_a_ex_reg_18,
    rd_mux_a_ex_reg_19,
    rd_mux_a_ex_reg_20,
    rd_mux_a_ex_reg_21,
    rd_mux_a_ex_reg_22,
    rd_mux_a_ex_reg_23,
    rd_mux_a_ex_reg_24,
    rd_mux_a_ex_reg_25,
    rd_mux_a_ex_reg_26,
    rd_mux_a_ex_reg_27,
    rd_mux_a_ex_reg_28,
    rd_mux_a_ex_reg_29,
    rd_mux_a_ex_reg_30,
    itcm_sel_reg_0,
    \mem_held_addr_reg[1]_1 ,
    itcm_sel_reg_1,
    rd_mux_a_ex_reg_31,
    itcm_sel_i_6_0,
    \mem_held_addr_reg[19]_i_1 ,
    DTCMBYTEWR,
    ITCMBYTEWR,
    fptr_align_reg,
    biu_rdy,
    nxt_itcm_sel,
    HCLK,
    dwack_reg_0,
    nxt_dtcm_sel,
    nxt_irack,
    nxt_drack,
    w_u_fault_reg_0,
    nxt_dwack,
    D,
    rd_mux_a_ex,
    O,
    load_xpsr_ex,
    biu_rfault,
    biu_drack,
    biu_commit_reg_reg,
    biu_commit_reg_reg_0,
    biu_commit_reg_reg_1,
    biu_commit_reg_reg_2,
    biu_commit_reg_reg_3,
    biu_commit_reg_reg_4,
    biu_commit_reg_reg_5,
    biu_dreq,
    biu_addr_mux_ctl_ex,
    \hold_reg1_reg[6] ,
    \hold_reg1_reg[6]_0 ,
    se_half_wb,
    \hold_reg1_reg[16] ,
    \hold_reg1_reg[17] ,
    \hold_reg1_reg[18] ,
    \hold_reg1_reg[19] ,
    \hold_reg1_reg[20] ,
    \hold_reg1_reg[21] ,
    \hold_reg1_reg[22] ,
    \hold_reg1_reg[23] ,
    \hold_reg1_reg[24] ,
    \hold_reg1_reg[26] ,
    \hold_reg1_reg[27] ,
    \hold_reg1_reg[28] ,
    \hold_reg1_reg[29] ,
    \hold_reg1_reg[30] ,
    \hold_reg1_reg[31] ,
    \hold_reg1_reg[31]_0 ,
    \hold_reg1_reg[31]_1 ,
    \dp_ipsr_1to0_reg[1] ,
    \dp_ipsr_1to0_reg[1]_0 ,
    \hold_reg1[7]_i_7_0 ,
    doutA,
    \hold_reg1[7]_i_7_1 ,
    \dp_ipsr_1to0_reg[1]_1 ,
    \dp_ipsr_1to0_reg[1]_2 ,
    biu_commit_reg_i_5,
    \genblk3[1].ram_block_reg_3_1 ,
    ls_byte_ex,
    ls_half_ex,
    \genblk3[1].ram_block_reg_3_1_0 ,
    fptr_align_reg_0,
    fptr_align);
  output irack;
  output \mem_held_addr_reg[31]_i_1 ;
  output load_xpsr_ex_reg;
  output biu_commit;
  output [22:0]se_half_wb_reg;
  output rd_mux_a_ex_reg;
  output rd_mux_a_ex_reg_0;
  output rd_mux_a_ex_reg_1;
  output rd_mux_a_ex_reg_2;
  output rd_mux_a_ex_reg_3;
  output rd_mux_a_ex_reg_4;
  output rd_mux_a_ex_reg_5;
  output rd_mux_a_ex_reg_6;
  output rd_mux_a_ex_reg_7;
  output \mem_held_addr_reg[1] ;
  output load_fptr;
  output rd_mux_a_ex_reg_8;
  output rd_mux_a_ex_reg_9;
  output rd_mux_a_ex_reg_10;
  output \mem_held_addr_reg[1]_0 ;
  output \genblk3[1].ram_block_reg_3_0 ;
  output rd_mux_a_ex_reg_11;
  output rd_mux_a_ex_reg_12;
  output rd_mux_a_ex_reg_13;
  output rd_mux_a_ex_reg_14;
  output rd_mux_a_ex_reg_15;
  output rd_mux_a_ex_reg_16;
  output rd_mux_a_ex_reg_17;
  output rd_mux_a_ex_reg_18;
  output rd_mux_a_ex_reg_19;
  output rd_mux_a_ex_reg_20;
  output rd_mux_a_ex_reg_21;
  output rd_mux_a_ex_reg_22;
  output rd_mux_a_ex_reg_23;
  output rd_mux_a_ex_reg_24;
  output rd_mux_a_ex_reg_25;
  output rd_mux_a_ex_reg_26;
  output rd_mux_a_ex_reg_27;
  output rd_mux_a_ex_reg_28;
  output rd_mux_a_ex_reg_29;
  output rd_mux_a_ex_reg_30;
  output itcm_sel_reg_0;
  output \mem_held_addr_reg[1]_1 ;
  output itcm_sel_reg_1;
  output rd_mux_a_ex_reg_31;
  output itcm_sel_i_6_0;
  output \mem_held_addr_reg[19]_i_1 ;
  output [3:0]DTCMBYTEWR;
  output [3:0]ITCMBYTEWR;
  output fptr_align_reg;
  input biu_rdy;
  input nxt_itcm_sel;
  input HCLK;
  input dwack_reg_0;
  input nxt_dtcm_sel;
  input nxt_irack;
  input nxt_drack;
  input w_u_fault_reg_0;
  input nxt_dwack;
  input [31:0]D;
  input rd_mux_a_ex;
  input [2:0]O;
  input load_xpsr_ex;
  input biu_rfault;
  input biu_drack;
  input biu_commit_reg_reg;
  input biu_commit_reg_reg_0;
  input biu_commit_reg_reg_1;
  input biu_commit_reg_reg_2;
  input biu_commit_reg_reg_3;
  input biu_commit_reg_reg_4;
  input biu_commit_reg_reg_5;
  input biu_dreq;
  input [0:0]biu_addr_mux_ctl_ex;
  input \hold_reg1_reg[6] ;
  input \hold_reg1_reg[6]_0 ;
  input se_half_wb;
  input \hold_reg1_reg[16] ;
  input \hold_reg1_reg[17] ;
  input \hold_reg1_reg[18] ;
  input \hold_reg1_reg[19] ;
  input \hold_reg1_reg[20] ;
  input \hold_reg1_reg[21] ;
  input \hold_reg1_reg[22] ;
  input \hold_reg1_reg[23] ;
  input \hold_reg1_reg[24] ;
  input \hold_reg1_reg[26] ;
  input \hold_reg1_reg[27] ;
  input \hold_reg1_reg[28] ;
  input \hold_reg1_reg[29] ;
  input \hold_reg1_reg[30] ;
  input \hold_reg1_reg[31] ;
  input \hold_reg1_reg[31]_0 ;
  input \hold_reg1_reg[31]_1 ;
  input \dp_ipsr_1to0_reg[1] ;
  input \dp_ipsr_1to0_reg[1]_0 ;
  input [31:0]\hold_reg1[7]_i_7_0 ;
  input [31:0]doutA;
  input [31:0]\hold_reg1[7]_i_7_1 ;
  input \dp_ipsr_1to0_reg[1]_1 ;
  input \dp_ipsr_1to0_reg[1]_2 ;
  input [12:0]biu_commit_reg_i_5;
  input \genblk3[1].ram_block_reg_3_1 ;
  input ls_byte_ex;
  input ls_half_ex;
  input \genblk3[1].ram_block_reg_3_1_0 ;
  input fptr_align_reg_0;
  input fptr_align;

  wire [31:0]D;
  wire [3:0]DTCMBYTEWR;
  wire HCLK;
  wire [3:0]ITCMBYTEWR;
  wire [2:0]O;
  wire [0:0]biu_addr_mux_ctl_ex;
  wire biu_commit;
  wire biu_commit_reg_i_2_n_0;
  wire [12:0]biu_commit_reg_i_5;
  wire biu_commit_reg_reg;
  wire biu_commit_reg_reg_0;
  wire biu_commit_reg_reg_1;
  wire biu_commit_reg_reg_2;
  wire biu_commit_reg_reg_3;
  wire biu_commit_reg_reg_4;
  wire biu_commit_reg_reg_5;
  wire biu_drack;
  wire biu_dreq;
  wire biu_rdy;
  wire biu_rfault;
  wire [31:0]doutA;
  wire \dp_ipsr_1to0[1]_i_12_n_0 ;
  wire \dp_ipsr_1to0[1]_i_13_n_0 ;
  wire \dp_ipsr_1to0[1]_i_15_n_0 ;
  wire \dp_ipsr_1to0[1]_i_16_n_0 ;
  wire \dp_ipsr_1to0[1]_i_18_n_0 ;
  wire \dp_ipsr_1to0[1]_i_19_n_0 ;
  wire \dp_ipsr_1to0[1]_i_9_n_0 ;
  wire \dp_ipsr_1to0_reg[1] ;
  wire \dp_ipsr_1to0_reg[1]_0 ;
  wire \dp_ipsr_1to0_reg[1]_1 ;
  wire \dp_ipsr_1to0_reg[1]_2 ;
  wire drack;
  wire dtcm_sel;
  wire dwack;
  wire dwack_reg_0;
  wire fptr_align;
  wire fptr_align_reg;
  wire fptr_align_reg_0;
  wire \genblk3[1].ram_block_reg_3_0 ;
  wire \genblk3[1].ram_block_reg_3_1 ;
  wire \genblk3[1].ram_block_reg_3_1_0 ;
  wire \hold_reg1[0]_i_6_n_0 ;
  wire \hold_reg1[0]_i_7_n_0 ;
  wire \hold_reg1[0]_i_8_n_0 ;
  wire \hold_reg1[0]_i_9_n_0 ;
  wire \hold_reg1[2]_i_6_n_0 ;
  wire \hold_reg1[2]_i_7_n_0 ;
  wire \hold_reg1[2]_i_8_n_0 ;
  wire \hold_reg1[2]_i_9_n_0 ;
  wire \hold_reg1[3]_i_6_n_0 ;
  wire \hold_reg1[3]_i_7_n_0 ;
  wire \hold_reg1[3]_i_8_n_0 ;
  wire \hold_reg1[3]_i_9_n_0 ;
  wire \hold_reg1[4]_i_6_n_0 ;
  wire \hold_reg1[4]_i_7_n_0 ;
  wire \hold_reg1[4]_i_8_n_0 ;
  wire \hold_reg1[4]_i_9_n_0 ;
  wire \hold_reg1[5]_i_6_n_0 ;
  wire \hold_reg1[5]_i_7_n_0 ;
  wire \hold_reg1[5]_i_8_n_0 ;
  wire \hold_reg1[5]_i_9_n_0 ;
  wire \hold_reg1[6]_i_6_n_0 ;
  wire \hold_reg1[6]_i_7_n_0 ;
  wire \hold_reg1[6]_i_8_n_0 ;
  wire \hold_reg1[6]_i_9_n_0 ;
  wire \hold_reg1[7]_i_10_n_0 ;
  wire \hold_reg1[7]_i_11_n_0 ;
  wire [31:0]\hold_reg1[7]_i_7_0 ;
  wire [31:0]\hold_reg1[7]_i_7_1 ;
  wire \hold_reg1[7]_i_8_n_0 ;
  wire \hold_reg1[7]_i_9_n_0 ;
  wire \hold_reg1_reg[16] ;
  wire \hold_reg1_reg[17] ;
  wire \hold_reg1_reg[18] ;
  wire \hold_reg1_reg[19] ;
  wire \hold_reg1_reg[20] ;
  wire \hold_reg1_reg[21] ;
  wire \hold_reg1_reg[22] ;
  wire \hold_reg1_reg[23] ;
  wire \hold_reg1_reg[24] ;
  wire \hold_reg1_reg[26] ;
  wire \hold_reg1_reg[27] ;
  wire \hold_reg1_reg[28] ;
  wire \hold_reg1_reg[29] ;
  wire \hold_reg1_reg[30] ;
  wire \hold_reg1_reg[31] ;
  wire \hold_reg1_reg[31]_0 ;
  wire \hold_reg1_reg[31]_1 ;
  wire \hold_reg1_reg[6] ;
  wire \hold_reg1_reg[6]_0 ;
  wire irack;
  wire itcm_sel;
  wire itcm_sel_i_6_0;
  wire itcm_sel_i_6_n_0;
  wire itcm_sel_reg_0;
  wire itcm_sel_reg_1;
  wire load_fptr;
  wire load_xpsr_ex;
  wire load_xpsr_ex_reg;
  wire ls_byte_ex;
  wire ls_half_ex;
  wire \mem_held_addr_reg[19]_i_1 ;
  wire \mem_held_addr_reg[1] ;
  wire \mem_held_addr_reg[1]_0 ;
  wire \mem_held_addr_reg[1]_1 ;
  wire \mem_held_addr_reg[31]_i_1 ;
  wire nxt_drack;
  wire nxt_dtcm_sel;
  wire nxt_dwack;
  wire nxt_irack;
  wire nxt_itcm_sel;
  wire primask_i_15_n_0;
  wire primask_i_16_n_0;
  wire rd_mux_a_ex;
  wire rd_mux_a_ex_reg;
  wire rd_mux_a_ex_reg_0;
  wire rd_mux_a_ex_reg_1;
  wire rd_mux_a_ex_reg_10;
  wire rd_mux_a_ex_reg_11;
  wire rd_mux_a_ex_reg_12;
  wire rd_mux_a_ex_reg_13;
  wire rd_mux_a_ex_reg_14;
  wire rd_mux_a_ex_reg_15;
  wire rd_mux_a_ex_reg_16;
  wire rd_mux_a_ex_reg_17;
  wire rd_mux_a_ex_reg_18;
  wire rd_mux_a_ex_reg_19;
  wire rd_mux_a_ex_reg_2;
  wire rd_mux_a_ex_reg_20;
  wire rd_mux_a_ex_reg_21;
  wire rd_mux_a_ex_reg_22;
  wire rd_mux_a_ex_reg_23;
  wire rd_mux_a_ex_reg_24;
  wire rd_mux_a_ex_reg_25;
  wire rd_mux_a_ex_reg_26;
  wire rd_mux_a_ex_reg_27;
  wire rd_mux_a_ex_reg_28;
  wire rd_mux_a_ex_reg_29;
  wire rd_mux_a_ex_reg_3;
  wire rd_mux_a_ex_reg_30;
  wire rd_mux_a_ex_reg_31;
  wire rd_mux_a_ex_reg_4;
  wire rd_mux_a_ex_reg_5;
  wire rd_mux_a_ex_reg_6;
  wire rd_mux_a_ex_reg_7;
  wire rd_mux_a_ex_reg_8;
  wire rd_mux_a_ex_reg_9;
  wire se_half_wb;
  wire [22:0]se_half_wb_reg;
  wire w_u_fault;
  wire w_u_fault_reg_0;

  LUT5 #(
    .INIT(32'h54FF5454)) 
    biu_commit_reg_i_1
       (.I0(biu_commit_reg_i_2_n_0),
        .I1(biu_commit_reg_reg),
        .I2(biu_commit_reg_reg_0),
        .I3(biu_commit_reg_reg_1),
        .I4(biu_commit_reg_reg_2),
        .O(biu_commit));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF0047)) 
    biu_commit_reg_i_2
       (.I0(biu_commit_reg_reg_3),
        .I1(biu_commit_reg_reg_4),
        .I2(biu_commit_reg_reg_5),
        .I3(biu_dreq),
        .I4(biu_addr_mux_ctl_ex),
        .I5(w_u_fault),
        .O(biu_commit_reg_i_2_n_0));
  LUT6 #(
    .INIT(64'hAAACA0AFAAACA0A0)) 
    \dp_ipsr_1to0[1]_i_10 
       (.I0(doutA[25]),
        .I1(\hold_reg1[7]_i_7_0 [25]),
        .I2(itcm_sel),
        .I3(rd_mux_a_ex),
        .I4(dtcm_sel),
        .I5(\hold_reg1[7]_i_7_1 [25]),
        .O(\genblk3[1].ram_block_reg_3_0 ));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT4 #(
    .INIT(16'h0200)) 
    \dp_ipsr_1to0[1]_i_12 
       (.I0(D[1]),
        .I1(itcm_sel),
        .I2(dtcm_sel),
        .I3(rd_mux_a_ex),
        .O(\dp_ipsr_1to0[1]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hAAACA0AFAAACA0A0)) 
    \dp_ipsr_1to0[1]_i_13 
       (.I0(doutA[1]),
        .I1(\hold_reg1[7]_i_7_0 [1]),
        .I2(itcm_sel),
        .I3(rd_mux_a_ex),
        .I4(dtcm_sel),
        .I5(\hold_reg1[7]_i_7_1 [1]),
        .O(\dp_ipsr_1to0[1]_i_13_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT4 #(
    .INIT(16'h0200)) 
    \dp_ipsr_1to0[1]_i_15 
       (.I0(D[17]),
        .I1(itcm_sel),
        .I2(dtcm_sel),
        .I3(rd_mux_a_ex),
        .O(\dp_ipsr_1to0[1]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hAAACA0AFAAACA0A0)) 
    \dp_ipsr_1to0[1]_i_16 
       (.I0(doutA[17]),
        .I1(\hold_reg1[7]_i_7_0 [17]),
        .I2(itcm_sel),
        .I3(rd_mux_a_ex),
        .I4(dtcm_sel),
        .I5(\hold_reg1[7]_i_7_1 [17]),
        .O(\dp_ipsr_1to0[1]_i_16_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT4 #(
    .INIT(16'h0200)) 
    \dp_ipsr_1to0[1]_i_18 
       (.I0(D[9]),
        .I1(itcm_sel),
        .I2(dtcm_sel),
        .I3(rd_mux_a_ex),
        .O(\dp_ipsr_1to0[1]_i_18_n_0 ));
  LUT6 #(
    .INIT(64'hCCCAC0CFCCCAC0C0)) 
    \dp_ipsr_1to0[1]_i_19 
       (.I0(\hold_reg1[7]_i_7_0 [9]),
        .I1(doutA[9]),
        .I2(itcm_sel),
        .I3(rd_mux_a_ex),
        .I4(dtcm_sel),
        .I5(\hold_reg1[7]_i_7_1 [9]),
        .O(\dp_ipsr_1to0[1]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'h8880AAAA88808880)) 
    \dp_ipsr_1to0[1]_i_3 
       (.I0(load_xpsr_ex),
        .I1(drack),
        .I2(dtcm_sel),
        .I3(itcm_sel),
        .I4(biu_rfault),
        .I5(biu_drack),
        .O(load_xpsr_ex_reg));
  LUT6 #(
    .INIT(64'h54FF54FF54FF5454)) 
    \dp_ipsr_1to0[1]_i_5 
       (.I0(\dp_ipsr_1to0_reg[1] ),
        .I1(\dp_ipsr_1to0[1]_i_9_n_0 ),
        .I2(\genblk3[1].ram_block_reg_3_0 ),
        .I3(\dp_ipsr_1to0_reg[1]_0 ),
        .I4(\dp_ipsr_1to0[1]_i_12_n_0 ),
        .I5(\dp_ipsr_1to0[1]_i_13_n_0 ),
        .O(\mem_held_addr_reg[1]_0 ));
  LUT6 #(
    .INIT(64'h54FF54FF54FF5454)) 
    \dp_ipsr_1to0[1]_i_6 
       (.I0(\dp_ipsr_1to0_reg[1]_2 ),
        .I1(\dp_ipsr_1to0[1]_i_15_n_0 ),
        .I2(\dp_ipsr_1to0[1]_i_16_n_0 ),
        .I3(\dp_ipsr_1to0_reg[1]_1 ),
        .I4(\dp_ipsr_1to0[1]_i_18_n_0 ),
        .I5(\dp_ipsr_1to0[1]_i_19_n_0 ),
        .O(\mem_held_addr_reg[1]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT4 #(
    .INIT(16'h0200)) 
    \dp_ipsr_1to0[1]_i_9 
       (.I0(D[25]),
        .I1(itcm_sel),
        .I2(dtcm_sel),
        .I3(rd_mux_a_ex),
        .O(\dp_ipsr_1to0[1]_i_9_n_0 ));
  FDCE drack_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(dwack_reg_0),
        .D(nxt_drack),
        .Q(drack));
  FDCE dtcm_sel_reg
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(dwack_reg_0),
        .D(nxt_dtcm_sel),
        .Q(dtcm_sel));
  FDCE dwack_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(dwack_reg_0),
        .D(nxt_dwack),
        .Q(dwack));
  LUT6 #(
    .INIT(64'hACAFAFAFACA0A0A0)) 
    fptr_align_i_1
       (.I0(load_fptr),
        .I1(D[2]),
        .I2(load_xpsr_ex_reg),
        .I3(biu_rdy),
        .I4(fptr_align_reg_0),
        .I5(fptr_align),
        .O(fptr_align_reg));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT5 #(
    .INIT(32'hFFFF0200)) 
    fptr_align_i_2
       (.I0(rd_mux_a_ex),
        .I1(dtcm_sel),
        .I2(itcm_sel),
        .I3(D[9]),
        .I4(\dp_ipsr_1to0[1]_i_19_n_0 ),
        .O(load_fptr));
  LUT6 #(
    .INIT(64'h5357000000000000)) 
    \genblk3[1].ram_block_reg_0_0_i_18 
       (.I0(\genblk3[1].ram_block_reg_3_1 ),
        .I1(ls_byte_ex),
        .I2(ls_half_ex),
        .I3(\genblk3[1].ram_block_reg_3_1_0 ),
        .I4(dtcm_sel),
        .I5(dwack),
        .O(DTCMBYTEWR[0]));
  LUT6 #(
    .INIT(64'h0808008808080888)) 
    \genblk3[1].ram_block_reg_0_0_i_1__0 
       (.I0(dwack),
        .I1(itcm_sel),
        .I2(\genblk3[1].ram_block_reg_3_1 ),
        .I3(ls_byte_ex),
        .I4(ls_half_ex),
        .I5(\genblk3[1].ram_block_reg_3_1_0 ),
        .O(ITCMBYTEWR[0]));
  LUT6 #(
    .INIT(64'h0808088808080088)) 
    \genblk3[1].ram_block_reg_1_0_i_1 
       (.I0(dwack),
        .I1(itcm_sel),
        .I2(\genblk3[1].ram_block_reg_3_1 ),
        .I3(ls_byte_ex),
        .I4(ls_half_ex),
        .I5(\genblk3[1].ram_block_reg_3_1_0 ),
        .O(ITCMBYTEWR[1]));
  LUT6 #(
    .INIT(64'h5753000000000000)) 
    \genblk3[1].ram_block_reg_1_0_i_5 
       (.I0(\genblk3[1].ram_block_reg_3_1 ),
        .I1(ls_byte_ex),
        .I2(ls_half_ex),
        .I3(\genblk3[1].ram_block_reg_3_1_0 ),
        .I4(dtcm_sel),
        .I5(dwack),
        .O(DTCMBYTEWR[1]));
  LUT6 #(
    .INIT(64'h8888088800000088)) 
    \genblk3[1].ram_block_reg_2_0_i_1__0 
       (.I0(dwack),
        .I1(itcm_sel),
        .I2(\genblk3[1].ram_block_reg_3_1_0 ),
        .I3(ls_byte_ex),
        .I4(ls_half_ex),
        .I5(\genblk3[1].ram_block_reg_3_1 ),
        .O(ITCMBYTEWR[2]));
  LUT6 #(
    .INIT(64'hF703000000000000)) 
    \genblk3[1].ram_block_reg_2_0_i_5 
       (.I0(\genblk3[1].ram_block_reg_3_1_0 ),
        .I1(ls_byte_ex),
        .I2(ls_half_ex),
        .I3(\genblk3[1].ram_block_reg_3_1 ),
        .I4(dtcm_sel),
        .I5(dwack),
        .O(DTCMBYTEWR[2]));
  LUT6 #(
    .INIT(64'h8888808800000088)) 
    \genblk3[1].ram_block_reg_3_0_i_1__0 
       (.I0(dwack),
        .I1(itcm_sel),
        .I2(\genblk3[1].ram_block_reg_3_1_0 ),
        .I3(ls_byte_ex),
        .I4(ls_half_ex),
        .I5(\genblk3[1].ram_block_reg_3_1 ),
        .O(ITCMBYTEWR[3]));
  LUT6 #(
    .INIT(64'hFB03000000000000)) 
    \genblk3[1].ram_block_reg_3_0_i_5 
       (.I0(\genblk3[1].ram_block_reg_3_1_0 ),
        .I1(ls_byte_ex),
        .I2(ls_half_ex),
        .I3(\genblk3[1].ram_block_reg_3_1 ),
        .I4(dtcm_sel),
        .I5(dwack),
        .O(DTCMBYTEWR[3]));
  LUT6 #(
    .INIT(64'h0F5533000F5533FF)) 
    \hold_reg1[0]_i_1 
       (.I0(rd_mux_a_ex_reg_4),
        .I1(rd_mux_a_ex_reg_5),
        .I2(rd_mux_a_ex_reg_6),
        .I3(\hold_reg1_reg[6] ),
        .I4(\hold_reg1_reg[6]_0 ),
        .I5(rd_mux_a_ex_reg_7),
        .O(se_half_wb_reg[0]));
  LUT5 #(
    .INIT(32'h0000FFF7)) 
    \hold_reg1[0]_i_2 
       (.I0(D[8]),
        .I1(rd_mux_a_ex),
        .I2(dtcm_sel),
        .I3(itcm_sel),
        .I4(\hold_reg1[0]_i_6_n_0 ),
        .O(rd_mux_a_ex_reg_4));
  LUT5 #(
    .INIT(32'h0000FDFF)) 
    \hold_reg1[0]_i_3 
       (.I0(rd_mux_a_ex),
        .I1(dtcm_sel),
        .I2(itcm_sel),
        .I3(D[16]),
        .I4(\hold_reg1[0]_i_7_n_0 ),
        .O(rd_mux_a_ex_reg_5));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT5 #(
    .INIT(32'h0000FDFF)) 
    \hold_reg1[0]_i_4 
       (.I0(rd_mux_a_ex),
        .I1(dtcm_sel),
        .I2(itcm_sel),
        .I3(D[0]),
        .I4(\hold_reg1[0]_i_8_n_0 ),
        .O(rd_mux_a_ex_reg_6));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT5 #(
    .INIT(32'h0000FDFF)) 
    \hold_reg1[0]_i_5 
       (.I0(rd_mux_a_ex),
        .I1(dtcm_sel),
        .I2(itcm_sel),
        .I3(D[24]),
        .I4(\hold_reg1[0]_i_9_n_0 ),
        .O(rd_mux_a_ex_reg_7));
  LUT6 #(
    .INIT(64'hCCCAC0CFCCCAC0C0)) 
    \hold_reg1[0]_i_6 
       (.I0(\hold_reg1[7]_i_7_0 [8]),
        .I1(doutA[8]),
        .I2(itcm_sel),
        .I3(rd_mux_a_ex),
        .I4(dtcm_sel),
        .I5(\hold_reg1[7]_i_7_1 [8]),
        .O(\hold_reg1[0]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hCCCAC0CFCCCAC0C0)) 
    \hold_reg1[0]_i_7 
       (.I0(\hold_reg1[7]_i_7_0 [16]),
        .I1(doutA[16]),
        .I2(itcm_sel),
        .I3(rd_mux_a_ex),
        .I4(dtcm_sel),
        .I5(\hold_reg1[7]_i_7_1 [16]),
        .O(\hold_reg1[0]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hCCCAC0CFCCCAC0C0)) 
    \hold_reg1[0]_i_8 
       (.I0(\hold_reg1[7]_i_7_0 [0]),
        .I1(doutA[0]),
        .I2(itcm_sel),
        .I3(rd_mux_a_ex),
        .I4(dtcm_sel),
        .I5(\hold_reg1[7]_i_7_1 [0]),
        .O(\hold_reg1[0]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hCCCAC0CFCCCAC0C0)) 
    \hold_reg1[0]_i_9 
       (.I0(\hold_reg1[7]_i_7_0 [24]),
        .I1(doutA[24]),
        .I2(itcm_sel),
        .I3(rd_mux_a_ex),
        .I4(dtcm_sel),
        .I5(\hold_reg1[7]_i_7_1 [24]),
        .O(\hold_reg1[0]_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT3 #(
    .INIT(8'hF4)) 
    \hold_reg1[16]_i_1 
       (.I0(rd_mux_a_ex_reg_3),
        .I1(se_half_wb),
        .I2(\hold_reg1_reg[16] ),
        .O(se_half_wb_reg[8]));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT3 #(
    .INIT(8'hF4)) 
    \hold_reg1[17]_i_1 
       (.I0(rd_mux_a_ex_reg_3),
        .I1(se_half_wb),
        .I2(\hold_reg1_reg[17] ),
        .O(se_half_wb_reg[9]));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT3 #(
    .INIT(8'hF4)) 
    \hold_reg1[18]_i_1 
       (.I0(rd_mux_a_ex_reg_3),
        .I1(se_half_wb),
        .I2(\hold_reg1_reg[18] ),
        .O(se_half_wb_reg[10]));
  (* SOFT_HLUTNM = "soft_lutpair208" *) 
  LUT3 #(
    .INIT(8'hF4)) 
    \hold_reg1[19]_i_1 
       (.I0(rd_mux_a_ex_reg_3),
        .I1(se_half_wb),
        .I2(\hold_reg1_reg[19] ),
        .O(se_half_wb_reg[11]));
  LUT6 #(
    .INIT(64'h0FAA33000FAA33FF)) 
    \hold_reg1[1]_i_1 
       (.I0(load_fptr),
        .I1(rd_mux_a_ex_reg_8),
        .I2(rd_mux_a_ex_reg_9),
        .I3(\hold_reg1_reg[6] ),
        .I4(\hold_reg1_reg[6]_0 ),
        .I5(rd_mux_a_ex_reg_10),
        .O(se_half_wb_reg[1]));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT5 #(
    .INIT(32'h0000FDFF)) 
    \hold_reg1[1]_i_2 
       (.I0(rd_mux_a_ex),
        .I1(dtcm_sel),
        .I2(itcm_sel),
        .I3(D[17]),
        .I4(\dp_ipsr_1to0[1]_i_16_n_0 ),
        .O(rd_mux_a_ex_reg_8));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT5 #(
    .INIT(32'h0000FDFF)) 
    \hold_reg1[1]_i_3 
       (.I0(rd_mux_a_ex),
        .I1(dtcm_sel),
        .I2(itcm_sel),
        .I3(D[1]),
        .I4(\dp_ipsr_1to0[1]_i_13_n_0 ),
        .O(rd_mux_a_ex_reg_9));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT5 #(
    .INIT(32'h0000FDFF)) 
    \hold_reg1[1]_i_4 
       (.I0(rd_mux_a_ex),
        .I1(dtcm_sel),
        .I2(itcm_sel),
        .I3(D[25]),
        .I4(\genblk3[1].ram_block_reg_3_0 ),
        .O(rd_mux_a_ex_reg_10));
  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT3 #(
    .INIT(8'hF4)) 
    \hold_reg1[20]_i_1 
       (.I0(rd_mux_a_ex_reg_3),
        .I1(se_half_wb),
        .I2(\hold_reg1_reg[20] ),
        .O(se_half_wb_reg[12]));
  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT3 #(
    .INIT(8'hF4)) 
    \hold_reg1[21]_i_1 
       (.I0(rd_mux_a_ex_reg_3),
        .I1(se_half_wb),
        .I2(\hold_reg1_reg[21] ),
        .O(se_half_wb_reg[13]));
  (* SOFT_HLUTNM = "soft_lutpair208" *) 
  LUT3 #(
    .INIT(8'hF4)) 
    \hold_reg1[22]_i_1 
       (.I0(rd_mux_a_ex_reg_3),
        .I1(se_half_wb),
        .I2(\hold_reg1_reg[22] ),
        .O(se_half_wb_reg[14]));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT3 #(
    .INIT(8'hF4)) 
    \hold_reg1[23]_i_1 
       (.I0(rd_mux_a_ex_reg_3),
        .I1(se_half_wb),
        .I2(\hold_reg1_reg[23] ),
        .O(se_half_wb_reg[15]));
  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT3 #(
    .INIT(8'hF4)) 
    \hold_reg1[24]_i_1 
       (.I0(rd_mux_a_ex_reg_3),
        .I1(se_half_wb),
        .I2(\hold_reg1_reg[24] ),
        .O(se_half_wb_reg[16]));
  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT3 #(
    .INIT(8'hF4)) 
    \hold_reg1[26]_i_1 
       (.I0(rd_mux_a_ex_reg_3),
        .I1(se_half_wb),
        .I2(\hold_reg1_reg[26] ),
        .O(se_half_wb_reg[17]));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT3 #(
    .INIT(8'hF4)) 
    \hold_reg1[27]_i_1 
       (.I0(rd_mux_a_ex_reg_3),
        .I1(se_half_wb),
        .I2(\hold_reg1_reg[27] ),
        .O(se_half_wb_reg[18]));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT3 #(
    .INIT(8'hF4)) 
    \hold_reg1[28]_i_1 
       (.I0(rd_mux_a_ex_reg_3),
        .I1(se_half_wb),
        .I2(\hold_reg1_reg[28] ),
        .O(se_half_wb_reg[19]));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT3 #(
    .INIT(8'hF4)) 
    \hold_reg1[29]_i_1 
       (.I0(rd_mux_a_ex_reg_3),
        .I1(se_half_wb),
        .I2(\hold_reg1_reg[29] ),
        .O(se_half_wb_reg[20]));
  LUT6 #(
    .INIT(64'h0F5533000F5533FF)) 
    \hold_reg1[2]_i_1 
       (.I0(rd_mux_a_ex_reg_11),
        .I1(rd_mux_a_ex_reg_12),
        .I2(rd_mux_a_ex_reg_13),
        .I3(\hold_reg1_reg[6] ),
        .I4(\hold_reg1_reg[6]_0 ),
        .I5(rd_mux_a_ex_reg_14),
        .O(se_half_wb_reg[2]));
  LUT5 #(
    .INIT(32'h0000FDFF)) 
    \hold_reg1[2]_i_2 
       (.I0(rd_mux_a_ex),
        .I1(dtcm_sel),
        .I2(itcm_sel),
        .I3(D[10]),
        .I4(\hold_reg1[2]_i_6_n_0 ),
        .O(rd_mux_a_ex_reg_11));
  LUT5 #(
    .INIT(32'h0000FDFF)) 
    \hold_reg1[2]_i_3 
       (.I0(rd_mux_a_ex),
        .I1(dtcm_sel),
        .I2(itcm_sel),
        .I3(D[18]),
        .I4(\hold_reg1[2]_i_7_n_0 ),
        .O(rd_mux_a_ex_reg_12));
  LUT5 #(
    .INIT(32'h0000FDFF)) 
    \hold_reg1[2]_i_4 
       (.I0(rd_mux_a_ex),
        .I1(dtcm_sel),
        .I2(itcm_sel),
        .I3(D[2]),
        .I4(\hold_reg1[2]_i_8_n_0 ),
        .O(rd_mux_a_ex_reg_13));
  LUT5 #(
    .INIT(32'h0000FDFF)) 
    \hold_reg1[2]_i_5 
       (.I0(rd_mux_a_ex),
        .I1(dtcm_sel),
        .I2(itcm_sel),
        .I3(D[26]),
        .I4(\hold_reg1[2]_i_9_n_0 ),
        .O(rd_mux_a_ex_reg_14));
  LUT6 #(
    .INIT(64'hCCCAC0CFCCCAC0C0)) 
    \hold_reg1[2]_i_6 
       (.I0(\hold_reg1[7]_i_7_0 [10]),
        .I1(doutA[10]),
        .I2(itcm_sel),
        .I3(rd_mux_a_ex),
        .I4(dtcm_sel),
        .I5(\hold_reg1[7]_i_7_1 [10]),
        .O(\hold_reg1[2]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hCCCAC0CFCCCAC0C0)) 
    \hold_reg1[2]_i_7 
       (.I0(\hold_reg1[7]_i_7_0 [18]),
        .I1(doutA[18]),
        .I2(itcm_sel),
        .I3(rd_mux_a_ex),
        .I4(dtcm_sel),
        .I5(\hold_reg1[7]_i_7_1 [18]),
        .O(\hold_reg1[2]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hCCCAC0CFCCCAC0C0)) 
    \hold_reg1[2]_i_8 
       (.I0(\hold_reg1[7]_i_7_0 [2]),
        .I1(doutA[2]),
        .I2(itcm_sel),
        .I3(rd_mux_a_ex),
        .I4(dtcm_sel),
        .I5(\hold_reg1[7]_i_7_1 [2]),
        .O(\hold_reg1[2]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hCCCAC0CFCCCAC0C0)) 
    \hold_reg1[2]_i_9 
       (.I0(\hold_reg1[7]_i_7_0 [26]),
        .I1(doutA[26]),
        .I2(itcm_sel),
        .I3(rd_mux_a_ex),
        .I4(dtcm_sel),
        .I5(\hold_reg1[7]_i_7_1 [26]),
        .O(\hold_reg1[2]_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT3 #(
    .INIT(8'hF4)) 
    \hold_reg1[30]_i_1 
       (.I0(rd_mux_a_ex_reg_3),
        .I1(se_half_wb),
        .I2(\hold_reg1_reg[30] ),
        .O(se_half_wb_reg[21]));
  LUT3 #(
    .INIT(8'hF4)) 
    \hold_reg1[31]_i_2 
       (.I0(rd_mux_a_ex_reg_3),
        .I1(se_half_wb),
        .I2(\hold_reg1_reg[31] ),
        .O(se_half_wb_reg[22]));
  LUT6 #(
    .INIT(64'hAFCFAFC0A0CFA0C0)) 
    \hold_reg1[31]_i_3 
       (.I0(rd_mux_a_ex_reg_0),
        .I1(rd_mux_a_ex_reg_2),
        .I2(\hold_reg1_reg[31]_0 ),
        .I3(\hold_reg1_reg[31]_1 ),
        .I4(rd_mux_a_ex_reg),
        .I5(rd_mux_a_ex_reg_1),
        .O(rd_mux_a_ex_reg_3));
  LUT6 #(
    .INIT(64'h0F5533000F5533FF)) 
    \hold_reg1[3]_i_1 
       (.I0(rd_mux_a_ex_reg_15),
        .I1(rd_mux_a_ex_reg_16),
        .I2(rd_mux_a_ex_reg_17),
        .I3(\hold_reg1_reg[6] ),
        .I4(\hold_reg1_reg[6]_0 ),
        .I5(rd_mux_a_ex_reg_18),
        .O(se_half_wb_reg[3]));
  LUT5 #(
    .INIT(32'h0000FDFF)) 
    \hold_reg1[3]_i_2 
       (.I0(rd_mux_a_ex),
        .I1(dtcm_sel),
        .I2(itcm_sel),
        .I3(D[11]),
        .I4(\hold_reg1[3]_i_6_n_0 ),
        .O(rd_mux_a_ex_reg_15));
  LUT5 #(
    .INIT(32'h0000FDFF)) 
    \hold_reg1[3]_i_3 
       (.I0(rd_mux_a_ex),
        .I1(dtcm_sel),
        .I2(itcm_sel),
        .I3(D[19]),
        .I4(\hold_reg1[3]_i_7_n_0 ),
        .O(rd_mux_a_ex_reg_16));
  LUT5 #(
    .INIT(32'h0000FDFF)) 
    \hold_reg1[3]_i_4 
       (.I0(rd_mux_a_ex),
        .I1(dtcm_sel),
        .I2(itcm_sel),
        .I3(D[3]),
        .I4(\hold_reg1[3]_i_8_n_0 ),
        .O(rd_mux_a_ex_reg_17));
  LUT5 #(
    .INIT(32'h0000FDFF)) 
    \hold_reg1[3]_i_5 
       (.I0(rd_mux_a_ex),
        .I1(dtcm_sel),
        .I2(itcm_sel),
        .I3(D[27]),
        .I4(\hold_reg1[3]_i_9_n_0 ),
        .O(rd_mux_a_ex_reg_18));
  LUT6 #(
    .INIT(64'hCCCAC0CFCCCAC0C0)) 
    \hold_reg1[3]_i_6 
       (.I0(\hold_reg1[7]_i_7_0 [11]),
        .I1(doutA[11]),
        .I2(itcm_sel),
        .I3(rd_mux_a_ex),
        .I4(dtcm_sel),
        .I5(\hold_reg1[7]_i_7_1 [11]),
        .O(\hold_reg1[3]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAAACA0AFAAACA0A0)) 
    \hold_reg1[3]_i_7 
       (.I0(doutA[19]),
        .I1(\hold_reg1[7]_i_7_0 [19]),
        .I2(itcm_sel),
        .I3(rd_mux_a_ex),
        .I4(dtcm_sel),
        .I5(\hold_reg1[7]_i_7_1 [19]),
        .O(\hold_reg1[3]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAAACA0AFAAACA0A0)) 
    \hold_reg1[3]_i_8 
       (.I0(doutA[3]),
        .I1(\hold_reg1[7]_i_7_0 [3]),
        .I2(itcm_sel),
        .I3(rd_mux_a_ex),
        .I4(dtcm_sel),
        .I5(\hold_reg1[7]_i_7_1 [3]),
        .O(\hold_reg1[3]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAAACA0AFAAACA0A0)) 
    \hold_reg1[3]_i_9 
       (.I0(doutA[27]),
        .I1(\hold_reg1[7]_i_7_0 [27]),
        .I2(itcm_sel),
        .I3(rd_mux_a_ex),
        .I4(dtcm_sel),
        .I5(\hold_reg1[7]_i_7_1 [27]),
        .O(\hold_reg1[3]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h0F5533000F5533FF)) 
    \hold_reg1[4]_i_1 
       (.I0(rd_mux_a_ex_reg_19),
        .I1(rd_mux_a_ex_reg_20),
        .I2(rd_mux_a_ex_reg_21),
        .I3(\hold_reg1_reg[6] ),
        .I4(\hold_reg1_reg[6]_0 ),
        .I5(rd_mux_a_ex_reg_22),
        .O(se_half_wb_reg[4]));
  LUT5 #(
    .INIT(32'h0000FDFF)) 
    \hold_reg1[4]_i_2 
       (.I0(rd_mux_a_ex),
        .I1(dtcm_sel),
        .I2(itcm_sel),
        .I3(D[12]),
        .I4(\hold_reg1[4]_i_6_n_0 ),
        .O(rd_mux_a_ex_reg_19));
  LUT5 #(
    .INIT(32'h0000FDFF)) 
    \hold_reg1[4]_i_3 
       (.I0(rd_mux_a_ex),
        .I1(dtcm_sel),
        .I2(itcm_sel),
        .I3(D[20]),
        .I4(\hold_reg1[4]_i_7_n_0 ),
        .O(rd_mux_a_ex_reg_20));
  LUT5 #(
    .INIT(32'h0000FDFF)) 
    \hold_reg1[4]_i_4 
       (.I0(rd_mux_a_ex),
        .I1(dtcm_sel),
        .I2(itcm_sel),
        .I3(D[4]),
        .I4(\hold_reg1[4]_i_8_n_0 ),
        .O(rd_mux_a_ex_reg_21));
  LUT5 #(
    .INIT(32'h0000FDFF)) 
    \hold_reg1[4]_i_5 
       (.I0(rd_mux_a_ex),
        .I1(dtcm_sel),
        .I2(itcm_sel),
        .I3(D[28]),
        .I4(\hold_reg1[4]_i_9_n_0 ),
        .O(rd_mux_a_ex_reg_22));
  LUT6 #(
    .INIT(64'hCCCAC0CFCCCAC0C0)) 
    \hold_reg1[4]_i_6 
       (.I0(\hold_reg1[7]_i_7_0 [12]),
        .I1(doutA[12]),
        .I2(itcm_sel),
        .I3(rd_mux_a_ex),
        .I4(dtcm_sel),
        .I5(\hold_reg1[7]_i_7_1 [12]),
        .O(\hold_reg1[4]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hCCCAC0CFCCCAC0C0)) 
    \hold_reg1[4]_i_7 
       (.I0(\hold_reg1[7]_i_7_0 [20]),
        .I1(doutA[20]),
        .I2(itcm_sel),
        .I3(rd_mux_a_ex),
        .I4(dtcm_sel),
        .I5(\hold_reg1[7]_i_7_1 [20]),
        .O(\hold_reg1[4]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hCCCAC0CFCCCAC0C0)) 
    \hold_reg1[4]_i_8 
       (.I0(\hold_reg1[7]_i_7_0 [4]),
        .I1(doutA[4]),
        .I2(itcm_sel),
        .I3(rd_mux_a_ex),
        .I4(dtcm_sel),
        .I5(\hold_reg1[7]_i_7_1 [4]),
        .O(\hold_reg1[4]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hCCCAC0CFCCCAC0C0)) 
    \hold_reg1[4]_i_9 
       (.I0(\hold_reg1[7]_i_7_0 [28]),
        .I1(doutA[28]),
        .I2(itcm_sel),
        .I3(rd_mux_a_ex),
        .I4(dtcm_sel),
        .I5(\hold_reg1[7]_i_7_1 [28]),
        .O(\hold_reg1[4]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h0F5533000F5533FF)) 
    \hold_reg1[5]_i_1 
       (.I0(rd_mux_a_ex_reg_23),
        .I1(rd_mux_a_ex_reg_24),
        .I2(rd_mux_a_ex_reg_25),
        .I3(\hold_reg1_reg[6] ),
        .I4(\hold_reg1_reg[6]_0 ),
        .I5(rd_mux_a_ex_reg_26),
        .O(se_half_wb_reg[5]));
  LUT5 #(
    .INIT(32'h0000FFF7)) 
    \hold_reg1[5]_i_2 
       (.I0(D[13]),
        .I1(rd_mux_a_ex),
        .I2(dtcm_sel),
        .I3(itcm_sel),
        .I4(\hold_reg1[5]_i_6_n_0 ),
        .O(rd_mux_a_ex_reg_23));
  LUT5 #(
    .INIT(32'h0000FDFF)) 
    \hold_reg1[5]_i_3 
       (.I0(rd_mux_a_ex),
        .I1(dtcm_sel),
        .I2(itcm_sel),
        .I3(D[21]),
        .I4(\hold_reg1[5]_i_7_n_0 ),
        .O(rd_mux_a_ex_reg_24));
  LUT5 #(
    .INIT(32'h0000FDFF)) 
    \hold_reg1[5]_i_4 
       (.I0(rd_mux_a_ex),
        .I1(dtcm_sel),
        .I2(itcm_sel),
        .I3(D[5]),
        .I4(\hold_reg1[5]_i_8_n_0 ),
        .O(rd_mux_a_ex_reg_25));
  LUT5 #(
    .INIT(32'h0000FDFF)) 
    \hold_reg1[5]_i_5 
       (.I0(rd_mux_a_ex),
        .I1(dtcm_sel),
        .I2(itcm_sel),
        .I3(D[29]),
        .I4(\hold_reg1[5]_i_9_n_0 ),
        .O(rd_mux_a_ex_reg_26));
  LUT6 #(
    .INIT(64'hAAACA0AFAAACA0A0)) 
    \hold_reg1[5]_i_6 
       (.I0(doutA[13]),
        .I1(\hold_reg1[7]_i_7_0 [13]),
        .I2(itcm_sel),
        .I3(rd_mux_a_ex),
        .I4(dtcm_sel),
        .I5(\hold_reg1[7]_i_7_1 [13]),
        .O(\hold_reg1[5]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hCCCAC0CFCCCAC0C0)) 
    \hold_reg1[5]_i_7 
       (.I0(\hold_reg1[7]_i_7_0 [21]),
        .I1(doutA[21]),
        .I2(itcm_sel),
        .I3(rd_mux_a_ex),
        .I4(dtcm_sel),
        .I5(\hold_reg1[7]_i_7_1 [21]),
        .O(\hold_reg1[5]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAAACA0AFAAACA0A0)) 
    \hold_reg1[5]_i_8 
       (.I0(doutA[5]),
        .I1(\hold_reg1[7]_i_7_0 [5]),
        .I2(itcm_sel),
        .I3(rd_mux_a_ex),
        .I4(dtcm_sel),
        .I5(\hold_reg1[7]_i_7_1 [5]),
        .O(\hold_reg1[5]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hCCCAC0CFCCCAC0C0)) 
    \hold_reg1[5]_i_9 
       (.I0(\hold_reg1[7]_i_7_0 [29]),
        .I1(doutA[29]),
        .I2(itcm_sel),
        .I3(rd_mux_a_ex),
        .I4(dtcm_sel),
        .I5(\hold_reg1[7]_i_7_1 [29]),
        .O(\hold_reg1[5]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h0F5533000F5533FF)) 
    \hold_reg1[6]_i_1 
       (.I0(rd_mux_a_ex_reg_27),
        .I1(rd_mux_a_ex_reg_28),
        .I2(rd_mux_a_ex_reg_29),
        .I3(\hold_reg1_reg[6] ),
        .I4(\hold_reg1_reg[6]_0 ),
        .I5(rd_mux_a_ex_reg_30),
        .O(se_half_wb_reg[6]));
  LUT5 #(
    .INIT(32'h0000FDFF)) 
    \hold_reg1[6]_i_2 
       (.I0(rd_mux_a_ex),
        .I1(dtcm_sel),
        .I2(itcm_sel),
        .I3(D[14]),
        .I4(\hold_reg1[6]_i_6_n_0 ),
        .O(rd_mux_a_ex_reg_27));
  LUT5 #(
    .INIT(32'h0000FDFF)) 
    \hold_reg1[6]_i_3 
       (.I0(rd_mux_a_ex),
        .I1(dtcm_sel),
        .I2(itcm_sel),
        .I3(D[22]),
        .I4(\hold_reg1[6]_i_7_n_0 ),
        .O(rd_mux_a_ex_reg_28));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT5 #(
    .INIT(32'h0000FDFF)) 
    \hold_reg1[6]_i_4 
       (.I0(rd_mux_a_ex),
        .I1(dtcm_sel),
        .I2(itcm_sel),
        .I3(D[6]),
        .I4(\hold_reg1[6]_i_8_n_0 ),
        .O(rd_mux_a_ex_reg_29));
  LUT5 #(
    .INIT(32'h0000FDFF)) 
    \hold_reg1[6]_i_5 
       (.I0(rd_mux_a_ex),
        .I1(dtcm_sel),
        .I2(itcm_sel),
        .I3(D[30]),
        .I4(\hold_reg1[6]_i_9_n_0 ),
        .O(rd_mux_a_ex_reg_30));
  LUT6 #(
    .INIT(64'hAAACA0AFAAACA0A0)) 
    \hold_reg1[6]_i_6 
       (.I0(doutA[14]),
        .I1(\hold_reg1[7]_i_7_0 [14]),
        .I2(itcm_sel),
        .I3(rd_mux_a_ex),
        .I4(dtcm_sel),
        .I5(\hold_reg1[7]_i_7_1 [14]),
        .O(\hold_reg1[6]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAAACA0AFAAACA0A0)) 
    \hold_reg1[6]_i_7 
       (.I0(doutA[22]),
        .I1(\hold_reg1[7]_i_7_0 [22]),
        .I2(itcm_sel),
        .I3(rd_mux_a_ex),
        .I4(dtcm_sel),
        .I5(\hold_reg1[7]_i_7_1 [22]),
        .O(\hold_reg1[6]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAAACA0AFAAACA0A0)) 
    \hold_reg1[6]_i_8 
       (.I0(doutA[6]),
        .I1(\hold_reg1[7]_i_7_0 [6]),
        .I2(itcm_sel),
        .I3(rd_mux_a_ex),
        .I4(dtcm_sel),
        .I5(\hold_reg1[7]_i_7_1 [6]),
        .O(\hold_reg1[6]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAAACA0AFAAACA0A0)) 
    \hold_reg1[6]_i_9 
       (.I0(doutA[30]),
        .I1(\hold_reg1[7]_i_7_0 [30]),
        .I2(itcm_sel),
        .I3(rd_mux_a_ex),
        .I4(dtcm_sel),
        .I5(\hold_reg1[7]_i_7_1 [30]),
        .O(\hold_reg1[6]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h0F5533000F5533FF)) 
    \hold_reg1[7]_i_1 
       (.I0(rd_mux_a_ex_reg),
        .I1(rd_mux_a_ex_reg_0),
        .I2(rd_mux_a_ex_reg_1),
        .I3(\hold_reg1_reg[6] ),
        .I4(\hold_reg1_reg[6]_0 ),
        .I5(rd_mux_a_ex_reg_2),
        .O(se_half_wb_reg[7]));
  LUT6 #(
    .INIT(64'hAAACA0AFAAACA0A0)) 
    \hold_reg1[7]_i_10 
       (.I0(doutA[7]),
        .I1(\hold_reg1[7]_i_7_0 [7]),
        .I2(itcm_sel),
        .I3(rd_mux_a_ex),
        .I4(dtcm_sel),
        .I5(\hold_reg1[7]_i_7_1 [7]),
        .O(\hold_reg1[7]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAAACA0AFAAACA0A0)) 
    \hold_reg1[7]_i_11 
       (.I0(doutA[31]),
        .I1(\hold_reg1[7]_i_7_0 [31]),
        .I2(itcm_sel),
        .I3(rd_mux_a_ex),
        .I4(dtcm_sel),
        .I5(\hold_reg1[7]_i_7_1 [31]),
        .O(\hold_reg1[7]_i_11_n_0 ));
  LUT5 #(
    .INIT(32'h0000FDFF)) 
    \hold_reg1[7]_i_2 
       (.I0(rd_mux_a_ex),
        .I1(dtcm_sel),
        .I2(itcm_sel),
        .I3(D[15]),
        .I4(\hold_reg1[7]_i_8_n_0 ),
        .O(rd_mux_a_ex_reg));
  LUT5 #(
    .INIT(32'h0000FDFF)) 
    \hold_reg1[7]_i_3 
       (.I0(rd_mux_a_ex),
        .I1(dtcm_sel),
        .I2(itcm_sel),
        .I3(D[23]),
        .I4(\hold_reg1[7]_i_9_n_0 ),
        .O(rd_mux_a_ex_reg_0));
  LUT5 #(
    .INIT(32'h0000FDFF)) 
    \hold_reg1[7]_i_4 
       (.I0(rd_mux_a_ex),
        .I1(dtcm_sel),
        .I2(itcm_sel),
        .I3(D[7]),
        .I4(\hold_reg1[7]_i_10_n_0 ),
        .O(rd_mux_a_ex_reg_1));
  LUT5 #(
    .INIT(32'h0000FDFF)) 
    \hold_reg1[7]_i_7 
       (.I0(rd_mux_a_ex),
        .I1(dtcm_sel),
        .I2(itcm_sel),
        .I3(D[31]),
        .I4(\hold_reg1[7]_i_11_n_0 ),
        .O(rd_mux_a_ex_reg_2));
  LUT6 #(
    .INIT(64'hAAACA0AFAAACA0A0)) 
    \hold_reg1[7]_i_8 
       (.I0(doutA[15]),
        .I1(\hold_reg1[7]_i_7_0 [15]),
        .I2(itcm_sel),
        .I3(rd_mux_a_ex),
        .I4(dtcm_sel),
        .I5(\hold_reg1[7]_i_7_1 [15]),
        .O(\hold_reg1[7]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAAACA0AFAAACA0A0)) 
    \hold_reg1[7]_i_9 
       (.I0(doutA[23]),
        .I1(\hold_reg1[7]_i_7_0 [23]),
        .I2(itcm_sel),
        .I3(rd_mux_a_ex),
        .I4(dtcm_sel),
        .I5(\hold_reg1[7]_i_7_1 [23]),
        .O(\hold_reg1[7]_i_9_n_0 ));
  FDCE irack_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(dwack_reg_0),
        .D(nxt_irack),
        .Q(irack));
  LUT3 #(
    .INIT(8'h01)) 
    itcm_sel_i_3
       (.I0(O[0]),
        .I1(O[1]),
        .I2(O[2]),
        .O(\mem_held_addr_reg[31]_i_1 ));
  LUT5 #(
    .INIT(32'h00000001)) 
    itcm_sel_i_4
       (.I0(biu_commit_reg_i_5[6]),
        .I1(biu_commit_reg_i_5[8]),
        .I2(biu_commit_reg_i_5[11]),
        .I3(biu_commit_reg_i_5[12]),
        .I4(itcm_sel_i_6_n_0),
        .O(itcm_sel_i_6_0));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    itcm_sel_i_5
       (.I0(biu_commit_reg_i_5[0]),
        .I1(biu_commit_reg_i_5[2]),
        .I2(biu_commit_reg_i_5[1]),
        .I3(biu_commit_reg_i_5[4]),
        .I4(biu_commit_reg_i_5[3]),
        .O(\mem_held_addr_reg[19]_i_1 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    itcm_sel_i_6
       (.I0(biu_commit_reg_i_5[9]),
        .I1(biu_commit_reg_i_5[5]),
        .I2(biu_commit_reg_i_5[10]),
        .I3(biu_commit_reg_i_5[7]),
        .O(itcm_sel_i_6_n_0));
  FDCE itcm_sel_reg
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(dwack_reg_0),
        .D(nxt_itcm_sel),
        .Q(itcm_sel));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT4 #(
    .INIT(16'h0200)) 
    primask_i_15
       (.I0(D[24]),
        .I1(itcm_sel),
        .I2(dtcm_sel),
        .I3(rd_mux_a_ex),
        .O(primask_i_15_n_0));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT4 #(
    .INIT(16'h0200)) 
    primask_i_16
       (.I0(D[0]),
        .I1(itcm_sel),
        .I2(dtcm_sel),
        .I3(rd_mux_a_ex),
        .O(primask_i_16_n_0));
  LUT6 #(
    .INIT(64'h54FF54FF54FF5454)) 
    primask_i_7
       (.I0(\dp_ipsr_1to0_reg[1] ),
        .I1(primask_i_15_n_0),
        .I2(\hold_reg1[0]_i_9_n_0 ),
        .I3(\dp_ipsr_1to0_reg[1]_0 ),
        .I4(primask_i_16_n_0),
        .I5(\hold_reg1[0]_i_8_n_0 ),
        .O(\mem_held_addr_reg[1] ));
  LUT6 #(
    .INIT(64'h00000000AAAEAAAA)) 
    primask_i_8
       (.I0(\hold_reg1[0]_i_7_n_0 ),
        .I1(D[16]),
        .I2(itcm_sel),
        .I3(dtcm_sel),
        .I4(rd_mux_a_ex),
        .I5(\dp_ipsr_1to0_reg[1]_2 ),
        .O(itcm_sel_reg_1));
  LUT6 #(
    .INIT(64'h00000000ABAAAAAA)) 
    primask_i_9
       (.I0(\hold_reg1[0]_i_6_n_0 ),
        .I1(itcm_sel),
        .I2(dtcm_sel),
        .I3(rd_mux_a_ex),
        .I4(D[8]),
        .I5(\dp_ipsr_1to0_reg[1]_1 ),
        .O(itcm_sel_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \reg_file_a[15][25]_i_7 
       (.I0(rd_mux_a_ex),
        .I1(dtcm_sel),
        .I2(itcm_sel),
        .O(rd_mux_a_ex_reg_31));
  FDCE w_u_fault_reg
       (.C(HCLK),
        .CE(biu_rdy),
        .CLR(dwack_reg_0),
        .D(w_u_fault_reg_0),
        .Q(w_u_fault));
endmodule

(* ORIG_REF_NAME = "cm1_multiplier" *) 
module design_1_CORTEXM1_AXI_0_1_cm1_multiplier
   (mult_out,
    \i_mult_out_reg[5]__1_0 ,
    \i_mult_out_reg[15]__1_0 ,
    HCLK,
    nxt_mult_out0_carry__2_0,
    \a_term_reg[31]_0 ,
    \b_term_reg[0]_0 ,
    b_reg_0);
  output [15:0]mult_out;
  output \i_mult_out_reg[5]__1_0 ;
  output [15:0]\i_mult_out_reg[15]__1_0 ;
  input HCLK;
  input nxt_mult_out0_carry__2_0;
  input [31:0]\a_term_reg[31]_0 ;
  input \b_term_reg[0]_0 ;
  input [31:0]b_reg_0;

  wire HCLK;
  wire [31:0]a_term;
  wire [31:0]\a_term_reg[31]_0 ;
  wire [31:0]b_reg_0;
  wire [31:0]b_term;
  wire \b_term_reg[0]_0 ;
  wire [15:0]\i_mult_out_reg[15]__1_0 ;
  wire \i_mult_out_reg[16]__1_n_0 ;
  wire \i_mult_out_reg[5]__1_0 ;
  wire [15:0]mult_out;
  wire nxt_mult_out0__0_n_100;
  wire nxt_mult_out0__0_n_101;
  wire nxt_mult_out0__0_n_102;
  wire nxt_mult_out0__0_n_103;
  wire nxt_mult_out0__0_n_104;
  wire nxt_mult_out0__0_n_105;
  wire nxt_mult_out0__0_n_106;
  wire nxt_mult_out0__0_n_107;
  wire nxt_mult_out0__0_n_108;
  wire nxt_mult_out0__0_n_109;
  wire nxt_mult_out0__0_n_110;
  wire nxt_mult_out0__0_n_111;
  wire nxt_mult_out0__0_n_112;
  wire nxt_mult_out0__0_n_113;
  wire nxt_mult_out0__0_n_114;
  wire nxt_mult_out0__0_n_115;
  wire nxt_mult_out0__0_n_116;
  wire nxt_mult_out0__0_n_117;
  wire nxt_mult_out0__0_n_118;
  wire nxt_mult_out0__0_n_119;
  wire nxt_mult_out0__0_n_120;
  wire nxt_mult_out0__0_n_121;
  wire nxt_mult_out0__0_n_122;
  wire nxt_mult_out0__0_n_123;
  wire nxt_mult_out0__0_n_124;
  wire nxt_mult_out0__0_n_125;
  wire nxt_mult_out0__0_n_126;
  wire nxt_mult_out0__0_n_127;
  wire nxt_mult_out0__0_n_128;
  wire nxt_mult_out0__0_n_129;
  wire nxt_mult_out0__0_n_130;
  wire nxt_mult_out0__0_n_131;
  wire nxt_mult_out0__0_n_132;
  wire nxt_mult_out0__0_n_133;
  wire nxt_mult_out0__0_n_134;
  wire nxt_mult_out0__0_n_135;
  wire nxt_mult_out0__0_n_136;
  wire nxt_mult_out0__0_n_137;
  wire nxt_mult_out0__0_n_138;
  wire nxt_mult_out0__0_n_139;
  wire nxt_mult_out0__0_n_140;
  wire nxt_mult_out0__0_n_141;
  wire nxt_mult_out0__0_n_142;
  wire nxt_mult_out0__0_n_143;
  wire nxt_mult_out0__0_n_144;
  wire nxt_mult_out0__0_n_145;
  wire nxt_mult_out0__0_n_146;
  wire nxt_mult_out0__0_n_147;
  wire nxt_mult_out0__0_n_148;
  wire nxt_mult_out0__0_n_149;
  wire nxt_mult_out0__0_n_150;
  wire nxt_mult_out0__0_n_151;
  wire nxt_mult_out0__0_n_152;
  wire nxt_mult_out0__0_n_153;
  wire nxt_mult_out0__0_n_24;
  wire nxt_mult_out0__0_n_25;
  wire nxt_mult_out0__0_n_26;
  wire nxt_mult_out0__0_n_27;
  wire nxt_mult_out0__0_n_28;
  wire nxt_mult_out0__0_n_29;
  wire nxt_mult_out0__0_n_30;
  wire nxt_mult_out0__0_n_31;
  wire nxt_mult_out0__0_n_32;
  wire nxt_mult_out0__0_n_33;
  wire nxt_mult_out0__0_n_34;
  wire nxt_mult_out0__0_n_35;
  wire nxt_mult_out0__0_n_36;
  wire nxt_mult_out0__0_n_37;
  wire nxt_mult_out0__0_n_38;
  wire nxt_mult_out0__0_n_39;
  wire nxt_mult_out0__0_n_40;
  wire nxt_mult_out0__0_n_41;
  wire nxt_mult_out0__0_n_42;
  wire nxt_mult_out0__0_n_43;
  wire nxt_mult_out0__0_n_44;
  wire nxt_mult_out0__0_n_45;
  wire nxt_mult_out0__0_n_46;
  wire nxt_mult_out0__0_n_47;
  wire nxt_mult_out0__0_n_48;
  wire nxt_mult_out0__0_n_49;
  wire nxt_mult_out0__0_n_50;
  wire nxt_mult_out0__0_n_51;
  wire nxt_mult_out0__0_n_52;
  wire nxt_mult_out0__0_n_53;
  wire nxt_mult_out0__0_n_58;
  wire nxt_mult_out0__0_n_59;
  wire nxt_mult_out0__0_n_60;
  wire nxt_mult_out0__0_n_61;
  wire nxt_mult_out0__0_n_62;
  wire nxt_mult_out0__0_n_63;
  wire nxt_mult_out0__0_n_64;
  wire nxt_mult_out0__0_n_65;
  wire nxt_mult_out0__0_n_66;
  wire nxt_mult_out0__0_n_67;
  wire nxt_mult_out0__0_n_68;
  wire nxt_mult_out0__0_n_69;
  wire nxt_mult_out0__0_n_70;
  wire nxt_mult_out0__0_n_71;
  wire nxt_mult_out0__0_n_72;
  wire nxt_mult_out0__0_n_73;
  wire nxt_mult_out0__0_n_74;
  wire nxt_mult_out0__0_n_75;
  wire nxt_mult_out0__0_n_76;
  wire nxt_mult_out0__0_n_77;
  wire nxt_mult_out0__0_n_78;
  wire nxt_mult_out0__0_n_79;
  wire nxt_mult_out0__0_n_80;
  wire nxt_mult_out0__0_n_81;
  wire nxt_mult_out0__0_n_82;
  wire nxt_mult_out0__0_n_83;
  wire nxt_mult_out0__0_n_84;
  wire nxt_mult_out0__0_n_85;
  wire nxt_mult_out0__0_n_86;
  wire nxt_mult_out0__0_n_87;
  wire nxt_mult_out0__0_n_88;
  wire nxt_mult_out0__0_n_89;
  wire nxt_mult_out0__0_n_90;
  wire nxt_mult_out0__0_n_91;
  wire nxt_mult_out0__0_n_92;
  wire nxt_mult_out0__0_n_93;
  wire nxt_mult_out0__0_n_94;
  wire nxt_mult_out0__0_n_95;
  wire nxt_mult_out0__0_n_96;
  wire nxt_mult_out0__0_n_97;
  wire nxt_mult_out0__0_n_98;
  wire nxt_mult_out0__0_n_99;
  wire nxt_mult_out0__1_n_100;
  wire nxt_mult_out0__1_n_101;
  wire nxt_mult_out0__1_n_102;
  wire nxt_mult_out0__1_n_103;
  wire nxt_mult_out0__1_n_104;
  wire nxt_mult_out0__1_n_105;
  wire nxt_mult_out0__1_n_58;
  wire nxt_mult_out0__1_n_59;
  wire nxt_mult_out0__1_n_60;
  wire nxt_mult_out0__1_n_61;
  wire nxt_mult_out0__1_n_62;
  wire nxt_mult_out0__1_n_63;
  wire nxt_mult_out0__1_n_64;
  wire nxt_mult_out0__1_n_65;
  wire nxt_mult_out0__1_n_66;
  wire nxt_mult_out0__1_n_67;
  wire nxt_mult_out0__1_n_68;
  wire nxt_mult_out0__1_n_69;
  wire nxt_mult_out0__1_n_70;
  wire nxt_mult_out0__1_n_71;
  wire nxt_mult_out0__1_n_72;
  wire nxt_mult_out0__1_n_73;
  wire nxt_mult_out0__1_n_74;
  wire nxt_mult_out0__1_n_75;
  wire nxt_mult_out0__1_n_76;
  wire nxt_mult_out0__1_n_77;
  wire nxt_mult_out0__1_n_78;
  wire nxt_mult_out0__1_n_79;
  wire nxt_mult_out0__1_n_80;
  wire nxt_mult_out0__1_n_81;
  wire nxt_mult_out0__1_n_82;
  wire nxt_mult_out0__1_n_83;
  wire nxt_mult_out0__1_n_84;
  wire nxt_mult_out0__1_n_85;
  wire nxt_mult_out0__1_n_86;
  wire nxt_mult_out0__1_n_87;
  wire nxt_mult_out0__1_n_88;
  wire nxt_mult_out0__1_n_89;
  wire nxt_mult_out0__1_n_90;
  wire nxt_mult_out0__1_n_91;
  wire nxt_mult_out0__1_n_92;
  wire nxt_mult_out0__1_n_93;
  wire nxt_mult_out0__1_n_94;
  wire nxt_mult_out0__1_n_95;
  wire nxt_mult_out0__1_n_96;
  wire nxt_mult_out0__1_n_97;
  wire nxt_mult_out0__1_n_98;
  wire nxt_mult_out0__1_n_99;
  wire nxt_mult_out0_carry__0_i_1_n_0;
  wire nxt_mult_out0_carry__0_i_2_n_0;
  wire nxt_mult_out0_carry__0_i_3_n_0;
  wire nxt_mult_out0_carry__0_i_4_n_0;
  wire nxt_mult_out0_carry__0_i_5_n_0;
  wire nxt_mult_out0_carry__0_i_6_n_0;
  wire nxt_mult_out0_carry__0_i_7_n_0;
  wire nxt_mult_out0_carry__0_i_8_n_0;
  wire nxt_mult_out0_carry__0_n_0;
  wire nxt_mult_out0_carry__0_n_1;
  wire nxt_mult_out0_carry__0_n_2;
  wire nxt_mult_out0_carry__0_n_3;
  wire nxt_mult_out0_carry__1_i_1_n_0;
  wire nxt_mult_out0_carry__1_i_2_n_0;
  wire nxt_mult_out0_carry__1_i_3_n_0;
  wire nxt_mult_out0_carry__1_i_4_n_0;
  wire nxt_mult_out0_carry__1_i_5_n_0;
  wire nxt_mult_out0_carry__1_i_6_n_0;
  wire nxt_mult_out0_carry__1_i_7_n_0;
  wire nxt_mult_out0_carry__1_i_8_n_0;
  wire nxt_mult_out0_carry__1_n_0;
  wire nxt_mult_out0_carry__1_n_1;
  wire nxt_mult_out0_carry__1_n_2;
  wire nxt_mult_out0_carry__1_n_3;
  wire nxt_mult_out0_carry__2_0;
  wire nxt_mult_out0_carry__2_i_1_n_0;
  wire nxt_mult_out0_carry__2_i_2_n_0;
  wire nxt_mult_out0_carry__2_i_3_n_0;
  wire nxt_mult_out0_carry__2_i_4_n_0;
  wire nxt_mult_out0_carry__2_i_5_n_0;
  wire nxt_mult_out0_carry__2_i_6_n_0;
  wire nxt_mult_out0_carry__2_i_7_n_0;
  wire nxt_mult_out0_carry__2_n_1;
  wire nxt_mult_out0_carry__2_n_2;
  wire nxt_mult_out0_carry__2_n_3;
  wire nxt_mult_out0_carry_i_1_n_0;
  wire nxt_mult_out0_carry_i_2_n_0;
  wire nxt_mult_out0_carry_i_3_n_0;
  wire nxt_mult_out0_carry_i_4_n_0;
  wire nxt_mult_out0_carry_i_5_n_0;
  wire nxt_mult_out0_carry_i_6_n_0;
  wire nxt_mult_out0_carry_n_0;
  wire nxt_mult_out0_carry_n_1;
  wire nxt_mult_out0_carry_n_2;
  wire nxt_mult_out0_carry_n_3;
  wire nxt_mult_out0_n_100;
  wire nxt_mult_out0_n_101;
  wire nxt_mult_out0_n_102;
  wire nxt_mult_out0_n_103;
  wire nxt_mult_out0_n_104;
  wire nxt_mult_out0_n_105;
  wire nxt_mult_out0_n_106;
  wire nxt_mult_out0_n_107;
  wire nxt_mult_out0_n_108;
  wire nxt_mult_out0_n_109;
  wire nxt_mult_out0_n_110;
  wire nxt_mult_out0_n_111;
  wire nxt_mult_out0_n_112;
  wire nxt_mult_out0_n_113;
  wire nxt_mult_out0_n_114;
  wire nxt_mult_out0_n_115;
  wire nxt_mult_out0_n_116;
  wire nxt_mult_out0_n_117;
  wire nxt_mult_out0_n_118;
  wire nxt_mult_out0_n_119;
  wire nxt_mult_out0_n_120;
  wire nxt_mult_out0_n_121;
  wire nxt_mult_out0_n_122;
  wire nxt_mult_out0_n_123;
  wire nxt_mult_out0_n_124;
  wire nxt_mult_out0_n_125;
  wire nxt_mult_out0_n_126;
  wire nxt_mult_out0_n_127;
  wire nxt_mult_out0_n_128;
  wire nxt_mult_out0_n_129;
  wire nxt_mult_out0_n_130;
  wire nxt_mult_out0_n_131;
  wire nxt_mult_out0_n_132;
  wire nxt_mult_out0_n_133;
  wire nxt_mult_out0_n_134;
  wire nxt_mult_out0_n_135;
  wire nxt_mult_out0_n_136;
  wire nxt_mult_out0_n_137;
  wire nxt_mult_out0_n_138;
  wire nxt_mult_out0_n_139;
  wire nxt_mult_out0_n_140;
  wire nxt_mult_out0_n_141;
  wire nxt_mult_out0_n_142;
  wire nxt_mult_out0_n_143;
  wire nxt_mult_out0_n_144;
  wire nxt_mult_out0_n_145;
  wire nxt_mult_out0_n_146;
  wire nxt_mult_out0_n_147;
  wire nxt_mult_out0_n_148;
  wire nxt_mult_out0_n_149;
  wire nxt_mult_out0_n_150;
  wire nxt_mult_out0_n_151;
  wire nxt_mult_out0_n_152;
  wire nxt_mult_out0_n_153;
  wire nxt_mult_out0_n_58;
  wire nxt_mult_out0_n_59;
  wire nxt_mult_out0_n_60;
  wire nxt_mult_out0_n_61;
  wire nxt_mult_out0_n_62;
  wire nxt_mult_out0_n_63;
  wire nxt_mult_out0_n_64;
  wire nxt_mult_out0_n_65;
  wire nxt_mult_out0_n_66;
  wire nxt_mult_out0_n_67;
  wire nxt_mult_out0_n_68;
  wire nxt_mult_out0_n_69;
  wire nxt_mult_out0_n_70;
  wire nxt_mult_out0_n_71;
  wire nxt_mult_out0_n_72;
  wire nxt_mult_out0_n_73;
  wire nxt_mult_out0_n_74;
  wire nxt_mult_out0_n_75;
  wire nxt_mult_out0_n_76;
  wire nxt_mult_out0_n_77;
  wire nxt_mult_out0_n_78;
  wire nxt_mult_out0_n_79;
  wire nxt_mult_out0_n_80;
  wire nxt_mult_out0_n_81;
  wire nxt_mult_out0_n_82;
  wire nxt_mult_out0_n_83;
  wire nxt_mult_out0_n_84;
  wire nxt_mult_out0_n_85;
  wire nxt_mult_out0_n_86;
  wire nxt_mult_out0_n_87;
  wire nxt_mult_out0_n_88;
  wire nxt_mult_out0_n_89;
  wire nxt_mult_out0_n_90;
  wire nxt_mult_out0_n_91;
  wire nxt_mult_out0_n_92;
  wire nxt_mult_out0_n_93;
  wire nxt_mult_out0_n_94;
  wire nxt_mult_out0_n_95;
  wire nxt_mult_out0_n_96;
  wire nxt_mult_out0_n_97;
  wire nxt_mult_out0_n_98;
  wire nxt_mult_out0_n_99;
  wire z_flag_mux_i_41_n_0;
  wire z_flag_mux_i_42_n_0;
  wire z_flag_mux_i_43_n_0;
  wire z_flag_mux_i_44_n_0;
  wire z_flag_mux_i_45_n_0;
  wire z_flag_mux_i_67_n_0;
  wire z_flag_mux_i_68_n_0;
  wire z_flag_mux_i_70_n_0;
  wire NLW_nxt_mult_out0_CARRYCASCOUT_UNCONNECTED;
  wire NLW_nxt_mult_out0_MULTSIGNOUT_UNCONNECTED;
  wire NLW_nxt_mult_out0_OVERFLOW_UNCONNECTED;
  wire NLW_nxt_mult_out0_PATTERNBDETECT_UNCONNECTED;
  wire NLW_nxt_mult_out0_PATTERNDETECT_UNCONNECTED;
  wire NLW_nxt_mult_out0_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_nxt_mult_out0_ACOUT_UNCONNECTED;
  wire [17:0]NLW_nxt_mult_out0_BCOUT_UNCONNECTED;
  wire [3:0]NLW_nxt_mult_out0_CARRYOUT_UNCONNECTED;
  wire NLW_nxt_mult_out0__0_CARRYCASCOUT_UNCONNECTED;
  wire NLW_nxt_mult_out0__0_MULTSIGNOUT_UNCONNECTED;
  wire NLW_nxt_mult_out0__0_OVERFLOW_UNCONNECTED;
  wire NLW_nxt_mult_out0__0_PATTERNBDETECT_UNCONNECTED;
  wire NLW_nxt_mult_out0__0_PATTERNDETECT_UNCONNECTED;
  wire NLW_nxt_mult_out0__0_UNDERFLOW_UNCONNECTED;
  wire [17:0]NLW_nxt_mult_out0__0_BCOUT_UNCONNECTED;
  wire [3:0]NLW_nxt_mult_out0__0_CARRYOUT_UNCONNECTED;
  wire NLW_nxt_mult_out0__1_CARRYCASCOUT_UNCONNECTED;
  wire NLW_nxt_mult_out0__1_MULTSIGNOUT_UNCONNECTED;
  wire NLW_nxt_mult_out0__1_OVERFLOW_UNCONNECTED;
  wire NLW_nxt_mult_out0__1_PATTERNBDETECT_UNCONNECTED;
  wire NLW_nxt_mult_out0__1_PATTERNDETECT_UNCONNECTED;
  wire NLW_nxt_mult_out0__1_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_nxt_mult_out0__1_ACOUT_UNCONNECTED;
  wire [17:0]NLW_nxt_mult_out0__1_BCOUT_UNCONNECTED;
  wire [3:0]NLW_nxt_mult_out0__1_CARRYOUT_UNCONNECTED;
  wire [47:0]NLW_nxt_mult_out0__1_PCOUT_UNCONNECTED;
  wire [3:3]NLW_nxt_mult_out0_carry__2_CO_UNCONNECTED;

  FDCE \a_term_reg[0] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(\a_term_reg[31]_0 [0]),
        .Q(a_term[0]));
  FDCE \a_term_reg[10] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(\a_term_reg[31]_0 [10]),
        .Q(a_term[10]));
  FDCE \a_term_reg[11] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(\a_term_reg[31]_0 [11]),
        .Q(a_term[11]));
  FDCE \a_term_reg[12] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(\a_term_reg[31]_0 [12]),
        .Q(a_term[12]));
  FDCE \a_term_reg[13] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(\a_term_reg[31]_0 [13]),
        .Q(a_term[13]));
  FDCE \a_term_reg[14] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(\a_term_reg[31]_0 [14]),
        .Q(a_term[14]));
  FDCE \a_term_reg[15] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(\a_term_reg[31]_0 [15]),
        .Q(a_term[15]));
  FDCE \a_term_reg[16] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(\a_term_reg[31]_0 [16]),
        .Q(a_term[16]));
  FDCE \a_term_reg[17] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(\a_term_reg[31]_0 [17]),
        .Q(a_term[17]));
  FDCE \a_term_reg[18] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(\a_term_reg[31]_0 [18]),
        .Q(a_term[18]));
  FDCE \a_term_reg[19] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(\a_term_reg[31]_0 [19]),
        .Q(a_term[19]));
  FDCE \a_term_reg[1] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(\a_term_reg[31]_0 [1]),
        .Q(a_term[1]));
  FDCE \a_term_reg[20] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(\a_term_reg[31]_0 [20]),
        .Q(a_term[20]));
  FDCE \a_term_reg[21] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(\a_term_reg[31]_0 [21]),
        .Q(a_term[21]));
  FDCE \a_term_reg[22] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(\a_term_reg[31]_0 [22]),
        .Q(a_term[22]));
  FDCE \a_term_reg[23] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(\a_term_reg[31]_0 [23]),
        .Q(a_term[23]));
  FDCE \a_term_reg[24] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(\a_term_reg[31]_0 [24]),
        .Q(a_term[24]));
  FDCE \a_term_reg[25] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(\a_term_reg[31]_0 [25]),
        .Q(a_term[25]));
  FDCE \a_term_reg[26] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(\a_term_reg[31]_0 [26]),
        .Q(a_term[26]));
  FDCE \a_term_reg[27] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(\a_term_reg[31]_0 [27]),
        .Q(a_term[27]));
  FDCE \a_term_reg[28] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(\a_term_reg[31]_0 [28]),
        .Q(a_term[28]));
  FDCE \a_term_reg[29] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(\a_term_reg[31]_0 [29]),
        .Q(a_term[29]));
  FDCE \a_term_reg[2] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(\a_term_reg[31]_0 [2]),
        .Q(a_term[2]));
  FDCE \a_term_reg[30] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(\a_term_reg[31]_0 [30]),
        .Q(a_term[30]));
  FDCE \a_term_reg[31] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(\a_term_reg[31]_0 [31]),
        .Q(a_term[31]));
  FDCE \a_term_reg[3] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(\a_term_reg[31]_0 [3]),
        .Q(a_term[3]));
  FDCE \a_term_reg[4] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(\a_term_reg[31]_0 [4]),
        .Q(a_term[4]));
  FDCE \a_term_reg[5] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(\a_term_reg[31]_0 [5]),
        .Q(a_term[5]));
  FDCE \a_term_reg[6] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(\a_term_reg[31]_0 [6]),
        .Q(a_term[6]));
  FDCE \a_term_reg[7] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(\a_term_reg[31]_0 [7]),
        .Q(a_term[7]));
  FDCE \a_term_reg[8] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(\a_term_reg[31]_0 [8]),
        .Q(a_term[8]));
  FDCE \a_term_reg[9] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(\a_term_reg[31]_0 [9]),
        .Q(a_term[9]));
  FDCE \b_term_reg[0] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(b_reg_0[0]),
        .Q(b_term[0]));
  FDCE \b_term_reg[10] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(b_reg_0[10]),
        .Q(b_term[10]));
  FDCE \b_term_reg[11] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(b_reg_0[11]),
        .Q(b_term[11]));
  FDCE \b_term_reg[12] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(b_reg_0[12]),
        .Q(b_term[12]));
  FDCE \b_term_reg[13] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(b_reg_0[13]),
        .Q(b_term[13]));
  FDCE \b_term_reg[14] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(b_reg_0[14]),
        .Q(b_term[14]));
  FDCE \b_term_reg[15] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(b_reg_0[15]),
        .Q(b_term[15]));
  FDCE \b_term_reg[16] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(b_reg_0[16]),
        .Q(b_term[16]));
  FDCE \b_term_reg[17] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(b_reg_0[17]),
        .Q(b_term[17]));
  FDCE \b_term_reg[18] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(b_reg_0[18]),
        .Q(b_term[18]));
  FDCE \b_term_reg[19] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(b_reg_0[19]),
        .Q(b_term[19]));
  FDCE \b_term_reg[1] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(b_reg_0[1]),
        .Q(b_term[1]));
  FDCE \b_term_reg[20] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(b_reg_0[20]),
        .Q(b_term[20]));
  FDCE \b_term_reg[21] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(b_reg_0[21]),
        .Q(b_term[21]));
  FDCE \b_term_reg[22] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(b_reg_0[22]),
        .Q(b_term[22]));
  FDCE \b_term_reg[23] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(b_reg_0[23]),
        .Q(b_term[23]));
  FDCE \b_term_reg[24] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(b_reg_0[24]),
        .Q(b_term[24]));
  FDCE \b_term_reg[25] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(b_reg_0[25]),
        .Q(b_term[25]));
  FDCE \b_term_reg[26] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(b_reg_0[26]),
        .Q(b_term[26]));
  FDCE \b_term_reg[27] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(b_reg_0[27]),
        .Q(b_term[27]));
  FDCE \b_term_reg[28] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(b_reg_0[28]),
        .Q(b_term[28]));
  FDCE \b_term_reg[29] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(b_reg_0[29]),
        .Q(b_term[29]));
  FDCE \b_term_reg[2] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(b_reg_0[2]),
        .Q(b_term[2]));
  FDCE \b_term_reg[30] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(b_reg_0[30]),
        .Q(b_term[30]));
  FDCE \b_term_reg[31] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(b_reg_0[31]),
        .Q(b_term[31]));
  FDCE \b_term_reg[3] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(b_reg_0[3]),
        .Q(b_term[3]));
  FDCE \b_term_reg[4] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(b_reg_0[4]),
        .Q(b_term[4]));
  FDCE \b_term_reg[5] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(b_reg_0[5]),
        .Q(b_term[5]));
  FDCE \b_term_reg[6] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(b_reg_0[6]),
        .Q(b_term[6]));
  FDCE \b_term_reg[7] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(b_reg_0[7]),
        .Q(b_term[7]));
  FDCE \b_term_reg[8] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(b_reg_0[8]),
        .Q(b_term[8]));
  FDCE \b_term_reg[9] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(b_reg_0[9]),
        .Q(b_term[9]));
  FDCE \i_mult_out_reg[0]__1 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(nxt_mult_out0__0_n_105),
        .Q(\i_mult_out_reg[15]__1_0 [0]));
  FDCE \i_mult_out_reg[10]__1 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(nxt_mult_out0__0_n_95),
        .Q(\i_mult_out_reg[15]__1_0 [10]));
  FDCE \i_mult_out_reg[11]__1 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(nxt_mult_out0__0_n_94),
        .Q(\i_mult_out_reg[15]__1_0 [11]));
  FDCE \i_mult_out_reg[12]__1 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(nxt_mult_out0__0_n_93),
        .Q(\i_mult_out_reg[15]__1_0 [12]));
  FDCE \i_mult_out_reg[13]__1 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(nxt_mult_out0__0_n_92),
        .Q(\i_mult_out_reg[15]__1_0 [13]));
  FDCE \i_mult_out_reg[14]__1 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(nxt_mult_out0__0_n_91),
        .Q(\i_mult_out_reg[15]__1_0 [14]));
  FDCE \i_mult_out_reg[15]__1 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(nxt_mult_out0__0_n_90),
        .Q(\i_mult_out_reg[15]__1_0 [15]));
  FDCE \i_mult_out_reg[16]__1 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(nxt_mult_out0__0_n_89),
        .Q(\i_mult_out_reg[16]__1_n_0 ));
  FDCE \i_mult_out_reg[1]__1 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(nxt_mult_out0__0_n_104),
        .Q(\i_mult_out_reg[15]__1_0 [1]));
  FDCE \i_mult_out_reg[2]__1 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(nxt_mult_out0__0_n_103),
        .Q(\i_mult_out_reg[15]__1_0 [2]));
  FDCE \i_mult_out_reg[3]__1 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(nxt_mult_out0__0_n_102),
        .Q(\i_mult_out_reg[15]__1_0 [3]));
  FDCE \i_mult_out_reg[4]__1 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(nxt_mult_out0__0_n_101),
        .Q(\i_mult_out_reg[15]__1_0 [4]));
  FDCE \i_mult_out_reg[5]__1 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(nxt_mult_out0__0_n_100),
        .Q(\i_mult_out_reg[15]__1_0 [5]));
  FDCE \i_mult_out_reg[6]__1 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(nxt_mult_out0__0_n_99),
        .Q(\i_mult_out_reg[15]__1_0 [6]));
  FDCE \i_mult_out_reg[7]__1 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(nxt_mult_out0__0_n_98),
        .Q(\i_mult_out_reg[15]__1_0 [7]));
  FDCE \i_mult_out_reg[8]__1 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(nxt_mult_out0__0_n_97),
        .Q(\i_mult_out_reg[15]__1_0 [8]));
  FDCE \i_mult_out_reg[9]__1 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\b_term_reg[0]_0 ),
        .D(nxt_mult_out0__0_n_96),
        .Q(\i_mult_out_reg[15]__1_0 [9]));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 16x18 4}}" *) 
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    nxt_mult_out0
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,b_term[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_nxt_mult_out0_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,1'b0,1'b0,a_term[31:17]}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_nxt_mult_out0_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_nxt_mult_out0_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_nxt_mult_out0_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b1),
        .CLK(HCLK),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_nxt_mult_out0_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_nxt_mult_out0_OVERFLOW_UNCONNECTED),
        .P({nxt_mult_out0_n_58,nxt_mult_out0_n_59,nxt_mult_out0_n_60,nxt_mult_out0_n_61,nxt_mult_out0_n_62,nxt_mult_out0_n_63,nxt_mult_out0_n_64,nxt_mult_out0_n_65,nxt_mult_out0_n_66,nxt_mult_out0_n_67,nxt_mult_out0_n_68,nxt_mult_out0_n_69,nxt_mult_out0_n_70,nxt_mult_out0_n_71,nxt_mult_out0_n_72,nxt_mult_out0_n_73,nxt_mult_out0_n_74,nxt_mult_out0_n_75,nxt_mult_out0_n_76,nxt_mult_out0_n_77,nxt_mult_out0_n_78,nxt_mult_out0_n_79,nxt_mult_out0_n_80,nxt_mult_out0_n_81,nxt_mult_out0_n_82,nxt_mult_out0_n_83,nxt_mult_out0_n_84,nxt_mult_out0_n_85,nxt_mult_out0_n_86,nxt_mult_out0_n_87,nxt_mult_out0_n_88,nxt_mult_out0_n_89,nxt_mult_out0_n_90,nxt_mult_out0_n_91,nxt_mult_out0_n_92,nxt_mult_out0_n_93,nxt_mult_out0_n_94,nxt_mult_out0_n_95,nxt_mult_out0_n_96,nxt_mult_out0_n_97,nxt_mult_out0_n_98,nxt_mult_out0_n_99,nxt_mult_out0_n_100,nxt_mult_out0_n_101,nxt_mult_out0_n_102,nxt_mult_out0_n_103,nxt_mult_out0_n_104,nxt_mult_out0_n_105}),
        .PATTERNBDETECT(NLW_nxt_mult_out0_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_nxt_mult_out0_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT({nxt_mult_out0_n_106,nxt_mult_out0_n_107,nxt_mult_out0_n_108,nxt_mult_out0_n_109,nxt_mult_out0_n_110,nxt_mult_out0_n_111,nxt_mult_out0_n_112,nxt_mult_out0_n_113,nxt_mult_out0_n_114,nxt_mult_out0_n_115,nxt_mult_out0_n_116,nxt_mult_out0_n_117,nxt_mult_out0_n_118,nxt_mult_out0_n_119,nxt_mult_out0_n_120,nxt_mult_out0_n_121,nxt_mult_out0_n_122,nxt_mult_out0_n_123,nxt_mult_out0_n_124,nxt_mult_out0_n_125,nxt_mult_out0_n_126,nxt_mult_out0_n_127,nxt_mult_out0_n_128,nxt_mult_out0_n_129,nxt_mult_out0_n_130,nxt_mult_out0_n_131,nxt_mult_out0_n_132,nxt_mult_out0_n_133,nxt_mult_out0_n_134,nxt_mult_out0_n_135,nxt_mult_out0_n_136,nxt_mult_out0_n_137,nxt_mult_out0_n_138,nxt_mult_out0_n_139,nxt_mult_out0_n_140,nxt_mult_out0_n_141,nxt_mult_out0_n_142,nxt_mult_out0_n_143,nxt_mult_out0_n_144,nxt_mult_out0_n_145,nxt_mult_out0_n_146,nxt_mult_out0_n_147,nxt_mult_out0_n_148,nxt_mult_out0_n_149,nxt_mult_out0_n_150,nxt_mult_out0_n_151,nxt_mult_out0_n_152,nxt_mult_out0_n_153}),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_nxt_mult_out0_UNDERFLOW_UNCONNECTED));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 18x18 4}}" *) 
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    nxt_mult_out0__0
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,a_term[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT({nxt_mult_out0__0_n_24,nxt_mult_out0__0_n_25,nxt_mult_out0__0_n_26,nxt_mult_out0__0_n_27,nxt_mult_out0__0_n_28,nxt_mult_out0__0_n_29,nxt_mult_out0__0_n_30,nxt_mult_out0__0_n_31,nxt_mult_out0__0_n_32,nxt_mult_out0__0_n_33,nxt_mult_out0__0_n_34,nxt_mult_out0__0_n_35,nxt_mult_out0__0_n_36,nxt_mult_out0__0_n_37,nxt_mult_out0__0_n_38,nxt_mult_out0__0_n_39,nxt_mult_out0__0_n_40,nxt_mult_out0__0_n_41,nxt_mult_out0__0_n_42,nxt_mult_out0__0_n_43,nxt_mult_out0__0_n_44,nxt_mult_out0__0_n_45,nxt_mult_out0__0_n_46,nxt_mult_out0__0_n_47,nxt_mult_out0__0_n_48,nxt_mult_out0__0_n_49,nxt_mult_out0__0_n_50,nxt_mult_out0__0_n_51,nxt_mult_out0__0_n_52,nxt_mult_out0__0_n_53}),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,b_term[16:0]}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_nxt_mult_out0__0_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_nxt_mult_out0__0_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_nxt_mult_out0__0_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(1'b0),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_nxt_mult_out0__0_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_nxt_mult_out0__0_OVERFLOW_UNCONNECTED),
        .P({nxt_mult_out0__0_n_58,nxt_mult_out0__0_n_59,nxt_mult_out0__0_n_60,nxt_mult_out0__0_n_61,nxt_mult_out0__0_n_62,nxt_mult_out0__0_n_63,nxt_mult_out0__0_n_64,nxt_mult_out0__0_n_65,nxt_mult_out0__0_n_66,nxt_mult_out0__0_n_67,nxt_mult_out0__0_n_68,nxt_mult_out0__0_n_69,nxt_mult_out0__0_n_70,nxt_mult_out0__0_n_71,nxt_mult_out0__0_n_72,nxt_mult_out0__0_n_73,nxt_mult_out0__0_n_74,nxt_mult_out0__0_n_75,nxt_mult_out0__0_n_76,nxt_mult_out0__0_n_77,nxt_mult_out0__0_n_78,nxt_mult_out0__0_n_79,nxt_mult_out0__0_n_80,nxt_mult_out0__0_n_81,nxt_mult_out0__0_n_82,nxt_mult_out0__0_n_83,nxt_mult_out0__0_n_84,nxt_mult_out0__0_n_85,nxt_mult_out0__0_n_86,nxt_mult_out0__0_n_87,nxt_mult_out0__0_n_88,nxt_mult_out0__0_n_89,nxt_mult_out0__0_n_90,nxt_mult_out0__0_n_91,nxt_mult_out0__0_n_92,nxt_mult_out0__0_n_93,nxt_mult_out0__0_n_94,nxt_mult_out0__0_n_95,nxt_mult_out0__0_n_96,nxt_mult_out0__0_n_97,nxt_mult_out0__0_n_98,nxt_mult_out0__0_n_99,nxt_mult_out0__0_n_100,nxt_mult_out0__0_n_101,nxt_mult_out0__0_n_102,nxt_mult_out0__0_n_103,nxt_mult_out0__0_n_104,nxt_mult_out0__0_n_105}),
        .PATTERNBDETECT(NLW_nxt_mult_out0__0_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_nxt_mult_out0__0_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT({nxt_mult_out0__0_n_106,nxt_mult_out0__0_n_107,nxt_mult_out0__0_n_108,nxt_mult_out0__0_n_109,nxt_mult_out0__0_n_110,nxt_mult_out0__0_n_111,nxt_mult_out0__0_n_112,nxt_mult_out0__0_n_113,nxt_mult_out0__0_n_114,nxt_mult_out0__0_n_115,nxt_mult_out0__0_n_116,nxt_mult_out0__0_n_117,nxt_mult_out0__0_n_118,nxt_mult_out0__0_n_119,nxt_mult_out0__0_n_120,nxt_mult_out0__0_n_121,nxt_mult_out0__0_n_122,nxt_mult_out0__0_n_123,nxt_mult_out0__0_n_124,nxt_mult_out0__0_n_125,nxt_mult_out0__0_n_126,nxt_mult_out0__0_n_127,nxt_mult_out0__0_n_128,nxt_mult_out0__0_n_129,nxt_mult_out0__0_n_130,nxt_mult_out0__0_n_131,nxt_mult_out0__0_n_132,nxt_mult_out0__0_n_133,nxt_mult_out0__0_n_134,nxt_mult_out0__0_n_135,nxt_mult_out0__0_n_136,nxt_mult_out0__0_n_137,nxt_mult_out0__0_n_138,nxt_mult_out0__0_n_139,nxt_mult_out0__0_n_140,nxt_mult_out0__0_n_141,nxt_mult_out0__0_n_142,nxt_mult_out0__0_n_143,nxt_mult_out0__0_n_144,nxt_mult_out0__0_n_145,nxt_mult_out0__0_n_146,nxt_mult_out0__0_n_147,nxt_mult_out0__0_n_148,nxt_mult_out0__0_n_149,nxt_mult_out0__0_n_150,nxt_mult_out0__0_n_151,nxt_mult_out0__0_n_152,nxt_mult_out0__0_n_153}),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_nxt_mult_out0__0_UNDERFLOW_UNCONNECTED));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 18x16 4}}" *) 
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("CASCADE"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    nxt_mult_out0__1
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACIN({nxt_mult_out0__0_n_24,nxt_mult_out0__0_n_25,nxt_mult_out0__0_n_26,nxt_mult_out0__0_n_27,nxt_mult_out0__0_n_28,nxt_mult_out0__0_n_29,nxt_mult_out0__0_n_30,nxt_mult_out0__0_n_31,nxt_mult_out0__0_n_32,nxt_mult_out0__0_n_33,nxt_mult_out0__0_n_34,nxt_mult_out0__0_n_35,nxt_mult_out0__0_n_36,nxt_mult_out0__0_n_37,nxt_mult_out0__0_n_38,nxt_mult_out0__0_n_39,nxt_mult_out0__0_n_40,nxt_mult_out0__0_n_41,nxt_mult_out0__0_n_42,nxt_mult_out0__0_n_43,nxt_mult_out0__0_n_44,nxt_mult_out0__0_n_45,nxt_mult_out0__0_n_46,nxt_mult_out0__0_n_47,nxt_mult_out0__0_n_48,nxt_mult_out0__0_n_49,nxt_mult_out0__0_n_50,nxt_mult_out0__0_n_51,nxt_mult_out0__0_n_52,nxt_mult_out0__0_n_53}),
        .ACOUT(NLW_nxt_mult_out0__1_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,1'b0,1'b0,b_term[31:17]}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_nxt_mult_out0__1_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_nxt_mult_out0__1_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_nxt_mult_out0__1_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b1),
        .CLK(HCLK),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_nxt_mult_out0__1_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b1,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_nxt_mult_out0__1_OVERFLOW_UNCONNECTED),
        .P({nxt_mult_out0__1_n_58,nxt_mult_out0__1_n_59,nxt_mult_out0__1_n_60,nxt_mult_out0__1_n_61,nxt_mult_out0__1_n_62,nxt_mult_out0__1_n_63,nxt_mult_out0__1_n_64,nxt_mult_out0__1_n_65,nxt_mult_out0__1_n_66,nxt_mult_out0__1_n_67,nxt_mult_out0__1_n_68,nxt_mult_out0__1_n_69,nxt_mult_out0__1_n_70,nxt_mult_out0__1_n_71,nxt_mult_out0__1_n_72,nxt_mult_out0__1_n_73,nxt_mult_out0__1_n_74,nxt_mult_out0__1_n_75,nxt_mult_out0__1_n_76,nxt_mult_out0__1_n_77,nxt_mult_out0__1_n_78,nxt_mult_out0__1_n_79,nxt_mult_out0__1_n_80,nxt_mult_out0__1_n_81,nxt_mult_out0__1_n_82,nxt_mult_out0__1_n_83,nxt_mult_out0__1_n_84,nxt_mult_out0__1_n_85,nxt_mult_out0__1_n_86,nxt_mult_out0__1_n_87,nxt_mult_out0__1_n_88,nxt_mult_out0__1_n_89,nxt_mult_out0__1_n_90,nxt_mult_out0__1_n_91,nxt_mult_out0__1_n_92,nxt_mult_out0__1_n_93,nxt_mult_out0__1_n_94,nxt_mult_out0__1_n_95,nxt_mult_out0__1_n_96,nxt_mult_out0__1_n_97,nxt_mult_out0__1_n_98,nxt_mult_out0__1_n_99,nxt_mult_out0__1_n_100,nxt_mult_out0__1_n_101,nxt_mult_out0__1_n_102,nxt_mult_out0__1_n_103,nxt_mult_out0__1_n_104,nxt_mult_out0__1_n_105}),
        .PATTERNBDETECT(NLW_nxt_mult_out0__1_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_nxt_mult_out0__1_PATTERNDETECT_UNCONNECTED),
        .PCIN({nxt_mult_out0__0_n_106,nxt_mult_out0__0_n_107,nxt_mult_out0__0_n_108,nxt_mult_out0__0_n_109,nxt_mult_out0__0_n_110,nxt_mult_out0__0_n_111,nxt_mult_out0__0_n_112,nxt_mult_out0__0_n_113,nxt_mult_out0__0_n_114,nxt_mult_out0__0_n_115,nxt_mult_out0__0_n_116,nxt_mult_out0__0_n_117,nxt_mult_out0__0_n_118,nxt_mult_out0__0_n_119,nxt_mult_out0__0_n_120,nxt_mult_out0__0_n_121,nxt_mult_out0__0_n_122,nxt_mult_out0__0_n_123,nxt_mult_out0__0_n_124,nxt_mult_out0__0_n_125,nxt_mult_out0__0_n_126,nxt_mult_out0__0_n_127,nxt_mult_out0__0_n_128,nxt_mult_out0__0_n_129,nxt_mult_out0__0_n_130,nxt_mult_out0__0_n_131,nxt_mult_out0__0_n_132,nxt_mult_out0__0_n_133,nxt_mult_out0__0_n_134,nxt_mult_out0__0_n_135,nxt_mult_out0__0_n_136,nxt_mult_out0__0_n_137,nxt_mult_out0__0_n_138,nxt_mult_out0__0_n_139,nxt_mult_out0__0_n_140,nxt_mult_out0__0_n_141,nxt_mult_out0__0_n_142,nxt_mult_out0__0_n_143,nxt_mult_out0__0_n_144,nxt_mult_out0__0_n_145,nxt_mult_out0__0_n_146,nxt_mult_out0__0_n_147,nxt_mult_out0__0_n_148,nxt_mult_out0__0_n_149,nxt_mult_out0__0_n_150,nxt_mult_out0__0_n_151,nxt_mult_out0__0_n_152,nxt_mult_out0__0_n_153}),
        .PCOUT(NLW_nxt_mult_out0__1_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_nxt_mult_out0__1_UNDERFLOW_UNCONNECTED));
  CARRY4 nxt_mult_out0_carry
       (.CI(1'b0),
        .CO({nxt_mult_out0_carry_n_0,nxt_mult_out0_carry_n_1,nxt_mult_out0_carry_n_2,nxt_mult_out0_carry_n_3}),
        .CYINIT(1'b0),
        .DI({nxt_mult_out0_carry_i_1_n_0,nxt_mult_out0_carry_i_2_n_0,nxt_mult_out0_carry_i_3_n_0,1'b0}),
        .O(mult_out[3:0]),
        .S({nxt_mult_out0_carry_i_4_n_0,nxt_mult_out0_carry_i_5_n_0,nxt_mult_out0_carry_i_6_n_0,\i_mult_out_reg[16]__1_n_0 }));
  CARRY4 nxt_mult_out0_carry__0
       (.CI(nxt_mult_out0_carry_n_0),
        .CO({nxt_mult_out0_carry__0_n_0,nxt_mult_out0_carry__0_n_1,nxt_mult_out0_carry__0_n_2,nxt_mult_out0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({nxt_mult_out0_carry__0_i_1_n_0,nxt_mult_out0_carry__0_i_2_n_0,nxt_mult_out0_carry__0_i_3_n_0,nxt_mult_out0_carry__0_i_4_n_0}),
        .O(mult_out[7:4]),
        .S({nxt_mult_out0_carry__0_i_5_n_0,nxt_mult_out0_carry__0_i_6_n_0,nxt_mult_out0_carry__0_i_7_n_0,nxt_mult_out0_carry__0_i_8_n_0}));
  LUT2 #(
    .INIT(4'h8)) 
    nxt_mult_out0_carry__0_i_1
       (.I0(nxt_mult_out0__1_n_99),
        .I1(nxt_mult_out0_carry__2_0),
        .O(nxt_mult_out0_carry__0_i_1_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    nxt_mult_out0_carry__0_i_2
       (.I0(nxt_mult_out0__1_n_100),
        .I1(nxt_mult_out0_carry__2_0),
        .O(nxt_mult_out0_carry__0_i_2_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    nxt_mult_out0_carry__0_i_3
       (.I0(nxt_mult_out0__1_n_101),
        .I1(nxt_mult_out0_carry__2_0),
        .O(nxt_mult_out0_carry__0_i_3_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    nxt_mult_out0_carry__0_i_4
       (.I0(nxt_mult_out0__1_n_102),
        .I1(nxt_mult_out0_carry__2_0),
        .O(nxt_mult_out0_carry__0_i_4_n_0));
  LUT3 #(
    .INIT(8'h48)) 
    nxt_mult_out0_carry__0_i_5
       (.I0(nxt_mult_out0__1_n_99),
        .I1(nxt_mult_out0_carry__2_0),
        .I2(nxt_mult_out0_n_99),
        .O(nxt_mult_out0_carry__0_i_5_n_0));
  LUT3 #(
    .INIT(8'h48)) 
    nxt_mult_out0_carry__0_i_6
       (.I0(nxt_mult_out0__1_n_100),
        .I1(nxt_mult_out0_carry__2_0),
        .I2(nxt_mult_out0_n_100),
        .O(nxt_mult_out0_carry__0_i_6_n_0));
  LUT3 #(
    .INIT(8'h48)) 
    nxt_mult_out0_carry__0_i_7
       (.I0(nxt_mult_out0__1_n_101),
        .I1(nxt_mult_out0_carry__2_0),
        .I2(nxt_mult_out0_n_101),
        .O(nxt_mult_out0_carry__0_i_7_n_0));
  LUT3 #(
    .INIT(8'h48)) 
    nxt_mult_out0_carry__0_i_8
       (.I0(nxt_mult_out0__1_n_102),
        .I1(nxt_mult_out0_carry__2_0),
        .I2(nxt_mult_out0_n_102),
        .O(nxt_mult_out0_carry__0_i_8_n_0));
  CARRY4 nxt_mult_out0_carry__1
       (.CI(nxt_mult_out0_carry__0_n_0),
        .CO({nxt_mult_out0_carry__1_n_0,nxt_mult_out0_carry__1_n_1,nxt_mult_out0_carry__1_n_2,nxt_mult_out0_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({nxt_mult_out0_carry__1_i_1_n_0,nxt_mult_out0_carry__1_i_2_n_0,nxt_mult_out0_carry__1_i_3_n_0,nxt_mult_out0_carry__1_i_4_n_0}),
        .O(mult_out[11:8]),
        .S({nxt_mult_out0_carry__1_i_5_n_0,nxt_mult_out0_carry__1_i_6_n_0,nxt_mult_out0_carry__1_i_7_n_0,nxt_mult_out0_carry__1_i_8_n_0}));
  LUT2 #(
    .INIT(4'h8)) 
    nxt_mult_out0_carry__1_i_1
       (.I0(nxt_mult_out0__1_n_95),
        .I1(nxt_mult_out0_carry__2_0),
        .O(nxt_mult_out0_carry__1_i_1_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    nxt_mult_out0_carry__1_i_2
       (.I0(nxt_mult_out0__1_n_96),
        .I1(nxt_mult_out0_carry__2_0),
        .O(nxt_mult_out0_carry__1_i_2_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    nxt_mult_out0_carry__1_i_3
       (.I0(nxt_mult_out0__1_n_97),
        .I1(nxt_mult_out0_carry__2_0),
        .O(nxt_mult_out0_carry__1_i_3_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    nxt_mult_out0_carry__1_i_4
       (.I0(nxt_mult_out0__1_n_98),
        .I1(nxt_mult_out0_carry__2_0),
        .O(nxt_mult_out0_carry__1_i_4_n_0));
  LUT3 #(
    .INIT(8'h48)) 
    nxt_mult_out0_carry__1_i_5
       (.I0(nxt_mult_out0__1_n_95),
        .I1(nxt_mult_out0_carry__2_0),
        .I2(nxt_mult_out0_n_95),
        .O(nxt_mult_out0_carry__1_i_5_n_0));
  LUT3 #(
    .INIT(8'h48)) 
    nxt_mult_out0_carry__1_i_6
       (.I0(nxt_mult_out0__1_n_96),
        .I1(nxt_mult_out0_carry__2_0),
        .I2(nxt_mult_out0_n_96),
        .O(nxt_mult_out0_carry__1_i_6_n_0));
  LUT3 #(
    .INIT(8'h48)) 
    nxt_mult_out0_carry__1_i_7
       (.I0(nxt_mult_out0__1_n_97),
        .I1(nxt_mult_out0_carry__2_0),
        .I2(nxt_mult_out0_n_97),
        .O(nxt_mult_out0_carry__1_i_7_n_0));
  LUT3 #(
    .INIT(8'h48)) 
    nxt_mult_out0_carry__1_i_8
       (.I0(nxt_mult_out0__1_n_98),
        .I1(nxt_mult_out0_carry__2_0),
        .I2(nxt_mult_out0_n_98),
        .O(nxt_mult_out0_carry__1_i_8_n_0));
  CARRY4 nxt_mult_out0_carry__2
       (.CI(nxt_mult_out0_carry__1_n_0),
        .CO({NLW_nxt_mult_out0_carry__2_CO_UNCONNECTED[3],nxt_mult_out0_carry__2_n_1,nxt_mult_out0_carry__2_n_2,nxt_mult_out0_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,nxt_mult_out0_carry__2_i_1_n_0,nxt_mult_out0_carry__2_i_2_n_0,nxt_mult_out0_carry__2_i_3_n_0}),
        .O(mult_out[15:12]),
        .S({nxt_mult_out0_carry__2_i_4_n_0,nxt_mult_out0_carry__2_i_5_n_0,nxt_mult_out0_carry__2_i_6_n_0,nxt_mult_out0_carry__2_i_7_n_0}));
  LUT2 #(
    .INIT(4'h8)) 
    nxt_mult_out0_carry__2_i_1
       (.I0(nxt_mult_out0__1_n_92),
        .I1(nxt_mult_out0_carry__2_0),
        .O(nxt_mult_out0_carry__2_i_1_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    nxt_mult_out0_carry__2_i_2
       (.I0(nxt_mult_out0__1_n_93),
        .I1(nxt_mult_out0_carry__2_0),
        .O(nxt_mult_out0_carry__2_i_2_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    nxt_mult_out0_carry__2_i_3
       (.I0(nxt_mult_out0__1_n_94),
        .I1(nxt_mult_out0_carry__2_0),
        .O(nxt_mult_out0_carry__2_i_3_n_0));
  LUT3 #(
    .INIT(8'h48)) 
    nxt_mult_out0_carry__2_i_4
       (.I0(nxt_mult_out0_n_91),
        .I1(nxt_mult_out0_carry__2_0),
        .I2(nxt_mult_out0__1_n_91),
        .O(nxt_mult_out0_carry__2_i_4_n_0));
  LUT3 #(
    .INIT(8'h48)) 
    nxt_mult_out0_carry__2_i_5
       (.I0(nxt_mult_out0__1_n_92),
        .I1(nxt_mult_out0_carry__2_0),
        .I2(nxt_mult_out0_n_92),
        .O(nxt_mult_out0_carry__2_i_5_n_0));
  LUT3 #(
    .INIT(8'h48)) 
    nxt_mult_out0_carry__2_i_6
       (.I0(nxt_mult_out0__1_n_93),
        .I1(nxt_mult_out0_carry__2_0),
        .I2(nxt_mult_out0_n_93),
        .O(nxt_mult_out0_carry__2_i_6_n_0));
  LUT3 #(
    .INIT(8'h48)) 
    nxt_mult_out0_carry__2_i_7
       (.I0(nxt_mult_out0__1_n_94),
        .I1(nxt_mult_out0_carry__2_0),
        .I2(nxt_mult_out0_n_94),
        .O(nxt_mult_out0_carry__2_i_7_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    nxt_mult_out0_carry_i_1
       (.I0(nxt_mult_out0__1_n_103),
        .I1(nxt_mult_out0_carry__2_0),
        .O(nxt_mult_out0_carry_i_1_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    nxt_mult_out0_carry_i_2
       (.I0(nxt_mult_out0__1_n_104),
        .I1(nxt_mult_out0_carry__2_0),
        .O(nxt_mult_out0_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    nxt_mult_out0_carry_i_3
       (.I0(nxt_mult_out0__1_n_105),
        .I1(nxt_mult_out0_carry__2_0),
        .O(nxt_mult_out0_carry_i_3_n_0));
  LUT3 #(
    .INIT(8'h48)) 
    nxt_mult_out0_carry_i_4
       (.I0(nxt_mult_out0__1_n_103),
        .I1(nxt_mult_out0_carry__2_0),
        .I2(nxt_mult_out0_n_103),
        .O(nxt_mult_out0_carry_i_4_n_0));
  LUT3 #(
    .INIT(8'h48)) 
    nxt_mult_out0_carry_i_5
       (.I0(nxt_mult_out0__1_n_104),
        .I1(nxt_mult_out0_carry__2_0),
        .I2(nxt_mult_out0_n_104),
        .O(nxt_mult_out0_carry_i_5_n_0));
  LUT3 #(
    .INIT(8'h48)) 
    nxt_mult_out0_carry_i_6
       (.I0(nxt_mult_out0__1_n_105),
        .I1(nxt_mult_out0_carry__2_0),
        .I2(nxt_mult_out0_n_105),
        .O(nxt_mult_out0_carry_i_6_n_0));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    z_flag_mux_i_23
       (.I0(z_flag_mux_i_41_n_0),
        .I1(z_flag_mux_i_42_n_0),
        .I2(z_flag_mux_i_43_n_0),
        .I3(z_flag_mux_i_44_n_0),
        .I4(z_flag_mux_i_45_n_0),
        .O(\i_mult_out_reg[5]__1_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    z_flag_mux_i_41
       (.I0(mult_out[14]),
        .I1(mult_out[15]),
        .I2(mult_out[12]),
        .I3(mult_out[13]),
        .O(z_flag_mux_i_41_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    z_flag_mux_i_42
       (.I0(mult_out[10]),
        .I1(mult_out[11]),
        .I2(mult_out[8]),
        .I3(mult_out[9]),
        .O(z_flag_mux_i_42_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    z_flag_mux_i_43
       (.I0(mult_out[6]),
        .I1(mult_out[7]),
        .I2(mult_out[4]),
        .I3(mult_out[5]),
        .O(z_flag_mux_i_43_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    z_flag_mux_i_44
       (.I0(mult_out[2]),
        .I1(mult_out[3]),
        .I2(mult_out[0]),
        .I3(mult_out[1]),
        .O(z_flag_mux_i_44_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    z_flag_mux_i_45
       (.I0(z_flag_mux_i_67_n_0),
        .I1(\i_mult_out_reg[15]__1_0 [5]),
        .I2(\i_mult_out_reg[15]__1_0 [6]),
        .I3(\i_mult_out_reg[15]__1_0 [4]),
        .I4(\i_mult_out_reg[15]__1_0 [7]),
        .I5(z_flag_mux_i_68_n_0),
        .O(z_flag_mux_i_45_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    z_flag_mux_i_67
       (.I0(\i_mult_out_reg[15]__1_0 [2]),
        .I1(\i_mult_out_reg[15]__1_0 [3]),
        .I2(\i_mult_out_reg[15]__1_0 [0]),
        .I3(\i_mult_out_reg[15]__1_0 [1]),
        .O(z_flag_mux_i_67_n_0));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    z_flag_mux_i_68
       (.I0(\i_mult_out_reg[15]__1_0 [15]),
        .I1(\i_mult_out_reg[15]__1_0 [12]),
        .I2(\i_mult_out_reg[15]__1_0 [14]),
        .I3(\i_mult_out_reg[15]__1_0 [13]),
        .I4(z_flag_mux_i_70_n_0),
        .O(z_flag_mux_i_68_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    z_flag_mux_i_70
       (.I0(\i_mult_out_reg[15]__1_0 [10]),
        .I1(\i_mult_out_reg[15]__1_0 [11]),
        .I2(\i_mult_out_reg[15]__1_0 [8]),
        .I3(\i_mult_out_reg[15]__1_0 [9]),
        .O(z_flag_mux_i_70_n_0));
endmodule

(* ORIG_REF_NAME = "cm1_multiply_shift" *) 
module design_1_CORTEXM1_AXI_0_1_cm1_multiply_shift
   (mult_out,
    m_ext_ex2_reg,
    \hold_reg1_reg[6] ,
    \hold_reg1_reg[7] ,
    \hold_reg1_reg[8] ,
    \hold_reg1_reg[11] ,
    \hold_reg1_reg[12] ,
    \hold_reg1_reg[13] ,
    \hold_reg1_reg[14] ,
    \hold_reg1_reg[15] ,
    \hold_reg1_reg[18] ,
    \hold_reg1_reg[19] ,
    \hold_reg1_reg[20] ,
    \hold_reg1_reg[21] ,
    \hold_reg1_reg[22] ,
    \hold_reg1_reg[26] ,
    \hold_reg1_reg[27] ,
    \rf_mux_ctl_ex_reg[2] ,
    \rot3_reg[0] ,
    m_ext_ex2_reg_0,
    m_ext_ex2_reg_1,
    m_ext_ex2_reg_2,
    m_ext_ex2_reg_3,
    m_ext_ex2_reg_4,
    m_ext_ex2_reg_5,
    m_ext_ex2_reg_6,
    m_ext_ex2_reg_7,
    m_ext_ex2_reg_8,
    m_ext_ex2_reg_9,
    m_ext_ex2_reg_10,
    m_ext_ex2_reg_11,
    m_ext_ex2_reg_12,
    m_ext_ex2_reg_13,
    m_ext_ex2_reg_14,
    m_ext_ex2_reg_15,
    m_ext_ex2_reg_16,
    \i_mult_out_reg[15]__1 ,
    m_invert,
    HCLK,
    r_amt4_ex2_reg,
    m_ext,
    r_amt4_ex2_reg_0,
    nxt_mult_out0_carry__2,
    c_flag_mux_reg,
    carry_in_ex,
    c_flag_mux_reg_0,
    c_flag_mux_i_4,
    Q,
    \reg_file_a[15][27]_i_2 ,
    \reg_file_a[15][27]_i_2_0 ,
    rf0_mux_ctl_ex,
    rf_mux_ctl_ex,
    primask_i_5,
    \m_amt_ex2_reg[4] ,
    D,
    \a_term_reg[31] ,
    b_reg_0);
  output [15:0]mult_out;
  output m_ext_ex2_reg;
  output \hold_reg1_reg[6] ;
  output \hold_reg1_reg[7] ;
  output \hold_reg1_reg[8] ;
  output \hold_reg1_reg[11] ;
  output \hold_reg1_reg[12] ;
  output \hold_reg1_reg[13] ;
  output \hold_reg1_reg[14] ;
  output \hold_reg1_reg[15] ;
  output \hold_reg1_reg[18] ;
  output \hold_reg1_reg[19] ;
  output \hold_reg1_reg[20] ;
  output \hold_reg1_reg[21] ;
  output \hold_reg1_reg[22] ;
  output \hold_reg1_reg[26] ;
  output \hold_reg1_reg[27] ;
  output \rf_mux_ctl_ex_reg[2] ;
  output \rot3_reg[0] ;
  output m_ext_ex2_reg_0;
  output m_ext_ex2_reg_1;
  output m_ext_ex2_reg_2;
  output m_ext_ex2_reg_3;
  output m_ext_ex2_reg_4;
  output m_ext_ex2_reg_5;
  output m_ext_ex2_reg_6;
  output m_ext_ex2_reg_7;
  output m_ext_ex2_reg_8;
  output m_ext_ex2_reg_9;
  output m_ext_ex2_reg_10;
  output m_ext_ex2_reg_11;
  output m_ext_ex2_reg_12;
  output m_ext_ex2_reg_13;
  output m_ext_ex2_reg_14;
  output m_ext_ex2_reg_15;
  output m_ext_ex2_reg_16;
  output [15:0]\i_mult_out_reg[15]__1 ;
  input m_invert;
  input HCLK;
  input r_amt4_ex2_reg;
  input m_ext;
  input r_amt4_ex2_reg_0;
  input nxt_mult_out0_carry__2;
  input c_flag_mux_reg;
  input carry_in_ex;
  input c_flag_mux_reg_0;
  input c_flag_mux_i_4;
  input [14:0]Q;
  input \reg_file_a[15][27]_i_2 ;
  input [14:0]\reg_file_a[15][27]_i_2_0 ;
  input [1:0]rf0_mux_ctl_ex;
  input [0:0]rf_mux_ctl_ex;
  input primask_i_5;
  input [4:0]\m_amt_ex2_reg[4] ;
  input [31:0]D;
  input [31:0]\a_term_reg[31] ;
  input [31:0]b_reg_0;

  wire [31:0]D;
  wire HCLK;
  wire [14:0]Q;
  wire [31:0]\a_term_reg[31] ;
  wire [31:0]b_reg_0;
  wire c_flag_mux_i_4;
  wire c_flag_mux_reg;
  wire c_flag_mux_reg_0;
  wire carry_in_ex;
  wire \hold_reg1_reg[11] ;
  wire \hold_reg1_reg[12] ;
  wire \hold_reg1_reg[13] ;
  wire \hold_reg1_reg[14] ;
  wire \hold_reg1_reg[15] ;
  wire \hold_reg1_reg[18] ;
  wire \hold_reg1_reg[19] ;
  wire \hold_reg1_reg[20] ;
  wire \hold_reg1_reg[21] ;
  wire \hold_reg1_reg[22] ;
  wire \hold_reg1_reg[26] ;
  wire \hold_reg1_reg[27] ;
  wire \hold_reg1_reg[6] ;
  wire \hold_reg1_reg[7] ;
  wire \hold_reg1_reg[8] ;
  wire [15:0]\i_mult_out_reg[15]__1 ;
  wire [4:0]\m_amt_ex2_reg[4] ;
  wire m_ext;
  wire m_ext_ex2_reg;
  wire m_ext_ex2_reg_0;
  wire m_ext_ex2_reg_1;
  wire m_ext_ex2_reg_10;
  wire m_ext_ex2_reg_11;
  wire m_ext_ex2_reg_12;
  wire m_ext_ex2_reg_13;
  wire m_ext_ex2_reg_14;
  wire m_ext_ex2_reg_15;
  wire m_ext_ex2_reg_16;
  wire m_ext_ex2_reg_2;
  wire m_ext_ex2_reg_3;
  wire m_ext_ex2_reg_4;
  wire m_ext_ex2_reg_5;
  wire m_ext_ex2_reg_6;
  wire m_ext_ex2_reg_7;
  wire m_ext_ex2_reg_8;
  wire m_ext_ex2_reg_9;
  wire m_invert;
  wire [15:0]mult_out;
  wire nxt_mult_out0_carry__2;
  wire primask_i_5;
  wire r_amt4_ex2_reg;
  wire r_amt4_ex2_reg_0;
  wire \reg_file_a[15][27]_i_2 ;
  wire [14:0]\reg_file_a[15][27]_i_2_0 ;
  wire [1:0]rf0_mux_ctl_ex;
  wire [0:0]rf_mux_ctl_ex;
  wire \rf_mux_ctl_ex_reg[2] ;
  wire \rot3_reg[0] ;
  wire u_mul_n_16;

  design_1_CORTEXM1_AXI_0_1_cm1_multiplier u_mul
       (.HCLK(HCLK),
        .\a_term_reg[31]_0 (\a_term_reg[31] ),
        .b_reg_0(b_reg_0),
        .\b_term_reg[0]_0 (r_amt4_ex2_reg),
        .\i_mult_out_reg[15]__1_0 (\i_mult_out_reg[15]__1 ),
        .\i_mult_out_reg[5]__1_0 (u_mul_n_16),
        .mult_out(mult_out),
        .nxt_mult_out0_carry__2_0(nxt_mult_out0_carry__2));
  design_1_CORTEXM1_AXI_0_1_cm1_shifter u_shft
       (.D(D),
        .HCLK(HCLK),
        .Q(Q),
        .c_flag_mux_i_4_0(c_flag_mux_i_4),
        .c_flag_mux_reg(c_flag_mux_reg),
        .c_flag_mux_reg_0(c_flag_mux_reg_0),
        .carry_in_ex(carry_in_ex),
        .\hold_reg1_reg[11] (\hold_reg1_reg[11] ),
        .\hold_reg1_reg[12] (\hold_reg1_reg[12] ),
        .\hold_reg1_reg[13] (\hold_reg1_reg[13] ),
        .\hold_reg1_reg[14] (\hold_reg1_reg[14] ),
        .\hold_reg1_reg[15] (\hold_reg1_reg[15] ),
        .\hold_reg1_reg[18] (\hold_reg1_reg[18] ),
        .\hold_reg1_reg[19] (\hold_reg1_reg[19] ),
        .\hold_reg1_reg[20] (\hold_reg1_reg[20] ),
        .\hold_reg1_reg[21] (\hold_reg1_reg[21] ),
        .\hold_reg1_reg[22] (\hold_reg1_reg[22] ),
        .\hold_reg1_reg[26] (\hold_reg1_reg[26] ),
        .\hold_reg1_reg[27] (\hold_reg1_reg[27] ),
        .\hold_reg1_reg[6] (\hold_reg1_reg[6] ),
        .\hold_reg1_reg[7] (\hold_reg1_reg[7] ),
        .\hold_reg1_reg[8] (\hold_reg1_reg[8] ),
        .\m_amt_ex2_reg[4]_0 (\m_amt_ex2_reg[4] ),
        .m_ext(m_ext),
        .m_ext_ex2_reg_0(m_ext_ex2_reg),
        .m_ext_ex2_reg_1(m_ext_ex2_reg_0),
        .m_ext_ex2_reg_10(m_ext_ex2_reg_9),
        .m_ext_ex2_reg_11(m_ext_ex2_reg_10),
        .m_ext_ex2_reg_12(m_ext_ex2_reg_11),
        .m_ext_ex2_reg_13(m_ext_ex2_reg_12),
        .m_ext_ex2_reg_14(m_ext_ex2_reg_13),
        .m_ext_ex2_reg_15(m_ext_ex2_reg_14),
        .m_ext_ex2_reg_16(m_ext_ex2_reg_15),
        .m_ext_ex2_reg_17(m_ext_ex2_reg_16),
        .m_ext_ex2_reg_2(m_ext_ex2_reg_1),
        .m_ext_ex2_reg_3(m_ext_ex2_reg_2),
        .m_ext_ex2_reg_4(m_ext_ex2_reg_3),
        .m_ext_ex2_reg_5(m_ext_ex2_reg_4),
        .m_ext_ex2_reg_6(m_ext_ex2_reg_5),
        .m_ext_ex2_reg_7(m_ext_ex2_reg_6),
        .m_ext_ex2_reg_8(m_ext_ex2_reg_7),
        .m_ext_ex2_reg_9(m_ext_ex2_reg_8),
        .m_invert(m_invert),
        .primask_i_5(primask_i_5),
        .r_amt4_ex2_reg_0(r_amt4_ex2_reg),
        .r_amt4_ex2_reg_1(r_amt4_ex2_reg_0),
        .\reg_file_a[15][27]_i_2 (\reg_file_a[15][27]_i_2 ),
        .\reg_file_a[15][27]_i_2_0 (\reg_file_a[15][27]_i_2_0 ),
        .rf0_mux_ctl_ex(rf0_mux_ctl_ex),
        .rf_mux_ctl_ex(rf_mux_ctl_ex),
        .\rf_mux_ctl_ex_reg[2] (\rf_mux_ctl_ex_reg[2] ),
        .\rot3_reg[0]_0 (\rot3_reg[0] ),
        .z_flag_mux_reg(u_mul_n_16));
endmodule

(* ORIG_REF_NAME = "cm1_nvic" *) 
module design_1_CORTEXM1_AXI_0_1_cm1_nvic
   (ahb_wr_en,
    reset_sync,
    en_itcm,
    int_prev,
    irq_lvl,
    ahb_rd_en,
    en_itcm_core,
    SYSRESETREQ,
    r_hdf_actv,
    r_nmi_actv,
    \i_haddr_q_reg[2] ,
    Q,
    svc_lvl_0,
    \i_psv_lvl_reg[1] ,
    \i_pend_state_reg[3] ,
    primask_reg,
    nvic_lockup,
    \en_itcm_core_reg[1] ,
    \i_haddr_q_reg[2]_0 ,
    \pend_lvl_num_reg[4] ,
    E,
    \tck_reload_reg[5] ,
    en_itcm_wr,
    irq_pri_lvl_wr_en,
    \i_haddr_q_reg[11] ,
    \i_tck_lvl_reg[1] ,
    \i_haddr_q_reg[6] ,
    \i_haddr_q_reg[2]_1 ,
    r_hdf_actv_reg,
    \HRDATA_reg[31] ,
    \cfgitcmen_sync2_reg[1] ,
    nxt_ahb_wr_en,
    HCLK,
    \high_lvl1_reg[0] ,
    \en_itcm_reg[1] ,
    \en_itcm_reg[0] ,
    NMI,
    IRQ,
    \i_irq_lvl_reg[1] ,
    \i_irq_lvl_reg[0] ,
    nxt_ahb_rd_en,
    \en_itcm_core_reg[1]_0 ,
    \en_itcm_core_reg[0] ,
    SYSRESETREQ_reg,
    int_actv,
    hdf_actv,
    nmi_actv,
    nvic_primask,
    O,
    biu_commit_reg_reg,
    biu_commit_reg_reg_0,
    biu_commit_reg_reg_1,
    D,
    \i_pend_state_reg[5] ,
    nvic_excpt_taken,
    \i_pend_state_reg[5]_0 ,
    \i_pend_state_reg[2] ,
    HWDATA,
    \i_pend_state_reg[4] ,
    \HRDATA_reg[5] ,
    \HRDATA[4]_i_2 ,
    lockup_pend_reg,
    LOCKUP,
    nvic_excpt_fault_req,
    instr_faulted,
    int_fault_ex,
    biu_wfault,
    nvic_excpt_svc_valid,
    dsel_ppb,
    HRDATA,
    HADDR,
    CFGITCMEN,
    \r_int_actv_lvl_reg[1] );
  output ahb_wr_en;
  output reset_sync;
  output [1:0]en_itcm;
  output [1:0]int_prev;
  output [1:0]irq_lvl;
  output ahb_rd_en;
  output [1:0]en_itcm_core;
  output SYSRESETREQ;
  output r_hdf_actv;
  output r_nmi_actv;
  output \i_haddr_q_reg[2] ;
  output [4:0]Q;
  output [1:0]svc_lvl_0;
  output [1:0]\i_psv_lvl_reg[1] ;
  output [2:0]\i_pend_state_reg[3] ;
  output primask_reg;
  output nvic_lockup;
  output \en_itcm_core_reg[1] ;
  output \i_haddr_q_reg[2]_0 ;
  output [4:0]\pend_lvl_num_reg[4] ;
  output [0:0]E;
  output \tck_reload_reg[5] ;
  output en_itcm_wr;
  output irq_pri_lvl_wr_en;
  output \i_haddr_q_reg[11] ;
  output [1:0]\i_tck_lvl_reg[1] ;
  output \i_haddr_q_reg[6] ;
  output \i_haddr_q_reg[2]_1 ;
  output r_hdf_actv_reg;
  output [31:0]\HRDATA_reg[31] ;
  output [1:0]\cfgitcmen_sync2_reg[1] ;
  input nxt_ahb_wr_en;
  input HCLK;
  input \high_lvl1_reg[0] ;
  input \en_itcm_reg[1] ;
  input \en_itcm_reg[0] ;
  input NMI;
  input [0:0]IRQ;
  input \i_irq_lvl_reg[1] ;
  input \i_irq_lvl_reg[0] ;
  input nxt_ahb_rd_en;
  input \en_itcm_core_reg[1]_0 ;
  input \en_itcm_core_reg[0] ;
  input SYSRESETREQ_reg;
  input int_actv;
  input hdf_actv;
  input nmi_actv;
  input nvic_primask;
  input [1:0]O;
  input biu_commit_reg_reg;
  input biu_commit_reg_reg_0;
  input biu_commit_reg_reg_1;
  input [2:0]D;
  input \i_pend_state_reg[5] ;
  input nvic_excpt_taken;
  input \i_pend_state_reg[5]_0 ;
  input \i_pend_state_reg[2] ;
  input [27:0]HWDATA;
  input \i_pend_state_reg[4] ;
  input [1:0]\HRDATA_reg[5] ;
  input [3:0]\HRDATA[4]_i_2 ;
  input lockup_pend_reg;
  input LOCKUP;
  input nvic_excpt_fault_req;
  input instr_faulted;
  input int_fault_ex;
  input biu_wfault;
  input nvic_excpt_svc_valid;
  input dsel_ppb;
  input [31:0]HRDATA;
  input [9:0]HADDR;
  input [1:0]CFGITCMEN;
  input [1:0]\r_int_actv_lvl_reg[1] ;

  wire [1:0]CFGITCMEN;
  wire [2:0]D;
  wire [0:0]E;
  wire [9:0]HADDR;
  wire HCLK;
  wire [31:0]HRDATA;
  wire [3:0]\HRDATA[4]_i_2 ;
  wire [31:0]\HRDATA_reg[31] ;
  wire [1:0]\HRDATA_reg[5] ;
  wire [27:0]HWDATA;
  wire [0:0]IRQ;
  wire LOCKUP;
  wire NMI;
  wire [1:0]O;
  wire [4:0]Q;
  wire SYSRESETREQ;
  wire SYSRESETREQ_reg;
  wire ahb_rd_en;
  wire ahb_wr_en;
  wire biu_commit_reg_reg;
  wire biu_commit_reg_reg_0;
  wire biu_commit_reg_reg_1;
  wire biu_wfault;
  wire [1:0]\cfgitcmen_sync2_reg[1] ;
  wire dsel_ppb;
  wire [1:0]en_itcm;
  wire [1:0]en_itcm_core;
  wire \en_itcm_core_reg[0] ;
  wire \en_itcm_core_reg[1] ;
  wire \en_itcm_core_reg[1]_0 ;
  wire \en_itcm_reg[0] ;
  wire \en_itcm_reg[1] ;
  wire en_itcm_wr;
  wire [3:3]en_pend2;
  wire hdf_actv;
  wire high_irq0;
  wire [1:0]high_lvl0;
  wire \high_lvl1_reg[0] ;
  wire [8:8]i_haddr_q;
  wire \i_haddr_q_reg[11] ;
  wire \i_haddr_q_reg[2] ;
  wire \i_haddr_q_reg[2]_0 ;
  wire \i_haddr_q_reg[2]_1 ;
  wire \i_haddr_q_reg[6] ;
  wire \i_irq_lvl_reg[0] ;
  wire \i_irq_lvl_reg[1] ;
  wire \i_pend_state_reg[2] ;
  wire [2:0]\i_pend_state_reg[3] ;
  wire \i_pend_state_reg[4] ;
  wire \i_pend_state_reg[5] ;
  wire \i_pend_state_reg[5]_0 ;
  wire [1:0]\i_psv_lvl_reg[1] ;
  wire [1:0]\i_tck_lvl_reg[1] ;
  wire instr_faulted;
  wire int_actv;
  wire int_fault_ex;
  wire [1:0]int_prev;
  wire [1:0]irq_lvl;
  wire irq_pri_lvl_wr_en;
  wire lockup_pend_reg;
  wire [7:7]lvl2;
  wire nmi_actv;
  wire nvic_excpt_fault_req;
  wire nvic_excpt_svc_valid;
  wire nvic_excpt_taken;
  wire nvic_lockup;
  wire nvic_primask;
  wire nxt_ahb_rd_en;
  wire nxt_ahb_wr_en;
  wire [4:0]nxt_pend_lvl_num;
  wire [1:0]nxt_pend_lvl_tree;
  wire [2:2]nxt_pend_state;
  wire nxt_pend_tree;
  wire [1:0]p_6_in;
  wire [4:0]pend_lvl_num;
  wire [4:0]\pend_lvl_num_reg[4] ;
  wire [1:0]pend_lvl_tree;
  wire [4:2]pend_sys;
  wire pend_tree;
  wire primask_reg;
  wire r_hdf_actv;
  wire r_hdf_actv_reg;
  wire [1:0]\r_int_actv_lvl_reg[1] ;
  wire r_nmi_actv;
  wire reset_sync;
  wire [1:0]svc_lvl_0;
  wire sys_hndlr_pri2_wr_en;
  wire [23:1]tck_reload;
  wire tck_reload_en;
  wire \tck_reload_reg[5] ;
  wire tck_to_zero;
  wire u_ahb_n_27;
  wire u_ahb_n_29;
  wire u_ahb_n_32;
  wire u_ahb_n_36;
  wire u_ahb_n_37;
  wire u_ahb_n_38;
  wire u_ahb_n_39;
  wire u_ahb_n_43;
  wire u_ahb_n_79;
  wire u_ahb_n_80;
  wire u_ahb_os_n_0;
  wire u_ahb_os_n_1;
  wire u_ahb_os_n_10;
  wire u_ahb_os_n_11;
  wire u_ahb_os_n_12;
  wire u_ahb_os_n_13;
  wire u_ahb_os_n_14;
  wire u_ahb_os_n_15;
  wire u_ahb_os_n_16;
  wire u_ahb_os_n_17;
  wire u_ahb_os_n_18;
  wire u_ahb_os_n_19;
  wire u_ahb_os_n_2;
  wire u_ahb_os_n_20;
  wire u_ahb_os_n_23;
  wire u_ahb_os_n_3;
  wire u_ahb_os_n_4;
  wire u_ahb_os_n_49;
  wire u_ahb_os_n_5;
  wire u_ahb_os_n_50;
  wire u_ahb_os_n_59;
  wire u_ahb_os_n_6;
  wire u_ahb_os_n_60;
  wire u_ahb_os_n_7;
  wire u_ahb_os_n_8;
  wire u_ahb_os_n_9;
  wire u_main_n_11;
  wire u_main_n_6;
  wire u_main_n_7;
  wire u_main_n_9;
  wire u_tree_n_10;
  wire u_tree_n_12;
  wire u_tree_n_13;

  design_1_CORTEXM1_AXI_0_1_cm1_nvic_ahb u_ahb
       (.CFGITCMEN(CFGITCMEN),
        .D({D[2],nxt_pend_state,D[1:0]}),
        .E(sys_hndlr_pri2_wr_en),
        .HADDR(HADDR),
        .HCLK(HCLK),
        .HRDATA(HRDATA),
        .\HRDATA[4]_i_2_0 (\HRDATA[4]_i_2 ),
        .\HRDATA_reg[0]_0 (u_ahb_os_n_60),
        .\HRDATA_reg[12]_0 (u_main_n_6),
        .\HRDATA_reg[13]_0 (u_main_n_11),
        .\HRDATA_reg[14]_0 (u_ahb_os_n_50),
        .\HRDATA_reg[16]_0 ({pend_lvl_num[4],pend_lvl_num[2:0]}),
        .\HRDATA_reg[16]_1 (u_ahb_os_n_59),
        .\HRDATA_reg[23]_0 ({u_ahb_os_n_0,u_ahb_os_n_1,u_ahb_os_n_2,u_ahb_os_n_3,u_ahb_os_n_4,u_ahb_os_n_5,u_ahb_os_n_6,u_ahb_os_n_7,u_ahb_os_n_8,u_ahb_os_n_9,u_ahb_os_n_10,u_ahb_os_n_11,u_ahb_os_n_12,u_ahb_os_n_13,u_ahb_os_n_14,u_ahb_os_n_15,u_ahb_os_n_16,u_ahb_os_n_17,u_ahb_os_n_18,u_ahb_os_n_19,u_ahb_os_n_20}),
        .\HRDATA_reg[23]_1 ({tck_reload[23:17],tck_reload[15],tck_reload[13:1]}),
        .\HRDATA_reg[23]_2 (\i_psv_lvl_reg[1] ),
        .\HRDATA_reg[30]_0 (svc_lvl_0[0]),
        .\HRDATA_reg[31]_0 (\HRDATA_reg[31] ),
        .\HRDATA_reg[31]_1 (svc_lvl_0[1]),
        .\HRDATA_reg[5]_0 (\HRDATA_reg[5] ),
        .HWDATA({HWDATA[25:24],HWDATA[1:0]}),
        .\HWDATA_reg[0] (u_ahb_n_80),
        .\HWDATA_reg[1] (u_ahb_n_79),
        .IRQ(IRQ),
        .NMI(NMI),
        .O(O),
        .Q({Q[4],i_haddr_q,Q[3:0]}),
        .SYSRESETREQ(SYSRESETREQ),
        .SYSRESETREQ_reg_0(SYSRESETREQ_reg),
        .biu_commit_reg_reg(biu_commit_reg_reg),
        .biu_commit_reg_reg_0(biu_commit_reg_reg_0),
        .biu_commit_reg_reg_1(biu_commit_reg_reg_1),
        .biu_wfault(biu_wfault),
        .\cfgitcmen_sync2_reg[1]_0 (\cfgitcmen_sync2_reg[1] ),
        .dsel_ppb(dsel_ppb),
        .en_itcm(en_itcm),
        .en_itcm_core(en_itcm_core),
        .\en_itcm_core_reg[0]_0 (\en_itcm_core_reg[0] ),
        .\en_itcm_core_reg[1]_0 (\en_itcm_core_reg[1] ),
        .\en_itcm_core_reg[1]_1 (\en_itcm_core_reg[1]_0 ),
        .\en_itcm_reg[0]_0 (\en_itcm_reg[0] ),
        .\en_itcm_reg[1]_0 (\en_itcm_reg[1] ),
        .en_itcm_wr(en_itcm_wr),
        .en_pend2(en_pend2),
        .high_irq0(high_irq0),
        .i_ahb_rd_en_reg_0(ahb_rd_en),
        .i_ahb_wr_en_reg_0(ahb_wr_en),
        .i_ahb_wr_en_reg_1(u_ahb_n_39),
        .\i_haddr_q_reg[10]_0 (u_ahb_n_29),
        .\i_haddr_q_reg[11]_0 (\i_haddr_q_reg[11] ),
        .\i_haddr_q_reg[2]_0 (\i_haddr_q_reg[2] ),
        .\i_haddr_q_reg[2]_1 (\i_haddr_q_reg[2]_0 ),
        .\i_haddr_q_reg[2]_2 (\i_haddr_q_reg[2]_1 ),
        .\i_haddr_q_reg[4]_0 (tck_reload_en),
        .\i_haddr_q_reg[4]_1 (u_ahb_n_36),
        .\i_haddr_q_reg[5]_0 (u_ahb_n_37),
        .\i_haddr_q_reg[5]_1 (u_ahb_n_38),
        .\i_haddr_q_reg[6]_0 (\i_haddr_q_reg[6] ),
        .\i_haddr_q_reg[7]_0 (u_ahb_n_32),
        .\i_irq_lvl_reg[0]_0 (\i_irq_lvl_reg[0] ),
        .\i_irq_lvl_reg[1]_0 (high_lvl0),
        .\i_irq_lvl_reg[1]_1 (\i_irq_lvl_reg[1] ),
        .\i_pend_state_reg[0]_0 (u_ahb_n_27),
        .\i_pend_state_reg[1]_0 (\pend_lvl_num_reg[4] [0]),
        .\i_pend_state_reg[4]_0 ({pend_sys[4],\i_pend_state_reg[3] [2],pend_sys[2],\i_pend_state_reg[3] [1:0]}),
        .\i_pend_state_reg[4]_1 (u_ahb_n_43),
        .\i_pend_state_reg[4]_2 (\i_pend_state_reg[4] ),
        .\i_pend_state_reg[5]_0 (\i_pend_state_reg[5] ),
        .\i_pend_state_reg[5]_1 (\i_pend_state_reg[5]_0 ),
        .instr_faulted(instr_faulted),
        .int_fault_ex(int_fault_ex),
        .int_prev(int_prev),
        .irq_lvl(irq_lvl),
        .\irq_prev_reg[0]_0 (\high_lvl1_reg[0] ),
        .irq_pri_lvl_wr_en(irq_pri_lvl_wr_en),
        .\latched_excpt_num_reg[0] (r_hdf_actv),
        .\latched_excpt_num_reg[0]_0 (r_nmi_actv),
        .nvic_excpt_fault_req(nvic_excpt_fault_req),
        .nvic_excpt_taken(nvic_excpt_taken),
        .nxt_ahb_rd_en(nxt_ahb_rd_en),
        .nxt_ahb_wr_en(nxt_ahb_wr_en),
        .nxt_pend_tree(nxt_pend_tree),
        .p_6_in(p_6_in),
        .\pend_lvl_tree_reg[1] (\i_tck_lvl_reg[1] ),
        .\pend_lvl_tree_reg[1]_0 (lvl2),
        .pend_tree_reg(u_main_n_9),
        .reset_sync(reset_sync),
        .\tck_reload_reg[5] (\tck_reload_reg[5] ),
        .tck_to_zero(tck_to_zero));
  design_1_CORTEXM1_AXI_0_1_cm1_nvic_ahb_os u_ahb_os
       (.D({nxt_pend_lvl_num[4],nxt_pend_lvl_num[2:0]}),
        .E(tck_reload_en),
        .HCLK(HCLK),
        .HWDATA({HWDATA[27:26],HWDATA[23:0]}),
        .Q({u_ahb_os_n_0,u_ahb_os_n_1,u_ahb_os_n_2,u_ahb_os_n_3,u_ahb_os_n_4,u_ahb_os_n_5,u_ahb_os_n_6,u_ahb_os_n_7,u_ahb_os_n_8,u_ahb_os_n_9,u_ahb_os_n_10,u_ahb_os_n_11,u_ahb_os_n_12,u_ahb_os_n_13,u_ahb_os_n_14,u_ahb_os_n_15,u_ahb_os_n_16,u_ahb_os_n_17,u_ahb_os_n_18,u_ahb_os_n_19,u_ahb_os_n_20}),
        .en_pend2(en_pend2),
        .\i_psv_lvl_reg[1]_0 (\i_psv_lvl_reg[1] ),
        .\i_psv_lvl_reg[1]_1 (sys_hndlr_pri2_wr_en),
        .\i_svc_lvl_reg[0]_0 (u_ahb_os_n_23),
        .\i_svc_lvl_reg[0]_1 (svc_lvl_0[0]),
        .\i_svc_lvl_reg[1]_0 (svc_lvl_0[1]),
        .\i_svc_lvl_reg[1]_1 (u_ahb_os_n_49),
        .\i_svc_lvl_reg[1]_2 (u_ahb_n_32),
        .\i_svc_lvl_reg[1]_3 (u_ahb_n_37),
        .\i_tck_lvl_reg[0]_0 (nxt_pend_lvl_tree[0]),
        .\i_tck_lvl_reg[1]_0 (\i_tck_lvl_reg[1] ),
        .nxt_pend_lvl_tree(nxt_pend_lvl_tree[1]),
        .p_6_in(p_6_in),
        .\pend_lvl_num_reg[0] (u_main_n_9),
        .\pend_lvl_num_reg[0]_0 (u_main_n_7),
        .\pend_lvl_num_reg[0]_1 (u_tree_n_10),
        .\pend_lvl_num_reg[0]_2 (u_ahb_n_43),
        .\pend_lvl_tree_reg[0] (u_tree_n_13),
        .\pend_lvl_tree_reg[0]_0 ({pend_sys[4],\i_pend_state_reg[3] [2]}),
        .\pend_lvl_tree_reg[0]_1 (u_tree_n_12),
        .tck_cnt_flag_reg_0({Q[4],i_haddr_q,Q[2:0]}),
        .tck_cnt_flag_reg_1(u_ahb_n_39),
        .tck_cnt_flag_reg_2(u_ahb_n_29),
        .\tck_count_reg[0]_0 (u_ahb_n_38),
        .\tck_count_reg[14]_0 (u_ahb_os_n_50),
        .\tck_count_reg[23]_0 (u_ahb_n_36),
        .tck_en_reg_0(u_ahb_n_80),
        .tck_int_en_reg_0(u_ahb_n_79),
        .\tck_reload_reg[0]_0 (u_ahb_os_n_60),
        .\tck_reload_reg[13]_0 (\high_lvl1_reg[0] ),
        .\tck_reload_reg[16]_0 (u_ahb_os_n_59),
        .\tck_reload_reg[23]_0 ({tck_reload[23:17],tck_reload[15],tck_reload[13:1]}),
        .tck_to_zero(tck_to_zero));
  design_1_CORTEXM1_AXI_0_1_cm1_nvic_main u_main
       (.D(nxt_pend_state),
        .E(E),
        .HCLK(HCLK),
        .LOCKUP(LOCKUP),
        .Q(pend_lvl_tree),
        .biu_wfault(biu_wfault),
        .hdf_actv(hdf_actv),
        .\i_pend_state_reg[1] (u_main_n_6),
        .\i_pend_state_reg[2] (u_main_n_9),
        .\i_pend_state_reg[2]_0 (\i_pend_state_reg[2] ),
        .\i_tck_lvl_reg[1] (u_main_n_7),
        .instr_faulted(instr_faulted),
        .int_actv(int_actv),
        .int_fault_ex(int_fault_ex),
        .\latched_excpt_num_reg[4] (u_ahb_n_27),
        .lockup_pend_reg_0(lockup_pend_reg),
        .nmi_actv(nmi_actv),
        .nvic_excpt_svc_valid(nvic_excpt_svc_valid),
        .nvic_excpt_taken(nvic_excpt_taken),
        .nvic_lockup(nvic_lockup),
        .nvic_primask(nvic_primask),
        .nxt_pend_lvl_tree(nxt_pend_lvl_tree[1]),
        .\pend_lvl_num_reg[0] ({pend_sys[4],pend_sys[2],\i_pend_state_reg[3] [1:0]}),
        .\pend_lvl_num_reg[0]_0 (\i_tck_lvl_reg[1] [1]),
        .\pend_lvl_tree_reg[1] (svc_lvl_0[1]),
        .\pend_lvl_tree_reg[1]_0 (u_ahb_n_43),
        .pend_tree(pend_tree),
        .primask_reg(primask_reg),
        .r_hdf_actv_reg_0(r_hdf_actv),
        .r_hdf_actv_reg_1(r_hdf_actv_reg),
        .r_hdf_actv_reg_2(u_main_n_11),
        .\r_int_actv_lvl_reg[0]_0 (\high_lvl1_reg[0] ),
        .\r_int_actv_lvl_reg[1]_0 (\r_int_actv_lvl_reg[1] ),
        .r_nmi_actv_reg_0(r_nmi_actv),
        .svc_lvl_0(svc_lvl_0[0]));
  design_1_CORTEXM1_AXI_0_1_cm1_nvic_tree u_tree
       (.D(high_lvl0),
        .HCLK(HCLK),
        .Q({pend_lvl_num[4],pend_lvl_num[2:0]}),
        .en_pend2(en_pend2),
        .high_irq0(high_irq0),
        .\high_lvl1_reg[0]_0 (\high_lvl1_reg[0] ),
        .\high_lvl2_reg[0]_0 (u_tree_n_10),
        .\high_lvl2_reg[1]_0 (lvl2),
        .\high_lvl2_reg[1]_1 (u_tree_n_12),
        .\high_lvl2_reg[1]_2 (u_tree_n_13),
        .\latched_excpt_num_reg[1] (u_ahb_n_27),
        .nxt_pend_lvl_tree(nxt_pend_lvl_tree),
        .nxt_pend_tree(nxt_pend_tree),
        .\pend_lvl_num_reg[0]_0 (u_ahb_os_n_23),
        .\pend_lvl_num_reg[0]_1 (u_ahb_os_n_49),
        .\pend_lvl_num_reg[4]_0 (\pend_lvl_num_reg[4] [4:1]),
        .\pend_lvl_num_reg[4]_1 ({nxt_pend_lvl_num[4],nxt_pend_lvl_num[2:0]}),
        .\pend_lvl_tree[0]_i_4 (\i_tck_lvl_reg[1] [1]),
        .\pend_lvl_tree[0]_i_4_0 (pend_sys[4]),
        .\pend_lvl_tree_reg[1]_0 (pend_lvl_tree),
        .pend_tree(pend_tree));
endmodule

(* ORIG_REF_NAME = "cm1_nvic_ahb" *) 
module design_1_CORTEXM1_AXI_0_1_cm1_nvic_ahb
   (i_ahb_wr_en_reg_0,
    reset_sync,
    en_itcm,
    int_prev,
    irq_lvl,
    i_ahb_rd_en_reg_0,
    en_itcm_core,
    SYSRESETREQ,
    \i_haddr_q_reg[2]_0 ,
    Q,
    \en_itcm_core_reg[1]_0 ,
    \i_haddr_q_reg[2]_1 ,
    \i_pend_state_reg[4]_0 ,
    \i_pend_state_reg[1]_0 ,
    \i_pend_state_reg[0]_0 ,
    \tck_reload_reg[5] ,
    \i_haddr_q_reg[10]_0 ,
    en_itcm_wr,
    E,
    \i_haddr_q_reg[7]_0 ,
    irq_pri_lvl_wr_en,
    \i_haddr_q_reg[4]_0 ,
    \i_haddr_q_reg[11]_0 ,
    \i_haddr_q_reg[4]_1 ,
    \i_haddr_q_reg[5]_0 ,
    \i_haddr_q_reg[5]_1 ,
    i_ahb_wr_en_reg_1,
    \i_haddr_q_reg[6]_0 ,
    \i_haddr_q_reg[2]_2 ,
    nxt_pend_tree,
    \i_pend_state_reg[4]_1 ,
    \HRDATA_reg[31]_0 ,
    \i_irq_lvl_reg[1]_0 ,
    high_irq0,
    \HWDATA_reg[1] ,
    \HWDATA_reg[0] ,
    \cfgitcmen_sync2_reg[1]_0 ,
    nxt_ahb_wr_en,
    HCLK,
    \irq_prev_reg[0]_0 ,
    \en_itcm_reg[1]_0 ,
    \en_itcm_reg[0]_0 ,
    NMI,
    IRQ,
    \i_irq_lvl_reg[1]_1 ,
    \i_irq_lvl_reg[0]_0 ,
    nxt_ahb_rd_en,
    \en_itcm_core_reg[1]_1 ,
    \en_itcm_core_reg[0]_0 ,
    SYSRESETREQ_reg_0,
    O,
    biu_commit_reg_reg,
    biu_commit_reg_reg_0,
    biu_commit_reg_reg_1,
    D,
    \i_pend_state_reg[5]_0 ,
    nvic_excpt_taken,
    \i_pend_state_reg[5]_1 ,
    HWDATA,
    \i_pend_state_reg[4]_2 ,
    \HRDATA_reg[23]_0 ,
    \HRDATA_reg[23]_1 ,
    \HRDATA[4]_i_2_0 ,
    \HRDATA_reg[0]_0 ,
    \HRDATA_reg[12]_0 ,
    \HRDATA_reg[16]_0 ,
    \latched_excpt_num_reg[0] ,
    \latched_excpt_num_reg[0]_0 ,
    nvic_excpt_fault_req,
    \HRDATA_reg[14]_0 ,
    \HRDATA_reg[16]_1 ,
    instr_faulted,
    int_fault_ex,
    biu_wfault,
    \HRDATA_reg[13]_0 ,
    tck_to_zero,
    p_6_in,
    \HRDATA_reg[23]_2 ,
    \HRDATA_reg[30]_0 ,
    \pend_lvl_tree_reg[1] ,
    pend_tree_reg,
    en_pend2,
    \HRDATA_reg[31]_1 ,
    \pend_lvl_tree_reg[1]_0 ,
    dsel_ppb,
    HRDATA,
    HADDR,
    CFGITCMEN,
    \HRDATA_reg[5]_0 );
  output i_ahb_wr_en_reg_0;
  output reset_sync;
  output [1:0]en_itcm;
  output [1:0]int_prev;
  output [1:0]irq_lvl;
  output i_ahb_rd_en_reg_0;
  output [1:0]en_itcm_core;
  output SYSRESETREQ;
  output \i_haddr_q_reg[2]_0 ;
  output [5:0]Q;
  output \en_itcm_core_reg[1]_0 ;
  output \i_haddr_q_reg[2]_1 ;
  output [4:0]\i_pend_state_reg[4]_0 ;
  output [0:0]\i_pend_state_reg[1]_0 ;
  output \i_pend_state_reg[0]_0 ;
  output \tck_reload_reg[5] ;
  output \i_haddr_q_reg[10]_0 ;
  output en_itcm_wr;
  output [0:0]E;
  output \i_haddr_q_reg[7]_0 ;
  output irq_pri_lvl_wr_en;
  output [0:0]\i_haddr_q_reg[4]_0 ;
  output \i_haddr_q_reg[11]_0 ;
  output \i_haddr_q_reg[4]_1 ;
  output \i_haddr_q_reg[5]_0 ;
  output \i_haddr_q_reg[5]_1 ;
  output i_ahb_wr_en_reg_1;
  output \i_haddr_q_reg[6]_0 ;
  output \i_haddr_q_reg[2]_2 ;
  output nxt_pend_tree;
  output \i_pend_state_reg[4]_1 ;
  output [31:0]\HRDATA_reg[31]_0 ;
  output [1:0]\i_irq_lvl_reg[1]_0 ;
  output high_irq0;
  output \HWDATA_reg[1] ;
  output \HWDATA_reg[0] ;
  output [1:0]\cfgitcmen_sync2_reg[1]_0 ;
  input nxt_ahb_wr_en;
  input HCLK;
  input \irq_prev_reg[0]_0 ;
  input \en_itcm_reg[1]_0 ;
  input \en_itcm_reg[0]_0 ;
  input NMI;
  input [0:0]IRQ;
  input \i_irq_lvl_reg[1]_1 ;
  input \i_irq_lvl_reg[0]_0 ;
  input nxt_ahb_rd_en;
  input \en_itcm_core_reg[1]_1 ;
  input \en_itcm_core_reg[0]_0 ;
  input SYSRESETREQ_reg_0;
  input [1:0]O;
  input biu_commit_reg_reg;
  input biu_commit_reg_reg_0;
  input biu_commit_reg_reg_1;
  input [3:0]D;
  input \i_pend_state_reg[5]_0 ;
  input nvic_excpt_taken;
  input \i_pend_state_reg[5]_1 ;
  input [3:0]HWDATA;
  input \i_pend_state_reg[4]_2 ;
  input [20:0]\HRDATA_reg[23]_0 ;
  input [20:0]\HRDATA_reg[23]_1 ;
  input [3:0]\HRDATA[4]_i_2_0 ;
  input \HRDATA_reg[0]_0 ;
  input \HRDATA_reg[12]_0 ;
  input [3:0]\HRDATA_reg[16]_0 ;
  input \latched_excpt_num_reg[0] ;
  input \latched_excpt_num_reg[0]_0 ;
  input nvic_excpt_fault_req;
  input \HRDATA_reg[14]_0 ;
  input \HRDATA_reg[16]_1 ;
  input instr_faulted;
  input int_fault_ex;
  input biu_wfault;
  input \HRDATA_reg[13]_0 ;
  input tck_to_zero;
  input [1:0]p_6_in;
  input [1:0]\HRDATA_reg[23]_2 ;
  input \HRDATA_reg[30]_0 ;
  input [1:0]\pend_lvl_tree_reg[1] ;
  input pend_tree_reg;
  input [0:0]en_pend2;
  input \HRDATA_reg[31]_1 ;
  input [0:0]\pend_lvl_tree_reg[1]_0 ;
  input dsel_ppb;
  input [31:0]HRDATA;
  input [9:0]HADDR;
  input [1:0]CFGITCMEN;
  input [1:0]\HRDATA_reg[5]_0 ;

  wire [1:0]CFGITCMEN;
  wire [3:0]D;
  wire [0:0]E;
  wire [9:0]HADDR;
  wire HCLK;
  wire [31:0]HRDATA;
  wire \HRDATA[0]_i_3_n_0 ;
  wire \HRDATA[0]_i_4_n_0 ;
  wire \HRDATA[0]_i_5_n_0 ;
  wire \HRDATA[12]_i_3_n_0 ;
  wire \HRDATA[13]_i_2_n_0 ;
  wire \HRDATA[14]_i_3_n_0 ;
  wire \HRDATA[15]_i_2_n_0 ;
  wire \HRDATA[15]_i_3_n_0 ;
  wire \HRDATA[15]_i_4_n_0 ;
  wire \HRDATA[1]_i_3_n_0 ;
  wire \HRDATA[21]_i_2_n_0 ;
  wire \HRDATA[21]_i_3_n_0 ;
  wire \HRDATA[22]_i_2_n_0 ;
  wire \HRDATA[22]_i_3_n_0 ;
  wire \HRDATA[23]_i_2_n_0 ;
  wire \HRDATA[23]_i_3_n_0 ;
  wire \HRDATA[29]_i_3_n_0 ;
  wire \HRDATA[30]_i_2_n_0 ;
  wire \HRDATA[30]_i_3_n_0 ;
  wire \HRDATA[30]_i_4_n_0 ;
  wire \HRDATA[31]_i_2_n_0 ;
  wire \HRDATA[31]_i_3_n_0 ;
  wire \HRDATA[31]_i_4_n_0 ;
  wire \HRDATA[31]_i_5_n_0 ;
  wire \HRDATA[31]_i_6_n_0 ;
  wire \HRDATA[3]_i_2_n_0 ;
  wire \HRDATA[3]_i_3_n_0 ;
  wire \HRDATA[3]_i_4_n_0 ;
  wire \HRDATA[3]_i_5_n_0 ;
  wire [3:0]\HRDATA[4]_i_2_0 ;
  wire \HRDATA[4]_i_2_n_0 ;
  wire \HRDATA[4]_i_3_n_0 ;
  wire \HRDATA[4]_i_4_n_0 ;
  wire \HRDATA[6]_i_2_n_0 ;
  wire \HRDATA[7]_i_2_n_0 ;
  wire \HRDATA[9]_i_2_n_0 ;
  wire \HRDATA_reg[0]_0 ;
  wire \HRDATA_reg[12]_0 ;
  wire \HRDATA_reg[13]_0 ;
  wire \HRDATA_reg[14]_0 ;
  wire [3:0]\HRDATA_reg[16]_0 ;
  wire \HRDATA_reg[16]_1 ;
  wire [20:0]\HRDATA_reg[23]_0 ;
  wire [20:0]\HRDATA_reg[23]_1 ;
  wire [1:0]\HRDATA_reg[23]_2 ;
  wire \HRDATA_reg[30]_0 ;
  wire [31:0]\HRDATA_reg[31]_0 ;
  wire \HRDATA_reg[31]_1 ;
  wire [1:0]\HRDATA_reg[5]_0 ;
  wire [31:0]HRDATAsysppb;
  wire [3:0]HWDATA;
  wire \HWDATA_reg[0] ;
  wire \HWDATA_reg[1] ;
  wire [0:0]IRQ;
  wire NMI;
  wire [1:0]O;
  wire [5:0]Q;
  wire SYSRESETREQ;
  wire SYSRESETREQ_reg_0;
  wire biu_commit_reg_i_10_n_0;
  wire biu_commit_reg_reg;
  wire biu_commit_reg_reg_0;
  wire biu_commit_reg_reg_1;
  wire biu_wfault;
  wire [1:0]cfgitcmen_sync1;
  wire [1:0]\cfgitcmen_sync2_reg[1]_0 ;
  wire dsel_ppb;
  wire [1:0]en_itcm;
  wire \en_itcm[1]_i_3_n_0 ;
  wire \en_itcm[1]_i_4_n_0 ;
  wire [1:0]en_itcm_core;
  wire \en_itcm_core_reg[0]_0 ;
  wire \en_itcm_core_reg[1]_0 ;
  wire \en_itcm_core_reg[1]_1 ;
  wire \en_itcm_reg[0]_0 ;
  wire \en_itcm_reg[1]_0 ;
  wire en_itcm_wr;
  wire [0:0]en_pend2;
  wire high_irq0;
  wire i_ahb_rd_en_reg_0;
  wire i_ahb_wr_en_reg_0;
  wire i_ahb_wr_en_reg_1;
  wire [11:6]i_haddr_q;
  wire \i_haddr_q_reg[10]_0 ;
  wire \i_haddr_q_reg[11]_0 ;
  wire \i_haddr_q_reg[2]_0 ;
  wire \i_haddr_q_reg[2]_1 ;
  wire \i_haddr_q_reg[2]_2 ;
  wire [0:0]\i_haddr_q_reg[4]_0 ;
  wire \i_haddr_q_reg[4]_1 ;
  wire \i_haddr_q_reg[5]_0 ;
  wire \i_haddr_q_reg[5]_1 ;
  wire \i_haddr_q_reg[6]_0 ;
  wire \i_haddr_q_reg[7]_0 ;
  wire \i_irq_lvl[1]_i_3_n_0 ;
  wire \i_irq_lvl[1]_i_4_n_0 ;
  wire \i_irq_lvl_reg[0]_0 ;
  wire [1:0]\i_irq_lvl_reg[1]_0 ;
  wire \i_irq_lvl_reg[1]_1 ;
  wire i_pend_irq;
  wire \i_pend_state[4]_i_4_n_0 ;
  wire \i_pend_state[4]_i_5_n_0 ;
  wire \i_pend_state[5]_i_2_n_0 ;
  wire \i_pend_state[5]_i_4_n_0 ;
  wire \i_pend_state_reg[0]_0 ;
  wire [0:0]\i_pend_state_reg[1]_0 ;
  wire [4:0]\i_pend_state_reg[4]_0 ;
  wire \i_pend_state_reg[4]_1 ;
  wire \i_pend_state_reg[4]_2 ;
  wire \i_pend_state_reg[5]_0 ;
  wire \i_pend_state_reg[5]_1 ;
  wire \i_psv_lvl[1]_i_2_n_0 ;
  wire instr_faulted;
  wire int_fault_ex;
  wire [1:0]int_prev;
  wire \irq_i_en[0]_i_2_n_0 ;
  wire \irq_i_en[0]_i_3_n_0 ;
  wire \irq_i_en[0]_i_4_n_0 ;
  wire \irq_i_en[0]_i_5_n_0 ;
  wire [1:0]irq_lvl;
  wire \irq_prev_reg[0]_0 ;
  wire irq_pri_lvl_wr_en;
  wire \latched_excpt_num_reg[0] ;
  wire \latched_excpt_num_reg[0]_0 ;
  wire nvic_excpt_fault_req;
  wire nvic_excpt_taken;
  wire nxt_ahb_rd_en;
  wire nxt_ahb_wr_en;
  wire nxt_irq_i_en;
  wire [31:0]nxt_o_hrdata;
  wire [5:4]nxt_pend_state;
  wire nxt_pend_tree;
  wire [1:0]p_6_in;
  wire [0:0]p_9_in;
  wire [1:0]\pend_lvl_tree_reg[1] ;
  wire [0:0]\pend_lvl_tree_reg[1]_0 ;
  wire pend_tree_reg;
  wire reset_sync;
  wire tck_cnt_flag_i_5_n_0;
  wire \tck_count[23]_i_6_n_0 ;
  wire \tck_count[23]_i_9_n_0 ;
  wire tck_en_i_3_n_0;
  wire \tck_reload[23]_i_2_n_0 ;
  wire \tck_reload[23]_i_3_n_0 ;
  wire \tck_reload_reg[5] ;
  wire tck_to_zero;
  wire \u_ahb_os/tck_ctrl_en ;

  LUT5 #(
    .INIT(32'h444F4444)) 
    \HRDATA[0]_i_1 
       (.I0(\HRDATA_reg[0]_0 ),
        .I1(\HRDATA[21]_i_2_n_0 ),
        .I2(\HRDATA[0]_i_3_n_0 ),
        .I3(\HRDATA[0]_i_4_n_0 ),
        .I4(\HRDATA[0]_i_5_n_0 ),
        .O(nxt_o_hrdata[0]));
  (* SOFT_HLUTNM = "soft_lutpair273" *) 
  LUT5 #(
    .INIT(32'hFFFFFEFF)) 
    \HRDATA[0]_i_3 
       (.I0(i_haddr_q[6]),
        .I1(Q[1]),
        .I2(Q[3]),
        .I3(i_ahb_rd_en_reg_0),
        .I4(Q[2]),
        .O(\HRDATA[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hCFFFFFFFFFFAFFF5)) 
    \HRDATA[0]_i_4 
       (.I0(Q[5]),
        .I1(i_haddr_q[7]),
        .I2(Q[0]),
        .I3(i_haddr_q[11]),
        .I4(Q[4]),
        .I5(i_haddr_q[10]),
        .O(\HRDATA[0]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair261" *) 
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \HRDATA[0]_i_5 
       (.I0(i_pend_irq),
        .I1(Q[5]),
        .I2(\HRDATA[4]_i_2_0 [0]),
        .I3(i_haddr_q[11]),
        .I4(p_9_in),
        .O(\HRDATA[0]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h08A00800)) 
    \HRDATA[10]_i_1 
       (.I0(\HRDATA[21]_i_2_n_0 ),
        .I1(\HRDATA_reg[23]_1 [9]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(\HRDATA_reg[23]_0 [9]),
        .O(nxt_o_hrdata[10]));
  LUT5 #(
    .INIT(32'h08A00800)) 
    \HRDATA[11]_i_1 
       (.I0(\HRDATA[21]_i_2_n_0 ),
        .I1(\HRDATA_reg[23]_1 [10]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(\HRDATA_reg[23]_0 [10]),
        .O(nxt_o_hrdata[11]));
  LUT5 #(
    .INIT(32'hFFFF0054)) 
    \HRDATA[12]_i_1 
       (.I0(\i_haddr_q_reg[2]_0 ),
        .I1(\HRDATA_reg[12]_0 ),
        .I2(\HRDATA_reg[16]_0 [0]),
        .I3(\i_pend_state_reg[4]_0 [0]),
        .I4(\HRDATA[12]_i_3_n_0 ),
        .O(nxt_o_hrdata[12]));
  LUT5 #(
    .INIT(32'h08A00800)) 
    \HRDATA[12]_i_3 
       (.I0(\HRDATA[21]_i_2_n_0 ),
        .I1(\HRDATA_reg[23]_1 [11]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(\HRDATA_reg[23]_0 [11]),
        .O(\HRDATA[12]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair275" *) 
  LUT4 #(
    .INIT(16'hFF54)) 
    \HRDATA[13]_i_1 
       (.I0(\i_haddr_q_reg[2]_0 ),
        .I1(\HRDATA_reg[16]_0 [1]),
        .I2(\i_pend_state_reg[0]_0 ),
        .I3(\HRDATA[13]_i_2_n_0 ),
        .O(nxt_o_hrdata[13]));
  LUT5 #(
    .INIT(32'h08A00800)) 
    \HRDATA[13]_i_2 
       (.I0(\HRDATA[21]_i_2_n_0 ),
        .I1(\HRDATA_reg[23]_1 [12]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(\HRDATA_reg[23]_0 [12]),
        .O(\HRDATA[13]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h22F200F0FFFF00F0)) 
    \HRDATA[14]_i_1 
       (.I0(\HRDATA_reg[16]_0 [2]),
        .I1(\i_pend_state_reg[0]_0 ),
        .I2(\HRDATA[21]_i_2_n_0 ),
        .I3(\HRDATA_reg[14]_0 ),
        .I4(\HRDATA[14]_i_3_n_0 ),
        .I5(Q[0]),
        .O(nxt_o_hrdata[14]));
  LUT6 #(
    .INIT(64'h0000000000000020)) 
    \HRDATA[14]_i_3 
       (.I0(\i_haddr_q_reg[7]_0 ),
        .I1(Q[2]),
        .I2(i_ahb_rd_en_reg_0),
        .I3(Q[3]),
        .I4(Q[1]),
        .I5(i_haddr_q[6]),
        .O(\HRDATA[14]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h88888A888A8A8A8A)) 
    \HRDATA[15]_i_1 
       (.I0(i_ahb_rd_en_reg_0),
        .I1(\HRDATA[15]_i_2_n_0 ),
        .I2(\HRDATA[15]_i_3_n_0 ),
        .I3(\HRDATA_reg[16]_0 [1]),
        .I4(\i_pend_state_reg[0]_0 ),
        .I5(Q[0]),
        .O(nxt_o_hrdata[15]));
  LUT6 #(
    .INIT(64'h0000000000040000)) 
    \HRDATA[15]_i_2 
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(\i_haddr_q_reg[10]_0 ),
        .I3(Q[4]),
        .I4(\HRDATA[31]_i_5_n_0 ),
        .I5(\HRDATA[15]_i_4_n_0 ),
        .O(\HRDATA[15]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair267" *) 
  LUT3 #(
    .INIT(8'hEF)) 
    \HRDATA[15]_i_3 
       (.I0(i_haddr_q[6]),
        .I1(Q[1]),
        .I2(\i_pend_state[4]_i_5_n_0 ),
        .O(\HRDATA[15]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair268" *) 
  LUT5 #(
    .INIT(32'hFF503FFF)) 
    \HRDATA[15]_i_4 
       (.I0(\HRDATA_reg[23]_1 [13]),
        .I1(\HRDATA_reg[23]_0 [13]),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(Q[0]),
        .O(\HRDATA[15]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hBA00FFFFBA00BA00)) 
    \HRDATA[16]_i_1 
       (.I0(Q[1]),
        .I1(\i_pend_state_reg[0]_0 ),
        .I2(\HRDATA_reg[16]_0 [3]),
        .I3(\HRDATA[31]_i_2_n_0 ),
        .I4(\HRDATA_reg[16]_1 ),
        .I5(\HRDATA[21]_i_2_n_0 ),
        .O(nxt_o_hrdata[16]));
  LUT6 #(
    .INIT(64'hFFFFFFFFAAAAFFFE)) 
    \HRDATA[16]_i_2 
       (.I0(\i_pend_state_reg[4]_0 [0]),
        .I1(instr_faulted),
        .I2(int_fault_ex),
        .I3(biu_wfault),
        .I4(\HRDATA_reg[13]_0 ),
        .I5(\i_pend_state_reg[4]_0 [1]),
        .O(\i_pend_state_reg[0]_0 ));
  LUT5 #(
    .INIT(32'h08A00800)) 
    \HRDATA[17]_i_1 
       (.I0(\HRDATA[21]_i_2_n_0 ),
        .I1(\HRDATA_reg[23]_1 [14]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(\HRDATA_reg[23]_0 [14]),
        .O(nxt_o_hrdata[17]));
  LUT6 #(
    .INIT(64'hAEFAAEAAAAAAAAAA)) 
    \HRDATA[18]_i_1 
       (.I0(\HRDATA[30]_i_2_n_0 ),
        .I1(\HRDATA_reg[23]_0 [15]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(\HRDATA_reg[23]_1 [15]),
        .I5(\HRDATA[21]_i_2_n_0 ),
        .O(nxt_o_hrdata[18]));
  LUT6 #(
    .INIT(64'hAEFAAEAAAAAAAAAA)) 
    \HRDATA[19]_i_1 
       (.I0(nxt_o_hrdata[24]),
        .I1(\HRDATA_reg[23]_0 [16]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(\HRDATA_reg[23]_1 [16]),
        .I5(\HRDATA[21]_i_2_n_0 ),
        .O(nxt_o_hrdata[19]));
  (* SOFT_HLUTNM = "soft_lutpair279" *) 
  LUT3 #(
    .INIT(8'hF4)) 
    \HRDATA[1]_i_1 
       (.I0(\i_haddr_q_reg[2]_0 ),
        .I1(\HRDATA[4]_i_2_0 [1]),
        .I2(\HRDATA[1]_i_3_n_0 ),
        .O(nxt_o_hrdata[1]));
  LUT6 #(
    .INIT(64'h2222A2800000A280)) 
    \HRDATA[1]_i_3 
       (.I0(\HRDATA[21]_i_2_n_0 ),
        .I1(Q[1]),
        .I2(\HRDATA_reg[23]_0 [0]),
        .I3(p_6_in[1]),
        .I4(Q[0]),
        .I5(\HRDATA_reg[23]_1 [0]),
        .O(\HRDATA[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAEFAAEAAAAAAAAAA)) 
    \HRDATA[20]_i_1 
       (.I0(nxt_o_hrdata[24]),
        .I1(\HRDATA_reg[23]_0 [17]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(\HRDATA_reg[23]_1 [17]),
        .I5(\HRDATA[21]_i_2_n_0 ),
        .O(nxt_o_hrdata[20]));
  (* SOFT_HLUTNM = "soft_lutpair263" *) 
  LUT5 #(
    .INIT(32'h2C200000)) 
    \HRDATA[21]_i_1 
       (.I0(\HRDATA_reg[23]_1 [18]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\HRDATA_reg[23]_0 [18]),
        .I4(\HRDATA[21]_i_2_n_0 ),
        .O(nxt_o_hrdata[21]));
  LUT6 #(
    .INIT(64'h0000000000010000)) 
    \HRDATA[21]_i_2 
       (.I0(Q[4]),
        .I1(i_haddr_q[11]),
        .I2(i_haddr_q[10]),
        .I3(Q[5]),
        .I4(Q[2]),
        .I5(\HRDATA[21]_i_3_n_0 ),
        .O(\HRDATA[21]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair278" *) 
  LUT4 #(
    .INIT(16'hFFEF)) 
    \HRDATA[21]_i_3 
       (.I0(i_haddr_q[7]),
        .I1(i_haddr_q[6]),
        .I2(i_ahb_rd_en_reg_0),
        .I3(Q[3]),
        .O(\HRDATA[21]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair279" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \HRDATA[22]_i_1 
       (.I0(\HRDATA[22]_i_2_n_0 ),
        .I1(\i_haddr_q_reg[2]_0 ),
        .I2(i_pend_irq),
        .O(nxt_o_hrdata[22]));
  LUT6 #(
    .INIT(64'h00000000800A0000)) 
    \HRDATA[22]_i_2 
       (.I0(\HRDATA[22]_i_3_n_0 ),
        .I1(\HRDATA_reg[23]_2 [0]),
        .I2(i_haddr_q[11]),
        .I3(i_haddr_q[10]),
        .I4(i_ahb_rd_en_reg_0),
        .I5(\HRDATA[23]_i_3_n_0 ),
        .O(\HRDATA[22]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000003330880000)) 
    \HRDATA[22]_i_3 
       (.I0(\HRDATA_reg[23]_1 [19]),
        .I1(Q[0]),
        .I2(\HRDATA_reg[23]_0 [19]),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(Q[3]),
        .O(\HRDATA[22]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h00000000800A0000)) 
    \HRDATA[23]_i_1 
       (.I0(\HRDATA[23]_i_2_n_0 ),
        .I1(\HRDATA_reg[23]_2 [1]),
        .I2(i_haddr_q[11]),
        .I3(i_haddr_q[10]),
        .I4(i_ahb_rd_en_reg_0),
        .I5(\HRDATA[23]_i_3_n_0 ),
        .O(nxt_o_hrdata[23]));
  LUT6 #(
    .INIT(64'h0000003330880000)) 
    \HRDATA[23]_i_2 
       (.I0(\HRDATA_reg[23]_1 [20]),
        .I1(Q[0]),
        .I2(\HRDATA_reg[23]_0 [20]),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(Q[3]),
        .O(\HRDATA[23]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFF7E)) 
    \HRDATA[23]_i_3 
       (.I0(Q[3]),
        .I1(Q[4]),
        .I2(i_haddr_q[10]),
        .I3(i_haddr_q[7]),
        .I4(Q[5]),
        .I5(i_haddr_q[6]),
        .O(\HRDATA[23]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000010000)) 
    \HRDATA[24]_i_1 
       (.I0(i_haddr_q[6]),
        .I1(Q[1]),
        .I2(\HRDATA[29]_i_3_n_0 ),
        .I3(Q[2]),
        .I4(\i_haddr_q_reg[7]_0 ),
        .I5(Q[0]),
        .O(nxt_o_hrdata[24]));
  (* SOFT_HLUTNM = "soft_lutpair275" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \HRDATA[26]_i_1 
       (.I0(\i_pend_state_reg[4]_0 [4]),
        .I1(\i_haddr_q_reg[2]_0 ),
        .O(nxt_o_hrdata[26]));
  (* SOFT_HLUTNM = "soft_lutpair262" *) 
  LUT5 #(
    .INIT(32'hFDFFFFFF)) 
    \HRDATA[26]_i_2 
       (.I0(Q[0]),
        .I1(i_haddr_q[6]),
        .I2(Q[1]),
        .I3(\i_pend_state[4]_i_5_n_0 ),
        .I4(i_ahb_rd_en_reg_0),
        .O(\i_haddr_q_reg[2]_0 ));
  LUT3 #(
    .INIT(8'hA8)) 
    \HRDATA[28]_i_1 
       (.I0(\HRDATA[31]_i_2_n_0 ),
        .I1(\i_pend_state_reg[4]_0 [3]),
        .I2(Q[1]),
        .O(nxt_o_hrdata[28]));
  LUT6 #(
    .INIT(64'h0000000000200000)) 
    \HRDATA[29]_i_1 
       (.I0(\i_haddr_q_reg[7]_0 ),
        .I1(\HRDATA[29]_i_3_n_0 ),
        .I2(Q[0]),
        .I3(i_haddr_q[6]),
        .I4(Q[1]),
        .I5(Q[2]),
        .O(nxt_o_hrdata[29]));
  (* SOFT_HLUTNM = "soft_lutpair271" *) 
  LUT5 #(
    .INIT(32'h10000000)) 
    \HRDATA[29]_i_2 
       (.I0(i_haddr_q[7]),
        .I1(Q[5]),
        .I2(i_haddr_q[10]),
        .I3(Q[4]),
        .I4(i_haddr_q[11]),
        .O(\i_haddr_q_reg[7]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair273" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \HRDATA[29]_i_3 
       (.I0(Q[3]),
        .I1(i_ahb_rd_en_reg_0),
        .O(\HRDATA[29]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h2A220A02)) 
    \HRDATA[2]_i_2 
       (.I0(\HRDATA[21]_i_2_n_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(\HRDATA_reg[23]_1 [1]),
        .I4(\HRDATA_reg[23]_0 [1]),
        .O(\i_haddr_q_reg[2]_2 ));
  LUT6 #(
    .INIT(64'hBAAAAAABAAAAAAAA)) 
    \HRDATA[30]_i_1 
       (.I0(\HRDATA[30]_i_2_n_0 ),
        .I1(\HRDATA[30]_i_3_n_0 ),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(Q[1]),
        .I5(\HRDATA[30]_i_4_n_0 ),
        .O(nxt_o_hrdata[30]));
  (* SOFT_HLUTNM = "soft_lutpair262" *) 
  LUT5 #(
    .INIT(32'h00008200)) 
    \HRDATA[30]_i_2 
       (.I0(\i_pend_state[4]_i_5_n_0 ),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(i_ahb_rd_en_reg_0),
        .I4(i_haddr_q[6]),
        .O(\HRDATA[30]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair276" *) 
  LUT4 #(
    .INIT(16'hBFFF)) 
    \HRDATA[30]_i_3 
       (.I0(Q[5]),
        .I1(i_haddr_q[10]),
        .I2(Q[4]),
        .I3(i_haddr_q[11]),
        .O(\HRDATA[30]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000062400000)) 
    \HRDATA[30]_i_4 
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(\HRDATA_reg[30]_0 ),
        .I3(\pend_lvl_tree_reg[1] [0]),
        .I4(i_ahb_rd_en_reg_0),
        .I5(\i_haddr_q_reg[6]_0 ),
        .O(\HRDATA[30]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hA8FFA8A8)) 
    \HRDATA[31]_i_1 
       (.I0(\HRDATA[31]_i_2_n_0 ),
        .I1(Q[1]),
        .I2(\i_pend_state_reg[4]_0 [0]),
        .I3(\HRDATA[31]_i_3_n_0 ),
        .I4(\HRDATA[31]_i_4_n_0 ),
        .O(nxt_o_hrdata[31]));
  LUT6 #(
    .INIT(64'h0000000000000004)) 
    \HRDATA[31]_i_2 
       (.I0(\HRDATA[30]_i_3_n_0 ),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(i_haddr_q[7]),
        .I4(i_haddr_q[6]),
        .I5(\HRDATA[29]_i_3_n_0 ),
        .O(\HRDATA[31]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF7EFFFFFF)) 
    \HRDATA[31]_i_3 
       (.I0(Q[0]),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(i_ahb_rd_en_reg_0),
        .I4(\HRDATA[31]_i_5_n_0 ),
        .I5(\HRDATA[31]_i_6_n_0 ),
        .O(\HRDATA[31]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair272" *) 
  LUT5 #(
    .INIT(32'h0088F300)) 
    \HRDATA[31]_i_4 
       (.I0(\pend_lvl_tree_reg[1] [1]),
        .I1(Q[4]),
        .I2(\HRDATA_reg[31]_1 ),
        .I3(Q[2]),
        .I4(Q[3]),
        .O(\HRDATA[31]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair280" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \HRDATA[31]_i_5 
       (.I0(i_haddr_q[7]),
        .I1(Q[5]),
        .I2(i_haddr_q[6]),
        .O(\HRDATA[31]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair264" *) 
  LUT3 #(
    .INIT(8'h7E)) 
    \HRDATA[31]_i_6 
       (.I0(i_haddr_q[10]),
        .I1(Q[4]),
        .I2(i_haddr_q[11]),
        .O(\HRDATA[31]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF2C200000)) 
    \HRDATA[3]_i_1 
       (.I0(\HRDATA_reg[23]_0 [2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(\HRDATA_reg[23]_1 [2]),
        .I4(\HRDATA[21]_i_2_n_0 ),
        .I5(\HRDATA[3]_i_2_n_0 ),
        .O(nxt_o_hrdata[3]));
  LUT6 #(
    .INIT(64'h0000000200000000)) 
    \HRDATA[3]_i_2 
       (.I0(\HRDATA[3]_i_3_n_0 ),
        .I1(i_haddr_q[7]),
        .I2(Q[5]),
        .I3(i_haddr_q[6]),
        .I4(Q[3]),
        .I5(i_ahb_rd_en_reg_0),
        .O(\HRDATA[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000040)) 
    \HRDATA[3]_i_3 
       (.I0(Q[4]),
        .I1(en_itcm[0]),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(\HRDATA[3]_i_4_n_0 ),
        .I5(\HRDATA[3]_i_5_n_0 ),
        .O(\HRDATA[3]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair274" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \HRDATA[3]_i_4 
       (.I0(Q[0]),
        .I1(i_haddr_q[11]),
        .I2(i_haddr_q[10]),
        .O(\HRDATA[3]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h8000800080000000)) 
    \HRDATA[3]_i_5 
       (.I0(i_haddr_q[10]),
        .I1(Q[4]),
        .I2(i_haddr_q[11]),
        .I3(\tck_reload[23]_i_3_n_0 ),
        .I4(Q[2]),
        .I5(\HRDATA[4]_i_2_0 [2]),
        .O(\HRDATA[3]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF2C200000)) 
    \HRDATA[4]_i_1 
       (.I0(\HRDATA_reg[23]_0 [3]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(\HRDATA_reg[23]_1 [3]),
        .I4(\HRDATA[21]_i_2_n_0 ),
        .I5(\HRDATA[4]_i_2_n_0 ),
        .O(nxt_o_hrdata[4]));
  (* SOFT_HLUTNM = "soft_lutpair264" *) 
  LUT5 #(
    .INIT(32'hA0000008)) 
    \HRDATA[4]_i_2 
       (.I0(\HRDATA[4]_i_3_n_0 ),
        .I1(Q[1]),
        .I2(i_haddr_q[10]),
        .I3(Q[4]),
        .I4(i_haddr_q[11]),
        .O(\HRDATA[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000E0EE0000)) 
    \HRDATA[4]_i_3 
       (.I0(en_itcm[1]),
        .I1(i_haddr_q[11]),
        .I2(\HRDATA[4]_i_2_0 [3]),
        .I3(Q[0]),
        .I4(\HRDATA[31]_i_5_n_0 ),
        .I5(\HRDATA[4]_i_4_n_0 ),
        .O(\HRDATA[4]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFBFBFBFBFB)) 
    \HRDATA[4]_i_4 
       (.I0(Q[3]),
        .I1(i_ahb_rd_en_reg_0),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(Q[4]),
        .I5(Q[1]),
        .O(\HRDATA[4]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair266" *) 
  LUT5 #(
    .INIT(32'h08A00800)) 
    \HRDATA[5]_i_2 
       (.I0(\HRDATA[21]_i_2_n_0 ),
        .I1(\HRDATA_reg[23]_1 [4]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(\HRDATA_reg[23]_0 [4]),
        .O(\tck_reload_reg[5] ));
  LUT6 #(
    .INIT(64'hAEFAAEAAAAAAAAAA)) 
    \HRDATA[6]_i_1 
       (.I0(\HRDATA[6]_i_2_n_0 ),
        .I1(\HRDATA_reg[23]_0 [5]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(\HRDATA_reg[23]_1 [5]),
        .I5(\HRDATA[21]_i_2_n_0 ),
        .O(nxt_o_hrdata[6]));
  LUT6 #(
    .INIT(64'h0000020000000000)) 
    \HRDATA[6]_i_2 
       (.I0(irq_lvl[0]),
        .I1(Q[4]),
        .I2(Q[0]),
        .I3(i_ahb_rd_en_reg_0),
        .I4(i_haddr_q[6]),
        .I5(\i_irq_lvl[1]_i_3_n_0 ),
        .O(\HRDATA[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF2C200000)) 
    \HRDATA[7]_i_1 
       (.I0(\HRDATA_reg[23]_0 [6]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(\HRDATA_reg[23]_1 [6]),
        .I4(\HRDATA[21]_i_2_n_0 ),
        .I5(\HRDATA[7]_i_2_n_0 ),
        .O(nxt_o_hrdata[7]));
  LUT6 #(
    .INIT(64'h0000020000000000)) 
    \HRDATA[7]_i_2 
       (.I0(irq_lvl[1]),
        .I1(Q[4]),
        .I2(Q[0]),
        .I3(i_ahb_rd_en_reg_0),
        .I4(i_haddr_q[6]),
        .I5(\i_irq_lvl[1]_i_3_n_0 ),
        .O(\HRDATA[7]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h08A00800)) 
    \HRDATA[8]_i_1 
       (.I0(\HRDATA[21]_i_2_n_0 ),
        .I1(\HRDATA_reg[23]_1 [7]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(\HRDATA_reg[23]_0 [7]),
        .O(nxt_o_hrdata[8]));
  LUT6 #(
    .INIT(64'hFFFFFFFF2C200000)) 
    \HRDATA[9]_i_1 
       (.I0(\HRDATA_reg[23]_0 [8]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(\HRDATA_reg[23]_1 [8]),
        .I4(\HRDATA[21]_i_2_n_0 ),
        .I5(\HRDATA[9]_i_2_n_0 ),
        .O(nxt_o_hrdata[9]));
  LUT6 #(
    .INIT(64'h0000000000000082)) 
    \HRDATA[9]_i_2 
       (.I0(\i_haddr_q_reg[7]_0 ),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(\HRDATA[29]_i_3_n_0 ),
        .I4(i_haddr_q[6]),
        .I5(Q[1]),
        .O(\HRDATA[9]_i_2_n_0 ));
  FDCE \HRDATA_reg[0] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(nxt_o_hrdata[0]),
        .Q(HRDATAsysppb[0]));
  FDCE \HRDATA_reg[10] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(nxt_o_hrdata[10]),
        .Q(HRDATAsysppb[10]));
  FDCE \HRDATA_reg[11] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(nxt_o_hrdata[11]),
        .Q(HRDATAsysppb[11]));
  FDCE \HRDATA_reg[12] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(nxt_o_hrdata[12]),
        .Q(HRDATAsysppb[12]));
  FDCE \HRDATA_reg[13] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(nxt_o_hrdata[13]),
        .Q(HRDATAsysppb[13]));
  FDCE \HRDATA_reg[14] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(nxt_o_hrdata[14]),
        .Q(HRDATAsysppb[14]));
  FDCE \HRDATA_reg[15] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(nxt_o_hrdata[15]),
        .Q(HRDATAsysppb[15]));
  FDCE \HRDATA_reg[16] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(nxt_o_hrdata[16]),
        .Q(HRDATAsysppb[16]));
  FDCE \HRDATA_reg[17] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(nxt_o_hrdata[17]),
        .Q(HRDATAsysppb[17]));
  FDCE \HRDATA_reg[18] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(nxt_o_hrdata[18]),
        .Q(HRDATAsysppb[18]));
  FDCE \HRDATA_reg[19] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(nxt_o_hrdata[19]),
        .Q(HRDATAsysppb[19]));
  FDCE \HRDATA_reg[1] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(nxt_o_hrdata[1]),
        .Q(HRDATAsysppb[1]));
  FDCE \HRDATA_reg[20] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(nxt_o_hrdata[20]),
        .Q(HRDATAsysppb[20]));
  FDCE \HRDATA_reg[21] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(nxt_o_hrdata[21]),
        .Q(HRDATAsysppb[21]));
  FDCE \HRDATA_reg[22] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(nxt_o_hrdata[22]),
        .Q(HRDATAsysppb[22]));
  FDCE \HRDATA_reg[23] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(nxt_o_hrdata[23]),
        .Q(HRDATAsysppb[23]));
  FDCE \HRDATA_reg[24] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(nxt_o_hrdata[24]),
        .Q(HRDATAsysppb[24]));
  FDCE \HRDATA_reg[26] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(nxt_o_hrdata[26]),
        .Q(HRDATAsysppb[26]));
  FDCE \HRDATA_reg[28] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(nxt_o_hrdata[28]),
        .Q(HRDATAsysppb[28]));
  FDCE \HRDATA_reg[29] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(nxt_o_hrdata[29]),
        .Q(HRDATAsysppb[29]));
  FDCE \HRDATA_reg[2] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(\HRDATA_reg[5]_0 [0]),
        .Q(HRDATAsysppb[2]));
  FDCE \HRDATA_reg[30] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(nxt_o_hrdata[30]),
        .Q(HRDATAsysppb[30]));
  FDCE \HRDATA_reg[31] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(nxt_o_hrdata[31]),
        .Q(HRDATAsysppb[31]));
  FDCE \HRDATA_reg[3] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(nxt_o_hrdata[3]),
        .Q(HRDATAsysppb[3]));
  FDCE \HRDATA_reg[4] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(nxt_o_hrdata[4]),
        .Q(HRDATAsysppb[4]));
  FDCE \HRDATA_reg[5] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(\HRDATA_reg[5]_0 [1]),
        .Q(HRDATAsysppb[5]));
  FDCE \HRDATA_reg[6] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(nxt_o_hrdata[6]),
        .Q(HRDATAsysppb[6]));
  FDCE \HRDATA_reg[7] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(nxt_o_hrdata[7]),
        .Q(HRDATAsysppb[7]));
  FDCE \HRDATA_reg[8] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(nxt_o_hrdata[8]),
        .Q(HRDATAsysppb[8]));
  FDCE \HRDATA_reg[9] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(nxt_o_hrdata[9]),
        .Q(HRDATAsysppb[9]));
  (* SOFT_HLUTNM = "soft_lutpair285" *) 
  LUT3 #(
    .INIT(8'h80)) 
    SYSRESETREQ_i_2
       (.I0(i_haddr_q[11]),
        .I1(Q[4]),
        .I2(i_haddr_q[10]),
        .O(\i_haddr_q_reg[11]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair280" *) 
  LUT2 #(
    .INIT(4'hE)) 
    SYSRESETREQ_i_7
       (.I0(i_haddr_q[6]),
        .I1(i_haddr_q[7]),
        .O(\i_haddr_q_reg[6]_0 ));
  FDCE SYSRESETREQ_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(SYSRESETREQ_reg_0),
        .Q(SYSRESETREQ));
  LUT3 #(
    .INIT(8'hB8)) 
    biu_commit_reg_i_10
       (.I0(en_itcm_core[1]),
        .I1(O[0]),
        .I2(en_itcm_core[0]),
        .O(biu_commit_reg_i_10_n_0));
  LUT6 #(
    .INIT(64'h00000000004E0000)) 
    biu_commit_reg_i_5
       (.I0(O[1]),
        .I1(biu_commit_reg_i_10_n_0),
        .I2(O[0]),
        .I3(biu_commit_reg_reg),
        .I4(biu_commit_reg_reg_0),
        .I5(biu_commit_reg_reg_1),
        .O(\en_itcm_core_reg[1]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair288" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \biu_rdata[0]_i_1 
       (.I0(HRDATAsysppb[0]),
        .I1(dsel_ppb),
        .I2(HRDATA[0]),
        .O(\HRDATA_reg[31]_0 [0]));
  (* SOFT_HLUTNM = "soft_lutpair295" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \biu_rdata[10]_i_1 
       (.I0(HRDATAsysppb[10]),
        .I1(dsel_ppb),
        .I2(HRDATA[10]),
        .O(\HRDATA_reg[31]_0 [10]));
  (* SOFT_HLUTNM = "soft_lutpair294" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \biu_rdata[11]_i_1 
       (.I0(HRDATAsysppb[11]),
        .I1(dsel_ppb),
        .I2(HRDATA[11]),
        .O(\HRDATA_reg[31]_0 [11]));
  (* SOFT_HLUTNM = "soft_lutpair296" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \biu_rdata[12]_i_1 
       (.I0(HRDATAsysppb[12]),
        .I1(dsel_ppb),
        .I2(HRDATA[12]),
        .O(\HRDATA_reg[31]_0 [12]));
  (* SOFT_HLUTNM = "soft_lutpair295" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \biu_rdata[13]_i_1 
       (.I0(HRDATAsysppb[13]),
        .I1(dsel_ppb),
        .I2(HRDATA[13]),
        .O(\HRDATA_reg[31]_0 [13]));
  (* SOFT_HLUTNM = "soft_lutpair294" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \biu_rdata[14]_i_1 
       (.I0(HRDATAsysppb[14]),
        .I1(dsel_ppb),
        .I2(HRDATA[14]),
        .O(\HRDATA_reg[31]_0 [14]));
  (* SOFT_HLUTNM = "soft_lutpair293" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \biu_rdata[15]_i_1 
       (.I0(HRDATAsysppb[15]),
        .I1(dsel_ppb),
        .I2(HRDATA[15]),
        .O(\HRDATA_reg[31]_0 [15]));
  (* SOFT_HLUTNM = "soft_lutpair292" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \biu_rdata[16]_i_1 
       (.I0(HRDATAsysppb[16]),
        .I1(dsel_ppb),
        .I2(HRDATA[16]),
        .O(\HRDATA_reg[31]_0 [16]));
  (* SOFT_HLUTNM = "soft_lutpair290" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \biu_rdata[17]_i_1 
       (.I0(HRDATAsysppb[17]),
        .I1(dsel_ppb),
        .I2(HRDATA[17]),
        .O(\HRDATA_reg[31]_0 [17]));
  (* SOFT_HLUTNM = "soft_lutpair286" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \biu_rdata[18]_i_1 
       (.I0(HRDATAsysppb[18]),
        .I1(dsel_ppb),
        .I2(HRDATA[18]),
        .O(\HRDATA_reg[31]_0 [18]));
  (* SOFT_HLUTNM = "soft_lutpair283" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \biu_rdata[19]_i_1 
       (.I0(HRDATAsysppb[19]),
        .I1(dsel_ppb),
        .I2(HRDATA[19]),
        .O(\HRDATA_reg[31]_0 [19]));
  (* SOFT_HLUTNM = "soft_lutpair289" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \biu_rdata[1]_i_1 
       (.I0(HRDATAsysppb[1]),
        .I1(dsel_ppb),
        .I2(HRDATA[1]),
        .O(\HRDATA_reg[31]_0 [1]));
  (* SOFT_HLUTNM = "soft_lutpair293" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \biu_rdata[20]_i_1 
       (.I0(HRDATAsysppb[20]),
        .I1(dsel_ppb),
        .I2(HRDATA[20]),
        .O(\HRDATA_reg[31]_0 [20]));
  (* SOFT_HLUTNM = "soft_lutpair282" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \biu_rdata[21]_i_1 
       (.I0(HRDATAsysppb[21]),
        .I1(dsel_ppb),
        .I2(HRDATA[21]),
        .O(\HRDATA_reg[31]_0 [21]));
  (* SOFT_HLUTNM = "soft_lutpair292" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \biu_rdata[22]_i_1 
       (.I0(HRDATAsysppb[22]),
        .I1(dsel_ppb),
        .I2(HRDATA[22]),
        .O(\HRDATA_reg[31]_0 [22]));
  (* SOFT_HLUTNM = "soft_lutpair291" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \biu_rdata[23]_i_1 
       (.I0(HRDATAsysppb[23]),
        .I1(dsel_ppb),
        .I2(HRDATA[23]),
        .O(\HRDATA_reg[31]_0 [23]));
  (* SOFT_HLUTNM = "soft_lutpair290" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \biu_rdata[24]_i_1 
       (.I0(HRDATAsysppb[24]),
        .I1(dsel_ppb),
        .I2(HRDATA[24]),
        .O(\HRDATA_reg[31]_0 [24]));
  (* SOFT_HLUTNM = "soft_lutpair289" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \biu_rdata[25]_i_1 
       (.I0(HRDATAsysppb[29]),
        .I1(dsel_ppb),
        .I2(HRDATA[25]),
        .O(\HRDATA_reg[31]_0 [25]));
  (* SOFT_HLUTNM = "soft_lutpair288" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \biu_rdata[26]_i_1 
       (.I0(HRDATAsysppb[26]),
        .I1(dsel_ppb),
        .I2(HRDATA[26]),
        .O(\HRDATA_reg[31]_0 [26]));
  (* SOFT_HLUTNM = "soft_lutpair281" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \biu_rdata[27]_i_1 
       (.I0(HRDATAsysppb[29]),
        .I1(dsel_ppb),
        .I2(HRDATA[27]),
        .O(\HRDATA_reg[31]_0 [27]));
  (* SOFT_HLUTNM = "soft_lutpair286" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \biu_rdata[28]_i_1 
       (.I0(HRDATAsysppb[28]),
        .I1(dsel_ppb),
        .I2(HRDATA[28]),
        .O(\HRDATA_reg[31]_0 [28]));
  (* SOFT_HLUTNM = "soft_lutpair281" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \biu_rdata[29]_i_1 
       (.I0(HRDATAsysppb[29]),
        .I1(dsel_ppb),
        .I2(HRDATA[29]),
        .O(\HRDATA_reg[31]_0 [29]));
  (* SOFT_HLUTNM = "soft_lutpair291" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \biu_rdata[2]_i_1 
       (.I0(HRDATAsysppb[2]),
        .I1(dsel_ppb),
        .I2(HRDATA[2]),
        .O(\HRDATA_reg[31]_0 [2]));
  (* SOFT_HLUTNM = "soft_lutpair283" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \biu_rdata[30]_i_1 
       (.I0(HRDATAsysppb[30]),
        .I1(dsel_ppb),
        .I2(HRDATA[30]),
        .O(\HRDATA_reg[31]_0 [30]));
  (* SOFT_HLUTNM = "soft_lutpair282" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \biu_rdata[31]_i_1 
       (.I0(HRDATAsysppb[31]),
        .I1(dsel_ppb),
        .I2(HRDATA[31]),
        .O(\HRDATA_reg[31]_0 [31]));
  (* SOFT_HLUTNM = "soft_lutpair296" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \biu_rdata[3]_i_1 
       (.I0(HRDATAsysppb[3]),
        .I1(dsel_ppb),
        .I2(HRDATA[3]),
        .O(\HRDATA_reg[31]_0 [3]));
  (* SOFT_HLUTNM = "soft_lutpair297" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \biu_rdata[4]_i_1 
       (.I0(HRDATAsysppb[4]),
        .I1(dsel_ppb),
        .I2(HRDATA[4]),
        .O(\HRDATA_reg[31]_0 [4]));
  (* SOFT_HLUTNM = "soft_lutpair298" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \biu_rdata[5]_i_1 
       (.I0(HRDATAsysppb[5]),
        .I1(dsel_ppb),
        .I2(HRDATA[5]),
        .O(\HRDATA_reg[31]_0 [5]));
  (* SOFT_HLUTNM = "soft_lutpair299" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \biu_rdata[6]_i_1 
       (.I0(HRDATAsysppb[6]),
        .I1(dsel_ppb),
        .I2(HRDATA[6]),
        .O(\HRDATA_reg[31]_0 [6]));
  (* SOFT_HLUTNM = "soft_lutpair299" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \biu_rdata[7]_i_1 
       (.I0(HRDATAsysppb[7]),
        .I1(dsel_ppb),
        .I2(HRDATA[7]),
        .O(\HRDATA_reg[31]_0 [7]));
  (* SOFT_HLUTNM = "soft_lutpair298" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \biu_rdata[8]_i_1 
       (.I0(HRDATAsysppb[8]),
        .I1(dsel_ppb),
        .I2(HRDATA[8]),
        .O(\HRDATA_reg[31]_0 [8]));
  (* SOFT_HLUTNM = "soft_lutpair297" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \biu_rdata[9]_i_1 
       (.I0(HRDATAsysppb[9]),
        .I1(dsel_ppb),
        .I2(HRDATA[9]),
        .O(\HRDATA_reg[31]_0 [9]));
  FDRE \cfgitcmen_sync1_reg[0] 
       (.C(HCLK),
        .CE(1'b1),
        .D(CFGITCMEN[0]),
        .Q(cfgitcmen_sync1[0]),
        .R(1'b0));
  FDRE \cfgitcmen_sync1_reg[1] 
       (.C(HCLK),
        .CE(1'b1),
        .D(CFGITCMEN[1]),
        .Q(cfgitcmen_sync1[1]),
        .R(1'b0));
  FDRE \cfgitcmen_sync2_reg[0] 
       (.C(HCLK),
        .CE(1'b1),
        .D(cfgitcmen_sync1[0]),
        .Q(\cfgitcmen_sync2_reg[1]_0 [0]),
        .R(1'b0));
  FDRE \cfgitcmen_sync2_reg[1] 
       (.C(HCLK),
        .CE(1'b1),
        .D(cfgitcmen_sync1[1]),
        .Q(\cfgitcmen_sync2_reg[1]_0 [1]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAAABAAAAAAAAAAAA)) 
    \en_itcm[1]_i_2 
       (.I0(reset_sync),
        .I1(\en_itcm[1]_i_3_n_0 ),
        .I2(Q[3]),
        .I3(Q[2]),
        .I4(\en_itcm[1]_i_4_n_0 ),
        .I5(\tck_reload[23]_i_2_n_0 ),
        .O(en_itcm_wr));
  (* SOFT_HLUTNM = "soft_lutpair265" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \en_itcm[1]_i_3 
       (.I0(i_haddr_q[6]),
        .I1(i_ahb_wr_en_reg_0),
        .O(\en_itcm[1]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair263" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \en_itcm[1]_i_4 
       (.I0(Q[1]),
        .I1(Q[0]),
        .O(\en_itcm[1]_i_4_n_0 ));
  FDCE \en_itcm_core_reg[0] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(\en_itcm_core_reg[0]_0 ),
        .Q(en_itcm_core[0]));
  FDCE \en_itcm_core_reg[1] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(\en_itcm_core_reg[1]_1 ),
        .Q(en_itcm_core[1]));
  FDRE \en_itcm_reg[0] 
       (.C(HCLK),
        .CE(1'b1),
        .D(\en_itcm_reg[0]_0 ),
        .Q(en_itcm[0]),
        .R(1'b0));
  FDRE \en_itcm_reg[1] 
       (.C(HCLK),
        .CE(1'b1),
        .D(\en_itcm_reg[1]_0 ),
        .Q(en_itcm[1]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair261" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \high_irq1[0]_i_1 
       (.I0(p_9_in),
        .I1(i_pend_irq),
        .O(high_irq0));
  (* SOFT_HLUTNM = "soft_lutpair287" *) 
  LUT3 #(
    .INIT(8'hBF)) 
    \high_lvl1[0]_i_1 
       (.I0(irq_lvl[0]),
        .I1(i_pend_irq),
        .I2(p_9_in),
        .O(\i_irq_lvl_reg[1]_0 [0]));
  (* SOFT_HLUTNM = "soft_lutpair287" *) 
  LUT3 #(
    .INIT(8'hBF)) 
    \high_lvl1[1]_i_1 
       (.I0(irq_lvl[1]),
        .I1(i_pend_irq),
        .I2(p_9_in),
        .O(\i_irq_lvl_reg[1]_0 [1]));
  FDCE i_ahb_rd_en_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(nxt_ahb_rd_en),
        .Q(i_ahb_rd_en_reg_0));
  FDCE i_ahb_wr_en_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(nxt_ahb_wr_en),
        .Q(i_ahb_wr_en_reg_0));
  FDCE \i_haddr_q_reg[10] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(HADDR[8]),
        .Q(i_haddr_q[10]));
  FDCE \i_haddr_q_reg[11] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(HADDR[9]),
        .Q(i_haddr_q[11]));
  FDCE \i_haddr_q_reg[2] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(HADDR[0]),
        .Q(Q[0]));
  FDCE \i_haddr_q_reg[3] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(HADDR[1]),
        .Q(Q[1]));
  FDCE \i_haddr_q_reg[4] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(HADDR[2]),
        .Q(Q[2]));
  FDCE \i_haddr_q_reg[5] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(HADDR[3]),
        .Q(Q[3]));
  FDCE \i_haddr_q_reg[6] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(HADDR[4]),
        .Q(i_haddr_q[6]));
  FDCE \i_haddr_q_reg[7] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(HADDR[5]),
        .Q(i_haddr_q[7]));
  FDCE \i_haddr_q_reg[8] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(HADDR[6]),
        .Q(Q[4]));
  FDCE \i_haddr_q_reg[9] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(HADDR[7]),
        .Q(Q[5]));
  (* SOFT_HLUTNM = "soft_lutpair265" *) 
  LUT5 #(
    .INIT(32'h00020000)) 
    \i_irq_lvl[1]_i_2 
       (.I0(\i_irq_lvl[1]_i_3_n_0 ),
        .I1(Q[0]),
        .I2(Q[4]),
        .I3(i_haddr_q[6]),
        .I4(i_ahb_wr_en_reg_0),
        .O(irq_pri_lvl_wr_en));
  LUT6 #(
    .INIT(64'h0000000000000200)) 
    \i_irq_lvl[1]_i_3 
       (.I0(\i_irq_lvl[1]_i_4_n_0 ),
        .I1(Q[3]),
        .I2(Q[2]),
        .I3(i_haddr_q[10]),
        .I4(Q[1]),
        .I5(i_haddr_q[11]),
        .O(\i_irq_lvl[1]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair269" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \i_irq_lvl[1]_i_4 
       (.I0(Q[5]),
        .I1(i_haddr_q[7]),
        .O(\i_irq_lvl[1]_i_4_n_0 ));
  FDCE \i_irq_lvl_reg[0] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(\i_irq_lvl_reg[0]_0 ),
        .Q(irq_lvl[0]));
  FDCE \i_irq_lvl_reg[1] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(\i_irq_lvl_reg[1]_1 ),
        .Q(irq_lvl[1]));
  LUT6 #(
    .INIT(64'hFFFFFFFFD000D0D0)) 
    \i_pend_state[4]_i_1 
       (.I0(HWDATA[2]),
        .I1(\i_haddr_q_reg[2]_1 ),
        .I2(\i_pend_state_reg[4]_0 [4]),
        .I3(\i_pend_state_reg[4]_2 ),
        .I4(nvic_excpt_taken),
        .I5(\i_pend_state[4]_i_4_n_0 ),
        .O(nxt_pend_state[4]));
  (* SOFT_HLUTNM = "soft_lutpair267" *) 
  LUT5 #(
    .INIT(32'hFDFFFFFF)) 
    \i_pend_state[4]_i_2 
       (.I0(Q[0]),
        .I1(i_haddr_q[6]),
        .I2(Q[1]),
        .I3(\i_pend_state[4]_i_5_n_0 ),
        .I4(i_ahb_wr_en_reg_0),
        .O(\i_haddr_q_reg[2]_1 ));
  LUT6 #(
    .INIT(64'h88F8888888888888)) 
    \i_pend_state[4]_i_4 
       (.I0(tck_to_zero),
        .I1(p_6_in[1]),
        .I2(\tck_reload[23]_i_3_n_0 ),
        .I3(\en_itcm[1]_i_3_n_0 ),
        .I4(HWDATA[3]),
        .I5(\i_pend_state[4]_i_5_n_0 ),
        .O(\i_pend_state[4]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair269" *) 
  LUT5 #(
    .INIT(32'h00000002)) 
    \i_pend_state[4]_i_5 
       (.I0(\i_haddr_q_reg[11]_0 ),
        .I1(Q[5]),
        .I2(i_haddr_q[7]),
        .I3(Q[3]),
        .I4(Q[2]),
        .O(\i_pend_state[4]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair270" *) 
  LUT5 #(
    .INIT(32'hFFFFAAEA)) 
    \i_pend_state[5]_i_1 
       (.I0(\i_pend_state[5]_i_2_n_0 ),
        .I1(\irq_i_en[0]_i_3_n_0 ),
        .I2(Q[5]),
        .I3(Q[4]),
        .I4(\i_pend_state_reg[5]_0 ),
        .O(nxt_pend_state[5]));
  LUT6 #(
    .INIT(64'hD0D0D000D0D0D0D0)) 
    \i_pend_state[5]_i_2 
       (.I0(nvic_excpt_taken),
        .I1(\i_pend_state_reg[5]_1 ),
        .I2(i_pend_irq),
        .I3(IRQ),
        .I4(\i_pend_state[5]_i_4_n_0 ),
        .I5(\irq_i_en[0]_i_2_n_0 ),
        .O(\i_pend_state[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair270" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \i_pend_state[5]_i_4 
       (.I0(Q[4]),
        .I1(Q[5]),
        .O(\i_pend_state[5]_i_4_n_0 ));
  FDCE \i_pend_state_reg[0] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(D[0]),
        .Q(\i_pend_state_reg[4]_0 [0]));
  FDCE \i_pend_state_reg[1] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(D[1]),
        .Q(\i_pend_state_reg[4]_0 [1]));
  FDCE \i_pend_state_reg[2] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(D[2]),
        .Q(\i_pend_state_reg[4]_0 [2]));
  FDCE \i_pend_state_reg[3] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(D[3]),
        .Q(\i_pend_state_reg[4]_0 [3]));
  FDCE \i_pend_state_reg[4] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(nxt_pend_state[4]),
        .Q(\i_pend_state_reg[4]_0 [4]));
  FDCE \i_pend_state_reg[5] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(nxt_pend_state[5]),
        .Q(i_pend_irq));
  LUT6 #(
    .INIT(64'h0000000000080000)) 
    \i_psv_lvl[1]_i_1 
       (.I0(\i_haddr_q_reg[7]_0 ),
        .I1(\i_psv_lvl[1]_i_2_n_0 ),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(i_ahb_wr_en_reg_0),
        .I5(i_haddr_q[6]),
        .O(E));
  LUT2 #(
    .INIT(4'h2)) 
    \i_psv_lvl[1]_i_2 
       (.I0(Q[3]),
        .I1(Q[2]),
        .O(\i_psv_lvl[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair277" *) 
  LUT4 #(
    .INIT(16'hEFFF)) 
    \i_svc_lvl[1]_i_2 
       (.I0(Q[3]),
        .I1(i_haddr_q[6]),
        .I2(Q[1]),
        .I3(i_ahb_wr_en_reg_0),
        .O(\i_haddr_q_reg[5]_0 ));
  LUT5 #(
    .INIT(32'hCCCCF4CC)) 
    \irq_i_en[0]_i_1 
       (.I0(\irq_i_en[0]_i_2_n_0 ),
        .I1(p_9_in),
        .I2(\irq_i_en[0]_i_3_n_0 ),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(nxt_irq_i_en));
  (* SOFT_HLUTNM = "soft_lutpair274" *) 
  LUT5 #(
    .INIT(32'h00000001)) 
    \irq_i_en[0]_i_2 
       (.I0(Q[0]),
        .I1(i_haddr_q[11]),
        .I2(i_haddr_q[10]),
        .I3(Q[2]),
        .I4(\irq_i_en[0]_i_4_n_0 ),
        .O(\irq_i_en[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000010)) 
    \irq_i_en[0]_i_3 
       (.I0(\irq_i_en[0]_i_5_n_0 ),
        .I1(i_haddr_q[7]),
        .I2(HWDATA[0]),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(\i_haddr_q_reg[10]_0 ),
        .O(\irq_i_en[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFEFFFFFFFFFFF)) 
    \irq_i_en[0]_i_4 
       (.I0(Q[3]),
        .I1(i_haddr_q[6]),
        .I2(HWDATA[0]),
        .I3(i_haddr_q[7]),
        .I4(Q[1]),
        .I5(i_ahb_wr_en_reg_0),
        .O(\irq_i_en[0]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair277" *) 
  LUT4 #(
    .INIT(16'hFFEF)) 
    \irq_i_en[0]_i_5 
       (.I0(Q[2]),
        .I1(Q[3]),
        .I2(i_ahb_wr_en_reg_0),
        .I3(i_haddr_q[6]),
        .O(\irq_i_en[0]_i_5_n_0 ));
  FDCE \irq_i_en_reg[0] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(nxt_irq_i_en),
        .Q(p_9_in));
  FDCE \irq_prev_reg[0] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(IRQ),
        .Q(int_prev[1]));
  LUT6 #(
    .INIT(64'h00000000FFFFABAA)) 
    \latched_excpt_num[0]_i_1 
       (.I0(\i_pend_state_reg[4]_0 [1]),
        .I1(\latched_excpt_num_reg[0] ),
        .I2(\latched_excpt_num_reg[0]_0 ),
        .I3(nvic_excpt_fault_req),
        .I4(\HRDATA_reg[16]_0 [0]),
        .I5(\i_pend_state_reg[4]_0 [0]),
        .O(\i_pend_state_reg[1]_0 ));
  FDCE nmi_prev_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\irq_prev_reg[0]_0 ),
        .D(NMI),
        .Q(int_prev[0]));
  LUT6 #(
    .INIT(64'h22F2FFFF22F222F2)) 
    \pend_lvl_tree[1]_i_2 
       (.I0(\i_pend_state_reg[4]_0 [4]),
        .I1(\pend_lvl_tree_reg[1] [1]),
        .I2(en_pend2),
        .I3(\pend_lvl_tree_reg[1]_0 ),
        .I4(\HRDATA_reg[23]_2 [1]),
        .I5(\i_pend_state_reg[4]_0 [3]),
        .O(\i_pend_state_reg[4]_1 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    pend_tree_i_1
       (.I0(pend_tree_reg),
        .I1(\i_pend_state_reg[4]_0 [4]),
        .I2(en_pend2),
        .I3(\i_pend_state_reg[4]_0 [3]),
        .O(nxt_pend_tree));
  FDPE reset_sync_reg
       (.C(HCLK),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\irq_prev_reg[0]_0 ),
        .Q(reset_sync));
  LUT6 #(
    .INIT(64'hFFFFFFFF757FFFFF)) 
    tck_cnt_flag_i_2
       (.I0(tck_cnt_flag_i_5_n_0),
        .I1(i_ahb_wr_en_reg_0),
        .I2(Q[1]),
        .I3(i_ahb_rd_en_reg_0),
        .I4(Q[2]),
        .I5(Q[0]),
        .O(i_ahb_wr_en_reg_1));
  (* SOFT_HLUTNM = "soft_lutpair285" *) 
  LUT2 #(
    .INIT(4'hE)) 
    tck_cnt_flag_i_3
       (.I0(i_haddr_q[10]),
        .I1(i_haddr_q[11]),
        .O(\i_haddr_q_reg[10]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair278" *) 
  LUT3 #(
    .INIT(8'h01)) 
    tck_cnt_flag_i_5
       (.I0(Q[3]),
        .I1(i_haddr_q[7]),
        .I2(i_haddr_q[6]),
        .O(tck_cnt_flag_i_5_n_0));
  LUT6 #(
    .INIT(64'h0008000000000000)) 
    \tck_count[23]_i_3 
       (.I0(\tck_reload[23]_i_2_n_0 ),
        .I1(\tck_count[23]_i_6_n_0 ),
        .I2(Q[3]),
        .I3(i_haddr_q[6]),
        .I4(Q[1]),
        .I5(i_ahb_wr_en_reg_0),
        .O(\i_haddr_q_reg[5]_1 ));
  LUT5 #(
    .INIT(32'hFFFFFFDF)) 
    \tck_count[23]_i_5 
       (.I0(\tck_count[23]_i_9_n_0 ),
        .I1(\i_haddr_q_reg[5]_0 ),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(i_haddr_q[11]),
        .O(\i_haddr_q_reg[4]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair268" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \tck_count[23]_i_6 
       (.I0(Q[2]),
        .I1(Q[0]),
        .O(\tck_count[23]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair276" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    \tck_count[23]_i_9 
       (.I0(i_haddr_q[7]),
        .I1(Q[5]),
        .I2(Q[4]),
        .I3(i_haddr_q[10]),
        .O(\tck_count[23]_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair284" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    tck_en_i_1
       (.I0(HWDATA[0]),
        .I1(\u_ahb_os/tck_ctrl_en ),
        .I2(p_6_in[0]),
        .O(\HWDATA_reg[0] ));
  LUT6 #(
    .INIT(64'h0000000000000200)) 
    tck_en_i_2
       (.I0(\tck_count[23]_i_9_n_0 ),
        .I1(i_haddr_q[11]),
        .I2(Q[1]),
        .I3(tck_en_i_3_n_0),
        .I4(Q[0]),
        .I5(\en_itcm[1]_i_3_n_0 ),
        .O(\u_ahb_os/tck_ctrl_en ));
  (* SOFT_HLUTNM = "soft_lutpair272" *) 
  LUT2 #(
    .INIT(4'h2)) 
    tck_en_i_3
       (.I0(Q[2]),
        .I1(Q[3]),
        .O(tck_en_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair284" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    tck_int_en_i_1
       (.I0(HWDATA[1]),
        .I1(\u_ahb_os/tck_ctrl_en ),
        .I2(p_6_in[1]),
        .O(\HWDATA_reg[1] ));
  LUT6 #(
    .INIT(64'h0000080000000000)) 
    \tck_reload[23]_i_1 
       (.I0(\tck_reload[23]_i_2_n_0 ),
        .I1(Q[2]),
        .I2(Q[3]),
        .I3(i_ahb_wr_en_reg_0),
        .I4(i_haddr_q[6]),
        .I5(\tck_reload[23]_i_3_n_0 ),
        .O(\i_haddr_q_reg[4]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair271" *) 
  LUT5 #(
    .INIT(32'h00000001)) 
    \tck_reload[23]_i_2 
       (.I0(i_haddr_q[10]),
        .I1(Q[4]),
        .I2(Q[5]),
        .I3(i_haddr_q[7]),
        .I4(i_haddr_q[11]),
        .O(\tck_reload[23]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair266" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \tck_reload[23]_i_3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\tck_reload[23]_i_3_n_0 ));
endmodule

(* ORIG_REF_NAME = "cm1_nvic_ahb_os" *) 
module design_1_CORTEXM1_AXI_0_1_cm1_nvic_ahb_os
   (Q,
    p_6_in,
    \i_svc_lvl_reg[0]_0 ,
    \i_svc_lvl_reg[0]_1 ,
    \tck_reload_reg[23]_0 ,
    \i_svc_lvl_reg[1]_0 ,
    \i_psv_lvl_reg[1]_0 ,
    \i_svc_lvl_reg[1]_1 ,
    \tck_count_reg[14]_0 ,
    tck_to_zero,
    D,
    \i_tck_lvl_reg[1]_0 ,
    \i_tck_lvl_reg[0]_0 ,
    \tck_reload_reg[16]_0 ,
    \tck_reload_reg[0]_0 ,
    tck_en_reg_0,
    HCLK,
    \tck_reload_reg[13]_0 ,
    tck_int_en_reg_0,
    \tck_count_reg[23]_0 ,
    \pend_lvl_num_reg[0] ,
    \pend_lvl_tree_reg[0] ,
    \pend_lvl_tree_reg[0]_0 ,
    tck_cnt_flag_reg_0,
    \tck_count_reg[0]_0 ,
    \pend_lvl_num_reg[0]_0 ,
    \pend_lvl_num_reg[0]_1 ,
    en_pend2,
    \pend_lvl_tree_reg[0]_1 ,
    \pend_lvl_num_reg[0]_2 ,
    nxt_pend_lvl_tree,
    E,
    HWDATA,
    \i_svc_lvl_reg[1]_2 ,
    \i_svc_lvl_reg[1]_3 ,
    \i_psv_lvl_reg[1]_1 ,
    tck_cnt_flag_reg_1,
    tck_cnt_flag_reg_2);
  output [20:0]Q;
  output [1:0]p_6_in;
  output \i_svc_lvl_reg[0]_0 ;
  output \i_svc_lvl_reg[0]_1 ;
  output [20:0]\tck_reload_reg[23]_0 ;
  output \i_svc_lvl_reg[1]_0 ;
  output [1:0]\i_psv_lvl_reg[1]_0 ;
  output \i_svc_lvl_reg[1]_1 ;
  output \tck_count_reg[14]_0 ;
  output tck_to_zero;
  output [3:0]D;
  output [1:0]\i_tck_lvl_reg[1]_0 ;
  output [0:0]\i_tck_lvl_reg[0]_0 ;
  output \tck_reload_reg[16]_0 ;
  output \tck_reload_reg[0]_0 ;
  input tck_en_reg_0;
  input HCLK;
  input \tck_reload_reg[13]_0 ;
  input tck_int_en_reg_0;
  input \tck_count_reg[23]_0 ;
  input \pend_lvl_num_reg[0] ;
  input \pend_lvl_tree_reg[0] ;
  input [1:0]\pend_lvl_tree_reg[0]_0 ;
  input [4:0]tck_cnt_flag_reg_0;
  input \tck_count_reg[0]_0 ;
  input \pend_lvl_num_reg[0]_0 ;
  input \pend_lvl_num_reg[0]_1 ;
  input [0:0]en_pend2;
  input \pend_lvl_tree_reg[0]_1 ;
  input \pend_lvl_num_reg[0]_2 ;
  input [0:0]nxt_pend_lvl_tree;
  input [0:0]E;
  input [25:0]HWDATA;
  input \i_svc_lvl_reg[1]_2 ;
  input \i_svc_lvl_reg[1]_3 ;
  input [0:0]\i_psv_lvl_reg[1]_1 ;
  input tck_cnt_flag_reg_1;
  input tck_cnt_flag_reg_2;

  wire [3:0]D;
  wire [0:0]E;
  wire HCLK;
  wire [25:0]HWDATA;
  wire [20:0]Q;
  wire [0:0]en_pend2;
  wire [1:0]\i_psv_lvl_reg[1]_0 ;
  wire [0:0]\i_psv_lvl_reg[1]_1 ;
  wire \i_svc_lvl[0]_i_1_n_0 ;
  wire \i_svc_lvl[1]_i_1_n_0 ;
  wire \i_svc_lvl_reg[0]_0 ;
  wire \i_svc_lvl_reg[0]_1 ;
  wire \i_svc_lvl_reg[1]_0 ;
  wire \i_svc_lvl_reg[1]_1 ;
  wire \i_svc_lvl_reg[1]_2 ;
  wire \i_svc_lvl_reg[1]_3 ;
  wire [0:0]\i_tck_lvl_reg[0]_0 ;
  wire [1:0]\i_tck_lvl_reg[1]_0 ;
  wire [0:0]nxt_pend_lvl_tree;
  wire [23:0]nxt_tck_count;
  wire [23:1]nxt_tck_count1;
  wire nxt_tck_count1_carry__0_i_1_n_0;
  wire nxt_tck_count1_carry__0_i_2_n_0;
  wire nxt_tck_count1_carry__0_i_3_n_0;
  wire nxt_tck_count1_carry__0_i_4_n_0;
  wire nxt_tck_count1_carry__0_n_0;
  wire nxt_tck_count1_carry__0_n_1;
  wire nxt_tck_count1_carry__0_n_2;
  wire nxt_tck_count1_carry__0_n_3;
  wire nxt_tck_count1_carry__1_i_1_n_0;
  wire nxt_tck_count1_carry__1_i_2_n_0;
  wire nxt_tck_count1_carry__1_i_3_n_0;
  wire nxt_tck_count1_carry__1_i_4_n_0;
  wire nxt_tck_count1_carry__1_n_0;
  wire nxt_tck_count1_carry__1_n_1;
  wire nxt_tck_count1_carry__1_n_2;
  wire nxt_tck_count1_carry__1_n_3;
  wire nxt_tck_count1_carry__2_i_1_n_0;
  wire nxt_tck_count1_carry__2_i_2_n_0;
  wire nxt_tck_count1_carry__2_i_3_n_0;
  wire nxt_tck_count1_carry__2_i_4_n_0;
  wire nxt_tck_count1_carry__2_n_0;
  wire nxt_tck_count1_carry__2_n_1;
  wire nxt_tck_count1_carry__2_n_2;
  wire nxt_tck_count1_carry__2_n_3;
  wire nxt_tck_count1_carry__3_i_1_n_0;
  wire nxt_tck_count1_carry__3_i_2_n_0;
  wire nxt_tck_count1_carry__3_i_3_n_0;
  wire nxt_tck_count1_carry__3_i_4_n_0;
  wire nxt_tck_count1_carry__3_n_0;
  wire nxt_tck_count1_carry__3_n_1;
  wire nxt_tck_count1_carry__3_n_2;
  wire nxt_tck_count1_carry__3_n_3;
  wire nxt_tck_count1_carry__4_i_1_n_0;
  wire nxt_tck_count1_carry__4_i_2_n_0;
  wire nxt_tck_count1_carry__4_i_3_n_0;
  wire nxt_tck_count1_carry__4_n_2;
  wire nxt_tck_count1_carry__4_n_3;
  wire nxt_tck_count1_carry_i_1_n_0;
  wire nxt_tck_count1_carry_i_2_n_0;
  wire nxt_tck_count1_carry_i_3_n_0;
  wire nxt_tck_count1_carry_i_4_n_0;
  wire nxt_tck_count1_carry_n_0;
  wire nxt_tck_count1_carry_n_1;
  wire nxt_tck_count1_carry_n_2;
  wire nxt_tck_count1_carry_n_3;
  wire [1:0]p_6_in;
  wire \pend_lvl_num[0]_i_2_n_0 ;
  wire \pend_lvl_num[0]_i_5_n_0 ;
  wire \pend_lvl_num[4]_i_2_n_0 ;
  wire \pend_lvl_num[4]_i_3_n_0 ;
  wire \pend_lvl_num[4]_i_4_n_0 ;
  wire \pend_lvl_num_reg[0] ;
  wire \pend_lvl_num_reg[0]_0 ;
  wire \pend_lvl_num_reg[0]_1 ;
  wire \pend_lvl_num_reg[0]_2 ;
  wire \pend_lvl_tree[0]_i_2_n_0 ;
  wire \pend_lvl_tree_reg[0] ;
  wire [1:0]\pend_lvl_tree_reg[0]_0 ;
  wire \pend_lvl_tree_reg[0]_1 ;
  wire tck_cnt_flag;
  wire tck_cnt_flag_i_1_n_0;
  wire [4:0]tck_cnt_flag_reg_0;
  wire tck_cnt_flag_reg_1;
  wire tck_cnt_flag_reg_2;
  wire \tck_count[23]_i_10_n_0 ;
  wire \tck_count[23]_i_11_n_0 ;
  wire \tck_count[23]_i_12_n_0 ;
  wire \tck_count[23]_i_4_n_0 ;
  wire \tck_count[23]_i_7_n_0 ;
  wire \tck_count[23]_i_8_n_0 ;
  wire tck_count_en;
  wire \tck_count_reg[0]_0 ;
  wire \tck_count_reg[14]_0 ;
  wire \tck_count_reg[23]_0 ;
  wire \tck_count_reg_n_0_[0] ;
  wire \tck_count_reg_n_0_[14] ;
  wire \tck_count_reg_n_0_[16] ;
  wire tck_en_reg_0;
  wire tck_int_en_reg_0;
  wire [16:0]tck_reload;
  wire \tck_reload_reg[0]_0 ;
  wire \tck_reload_reg[13]_0 ;
  wire \tck_reload_reg[16]_0 ;
  wire [20:0]\tck_reload_reg[23]_0 ;
  wire tck_to_zero;
  wire [3:2]NLW_nxt_tck_count1_carry__4_CO_UNCONNECTED;
  wire [3:3]NLW_nxt_tck_count1_carry__4_O_UNCONNECTED;

  LUT5 #(
    .INIT(32'hCCFF4747)) 
    \HRDATA[0]_i_2 
       (.I0(tck_reload[0]),
        .I1(tck_cnt_flag_reg_0[0]),
        .I2(p_6_in[0]),
        .I3(\tck_count_reg_n_0_[0] ),
        .I4(tck_cnt_flag_reg_0[1]),
        .O(\tck_reload_reg[0]_0 ));
  LUT4 #(
    .INIT(16'hD3DF)) 
    \HRDATA[14]_i_2 
       (.I0(\tck_count_reg_n_0_[14] ),
        .I1(tck_cnt_flag_reg_0[0]),
        .I2(tck_cnt_flag_reg_0[1]),
        .I3(tck_reload[14]),
        .O(\tck_count_reg[14]_0 ));
  LUT5 #(
    .INIT(32'hCCFF4747)) 
    \HRDATA[16]_i_3 
       (.I0(tck_reload[16]),
        .I1(tck_cnt_flag_reg_0[0]),
        .I2(tck_cnt_flag),
        .I3(\tck_count_reg_n_0_[16] ),
        .I4(tck_cnt_flag_reg_0[1]),
        .O(\tck_reload_reg[16]_0 ));
  FDCE \i_psv_lvl_reg[0] 
       (.C(HCLK),
        .CE(\i_psv_lvl_reg[1]_1 ),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(HWDATA[22]),
        .Q(\i_psv_lvl_reg[1]_0 [0]));
  FDCE \i_psv_lvl_reg[1] 
       (.C(HCLK),
        .CE(\i_psv_lvl_reg[1]_1 ),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(HWDATA[23]),
        .Q(\i_psv_lvl_reg[1]_0 [1]));
  LUT6 #(
    .INIT(64'hFFFFBFFF00008000)) 
    \i_svc_lvl[0]_i_1 
       (.I0(HWDATA[24]),
        .I1(\i_svc_lvl_reg[1]_2 ),
        .I2(tck_cnt_flag_reg_0[0]),
        .I3(tck_cnt_flag_reg_0[2]),
        .I4(\i_svc_lvl_reg[1]_3 ),
        .I5(\i_svc_lvl_reg[0]_1 ),
        .O(\i_svc_lvl[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFBFFF00008000)) 
    \i_svc_lvl[1]_i_1 
       (.I0(HWDATA[25]),
        .I1(\i_svc_lvl_reg[1]_2 ),
        .I2(tck_cnt_flag_reg_0[0]),
        .I3(tck_cnt_flag_reg_0[2]),
        .I4(\i_svc_lvl_reg[1]_3 ),
        .I5(\i_svc_lvl_reg[1]_0 ),
        .O(\i_svc_lvl[1]_i_1_n_0 ));
  FDCE \i_svc_lvl_reg[0] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(\i_svc_lvl[0]_i_1_n_0 ),
        .Q(\i_svc_lvl_reg[0]_1 ));
  FDCE \i_svc_lvl_reg[1] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(\i_svc_lvl[1]_i_1_n_0 ),
        .Q(\i_svc_lvl_reg[1]_0 ));
  FDCE \i_tck_lvl_reg[0] 
       (.C(HCLK),
        .CE(\i_psv_lvl_reg[1]_1 ),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(HWDATA[24]),
        .Q(\i_tck_lvl_reg[1]_0 [0]));
  FDCE \i_tck_lvl_reg[1] 
       (.C(HCLK),
        .CE(\i_psv_lvl_reg[1]_1 ),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(HWDATA[25]),
        .Q(\i_tck_lvl_reg[1]_0 [1]));
  CARRY4 nxt_tck_count1_carry
       (.CI(1'b0),
        .CO({nxt_tck_count1_carry_n_0,nxt_tck_count1_carry_n_1,nxt_tck_count1_carry_n_2,nxt_tck_count1_carry_n_3}),
        .CYINIT(\tck_count_reg_n_0_[0] ),
        .DI(Q[3:0]),
        .O(nxt_tck_count1[4:1]),
        .S({nxt_tck_count1_carry_i_1_n_0,nxt_tck_count1_carry_i_2_n_0,nxt_tck_count1_carry_i_3_n_0,nxt_tck_count1_carry_i_4_n_0}));
  CARRY4 nxt_tck_count1_carry__0
       (.CI(nxt_tck_count1_carry_n_0),
        .CO({nxt_tck_count1_carry__0_n_0,nxt_tck_count1_carry__0_n_1,nxt_tck_count1_carry__0_n_2,nxt_tck_count1_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI(Q[7:4]),
        .O(nxt_tck_count1[8:5]),
        .S({nxt_tck_count1_carry__0_i_1_n_0,nxt_tck_count1_carry__0_i_2_n_0,nxt_tck_count1_carry__0_i_3_n_0,nxt_tck_count1_carry__0_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    nxt_tck_count1_carry__0_i_1
       (.I0(Q[7]),
        .O(nxt_tck_count1_carry__0_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    nxt_tck_count1_carry__0_i_2
       (.I0(Q[6]),
        .O(nxt_tck_count1_carry__0_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    nxt_tck_count1_carry__0_i_3
       (.I0(Q[5]),
        .O(nxt_tck_count1_carry__0_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    nxt_tck_count1_carry__0_i_4
       (.I0(Q[4]),
        .O(nxt_tck_count1_carry__0_i_4_n_0));
  CARRY4 nxt_tck_count1_carry__1
       (.CI(nxt_tck_count1_carry__0_n_0),
        .CO({nxt_tck_count1_carry__1_n_0,nxt_tck_count1_carry__1_n_1,nxt_tck_count1_carry__1_n_2,nxt_tck_count1_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI(Q[11:8]),
        .O(nxt_tck_count1[12:9]),
        .S({nxt_tck_count1_carry__1_i_1_n_0,nxt_tck_count1_carry__1_i_2_n_0,nxt_tck_count1_carry__1_i_3_n_0,nxt_tck_count1_carry__1_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    nxt_tck_count1_carry__1_i_1
       (.I0(Q[11]),
        .O(nxt_tck_count1_carry__1_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    nxt_tck_count1_carry__1_i_2
       (.I0(Q[10]),
        .O(nxt_tck_count1_carry__1_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    nxt_tck_count1_carry__1_i_3
       (.I0(Q[9]),
        .O(nxt_tck_count1_carry__1_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    nxt_tck_count1_carry__1_i_4
       (.I0(Q[8]),
        .O(nxt_tck_count1_carry__1_i_4_n_0));
  CARRY4 nxt_tck_count1_carry__2
       (.CI(nxt_tck_count1_carry__1_n_0),
        .CO({nxt_tck_count1_carry__2_n_0,nxt_tck_count1_carry__2_n_1,nxt_tck_count1_carry__2_n_2,nxt_tck_count1_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI({\tck_count_reg_n_0_[16] ,Q[13],\tck_count_reg_n_0_[14] ,Q[12]}),
        .O(nxt_tck_count1[16:13]),
        .S({nxt_tck_count1_carry__2_i_1_n_0,nxt_tck_count1_carry__2_i_2_n_0,nxt_tck_count1_carry__2_i_3_n_0,nxt_tck_count1_carry__2_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    nxt_tck_count1_carry__2_i_1
       (.I0(\tck_count_reg_n_0_[16] ),
        .O(nxt_tck_count1_carry__2_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    nxt_tck_count1_carry__2_i_2
       (.I0(Q[13]),
        .O(nxt_tck_count1_carry__2_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    nxt_tck_count1_carry__2_i_3
       (.I0(\tck_count_reg_n_0_[14] ),
        .O(nxt_tck_count1_carry__2_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    nxt_tck_count1_carry__2_i_4
       (.I0(Q[12]),
        .O(nxt_tck_count1_carry__2_i_4_n_0));
  CARRY4 nxt_tck_count1_carry__3
       (.CI(nxt_tck_count1_carry__2_n_0),
        .CO({nxt_tck_count1_carry__3_n_0,nxt_tck_count1_carry__3_n_1,nxt_tck_count1_carry__3_n_2,nxt_tck_count1_carry__3_n_3}),
        .CYINIT(1'b0),
        .DI(Q[17:14]),
        .O(nxt_tck_count1[20:17]),
        .S({nxt_tck_count1_carry__3_i_1_n_0,nxt_tck_count1_carry__3_i_2_n_0,nxt_tck_count1_carry__3_i_3_n_0,nxt_tck_count1_carry__3_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    nxt_tck_count1_carry__3_i_1
       (.I0(Q[17]),
        .O(nxt_tck_count1_carry__3_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    nxt_tck_count1_carry__3_i_2
       (.I0(Q[16]),
        .O(nxt_tck_count1_carry__3_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    nxt_tck_count1_carry__3_i_3
       (.I0(Q[15]),
        .O(nxt_tck_count1_carry__3_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    nxt_tck_count1_carry__3_i_4
       (.I0(Q[14]),
        .O(nxt_tck_count1_carry__3_i_4_n_0));
  CARRY4 nxt_tck_count1_carry__4
       (.CI(nxt_tck_count1_carry__3_n_0),
        .CO({NLW_nxt_tck_count1_carry__4_CO_UNCONNECTED[3:2],nxt_tck_count1_carry__4_n_2,nxt_tck_count1_carry__4_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,Q[19:18]}),
        .O({NLW_nxt_tck_count1_carry__4_O_UNCONNECTED[3],nxt_tck_count1[23:21]}),
        .S({1'b0,nxt_tck_count1_carry__4_i_1_n_0,nxt_tck_count1_carry__4_i_2_n_0,nxt_tck_count1_carry__4_i_3_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    nxt_tck_count1_carry__4_i_1
       (.I0(Q[20]),
        .O(nxt_tck_count1_carry__4_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    nxt_tck_count1_carry__4_i_2
       (.I0(Q[19]),
        .O(nxt_tck_count1_carry__4_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    nxt_tck_count1_carry__4_i_3
       (.I0(Q[18]),
        .O(nxt_tck_count1_carry__4_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    nxt_tck_count1_carry_i_1
       (.I0(Q[3]),
        .O(nxt_tck_count1_carry_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    nxt_tck_count1_carry_i_2
       (.I0(Q[2]),
        .O(nxt_tck_count1_carry_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    nxt_tck_count1_carry_i_3
       (.I0(Q[1]),
        .O(nxt_tck_count1_carry_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    nxt_tck_count1_carry_i_4
       (.I0(Q[0]),
        .O(nxt_tck_count1_carry_i_4_n_0));
  LUT6 #(
    .INIT(64'h4F114F1F44114111)) 
    \pend_lvl_num[0]_i_1 
       (.I0(\pend_lvl_num[0]_i_2_n_0 ),
        .I1(\i_svc_lvl_reg[0]_1 ),
        .I2(\pend_lvl_num_reg[0]_0 ),
        .I3(\pend_lvl_num_reg[0]_1 ),
        .I4(\i_tck_lvl_reg[1]_0 [0]),
        .I5(\pend_lvl_num[0]_i_5_n_0 ),
        .O(D[0]));
  LUT3 #(
    .INIT(8'h8F)) 
    \pend_lvl_num[0]_i_2 
       (.I0(\i_svc_lvl_reg[1]_0 ),
        .I1(\pend_lvl_num_reg[0]_2 ),
        .I2(\pend_lvl_num_reg[0] ),
        .O(\pend_lvl_num[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hAFAF8FAF)) 
    \pend_lvl_num[0]_i_5 
       (.I0(\i_psv_lvl_reg[1]_0 [0]),
        .I1(\i_svc_lvl_reg[0]_0 ),
        .I2(\pend_lvl_num[4]_i_4_n_0 ),
        .I3(\pend_lvl_tree[0]_i_2_n_0 ),
        .I4(\pend_lvl_tree_reg[0]_1 ),
        .O(\pend_lvl_num[0]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \pend_lvl_num[1]_i_1 
       (.I0(\pend_lvl_num[4]_i_3_n_0 ),
        .I1(\pend_lvl_num[4]_i_2_n_0 ),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair302" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \pend_lvl_num[2]_i_1 
       (.I0(\pend_lvl_num[4]_i_3_n_0 ),
        .I1(\pend_lvl_num[4]_i_2_n_0 ),
        .O(D[2]));
  (* SOFT_HLUTNM = "soft_lutpair302" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \pend_lvl_num[4]_i_1 
       (.I0(en_pend2),
        .I1(\pend_lvl_num[4]_i_2_n_0 ),
        .I2(\pend_lvl_num[4]_i_3_n_0 ),
        .O(D[3]));
  LUT6 #(
    .INIT(64'hF0FFC0FFA0AA8088)) 
    \pend_lvl_num[4]_i_2 
       (.I0(\i_tck_lvl_reg[1]_0 [0]),
        .I1(\pend_lvl_tree_reg[0]_1 ),
        .I2(\i_psv_lvl_reg[1]_0 [0]),
        .I3(\pend_lvl_num[4]_i_4_n_0 ),
        .I4(\i_svc_lvl_reg[0]_0 ),
        .I5(\pend_lvl_num_reg[0]_0 ),
        .O(\pend_lvl_num[4]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair300" *) 
  LUT5 #(
    .INIT(32'h000002FF)) 
    \pend_lvl_num[4]_i_3 
       (.I0(\pend_lvl_tree[0]_i_2_n_0 ),
        .I1(\pend_lvl_tree_reg[0]_1 ),
        .I2(\i_svc_lvl_reg[1]_1 ),
        .I3(\i_svc_lvl_reg[0]_1 ),
        .I4(\pend_lvl_num[0]_i_2_n_0 ),
        .O(\pend_lvl_num[4]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h0FBF0000)) 
    \pend_lvl_num[4]_i_4 
       (.I0(\i_svc_lvl_reg[1]_0 ),
        .I1(\pend_lvl_num_reg[0] ),
        .I2(\i_psv_lvl_reg[1]_0 [1]),
        .I3(\pend_lvl_tree_reg[0] ),
        .I4(\pend_lvl_tree_reg[0]_0 [0]),
        .O(\pend_lvl_num[4]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \pend_lvl_tree[0]_i_1 
       (.I0(\pend_lvl_tree[0]_i_2_n_0 ),
        .I1(\pend_lvl_tree_reg[0]_1 ),
        .I2(\i_svc_lvl_reg[1]_1 ),
        .I3(\i_svc_lvl_reg[0]_0 ),
        .O(\i_tck_lvl_reg[0]_0 ));
  LUT4 #(
    .INIT(16'hBFFB)) 
    \pend_lvl_tree[0]_i_2 
       (.I0(\i_tck_lvl_reg[1]_0 [0]),
        .I1(\pend_lvl_tree_reg[0]_0 [1]),
        .I2(\i_tck_lvl_reg[1]_0 [1]),
        .I3(nxt_pend_lvl_tree),
        .O(\pend_lvl_tree[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000B0F0F0)) 
    \pend_lvl_tree[0]_i_4 
       (.I0(\i_svc_lvl_reg[1]_0 ),
        .I1(\pend_lvl_num_reg[0] ),
        .I2(\pend_lvl_tree_reg[0]_0 [0]),
        .I3(\pend_lvl_tree_reg[0] ),
        .I4(\i_psv_lvl_reg[1]_0 [1]),
        .I5(\i_psv_lvl_reg[1]_0 [0]),
        .O(\i_svc_lvl_reg[1]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair300" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \pend_lvl_tree[0]_i_5 
       (.I0(\i_svc_lvl_reg[0]_1 ),
        .I1(\pend_lvl_num[0]_i_2_n_0 ),
        .O(\i_svc_lvl_reg[0]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFEFFFF0000)) 
    tck_cnt_flag_i_1
       (.I0(tck_cnt_flag_reg_1),
        .I1(tck_cnt_flag_reg_0[4]),
        .I2(tck_cnt_flag_reg_2),
        .I3(tck_cnt_flag_reg_0[3]),
        .I4(tck_to_zero),
        .I5(tck_cnt_flag),
        .O(tck_cnt_flag_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair301" *) 
  LUT4 #(
    .INIT(16'h0040)) 
    tck_cnt_flag_i_4
       (.I0(\tck_count[23]_i_4_n_0 ),
        .I1(p_6_in[0]),
        .I2(\tck_count_reg_n_0_[0] ),
        .I3(\tck_count_reg[0]_0 ),
        .O(tck_to_zero));
  FDCE tck_cnt_flag_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(tck_cnt_flag_i_1_n_0),
        .Q(tck_cnt_flag));
  (* SOFT_HLUTNM = "soft_lutpair301" *) 
  LUT4 #(
    .INIT(16'h000E)) 
    \tck_count[0]_i_1 
       (.I0(\tck_count[23]_i_4_n_0 ),
        .I1(tck_reload[0]),
        .I2(\tck_count_reg[0]_0 ),
        .I3(\tck_count_reg_n_0_[0] ),
        .O(nxt_tck_count[0]));
  LUT5 #(
    .INIT(32'hF0E01000)) 
    \tck_count[10]_i_1 
       (.I0(\tck_count_reg_n_0_[0] ),
        .I1(\tck_count[23]_i_4_n_0 ),
        .I2(\tck_count_reg[23]_0 ),
        .I3(\tck_reload_reg[23]_0 [9]),
        .I4(nxt_tck_count1[10]),
        .O(nxt_tck_count[10]));
  LUT5 #(
    .INIT(32'hF0E01000)) 
    \tck_count[11]_i_1 
       (.I0(\tck_count_reg_n_0_[0] ),
        .I1(\tck_count[23]_i_4_n_0 ),
        .I2(\tck_count_reg[23]_0 ),
        .I3(\tck_reload_reg[23]_0 [10]),
        .I4(nxt_tck_count1[11]),
        .O(nxt_tck_count[11]));
  LUT5 #(
    .INIT(32'hF0E01000)) 
    \tck_count[12]_i_1 
       (.I0(\tck_count_reg_n_0_[0] ),
        .I1(\tck_count[23]_i_4_n_0 ),
        .I2(\tck_count_reg[23]_0 ),
        .I3(\tck_reload_reg[23]_0 [11]),
        .I4(nxt_tck_count1[12]),
        .O(nxt_tck_count[12]));
  LUT5 #(
    .INIT(32'hF0E01000)) 
    \tck_count[13]_i_1 
       (.I0(\tck_count_reg_n_0_[0] ),
        .I1(\tck_count[23]_i_4_n_0 ),
        .I2(\tck_count_reg[23]_0 ),
        .I3(\tck_reload_reg[23]_0 [12]),
        .I4(nxt_tck_count1[13]),
        .O(nxt_tck_count[13]));
  LUT5 #(
    .INIT(32'hF0E01000)) 
    \tck_count[14]_i_1 
       (.I0(\tck_count_reg_n_0_[0] ),
        .I1(\tck_count[23]_i_4_n_0 ),
        .I2(\tck_count_reg[23]_0 ),
        .I3(tck_reload[14]),
        .I4(nxt_tck_count1[14]),
        .O(nxt_tck_count[14]));
  LUT5 #(
    .INIT(32'hF0E01000)) 
    \tck_count[15]_i_1 
       (.I0(\tck_count_reg_n_0_[0] ),
        .I1(\tck_count[23]_i_4_n_0 ),
        .I2(\tck_count_reg[23]_0 ),
        .I3(\tck_reload_reg[23]_0 [13]),
        .I4(nxt_tck_count1[15]),
        .O(nxt_tck_count[15]));
  LUT5 #(
    .INIT(32'hF0E01000)) 
    \tck_count[16]_i_1 
       (.I0(\tck_count_reg_n_0_[0] ),
        .I1(\tck_count[23]_i_4_n_0 ),
        .I2(\tck_count_reg[23]_0 ),
        .I3(tck_reload[16]),
        .I4(nxt_tck_count1[16]),
        .O(nxt_tck_count[16]));
  LUT5 #(
    .INIT(32'hF0E01000)) 
    \tck_count[17]_i_1 
       (.I0(\tck_count_reg_n_0_[0] ),
        .I1(\tck_count[23]_i_4_n_0 ),
        .I2(\tck_count_reg[23]_0 ),
        .I3(\tck_reload_reg[23]_0 [14]),
        .I4(nxt_tck_count1[17]),
        .O(nxt_tck_count[17]));
  LUT5 #(
    .INIT(32'hF0E01000)) 
    \tck_count[18]_i_1 
       (.I0(\tck_count_reg_n_0_[0] ),
        .I1(\tck_count[23]_i_4_n_0 ),
        .I2(\tck_count_reg[23]_0 ),
        .I3(\tck_reload_reg[23]_0 [15]),
        .I4(nxt_tck_count1[18]),
        .O(nxt_tck_count[18]));
  LUT5 #(
    .INIT(32'hF0E01000)) 
    \tck_count[19]_i_1 
       (.I0(\tck_count_reg_n_0_[0] ),
        .I1(\tck_count[23]_i_4_n_0 ),
        .I2(\tck_count_reg[23]_0 ),
        .I3(\tck_reload_reg[23]_0 [16]),
        .I4(nxt_tck_count1[19]),
        .O(nxt_tck_count[19]));
  LUT5 #(
    .INIT(32'hF0E01000)) 
    \tck_count[1]_i_1 
       (.I0(\tck_count_reg_n_0_[0] ),
        .I1(\tck_count[23]_i_4_n_0 ),
        .I2(\tck_count_reg[23]_0 ),
        .I3(\tck_reload_reg[23]_0 [0]),
        .I4(nxt_tck_count1[1]),
        .O(nxt_tck_count[1]));
  LUT5 #(
    .INIT(32'hF0E01000)) 
    \tck_count[20]_i_1 
       (.I0(\tck_count_reg_n_0_[0] ),
        .I1(\tck_count[23]_i_4_n_0 ),
        .I2(\tck_count_reg[23]_0 ),
        .I3(\tck_reload_reg[23]_0 [17]),
        .I4(nxt_tck_count1[20]),
        .O(nxt_tck_count[20]));
  LUT5 #(
    .INIT(32'hF0E01000)) 
    \tck_count[21]_i_1 
       (.I0(\tck_count_reg_n_0_[0] ),
        .I1(\tck_count[23]_i_4_n_0 ),
        .I2(\tck_count_reg[23]_0 ),
        .I3(\tck_reload_reg[23]_0 [18]),
        .I4(nxt_tck_count1[21]),
        .O(nxt_tck_count[21]));
  LUT5 #(
    .INIT(32'hF0E01000)) 
    \tck_count[22]_i_1 
       (.I0(\tck_count_reg_n_0_[0] ),
        .I1(\tck_count[23]_i_4_n_0 ),
        .I2(\tck_count_reg[23]_0 ),
        .I3(\tck_reload_reg[23]_0 [19]),
        .I4(nxt_tck_count1[22]),
        .O(nxt_tck_count[22]));
  LUT2 #(
    .INIT(4'hE)) 
    \tck_count[23]_i_1 
       (.I0(p_6_in[0]),
        .I1(\tck_count_reg[0]_0 ),
        .O(tck_count_en));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \tck_count[23]_i_10 
       (.I0(Q[4]),
        .I1(\tck_count_reg_n_0_[16] ),
        .I2(Q[5]),
        .I3(Q[19]),
        .O(\tck_count[23]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \tck_count[23]_i_11 
       (.I0(Q[8]),
        .I1(Q[11]),
        .I2(Q[2]),
        .I3(Q[12]),
        .O(\tck_count[23]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \tck_count[23]_i_12 
       (.I0(Q[7]),
        .I1(Q[16]),
        .I2(Q[17]),
        .I3(Q[20]),
        .O(\tck_count[23]_i_12_n_0 ));
  LUT5 #(
    .INIT(32'hF0E01000)) 
    \tck_count[23]_i_2 
       (.I0(\tck_count_reg_n_0_[0] ),
        .I1(\tck_count[23]_i_4_n_0 ),
        .I2(\tck_count_reg[23]_0 ),
        .I3(\tck_reload_reg[23]_0 [20]),
        .I4(nxt_tck_count1[23]),
        .O(nxt_tck_count[23]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \tck_count[23]_i_4 
       (.I0(\tck_count[23]_i_7_n_0 ),
        .I1(Q[1]),
        .I2(Q[15]),
        .I3(Q[13]),
        .I4(Q[14]),
        .I5(\tck_count[23]_i_8_n_0 ),
        .O(\tck_count[23]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \tck_count[23]_i_7 
       (.I0(Q[3]),
        .I1(Q[6]),
        .I2(Q[0]),
        .I3(\tck_count_reg_n_0_[14] ),
        .O(\tck_count[23]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \tck_count[23]_i_8 
       (.I0(\tck_count[23]_i_10_n_0 ),
        .I1(\tck_count[23]_i_11_n_0 ),
        .I2(\tck_count[23]_i_12_n_0 ),
        .I3(Q[10]),
        .I4(Q[9]),
        .I5(Q[18]),
        .O(\tck_count[23]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'hF0E01000)) 
    \tck_count[2]_i_1 
       (.I0(\tck_count_reg_n_0_[0] ),
        .I1(\tck_count[23]_i_4_n_0 ),
        .I2(\tck_count_reg[23]_0 ),
        .I3(\tck_reload_reg[23]_0 [1]),
        .I4(nxt_tck_count1[2]),
        .O(nxt_tck_count[2]));
  LUT5 #(
    .INIT(32'hF0E01000)) 
    \tck_count[3]_i_1 
       (.I0(\tck_count_reg_n_0_[0] ),
        .I1(\tck_count[23]_i_4_n_0 ),
        .I2(\tck_count_reg[23]_0 ),
        .I3(\tck_reload_reg[23]_0 [2]),
        .I4(nxt_tck_count1[3]),
        .O(nxt_tck_count[3]));
  LUT5 #(
    .INIT(32'hF0E01000)) 
    \tck_count[4]_i_1 
       (.I0(\tck_count_reg_n_0_[0] ),
        .I1(\tck_count[23]_i_4_n_0 ),
        .I2(\tck_count_reg[23]_0 ),
        .I3(\tck_reload_reg[23]_0 [3]),
        .I4(nxt_tck_count1[4]),
        .O(nxt_tck_count[4]));
  LUT5 #(
    .INIT(32'hF0E01000)) 
    \tck_count[5]_i_1 
       (.I0(\tck_count_reg_n_0_[0] ),
        .I1(\tck_count[23]_i_4_n_0 ),
        .I2(\tck_count_reg[23]_0 ),
        .I3(\tck_reload_reg[23]_0 [4]),
        .I4(nxt_tck_count1[5]),
        .O(nxt_tck_count[5]));
  LUT5 #(
    .INIT(32'hF0E01000)) 
    \tck_count[6]_i_1 
       (.I0(\tck_count_reg_n_0_[0] ),
        .I1(\tck_count[23]_i_4_n_0 ),
        .I2(\tck_count_reg[23]_0 ),
        .I3(\tck_reload_reg[23]_0 [5]),
        .I4(nxt_tck_count1[6]),
        .O(nxt_tck_count[6]));
  LUT5 #(
    .INIT(32'hF0E01000)) 
    \tck_count[7]_i_1 
       (.I0(\tck_count_reg_n_0_[0] ),
        .I1(\tck_count[23]_i_4_n_0 ),
        .I2(\tck_count_reg[23]_0 ),
        .I3(\tck_reload_reg[23]_0 [6]),
        .I4(nxt_tck_count1[7]),
        .O(nxt_tck_count[7]));
  LUT5 #(
    .INIT(32'hF0E01000)) 
    \tck_count[8]_i_1 
       (.I0(\tck_count_reg_n_0_[0] ),
        .I1(\tck_count[23]_i_4_n_0 ),
        .I2(\tck_count_reg[23]_0 ),
        .I3(\tck_reload_reg[23]_0 [7]),
        .I4(nxt_tck_count1[8]),
        .O(nxt_tck_count[8]));
  LUT5 #(
    .INIT(32'hF0E01000)) 
    \tck_count[9]_i_1 
       (.I0(\tck_count_reg_n_0_[0] ),
        .I1(\tck_count[23]_i_4_n_0 ),
        .I2(\tck_count_reg[23]_0 ),
        .I3(\tck_reload_reg[23]_0 [8]),
        .I4(nxt_tck_count1[9]),
        .O(nxt_tck_count[9]));
  FDCE \tck_count_reg[0] 
       (.C(HCLK),
        .CE(tck_count_en),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(nxt_tck_count[0]),
        .Q(\tck_count_reg_n_0_[0] ));
  FDCE \tck_count_reg[10] 
       (.C(HCLK),
        .CE(tck_count_en),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(nxt_tck_count[10]),
        .Q(Q[9]));
  FDCE \tck_count_reg[11] 
       (.C(HCLK),
        .CE(tck_count_en),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(nxt_tck_count[11]),
        .Q(Q[10]));
  FDCE \tck_count_reg[12] 
       (.C(HCLK),
        .CE(tck_count_en),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(nxt_tck_count[12]),
        .Q(Q[11]));
  FDCE \tck_count_reg[13] 
       (.C(HCLK),
        .CE(tck_count_en),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(nxt_tck_count[13]),
        .Q(Q[12]));
  FDCE \tck_count_reg[14] 
       (.C(HCLK),
        .CE(tck_count_en),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(nxt_tck_count[14]),
        .Q(\tck_count_reg_n_0_[14] ));
  FDCE \tck_count_reg[15] 
       (.C(HCLK),
        .CE(tck_count_en),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(nxt_tck_count[15]),
        .Q(Q[13]));
  FDCE \tck_count_reg[16] 
       (.C(HCLK),
        .CE(tck_count_en),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(nxt_tck_count[16]),
        .Q(\tck_count_reg_n_0_[16] ));
  FDCE \tck_count_reg[17] 
       (.C(HCLK),
        .CE(tck_count_en),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(nxt_tck_count[17]),
        .Q(Q[14]));
  FDCE \tck_count_reg[18] 
       (.C(HCLK),
        .CE(tck_count_en),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(nxt_tck_count[18]),
        .Q(Q[15]));
  FDCE \tck_count_reg[19] 
       (.C(HCLK),
        .CE(tck_count_en),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(nxt_tck_count[19]),
        .Q(Q[16]));
  FDCE \tck_count_reg[1] 
       (.C(HCLK),
        .CE(tck_count_en),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(nxt_tck_count[1]),
        .Q(Q[0]));
  FDCE \tck_count_reg[20] 
       (.C(HCLK),
        .CE(tck_count_en),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(nxt_tck_count[20]),
        .Q(Q[17]));
  FDCE \tck_count_reg[21] 
       (.C(HCLK),
        .CE(tck_count_en),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(nxt_tck_count[21]),
        .Q(Q[18]));
  FDCE \tck_count_reg[22] 
       (.C(HCLK),
        .CE(tck_count_en),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(nxt_tck_count[22]),
        .Q(Q[19]));
  FDCE \tck_count_reg[23] 
       (.C(HCLK),
        .CE(tck_count_en),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(nxt_tck_count[23]),
        .Q(Q[20]));
  FDCE \tck_count_reg[2] 
       (.C(HCLK),
        .CE(tck_count_en),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(nxt_tck_count[2]),
        .Q(Q[1]));
  FDCE \tck_count_reg[3] 
       (.C(HCLK),
        .CE(tck_count_en),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(nxt_tck_count[3]),
        .Q(Q[2]));
  FDCE \tck_count_reg[4] 
       (.C(HCLK),
        .CE(tck_count_en),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(nxt_tck_count[4]),
        .Q(Q[3]));
  FDCE \tck_count_reg[5] 
       (.C(HCLK),
        .CE(tck_count_en),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(nxt_tck_count[5]),
        .Q(Q[4]));
  FDCE \tck_count_reg[6] 
       (.C(HCLK),
        .CE(tck_count_en),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(nxt_tck_count[6]),
        .Q(Q[5]));
  FDCE \tck_count_reg[7] 
       (.C(HCLK),
        .CE(tck_count_en),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(nxt_tck_count[7]),
        .Q(Q[6]));
  FDCE \tck_count_reg[8] 
       (.C(HCLK),
        .CE(tck_count_en),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(nxt_tck_count[8]),
        .Q(Q[7]));
  FDCE \tck_count_reg[9] 
       (.C(HCLK),
        .CE(tck_count_en),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(nxt_tck_count[9]),
        .Q(Q[8]));
  FDCE tck_en_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(tck_en_reg_0),
        .Q(p_6_in[0]));
  FDCE tck_int_en_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(tck_int_en_reg_0),
        .Q(p_6_in[1]));
  FDCE \tck_reload_reg[0] 
       (.C(HCLK),
        .CE(E),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(HWDATA[0]),
        .Q(tck_reload[0]));
  FDCE \tck_reload_reg[10] 
       (.C(HCLK),
        .CE(E),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(HWDATA[10]),
        .Q(\tck_reload_reg[23]_0 [9]));
  FDCE \tck_reload_reg[11] 
       (.C(HCLK),
        .CE(E),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(HWDATA[11]),
        .Q(\tck_reload_reg[23]_0 [10]));
  FDCE \tck_reload_reg[12] 
       (.C(HCLK),
        .CE(E),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(HWDATA[12]),
        .Q(\tck_reload_reg[23]_0 [11]));
  FDCE \tck_reload_reg[13] 
       (.C(HCLK),
        .CE(E),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(HWDATA[13]),
        .Q(\tck_reload_reg[23]_0 [12]));
  FDCE \tck_reload_reg[14] 
       (.C(HCLK),
        .CE(E),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(HWDATA[14]),
        .Q(tck_reload[14]));
  FDCE \tck_reload_reg[15] 
       (.C(HCLK),
        .CE(E),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(HWDATA[15]),
        .Q(\tck_reload_reg[23]_0 [13]));
  FDCE \tck_reload_reg[16] 
       (.C(HCLK),
        .CE(E),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(HWDATA[16]),
        .Q(tck_reload[16]));
  FDCE \tck_reload_reg[17] 
       (.C(HCLK),
        .CE(E),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(HWDATA[17]),
        .Q(\tck_reload_reg[23]_0 [14]));
  FDCE \tck_reload_reg[18] 
       (.C(HCLK),
        .CE(E),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(HWDATA[18]),
        .Q(\tck_reload_reg[23]_0 [15]));
  FDCE \tck_reload_reg[19] 
       (.C(HCLK),
        .CE(E),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(HWDATA[19]),
        .Q(\tck_reload_reg[23]_0 [16]));
  FDCE \tck_reload_reg[1] 
       (.C(HCLK),
        .CE(E),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(HWDATA[1]),
        .Q(\tck_reload_reg[23]_0 [0]));
  FDCE \tck_reload_reg[20] 
       (.C(HCLK),
        .CE(E),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(HWDATA[20]),
        .Q(\tck_reload_reg[23]_0 [17]));
  FDCE \tck_reload_reg[21] 
       (.C(HCLK),
        .CE(E),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(HWDATA[21]),
        .Q(\tck_reload_reg[23]_0 [18]));
  FDCE \tck_reload_reg[22] 
       (.C(HCLK),
        .CE(E),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(HWDATA[22]),
        .Q(\tck_reload_reg[23]_0 [19]));
  FDCE \tck_reload_reg[23] 
       (.C(HCLK),
        .CE(E),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(HWDATA[23]),
        .Q(\tck_reload_reg[23]_0 [20]));
  FDCE \tck_reload_reg[2] 
       (.C(HCLK),
        .CE(E),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(HWDATA[2]),
        .Q(\tck_reload_reg[23]_0 [1]));
  FDCE \tck_reload_reg[3] 
       (.C(HCLK),
        .CE(E),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(HWDATA[3]),
        .Q(\tck_reload_reg[23]_0 [2]));
  FDCE \tck_reload_reg[4] 
       (.C(HCLK),
        .CE(E),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(HWDATA[4]),
        .Q(\tck_reload_reg[23]_0 [3]));
  FDCE \tck_reload_reg[5] 
       (.C(HCLK),
        .CE(E),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(HWDATA[5]),
        .Q(\tck_reload_reg[23]_0 [4]));
  FDCE \tck_reload_reg[6] 
       (.C(HCLK),
        .CE(E),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(HWDATA[6]),
        .Q(\tck_reload_reg[23]_0 [5]));
  FDCE \tck_reload_reg[7] 
       (.C(HCLK),
        .CE(E),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(HWDATA[7]),
        .Q(\tck_reload_reg[23]_0 [6]));
  FDCE \tck_reload_reg[8] 
       (.C(HCLK),
        .CE(E),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(HWDATA[8]),
        .Q(\tck_reload_reg[23]_0 [7]));
  FDCE \tck_reload_reg[9] 
       (.C(HCLK),
        .CE(E),
        .CLR(\tck_reload_reg[13]_0 ),
        .D(HWDATA[9]),
        .Q(\tck_reload_reg[23]_0 [8]));
endmodule

(* ORIG_REF_NAME = "cm1_nvic_main" *) 
module design_1_CORTEXM1_AXI_0_1_cm1_nvic_main
   (r_hdf_actv_reg_0,
    r_nmi_actv_reg_0,
    primask_reg,
    nvic_lockup,
    D,
    E,
    \i_pend_state_reg[1] ,
    \i_tck_lvl_reg[1] ,
    nxt_pend_lvl_tree,
    \i_pend_state_reg[2] ,
    r_hdf_actv_reg_1,
    r_hdf_actv_reg_2,
    int_actv,
    HCLK,
    \r_int_actv_lvl_reg[0]_0 ,
    hdf_actv,
    nmi_actv,
    \latched_excpt_num_reg[4] ,
    nvic_primask,
    pend_tree,
    nvic_excpt_taken,
    \i_pend_state_reg[2]_0 ,
    \pend_lvl_num_reg[0] ,
    lockup_pend_reg_0,
    LOCKUP,
    biu_wfault,
    int_fault_ex,
    instr_faulted,
    \pend_lvl_num_reg[0]_0 ,
    \pend_lvl_tree_reg[1] ,
    \pend_lvl_tree_reg[1]_0 ,
    nvic_excpt_svc_valid,
    svc_lvl_0,
    Q,
    \r_int_actv_lvl_reg[1]_0 );
  output r_hdf_actv_reg_0;
  output r_nmi_actv_reg_0;
  output primask_reg;
  output nvic_lockup;
  output [0:0]D;
  output [0:0]E;
  output \i_pend_state_reg[1] ;
  output \i_tck_lvl_reg[1] ;
  output [0:0]nxt_pend_lvl_tree;
  output \i_pend_state_reg[2] ;
  output r_hdf_actv_reg_1;
  output r_hdf_actv_reg_2;
  input int_actv;
  input HCLK;
  input \r_int_actv_lvl_reg[0]_0 ;
  input hdf_actv;
  input nmi_actv;
  input \latched_excpt_num_reg[4] ;
  input nvic_primask;
  input pend_tree;
  input nvic_excpt_taken;
  input \i_pend_state_reg[2]_0 ;
  input [3:0]\pend_lvl_num_reg[0] ;
  input lockup_pend_reg_0;
  input LOCKUP;
  input biu_wfault;
  input int_fault_ex;
  input instr_faulted;
  input [0:0]\pend_lvl_num_reg[0]_0 ;
  input \pend_lvl_tree_reg[1] ;
  input \pend_lvl_tree_reg[1]_0 ;
  input nvic_excpt_svc_valid;
  input [0:0]svc_lvl_0;
  input [1:0]Q;
  input [1:0]\r_int_actv_lvl_reg[1]_0 ;

  wire [0:0]D;
  wire [0:0]E;
  wire HCLK;
  wire LOCKUP;
  wire [1:0]Q;
  wire biu_wfault;
  wire hdf_actv;
  wire \i_pend_state[2]_i_2_n_0 ;
  wire \i_pend_state[2]_i_4_n_0 ;
  wire \i_pend_state_reg[1] ;
  wire \i_pend_state_reg[2] ;
  wire \i_pend_state_reg[2]_0 ;
  wire \i_tck_lvl_reg[1] ;
  wire instr_faulted;
  wire int_actv;
  wire int_fault_ex;
  wire int_fault_ex_i_16_n_0;
  wire \latched_excpt_num[4]_i_3_n_0 ;
  wire \latched_excpt_num[4]_i_4_n_0 ;
  wire \latched_excpt_num_reg[4] ;
  wire lockup_pend;
  wire lockup_pend_reg_0;
  wire nmi_actv;
  wire nvic_excpt_svc_valid;
  wire nvic_excpt_taken;
  wire nvic_lockup;
  wire nvic_primask;
  wire nxt_lockup_pend;
  wire [0:0]nxt_pend_lvl_tree;
  wire [3:0]\pend_lvl_num_reg[0] ;
  wire [0:0]\pend_lvl_num_reg[0]_0 ;
  wire \pend_lvl_tree_reg[1] ;
  wire \pend_lvl_tree_reg[1]_0 ;
  wire pend_tree;
  wire primask_reg;
  wire r_hdf_actv_reg_0;
  wire r_hdf_actv_reg_1;
  wire r_hdf_actv_reg_2;
  wire r_int_actv;
  wire [1:0]r_int_actv_lvl;
  wire \r_int_actv_lvl_reg[0]_0 ;
  wire [1:0]\r_int_actv_lvl_reg[1]_0 ;
  wire r_nmi_actv_reg_0;
  wire [0:0]svc_lvl_0;

  LUT6 #(
    .INIT(64'hABABABABABABABAA)) 
    \HRDATA[12]_i_2 
       (.I0(\pend_lvl_num_reg[0] [1]),
        .I1(r_hdf_actv_reg_0),
        .I2(r_nmi_actv_reg_0),
        .I3(biu_wfault),
        .I4(int_fault_ex),
        .I5(instr_faulted),
        .O(\i_pend_state_reg[1] ));
  (* SOFT_HLUTNM = "soft_lutpair303" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \HRDATA[16]_i_4 
       (.I0(r_hdf_actv_reg_0),
        .I1(r_nmi_actv_reg_0),
        .O(r_hdf_actv_reg_2));
  LUT6 #(
    .INIT(64'hFEFEFEFEFEFEFEAA)) 
    \excpt_state[4]_i_2 
       (.I0(lockup_pend),
        .I1(r_hdf_actv_reg_0),
        .I2(r_nmi_actv_reg_0),
        .I3(biu_wfault),
        .I4(int_fault_ex),
        .I5(instr_faulted),
        .O(nvic_lockup));
  (* SOFT_HLUTNM = "soft_lutpair304" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \i_pend_state[1]_i_3 
       (.I0(\i_pend_state[2]_i_4_n_0 ),
        .I1(r_hdf_actv_reg_0),
        .I2(r_nmi_actv_reg_0),
        .I3(nvic_primask),
        .O(r_hdf_actv_reg_1));
  LUT4 #(
    .INIT(16'hBFAA)) 
    \i_pend_state[2]_i_1 
       (.I0(\i_pend_state[2]_i_2_n_0 ),
        .I1(nvic_excpt_taken),
        .I2(\i_pend_state_reg[2]_0 ),
        .I3(\pend_lvl_num_reg[0] [2]),
        .O(D));
  (* SOFT_HLUTNM = "soft_lutpair304" *) 
  LUT5 #(
    .INIT(32'h00000002)) 
    \i_pend_state[2]_i_2 
       (.I0(nvic_excpt_svc_valid),
        .I1(nvic_primask),
        .I2(r_nmi_actv_reg_0),
        .I3(r_hdf_actv_reg_0),
        .I4(\i_pend_state[2]_i_4_n_0 ),
        .O(\i_pend_state[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB0F000B0)) 
    \i_pend_state[2]_i_4 
       (.I0(svc_lvl_0),
        .I1(r_int_actv_lvl[0]),
        .I2(r_int_actv),
        .I3(r_int_actv_lvl[1]),
        .I4(\pend_lvl_tree_reg[1] ),
        .O(\i_pend_state[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h4544454545454545)) 
    int_fault_ex_i_12
       (.I0(nvic_lockup),
        .I1(int_fault_ex_i_16_n_0),
        .I2(\latched_excpt_num_reg[4] ),
        .I3(nvic_primask),
        .I4(pend_tree),
        .I5(\latched_excpt_num[4]_i_3_n_0 ),
        .O(primask_reg));
  (* SOFT_HLUTNM = "soft_lutpair305" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    int_fault_ex_i_16
       (.I0(r_nmi_actv_reg_0),
        .I1(\pend_lvl_num_reg[0] [0]),
        .I2(r_hdf_actv_reg_0),
        .O(int_fault_ex_i_16_n_0));
  LUT5 #(
    .INIT(32'h0000FF08)) 
    \latched_excpt_num[4]_i_1 
       (.I0(\latched_excpt_num[4]_i_3_n_0 ),
        .I1(pend_tree),
        .I2(nvic_primask),
        .I3(\latched_excpt_num_reg[4] ),
        .I4(\latched_excpt_num[4]_i_4_n_0 ),
        .O(E));
  LUT5 #(
    .INIT(32'h4F0FFF4F)) 
    \latched_excpt_num[4]_i_3 
       (.I0(Q[0]),
        .I1(r_int_actv_lvl[0]),
        .I2(r_int_actv),
        .I3(r_int_actv_lvl[1]),
        .I4(Q[1]),
        .O(\latched_excpt_num[4]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair305" *) 
  LUT4 #(
    .INIT(16'hFFAE)) 
    \latched_excpt_num[4]_i_4 
       (.I0(nvic_lockup),
        .I1(r_hdf_actv_reg_0),
        .I2(\pend_lvl_num_reg[0] [0]),
        .I3(r_nmi_actv_reg_0),
        .O(\latched_excpt_num[4]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair303" *) 
  LUT5 #(
    .INIT(32'h0000FF0E)) 
    lockup_pend_i_1
       (.I0(r_nmi_actv_reg_0),
        .I1(r_hdf_actv_reg_0),
        .I2(lockup_pend_reg_0),
        .I3(lockup_pend),
        .I4(LOCKUP),
        .O(nxt_lockup_pend));
  FDCE lockup_pend_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\r_int_actv_lvl_reg[0]_0 ),
        .D(nxt_lockup_pend),
        .Q(lockup_pend));
  LUT3 #(
    .INIT(8'h6F)) 
    \pend_lvl_num[0]_i_3 
       (.I0(nxt_pend_lvl_tree),
        .I1(\pend_lvl_num_reg[0]_0 ),
        .I2(\pend_lvl_num_reg[0] [3]),
        .O(\i_tck_lvl_reg[1] ));
  LUT3 #(
    .INIT(8'h0D)) 
    \pend_lvl_tree[1]_i_1 
       (.I0(\i_pend_state_reg[2] ),
        .I1(\pend_lvl_tree_reg[1] ),
        .I2(\pend_lvl_tree_reg[1]_0 ),
        .O(nxt_pend_lvl_tree));
  LUT6 #(
    .INIT(64'hAAAAAAABAAAAAAAA)) 
    pend_tree_i_2
       (.I0(\pend_lvl_num_reg[0] [2]),
        .I1(\i_pend_state[2]_i_4_n_0 ),
        .I2(r_hdf_actv_reg_0),
        .I3(r_nmi_actv_reg_0),
        .I4(nvic_primask),
        .I5(nvic_excpt_svc_valid),
        .O(\i_pend_state_reg[2] ));
  FDCE r_hdf_actv_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\r_int_actv_lvl_reg[0]_0 ),
        .D(hdf_actv),
        .Q(r_hdf_actv_reg_0));
  FDCE \r_int_actv_lvl_reg[0] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\r_int_actv_lvl_reg[0]_0 ),
        .D(\r_int_actv_lvl_reg[1]_0 [0]),
        .Q(r_int_actv_lvl[0]));
  FDCE \r_int_actv_lvl_reg[1] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\r_int_actv_lvl_reg[0]_0 ),
        .D(\r_int_actv_lvl_reg[1]_0 [1]),
        .Q(r_int_actv_lvl[1]));
  FDCE r_int_actv_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\r_int_actv_lvl_reg[0]_0 ),
        .D(int_actv),
        .Q(r_int_actv));
  FDCE r_nmi_actv_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\r_int_actv_lvl_reg[0]_0 ),
        .D(nmi_actv),
        .Q(r_nmi_actv_reg_0));
endmodule

(* ORIG_REF_NAME = "cm1_nvic_tree" *) 
module design_1_CORTEXM1_AXI_0_1_cm1_nvic_tree
   (en_pend2,
    pend_tree,
    \pend_lvl_num_reg[4]_0 ,
    Q,
    \high_lvl2_reg[0]_0 ,
    \high_lvl2_reg[1]_0 ,
    \high_lvl2_reg[1]_1 ,
    \high_lvl2_reg[1]_2 ,
    \pend_lvl_tree_reg[1]_0 ,
    high_irq0,
    HCLK,
    \high_lvl1_reg[0]_0 ,
    nxt_pend_tree,
    \latched_excpt_num_reg[1] ,
    \pend_lvl_num_reg[0]_0 ,
    \pend_lvl_num_reg[0]_1 ,
    nxt_pend_lvl_tree,
    \pend_lvl_tree[0]_i_4 ,
    \pend_lvl_tree[0]_i_4_0 ,
    D,
    \pend_lvl_num_reg[4]_1 );
  output [0:0]en_pend2;
  output pend_tree;
  output [3:0]\pend_lvl_num_reg[4]_0 ;
  output [3:0]Q;
  output \high_lvl2_reg[0]_0 ;
  output [0:0]\high_lvl2_reg[1]_0 ;
  output \high_lvl2_reg[1]_1 ;
  output \high_lvl2_reg[1]_2 ;
  output [1:0]\pend_lvl_tree_reg[1]_0 ;
  input high_irq0;
  input HCLK;
  input \high_lvl1_reg[0]_0 ;
  input nxt_pend_tree;
  input \latched_excpt_num_reg[1] ;
  input \pend_lvl_num_reg[0]_0 ;
  input \pend_lvl_num_reg[0]_1 ;
  input [1:0]nxt_pend_lvl_tree;
  input [0:0]\pend_lvl_tree[0]_i_4 ;
  input [0:0]\pend_lvl_tree[0]_i_4_0 ;
  input [1:0]D;
  input [3:0]\pend_lvl_num_reg[4]_1 ;

  wire [1:0]D;
  wire HCLK;
  wire [3:0]Q;
  wire [0:0]en_pend2;
  wire high_irq0;
  wire high_irq1;
  wire [1:0]high_lvl1;
  wire \high_lvl1_reg[0]_0 ;
  wire \high_lvl2_reg[0]_0 ;
  wire [0:0]\high_lvl2_reg[1]_0 ;
  wire \high_lvl2_reg[1]_1 ;
  wire \high_lvl2_reg[1]_2 ;
  wire \latched_excpt_num_reg[1] ;
  wire [6:6]lvl2;
  wire [1:0]nxt_pend_lvl_tree;
  wire nxt_pend_tree;
  wire \pend_lvl_num_reg[0]_0 ;
  wire \pend_lvl_num_reg[0]_1 ;
  wire [3:0]\pend_lvl_num_reg[4]_0 ;
  wire [3:0]\pend_lvl_num_reg[4]_1 ;
  wire [0:0]\pend_lvl_tree[0]_i_4 ;
  wire [0:0]\pend_lvl_tree[0]_i_4_0 ;
  wire [1:0]\pend_lvl_tree_reg[1]_0 ;
  wire pend_tree;

  FDCE \high_irq1_reg[0] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\high_lvl1_reg[0]_0 ),
        .D(high_irq0),
        .Q(high_irq1));
  FDPE \high_lvl1_reg[0] 
       (.C(HCLK),
        .CE(1'b1),
        .D(D[0]),
        .PRE(\high_lvl1_reg[0]_0 ),
        .Q(high_lvl1[0]));
  FDPE \high_lvl1_reg[1] 
       (.C(HCLK),
        .CE(1'b1),
        .D(D[1]),
        .PRE(\high_lvl1_reg[0]_0 ),
        .Q(high_lvl1[1]));
  FDPE \high_lvl2_reg[0] 
       (.C(HCLK),
        .CE(1'b1),
        .D(high_lvl1[0]),
        .PRE(\high_lvl1_reg[0]_0 ),
        .Q(lvl2));
  FDPE \high_lvl2_reg[1] 
       (.C(HCLK),
        .CE(1'b1),
        .D(high_lvl1[1]),
        .PRE(\high_lvl1_reg[0]_0 ),
        .Q(\high_lvl2_reg[1]_0 ));
  FDCE high_pend2_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\high_lvl1_reg[0]_0 ),
        .D(high_irq1),
        .Q(en_pend2));
  (* SOFT_HLUTNM = "soft_lutpair306" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \latched_excpt_num[1]_i_1 
       (.I0(Q[1]),
        .I1(\latched_excpt_num_reg[1] ),
        .O(\pend_lvl_num_reg[4]_0 [0]));
  (* SOFT_HLUTNM = "soft_lutpair307" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \latched_excpt_num[2]_i_1 
       (.I0(Q[2]),
        .I1(\latched_excpt_num_reg[1] ),
        .O(\pend_lvl_num_reg[4]_0 [1]));
  (* SOFT_HLUTNM = "soft_lutpair306" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \latched_excpt_num[3]_i_1 
       (.I0(Q[1]),
        .I1(\latched_excpt_num_reg[1] ),
        .O(\pend_lvl_num_reg[4]_0 [2]));
  (* SOFT_HLUTNM = "soft_lutpair307" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \latched_excpt_num[4]_i_2 
       (.I0(Q[3]),
        .I1(\latched_excpt_num_reg[1] ),
        .O(\pend_lvl_num_reg[4]_0 [3]));
  LUT6 #(
    .INIT(64'h1011111111111011)) 
    \pend_lvl_num[0]_i_4 
       (.I0(\pend_lvl_num_reg[0]_0 ),
        .I1(\pend_lvl_num_reg[0]_1 ),
        .I2(lvl2),
        .I3(en_pend2),
        .I4(nxt_pend_lvl_tree[1]),
        .I5(\high_lvl2_reg[1]_0 ),
        .O(\high_lvl2_reg[0]_0 ));
  FDCE \pend_lvl_num_reg[0] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\high_lvl1_reg[0]_0 ),
        .D(\pend_lvl_num_reg[4]_1 [0]),
        .Q(Q[0]));
  FDCE \pend_lvl_num_reg[1] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\high_lvl1_reg[0]_0 ),
        .D(\pend_lvl_num_reg[4]_1 [1]),
        .Q(Q[1]));
  FDCE \pend_lvl_num_reg[2] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\high_lvl1_reg[0]_0 ),
        .D(\pend_lvl_num_reg[4]_1 [2]),
        .Q(Q[2]));
  FDCE \pend_lvl_num_reg[4] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\high_lvl1_reg[0]_0 ),
        .D(\pend_lvl_num_reg[4]_1 [3]),
        .Q(Q[3]));
  LUT4 #(
    .INIT(16'h0090)) 
    \pend_lvl_tree[0]_i_3 
       (.I0(\high_lvl2_reg[1]_0 ),
        .I1(nxt_pend_lvl_tree[1]),
        .I2(en_pend2),
        .I3(lvl2),
        .O(\high_lvl2_reg[1]_1 ));
  LUT4 #(
    .INIT(16'h4F44)) 
    \pend_lvl_tree[0]_i_6 
       (.I0(\high_lvl2_reg[1]_0 ),
        .I1(en_pend2),
        .I2(\pend_lvl_tree[0]_i_4 ),
        .I3(\pend_lvl_tree[0]_i_4_0 ),
        .O(\high_lvl2_reg[1]_2 ));
  FDPE \pend_lvl_tree_reg[0] 
       (.C(HCLK),
        .CE(1'b1),
        .D(nxt_pend_lvl_tree[0]),
        .PRE(\high_lvl1_reg[0]_0 ),
        .Q(\pend_lvl_tree_reg[1]_0 [0]));
  FDPE \pend_lvl_tree_reg[1] 
       (.C(HCLK),
        .CE(1'b1),
        .D(nxt_pend_lvl_tree[1]),
        .PRE(\high_lvl1_reg[0]_0 ),
        .Q(\pend_lvl_tree_reg[1]_0 [1]));
  FDCE pend_tree_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(\high_lvl1_reg[0]_0 ),
        .D(nxt_pend_tree),
        .Q(pend_tree));
endmodule

(* ORIG_REF_NAME = "cm1_reg_bank" *) 
module design_1_CORTEXM1_AXI_0_1_cm1_reg_bank
   (zero_a_ex_reg,
    \pc_reg[30] ,
    zero_a_ex_reg_0,
    zero_a_ex_reg_1,
    zero_a_ex_reg_2,
    zero_a_ex_reg_3,
    zero_a_ex_reg_4,
    \pc_reg[15] ,
    zero_a_ex_reg_5,
    \pc_reg[11] ,
    zero_a_ex_reg_6,
    D,
    \rptr_a_ex_reg[3]_0 ,
    b_reg_0,
    ze_half_wb_reg,
    ze_half_wb_reg_0,
    ze_half_wb_reg_1,
    ze_half_wb_reg_2,
    ze_half_wb_reg_3,
    ze_half_wb_reg_4,
    ze_half_wb_reg_5,
    ze_half_wb_reg_6,
    ze_half_wb_reg_7,
    ze_half_wb_reg_8,
    ze_half_wb_reg_9,
    ze_half_wb_reg_10,
    ze_half_wb_reg_11,
    ze_half_wb_reg_12,
    ze_half_wb_reg_13,
    p_1_in2_in,
    ls_byte_ex_reg,
    ls_half_ex_reg,
    ls_half_ex_reg_0,
    ls_half_ex_reg_1,
    ls_byte_ex_reg_0,
    ls_half_ex_reg_2,
    \pc_reg[31] ,
    \pc_reg[30]_0 ,
    \pc_reg[29] ,
    \pc_reg[28] ,
    \pc_reg[25] ,
    \pc_reg[24] ,
    \pc_reg[9] ,
    \pc_reg[5] ,
    \pc_reg[4] ,
    ls_byte_ex_reg_1,
    ls_byte_ex_reg_2,
    invert_b_ex_reg,
    \mem_held_addr_reg[31]_i_1_0 ,
    z_flag,
    c_flag,
    v_flag,
    \mem_held_addr_reg[31] ,
    \mem_held_addr_reg[31]_0 ,
    \mem_held_addr_reg[27] ,
    \mem_held_addr_reg[31]_1 ,
    \mem_held_addr_reg[27]_0 ,
    \mem_held_addr_reg[15] ,
    \mem_held_addr_reg[15]_0 ,
    \mem_held_addr_reg[11] ,
    \rot3_reg[24] ,
    \rot3_reg[24]_0 ,
    \rot3_reg[24]_1 ,
    \rot3[30]_i_5_0 ,
    use_imm_ex,
    \hold_reg1_reg[31] ,
    ze_half_wb,
    \hold_reg1_reg[30] ,
    \hold_reg1_reg[23] ,
    \hold_reg1_reg[16] ,
    \hold_reg1_reg[17] ,
    \hold_reg1_reg[18] ,
    \hold_reg1_reg[19] ,
    \hold_reg1_reg[20] ,
    \hold_reg1_reg[21] ,
    \hold_reg1_reg[22] ,
    \hold_reg1_reg[24] ,
    \hold_reg1_reg[26] ,
    \hold_reg1_reg[27] ,
    \hold_reg1_reg[28] ,
    \hold_reg1_reg[29] ,
    \hold_reg1_reg[30]_0 ,
    Q,
    zero_a_ex,
    au_a_use_pc_ex,
    \wdata_reg[23] ,
    \wdata_reg[15] ,
    \wdata_reg[23]_0 ,
    \wdata_reg[15]_0 ,
    ls_byte_ex,
    ls_half_ex,
    CO,
    S,
    \mem_held_addr_reg[31]_2 ,
    z_flag_wf,
    sel_wf_z,
    z_flag_mux,
    c_flag_wf,
    sel_wf_c,
    c_flag_mux,
    v_flag_wf,
    sel_wf_v,
    v_flag_au,
    E,
    rf_wdata,
    HCLK,
    \reg_file_a_reg[14][0]_0 ,
    \reg_file_a_reg[13][0]_0 ,
    \reg_file_a_reg[12][0]_0 ,
    \reg_file_a_reg[11][0]_0 ,
    \reg_file_a_reg[10][0]_0 ,
    \reg_file_a_reg[9][0]_0 ,
    \reg_file_a_reg[8][0]_0 ,
    \reg_file_a_reg[7][0]_0 ,
    \reg_file_a_reg[6][0]_0 ,
    \reg_file_a_reg[5][0]_0 ,
    \reg_file_a_reg[4][0]_0 ,
    \reg_file_a_reg[3][0]_0 ,
    \reg_file_a_reg[2][0]_0 ,
    \reg_file_a_reg[1][0]_0 ,
    \reg_file_a_reg[0][0]_0 ,
    \rptr_a_ex_reg[3]_1 ,
    w_enable_ex,
    wptr_ex,
    nxt_rptr_b_ex);
  output zero_a_ex_reg;
  output [7:0]\pc_reg[30] ;
  output zero_a_ex_reg_0;
  output [0:0]zero_a_ex_reg_1;
  output zero_a_ex_reg_2;
  output [0:0]zero_a_ex_reg_3;
  output zero_a_ex_reg_4;
  output [1:0]\pc_reg[15] ;
  output zero_a_ex_reg_5;
  output [1:0]\pc_reg[11] ;
  output zero_a_ex_reg_6;
  output [31:0]D;
  output [31:0]\rptr_a_ex_reg[3]_0 ;
  output [31:0]b_reg_0;
  output ze_half_wb_reg;
  output ze_half_wb_reg_0;
  output ze_half_wb_reg_1;
  output ze_half_wb_reg_2;
  output ze_half_wb_reg_3;
  output ze_half_wb_reg_4;
  output ze_half_wb_reg_5;
  output ze_half_wb_reg_6;
  output ze_half_wb_reg_7;
  output ze_half_wb_reg_8;
  output ze_half_wb_reg_9;
  output ze_half_wb_reg_10;
  output ze_half_wb_reg_11;
  output ze_half_wb_reg_12;
  output ze_half_wb_reg_13;
  output [14:0]p_1_in2_in;
  output ls_byte_ex_reg;
  output ls_half_ex_reg;
  output ls_half_ex_reg_0;
  output ls_half_ex_reg_1;
  output ls_byte_ex_reg_0;
  output ls_half_ex_reg_2;
  output \pc_reg[31] ;
  output \pc_reg[30]_0 ;
  output \pc_reg[29] ;
  output \pc_reg[28] ;
  output \pc_reg[25] ;
  output \pc_reg[24] ;
  output \pc_reg[9] ;
  output \pc_reg[5] ;
  output \pc_reg[4] ;
  output ls_byte_ex_reg_1;
  output ls_byte_ex_reg_2;
  output [7:0]invert_b_ex_reg;
  output [0:0]\mem_held_addr_reg[31]_i_1_0 ;
  output z_flag;
  output c_flag;
  output v_flag;
  input \mem_held_addr_reg[31] ;
  input \mem_held_addr_reg[31]_0 ;
  input \mem_held_addr_reg[27] ;
  input [5:0]\mem_held_addr_reg[31]_1 ;
  input \mem_held_addr_reg[27]_0 ;
  input \mem_held_addr_reg[15] ;
  input \mem_held_addr_reg[15]_0 ;
  input \mem_held_addr_reg[11] ;
  input \rot3_reg[24] ;
  input \rot3_reg[24]_0 ;
  input \rot3_reg[24]_1 ;
  input [0:0]\rot3[30]_i_5_0 ;
  input use_imm_ex;
  input \hold_reg1_reg[31] ;
  input ze_half_wb;
  input [1:0]\hold_reg1_reg[30] ;
  input \hold_reg1_reg[23] ;
  input \hold_reg1_reg[16] ;
  input \hold_reg1_reg[17] ;
  input \hold_reg1_reg[18] ;
  input \hold_reg1_reg[19] ;
  input \hold_reg1_reg[20] ;
  input \hold_reg1_reg[21] ;
  input \hold_reg1_reg[22] ;
  input \hold_reg1_reg[24] ;
  input \hold_reg1_reg[26] ;
  input \hold_reg1_reg[27] ;
  input \hold_reg1_reg[28] ;
  input \hold_reg1_reg[29] ;
  input \hold_reg1_reg[30]_0 ;
  input [16:0]Q;
  input zero_a_ex;
  input au_a_use_pc_ex;
  input \wdata_reg[23] ;
  input \wdata_reg[15] ;
  input [14:0]\wdata_reg[23]_0 ;
  input \wdata_reg[15]_0 ;
  input ls_byte_ex;
  input ls_half_ex;
  input [0:0]CO;
  input [0:0]S;
  input [1:0]\mem_held_addr_reg[31]_2 ;
  input z_flag_wf;
  input sel_wf_z;
  input z_flag_mux;
  input c_flag_wf;
  input sel_wf_c;
  input c_flag_mux;
  input v_flag_wf;
  input sel_wf_v;
  input v_flag_au;
  input [0:0]E;
  input [31:0]rf_wdata;
  input HCLK;
  input [0:0]\reg_file_a_reg[14][0]_0 ;
  input [0:0]\reg_file_a_reg[13][0]_0 ;
  input [0:0]\reg_file_a_reg[12][0]_0 ;
  input [0:0]\reg_file_a_reg[11][0]_0 ;
  input [0:0]\reg_file_a_reg[10][0]_0 ;
  input [0:0]\reg_file_a_reg[9][0]_0 ;
  input [0:0]\reg_file_a_reg[8][0]_0 ;
  input [0:0]\reg_file_a_reg[7][0]_0 ;
  input [0:0]\reg_file_a_reg[6][0]_0 ;
  input [0:0]\reg_file_a_reg[5][0]_0 ;
  input [0:0]\reg_file_a_reg[4][0]_0 ;
  input [0:0]\reg_file_a_reg[3][0]_0 ;
  input [0:0]\reg_file_a_reg[2][0]_0 ;
  input [0:0]\reg_file_a_reg[1][0]_0 ;
  input [0:0]\reg_file_a_reg[0][0]_0 ;
  input [3:0]\rptr_a_ex_reg[3]_1 ;
  input w_enable_ex;
  input [3:0]wptr_ex;
  input [3:0]nxt_rptr_b_ex;

  wire [0:0]CO;
  wire [31:0]D;
  wire [0:0]E;
  wire HCLK;
  wire [16:0]Q;
  wire [0:0]S;
  wire \a_term[0]_i_4_n_0 ;
  wire \a_term[0]_i_5_n_0 ;
  wire \a_term[0]_i_6_n_0 ;
  wire \a_term[0]_i_7_n_0 ;
  wire \a_term[10]_i_4_n_0 ;
  wire \a_term[10]_i_5_n_0 ;
  wire \a_term[10]_i_6_n_0 ;
  wire \a_term[10]_i_7_n_0 ;
  wire \a_term[11]_i_4_n_0 ;
  wire \a_term[11]_i_5_n_0 ;
  wire \a_term[11]_i_6_n_0 ;
  wire \a_term[11]_i_7_n_0 ;
  wire \a_term[12]_i_4_n_0 ;
  wire \a_term[12]_i_5_n_0 ;
  wire \a_term[12]_i_6_n_0 ;
  wire \a_term[12]_i_7_n_0 ;
  wire \a_term[13]_i_4_n_0 ;
  wire \a_term[13]_i_5_n_0 ;
  wire \a_term[13]_i_6_n_0 ;
  wire \a_term[13]_i_7_n_0 ;
  wire \a_term[14]_i_4_n_0 ;
  wire \a_term[14]_i_5_n_0 ;
  wire \a_term[14]_i_6_n_0 ;
  wire \a_term[14]_i_7_n_0 ;
  wire \a_term[15]_i_4_n_0 ;
  wire \a_term[15]_i_5_n_0 ;
  wire \a_term[15]_i_6_n_0 ;
  wire \a_term[15]_i_7_n_0 ;
  wire \a_term[16]_i_4_n_0 ;
  wire \a_term[16]_i_5_n_0 ;
  wire \a_term[16]_i_6_n_0 ;
  wire \a_term[16]_i_7_n_0 ;
  wire \a_term[17]_i_4_n_0 ;
  wire \a_term[17]_i_5_n_0 ;
  wire \a_term[17]_i_6_n_0 ;
  wire \a_term[17]_i_7_n_0 ;
  wire \a_term[18]_i_4_n_0 ;
  wire \a_term[18]_i_5_n_0 ;
  wire \a_term[18]_i_6_n_0 ;
  wire \a_term[18]_i_7_n_0 ;
  wire \a_term[19]_i_4_n_0 ;
  wire \a_term[19]_i_5_n_0 ;
  wire \a_term[19]_i_6_n_0 ;
  wire \a_term[19]_i_7_n_0 ;
  wire \a_term[1]_i_4_n_0 ;
  wire \a_term[1]_i_5_n_0 ;
  wire \a_term[1]_i_6_n_0 ;
  wire \a_term[1]_i_7_n_0 ;
  wire \a_term[20]_i_4_n_0 ;
  wire \a_term[20]_i_5_n_0 ;
  wire \a_term[20]_i_6_n_0 ;
  wire \a_term[20]_i_7_n_0 ;
  wire \a_term[21]_i_4_n_0 ;
  wire \a_term[21]_i_5_n_0 ;
  wire \a_term[21]_i_6_n_0 ;
  wire \a_term[21]_i_7_n_0 ;
  wire \a_term[22]_i_4_n_0 ;
  wire \a_term[22]_i_5_n_0 ;
  wire \a_term[22]_i_6_n_0 ;
  wire \a_term[22]_i_7_n_0 ;
  wire \a_term[23]_i_4_n_0 ;
  wire \a_term[23]_i_5_n_0 ;
  wire \a_term[23]_i_6_n_0 ;
  wire \a_term[23]_i_7_n_0 ;
  wire \a_term[24]_i_4_n_0 ;
  wire \a_term[24]_i_5_n_0 ;
  wire \a_term[24]_i_6_n_0 ;
  wire \a_term[24]_i_7_n_0 ;
  wire \a_term[25]_i_4_n_0 ;
  wire \a_term[25]_i_5_n_0 ;
  wire \a_term[25]_i_6_n_0 ;
  wire \a_term[25]_i_7_n_0 ;
  wire \a_term[26]_i_4_n_0 ;
  wire \a_term[26]_i_5_n_0 ;
  wire \a_term[26]_i_6_n_0 ;
  wire \a_term[26]_i_7_n_0 ;
  wire \a_term[27]_i_4_n_0 ;
  wire \a_term[27]_i_5_n_0 ;
  wire \a_term[27]_i_6_n_0 ;
  wire \a_term[27]_i_7_n_0 ;
  wire \a_term[28]_i_4_n_0 ;
  wire \a_term[28]_i_5_n_0 ;
  wire \a_term[28]_i_6_n_0 ;
  wire \a_term[28]_i_7_n_0 ;
  wire \a_term[29]_i_4_n_0 ;
  wire \a_term[29]_i_5_n_0 ;
  wire \a_term[29]_i_6_n_0 ;
  wire \a_term[29]_i_7_n_0 ;
  wire \a_term[2]_i_4_n_0 ;
  wire \a_term[2]_i_5_n_0 ;
  wire \a_term[2]_i_6_n_0 ;
  wire \a_term[2]_i_7_n_0 ;
  wire \a_term[30]_i_4_n_0 ;
  wire \a_term[30]_i_5_n_0 ;
  wire \a_term[30]_i_6_n_0 ;
  wire \a_term[30]_i_7_n_0 ;
  wire \a_term[31]_i_4_n_0 ;
  wire \a_term[31]_i_5_n_0 ;
  wire \a_term[31]_i_6_n_0 ;
  wire \a_term[31]_i_7_n_0 ;
  wire \a_term[3]_i_4_n_0 ;
  wire \a_term[3]_i_5_n_0 ;
  wire \a_term[3]_i_6_n_0 ;
  wire \a_term[3]_i_7_n_0 ;
  wire \a_term[4]_i_4_n_0 ;
  wire \a_term[4]_i_5_n_0 ;
  wire \a_term[4]_i_6_n_0 ;
  wire \a_term[4]_i_7_n_0 ;
  wire \a_term[5]_i_4_n_0 ;
  wire \a_term[5]_i_5_n_0 ;
  wire \a_term[5]_i_6_n_0 ;
  wire \a_term[5]_i_7_n_0 ;
  wire \a_term[6]_i_4_n_0 ;
  wire \a_term[6]_i_5_n_0 ;
  wire \a_term[6]_i_6_n_0 ;
  wire \a_term[6]_i_7_n_0 ;
  wire \a_term[7]_i_4_n_0 ;
  wire \a_term[7]_i_5_n_0 ;
  wire \a_term[7]_i_6_n_0 ;
  wire \a_term[7]_i_7_n_0 ;
  wire \a_term[8]_i_4_n_0 ;
  wire \a_term[8]_i_5_n_0 ;
  wire \a_term[8]_i_6_n_0 ;
  wire \a_term[8]_i_7_n_0 ;
  wire \a_term[9]_i_4_n_0 ;
  wire \a_term[9]_i_5_n_0 ;
  wire \a_term[9]_i_6_n_0 ;
  wire \a_term[9]_i_7_n_0 ;
  wire \a_term_reg[0]_i_2_n_0 ;
  wire \a_term_reg[0]_i_3_n_0 ;
  wire \a_term_reg[10]_i_2_n_0 ;
  wire \a_term_reg[10]_i_3_n_0 ;
  wire \a_term_reg[11]_i_2_n_0 ;
  wire \a_term_reg[11]_i_3_n_0 ;
  wire \a_term_reg[12]_i_2_n_0 ;
  wire \a_term_reg[12]_i_3_n_0 ;
  wire \a_term_reg[13]_i_2_n_0 ;
  wire \a_term_reg[13]_i_3_n_0 ;
  wire \a_term_reg[14]_i_2_n_0 ;
  wire \a_term_reg[14]_i_3_n_0 ;
  wire \a_term_reg[15]_i_2_n_0 ;
  wire \a_term_reg[15]_i_3_n_0 ;
  wire \a_term_reg[16]_i_2_n_0 ;
  wire \a_term_reg[16]_i_3_n_0 ;
  wire \a_term_reg[17]_i_2_n_0 ;
  wire \a_term_reg[17]_i_3_n_0 ;
  wire \a_term_reg[18]_i_2_n_0 ;
  wire \a_term_reg[18]_i_3_n_0 ;
  wire \a_term_reg[19]_i_2_n_0 ;
  wire \a_term_reg[19]_i_3_n_0 ;
  wire \a_term_reg[1]_i_2_n_0 ;
  wire \a_term_reg[1]_i_3_n_0 ;
  wire \a_term_reg[20]_i_2_n_0 ;
  wire \a_term_reg[20]_i_3_n_0 ;
  wire \a_term_reg[21]_i_2_n_0 ;
  wire \a_term_reg[21]_i_3_n_0 ;
  wire \a_term_reg[22]_i_2_n_0 ;
  wire \a_term_reg[22]_i_3_n_0 ;
  wire \a_term_reg[23]_i_2_n_0 ;
  wire \a_term_reg[23]_i_3_n_0 ;
  wire \a_term_reg[24]_i_2_n_0 ;
  wire \a_term_reg[24]_i_3_n_0 ;
  wire \a_term_reg[25]_i_2_n_0 ;
  wire \a_term_reg[25]_i_3_n_0 ;
  wire \a_term_reg[26]_i_2_n_0 ;
  wire \a_term_reg[26]_i_3_n_0 ;
  wire \a_term_reg[27]_i_2_n_0 ;
  wire \a_term_reg[27]_i_3_n_0 ;
  wire \a_term_reg[28]_i_2_n_0 ;
  wire \a_term_reg[28]_i_3_n_0 ;
  wire \a_term_reg[29]_i_2_n_0 ;
  wire \a_term_reg[29]_i_3_n_0 ;
  wire \a_term_reg[2]_i_2_n_0 ;
  wire \a_term_reg[2]_i_3_n_0 ;
  wire \a_term_reg[30]_i_2_n_0 ;
  wire \a_term_reg[30]_i_3_n_0 ;
  wire \a_term_reg[31]_i_2_n_0 ;
  wire \a_term_reg[31]_i_3_n_0 ;
  wire \a_term_reg[3]_i_2_n_0 ;
  wire \a_term_reg[3]_i_3_n_0 ;
  wire \a_term_reg[4]_i_2_n_0 ;
  wire \a_term_reg[4]_i_3_n_0 ;
  wire \a_term_reg[5]_i_2_n_0 ;
  wire \a_term_reg[5]_i_3_n_0 ;
  wire \a_term_reg[6]_i_2_n_0 ;
  wire \a_term_reg[6]_i_3_n_0 ;
  wire \a_term_reg[7]_i_2_n_0 ;
  wire \a_term_reg[7]_i_3_n_0 ;
  wire \a_term_reg[8]_i_2_n_0 ;
  wire \a_term_reg[8]_i_3_n_0 ;
  wire \a_term_reg[9]_i_2_n_0 ;
  wire \a_term_reg[9]_i_3_n_0 ;
  wire au_a_use_pc_ex;
  wire [31:0]b_reg_0;
  wire c_flag;
  wire c_flag_mux;
  wire c_flag_wf;
  wire \hold_reg1_reg[16] ;
  wire \hold_reg1_reg[17] ;
  wire \hold_reg1_reg[18] ;
  wire \hold_reg1_reg[19] ;
  wire \hold_reg1_reg[20] ;
  wire \hold_reg1_reg[21] ;
  wire \hold_reg1_reg[22] ;
  wire \hold_reg1_reg[23] ;
  wire \hold_reg1_reg[24] ;
  wire \hold_reg1_reg[26] ;
  wire \hold_reg1_reg[27] ;
  wire \hold_reg1_reg[28] ;
  wire \hold_reg1_reg[29] ;
  wire [1:0]\hold_reg1_reg[30] ;
  wire \hold_reg1_reg[30]_0 ;
  wire \hold_reg1_reg[31] ;
  wire [7:0]invert_b_ex_reg;
  wire ls_byte_ex;
  wire ls_byte_ex_reg;
  wire ls_byte_ex_reg_0;
  wire ls_byte_ex_reg_1;
  wire ls_byte_ex_reg_2;
  wire ls_half_ex;
  wire ls_half_ex_reg;
  wire ls_half_ex_reg_0;
  wire ls_half_ex_reg_1;
  wire ls_half_ex_reg_2;
  wire \mem_held_addr[27]_i_6_n_0 ;
  wire \mem_held_addr[27]_i_8_n_0 ;
  wire \mem_held_addr[27]_i_9_n_0 ;
  wire \mem_held_addr[31]_i_8_n_0 ;
  wire \mem_held_addr[31]_i_9_n_0 ;
  wire \mem_held_addr_reg[11] ;
  wire \mem_held_addr_reg[15] ;
  wire \mem_held_addr_reg[15]_0 ;
  wire \mem_held_addr_reg[27] ;
  wire \mem_held_addr_reg[27]_0 ;
  wire \mem_held_addr_reg[27]_i_1_n_0 ;
  wire \mem_held_addr_reg[27]_i_1_n_1 ;
  wire \mem_held_addr_reg[27]_i_1_n_2 ;
  wire \mem_held_addr_reg[27]_i_1_n_3 ;
  wire \mem_held_addr_reg[31] ;
  wire \mem_held_addr_reg[31]_0 ;
  wire [5:0]\mem_held_addr_reg[31]_1 ;
  wire [1:0]\mem_held_addr_reg[31]_2 ;
  wire [0:0]\mem_held_addr_reg[31]_i_1_0 ;
  wire \mem_held_addr_reg[31]_i_1_n_0 ;
  wire \mem_held_addr_reg[31]_i_1_n_1 ;
  wire \mem_held_addr_reg[31]_i_1_n_2 ;
  wire \mem_held_addr_reg[31]_i_1_n_3 ;
  wire [3:0]nxt_rptr_b_ex;
  wire [14:0]p_1_in2_in;
  wire [1:0]\pc_reg[11] ;
  wire [1:0]\pc_reg[15] ;
  wire \pc_reg[24] ;
  wire \pc_reg[25] ;
  wire \pc_reg[28] ;
  wire \pc_reg[29] ;
  wire [7:0]\pc_reg[30] ;
  wire \pc_reg[30]_0 ;
  wire \pc_reg[31] ;
  wire \pc_reg[4] ;
  wire \pc_reg[5] ;
  wire \pc_reg[9] ;
  wire [0:0]\reg_file_a_reg[0][0]_0 ;
  wire [31:0]\reg_file_a_reg[0]_15 ;
  wire [0:0]\reg_file_a_reg[10][0]_0 ;
  wire [31:0]\reg_file_a_reg[10]_5 ;
  wire [0:0]\reg_file_a_reg[11][0]_0 ;
  wire [31:0]\reg_file_a_reg[11]_4 ;
  wire [0:0]\reg_file_a_reg[12][0]_0 ;
  wire [31:0]\reg_file_a_reg[12]_3 ;
  wire [0:0]\reg_file_a_reg[13][0]_0 ;
  wire [31:0]\reg_file_a_reg[13]_2 ;
  wire [0:0]\reg_file_a_reg[14][0]_0 ;
  wire [31:0]\reg_file_a_reg[14]_1 ;
  wire [31:0]\reg_file_a_reg[15]_0 ;
  wire [0:0]\reg_file_a_reg[1][0]_0 ;
  wire [31:0]\reg_file_a_reg[1]_14 ;
  wire [0:0]\reg_file_a_reg[2][0]_0 ;
  wire [31:0]\reg_file_a_reg[2]_13 ;
  wire [0:0]\reg_file_a_reg[3][0]_0 ;
  wire [31:0]\reg_file_a_reg[3]_12 ;
  wire [0:0]\reg_file_a_reg[4][0]_0 ;
  wire [31:0]\reg_file_a_reg[4]_11 ;
  wire [0:0]\reg_file_a_reg[5][0]_0 ;
  wire [31:0]\reg_file_a_reg[5]_10 ;
  wire [0:0]\reg_file_a_reg[6][0]_0 ;
  wire [31:0]\reg_file_a_reg[6]_9 ;
  wire [0:0]\reg_file_a_reg[7][0]_0 ;
  wire [31:0]\reg_file_a_reg[7]_8 ;
  wire [0:0]\reg_file_a_reg[8][0]_0 ;
  wire [31:0]\reg_file_a_reg[8]_7 ;
  wire [0:0]\reg_file_a_reg[9][0]_0 ;
  wire [31:0]\reg_file_a_reg[9]_6 ;
  wire [31:0]rf_wdata;
  wire \rot3[12]_i_2_n_0 ;
  wire \rot3[13]_i_2_n_0 ;
  wire \rot3[14]_i_2_n_0 ;
  wire \rot3[14]_i_3_n_0 ;
  wire \rot3[15]_i_2_n_0 ;
  wire \rot3[15]_i_3_n_0 ;
  wire \rot3[16]_i_2_n_0 ;
  wire \rot3[16]_i_3_n_0 ;
  wire \rot3[17]_i_2_n_0 ;
  wire \rot3[17]_i_3_n_0 ;
  wire \rot3[18]_i_2_n_0 ;
  wire \rot3[18]_i_3_n_0 ;
  wire \rot3[19]_i_2_n_0 ;
  wire \rot3[19]_i_3_n_0 ;
  wire \rot3[20]_i_2_n_0 ;
  wire \rot3[20]_i_3_n_0 ;
  wire \rot3[21]_i_2_n_0 ;
  wire \rot3[21]_i_3_n_0 ;
  wire \rot3[22]_i_2_n_0 ;
  wire \rot3[22]_i_3_n_0 ;
  wire \rot3[23]_i_2_n_0 ;
  wire \rot3[23]_i_3_n_0 ;
  wire \rot3[24]_i_2_n_0 ;
  wire \rot3[24]_i_3_n_0 ;
  wire \rot3[25]_i_2_n_0 ;
  wire \rot3[25]_i_3_n_0 ;
  wire \rot3[26]_i_2_n_0 ;
  wire \rot3[26]_i_3_n_0 ;
  wire \rot3[27]_i_2_n_0 ;
  wire \rot3[27]_i_3_n_0 ;
  wire \rot3[28]_i_2_n_0 ;
  wire \rot3[28]_i_3_n_0 ;
  wire \rot3[28]_i_4_n_0 ;
  wire \rot3[28]_i_5_n_0 ;
  wire \rot3[28]_i_6_n_0 ;
  wire \rot3[29]_i_2_n_0 ;
  wire \rot3[29]_i_3_n_0 ;
  wire \rot3[29]_i_4_n_0 ;
  wire \rot3[29]_i_5_n_0 ;
  wire \rot3[29]_i_6_n_0 ;
  wire \rot3[30]_i_10_n_0 ;
  wire \rot3[30]_i_11_n_0 ;
  wire \rot3[30]_i_12_n_0 ;
  wire \rot3[30]_i_13_n_0 ;
  wire \rot3[30]_i_2_n_0 ;
  wire \rot3[30]_i_3_n_0 ;
  wire \rot3[30]_i_4_n_0 ;
  wire [0:0]\rot3[30]_i_5_0 ;
  wire \rot3[30]_i_5_n_0 ;
  wire \rot3[30]_i_6_n_0 ;
  wire \rot3[30]_i_7_n_0 ;
  wire \rot3[30]_i_8_n_0 ;
  wire \rot3[30]_i_9_n_0 ;
  wire \rot3[31]_i_10_n_0 ;
  wire \rot3[31]_i_11_n_0 ;
  wire \rot3[31]_i_12_n_0 ;
  wire \rot3[31]_i_13_n_0 ;
  wire \rot3[31]_i_2_n_0 ;
  wire \rot3[31]_i_3_n_0 ;
  wire \rot3[31]_i_4_n_0 ;
  wire \rot3[31]_i_5_n_0 ;
  wire \rot3[31]_i_6_n_0 ;
  wire \rot3[31]_i_7_n_0 ;
  wire \rot3[31]_i_8_n_0 ;
  wire \rot3[31]_i_9_n_0 ;
  wire \rot3_reg[24] ;
  wire \rot3_reg[24]_0 ;
  wire \rot3_reg[24]_1 ;
  wire [3:0]rptr_a_ex;
  wire [31:0]\rptr_a_ex_reg[3]_0 ;
  wire [3:0]\rptr_a_ex_reg[3]_1 ;
  wire [3:0]rptr_b_ex;
  wire sel_wf_c;
  wire sel_wf_v;
  wire sel_wf_z;
  wire use_imm_ex;
  wire v_flag;
  wire v_flag_au;
  wire v_flag_wf;
  wire w_enable_ex;
  wire \wdata_reg[15] ;
  wire \wdata_reg[15]_0 ;
  wire \wdata_reg[23] ;
  wire [14:0]\wdata_reg[23]_0 ;
  wire [3:0]wptr_ex;
  wire z_flag;
  wire z_flag_mux;
  wire z_flag_wf;
  wire ze_half_wb;
  wire ze_half_wb_reg;
  wire ze_half_wb_reg_0;
  wire ze_half_wb_reg_1;
  wire ze_half_wb_reg_10;
  wire ze_half_wb_reg_11;
  wire ze_half_wb_reg_12;
  wire ze_half_wb_reg_13;
  wire ze_half_wb_reg_2;
  wire ze_half_wb_reg_3;
  wire ze_half_wb_reg_4;
  wire ze_half_wb_reg_5;
  wire ze_half_wb_reg_6;
  wire ze_half_wb_reg_7;
  wire ze_half_wb_reg_8;
  wire ze_half_wb_reg_9;
  wire zero_a_ex;
  wire zero_a_ex_reg;
  wire zero_a_ex_reg_0;
  wire [0:0]zero_a_ex_reg_1;
  wire zero_a_ex_reg_2;
  wire [0:0]zero_a_ex_reg_3;
  wire zero_a_ex_reg_4;
  wire zero_a_ex_reg_5;
  wire zero_a_ex_reg_6;
  wire [3:1]NLW_c_flag_mux_reg_i_2_CO_UNCONNECTED;
  wire [3:0]NLW_c_flag_mux_reg_i_2_O_UNCONNECTED;
  wire [1:0]NLW_reg_file_b_reg_0_15_0_5_DOD_UNCONNECTED;
  wire [1:0]NLW_reg_file_b_reg_0_15_12_17_DOD_UNCONNECTED;
  wire [1:0]NLW_reg_file_b_reg_0_15_18_23_DOD_UNCONNECTED;
  wire [1:0]NLW_reg_file_b_reg_0_15_24_29_DOD_UNCONNECTED;
  wire [1:0]NLW_reg_file_b_reg_0_15_30_31_DOB_UNCONNECTED;
  wire [1:0]NLW_reg_file_b_reg_0_15_30_31_DOC_UNCONNECTED;
  wire [1:0]NLW_reg_file_b_reg_0_15_30_31_DOD_UNCONNECTED;
  wire [1:0]NLW_reg_file_b_reg_0_15_6_11_DOD_UNCONNECTED;

  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[0]_i_4 
       (.I0(\reg_file_a_reg[3]_12 [0]),
        .I1(\reg_file_a_reg[2]_13 [0]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[1]_14 [0]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[0]_15 [0]),
        .O(\a_term[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[0]_i_5 
       (.I0(\reg_file_a_reg[7]_8 [0]),
        .I1(\reg_file_a_reg[6]_9 [0]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[5]_10 [0]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[4]_11 [0]),
        .O(\a_term[0]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[0]_i_6 
       (.I0(\reg_file_a_reg[11]_4 [0]),
        .I1(\reg_file_a_reg[10]_5 [0]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[9]_6 [0]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[8]_7 [0]),
        .O(\a_term[0]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[0]_i_7 
       (.I0(\reg_file_a_reg[15]_0 [0]),
        .I1(\reg_file_a_reg[14]_1 [0]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[13]_2 [0]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[12]_3 [0]),
        .O(\a_term[0]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[10]_i_4 
       (.I0(\reg_file_a_reg[3]_12 [10]),
        .I1(\reg_file_a_reg[2]_13 [10]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[1]_14 [10]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[0]_15 [10]),
        .O(\a_term[10]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[10]_i_5 
       (.I0(\reg_file_a_reg[7]_8 [10]),
        .I1(\reg_file_a_reg[6]_9 [10]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[5]_10 [10]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[4]_11 [10]),
        .O(\a_term[10]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[10]_i_6 
       (.I0(\reg_file_a_reg[11]_4 [10]),
        .I1(\reg_file_a_reg[10]_5 [10]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[9]_6 [10]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[8]_7 [10]),
        .O(\a_term[10]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[10]_i_7 
       (.I0(\reg_file_a_reg[15]_0 [10]),
        .I1(\reg_file_a_reg[14]_1 [10]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[13]_2 [10]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[12]_3 [10]),
        .O(\a_term[10]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[11]_i_4 
       (.I0(\reg_file_a_reg[3]_12 [11]),
        .I1(\reg_file_a_reg[2]_13 [11]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[1]_14 [11]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[0]_15 [11]),
        .O(\a_term[11]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[11]_i_5 
       (.I0(\reg_file_a_reg[7]_8 [11]),
        .I1(\reg_file_a_reg[6]_9 [11]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[5]_10 [11]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[4]_11 [11]),
        .O(\a_term[11]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[11]_i_6 
       (.I0(\reg_file_a_reg[11]_4 [11]),
        .I1(\reg_file_a_reg[10]_5 [11]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[9]_6 [11]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[8]_7 [11]),
        .O(\a_term[11]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[11]_i_7 
       (.I0(\reg_file_a_reg[15]_0 [11]),
        .I1(\reg_file_a_reg[14]_1 [11]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[13]_2 [11]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[12]_3 [11]),
        .O(\a_term[11]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[12]_i_4 
       (.I0(\reg_file_a_reg[3]_12 [12]),
        .I1(\reg_file_a_reg[2]_13 [12]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[1]_14 [12]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[0]_15 [12]),
        .O(\a_term[12]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[12]_i_5 
       (.I0(\reg_file_a_reg[7]_8 [12]),
        .I1(\reg_file_a_reg[6]_9 [12]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[5]_10 [12]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[4]_11 [12]),
        .O(\a_term[12]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[12]_i_6 
       (.I0(\reg_file_a_reg[11]_4 [12]),
        .I1(\reg_file_a_reg[10]_5 [12]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[9]_6 [12]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[8]_7 [12]),
        .O(\a_term[12]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[12]_i_7 
       (.I0(\reg_file_a_reg[15]_0 [12]),
        .I1(\reg_file_a_reg[14]_1 [12]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[13]_2 [12]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[12]_3 [12]),
        .O(\a_term[12]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[13]_i_4 
       (.I0(\reg_file_a_reg[3]_12 [13]),
        .I1(\reg_file_a_reg[2]_13 [13]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[1]_14 [13]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[0]_15 [13]),
        .O(\a_term[13]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[13]_i_5 
       (.I0(\reg_file_a_reg[7]_8 [13]),
        .I1(\reg_file_a_reg[6]_9 [13]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[5]_10 [13]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[4]_11 [13]),
        .O(\a_term[13]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[13]_i_6 
       (.I0(\reg_file_a_reg[11]_4 [13]),
        .I1(\reg_file_a_reg[10]_5 [13]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[9]_6 [13]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[8]_7 [13]),
        .O(\a_term[13]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[13]_i_7 
       (.I0(\reg_file_a_reg[15]_0 [13]),
        .I1(\reg_file_a_reg[14]_1 [13]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[13]_2 [13]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[12]_3 [13]),
        .O(\a_term[13]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[14]_i_4 
       (.I0(\reg_file_a_reg[3]_12 [14]),
        .I1(\reg_file_a_reg[2]_13 [14]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[1]_14 [14]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[0]_15 [14]),
        .O(\a_term[14]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[14]_i_5 
       (.I0(\reg_file_a_reg[7]_8 [14]),
        .I1(\reg_file_a_reg[6]_9 [14]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[5]_10 [14]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[4]_11 [14]),
        .O(\a_term[14]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[14]_i_6 
       (.I0(\reg_file_a_reg[11]_4 [14]),
        .I1(\reg_file_a_reg[10]_5 [14]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[9]_6 [14]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[8]_7 [14]),
        .O(\a_term[14]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[14]_i_7 
       (.I0(\reg_file_a_reg[15]_0 [14]),
        .I1(\reg_file_a_reg[14]_1 [14]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[13]_2 [14]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[12]_3 [14]),
        .O(\a_term[14]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[15]_i_4 
       (.I0(\reg_file_a_reg[3]_12 [15]),
        .I1(\reg_file_a_reg[2]_13 [15]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[1]_14 [15]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[0]_15 [15]),
        .O(\a_term[15]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[15]_i_5 
       (.I0(\reg_file_a_reg[7]_8 [15]),
        .I1(\reg_file_a_reg[6]_9 [15]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[5]_10 [15]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[4]_11 [15]),
        .O(\a_term[15]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[15]_i_6 
       (.I0(\reg_file_a_reg[11]_4 [15]),
        .I1(\reg_file_a_reg[10]_5 [15]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[9]_6 [15]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[8]_7 [15]),
        .O(\a_term[15]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[15]_i_7 
       (.I0(\reg_file_a_reg[15]_0 [15]),
        .I1(\reg_file_a_reg[14]_1 [15]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[13]_2 [15]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[12]_3 [15]),
        .O(\a_term[15]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[16]_i_4 
       (.I0(\reg_file_a_reg[3]_12 [16]),
        .I1(\reg_file_a_reg[2]_13 [16]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[1]_14 [16]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[0]_15 [16]),
        .O(\a_term[16]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[16]_i_5 
       (.I0(\reg_file_a_reg[7]_8 [16]),
        .I1(\reg_file_a_reg[6]_9 [16]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[5]_10 [16]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[4]_11 [16]),
        .O(\a_term[16]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[16]_i_6 
       (.I0(\reg_file_a_reg[11]_4 [16]),
        .I1(\reg_file_a_reg[10]_5 [16]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[9]_6 [16]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[8]_7 [16]),
        .O(\a_term[16]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[16]_i_7 
       (.I0(\reg_file_a_reg[15]_0 [16]),
        .I1(\reg_file_a_reg[14]_1 [16]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[13]_2 [16]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[12]_3 [16]),
        .O(\a_term[16]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[17]_i_4 
       (.I0(\reg_file_a_reg[3]_12 [17]),
        .I1(\reg_file_a_reg[2]_13 [17]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[1]_14 [17]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[0]_15 [17]),
        .O(\a_term[17]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[17]_i_5 
       (.I0(\reg_file_a_reg[7]_8 [17]),
        .I1(\reg_file_a_reg[6]_9 [17]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[5]_10 [17]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[4]_11 [17]),
        .O(\a_term[17]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[17]_i_6 
       (.I0(\reg_file_a_reg[11]_4 [17]),
        .I1(\reg_file_a_reg[10]_5 [17]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[9]_6 [17]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[8]_7 [17]),
        .O(\a_term[17]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[17]_i_7 
       (.I0(\reg_file_a_reg[15]_0 [17]),
        .I1(\reg_file_a_reg[14]_1 [17]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[13]_2 [17]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[12]_3 [17]),
        .O(\a_term[17]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[18]_i_4 
       (.I0(\reg_file_a_reg[3]_12 [18]),
        .I1(\reg_file_a_reg[2]_13 [18]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[1]_14 [18]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[0]_15 [18]),
        .O(\a_term[18]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[18]_i_5 
       (.I0(\reg_file_a_reg[7]_8 [18]),
        .I1(\reg_file_a_reg[6]_9 [18]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[5]_10 [18]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[4]_11 [18]),
        .O(\a_term[18]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[18]_i_6 
       (.I0(\reg_file_a_reg[11]_4 [18]),
        .I1(\reg_file_a_reg[10]_5 [18]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[9]_6 [18]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[8]_7 [18]),
        .O(\a_term[18]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[18]_i_7 
       (.I0(\reg_file_a_reg[15]_0 [18]),
        .I1(\reg_file_a_reg[14]_1 [18]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[13]_2 [18]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[12]_3 [18]),
        .O(\a_term[18]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[19]_i_4 
       (.I0(\reg_file_a_reg[3]_12 [19]),
        .I1(\reg_file_a_reg[2]_13 [19]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[1]_14 [19]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[0]_15 [19]),
        .O(\a_term[19]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[19]_i_5 
       (.I0(\reg_file_a_reg[7]_8 [19]),
        .I1(\reg_file_a_reg[6]_9 [19]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[5]_10 [19]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[4]_11 [19]),
        .O(\a_term[19]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[19]_i_6 
       (.I0(\reg_file_a_reg[11]_4 [19]),
        .I1(\reg_file_a_reg[10]_5 [19]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[9]_6 [19]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[8]_7 [19]),
        .O(\a_term[19]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[19]_i_7 
       (.I0(\reg_file_a_reg[15]_0 [19]),
        .I1(\reg_file_a_reg[14]_1 [19]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[13]_2 [19]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[12]_3 [19]),
        .O(\a_term[19]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[1]_i_4 
       (.I0(\reg_file_a_reg[3]_12 [1]),
        .I1(\reg_file_a_reg[2]_13 [1]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[1]_14 [1]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[0]_15 [1]),
        .O(\a_term[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[1]_i_5 
       (.I0(\reg_file_a_reg[7]_8 [1]),
        .I1(\reg_file_a_reg[6]_9 [1]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[5]_10 [1]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[4]_11 [1]),
        .O(\a_term[1]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[1]_i_6 
       (.I0(\reg_file_a_reg[11]_4 [1]),
        .I1(\reg_file_a_reg[10]_5 [1]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[9]_6 [1]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[8]_7 [1]),
        .O(\a_term[1]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[1]_i_7 
       (.I0(\reg_file_a_reg[15]_0 [1]),
        .I1(\reg_file_a_reg[14]_1 [1]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[13]_2 [1]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[12]_3 [1]),
        .O(\a_term[1]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[20]_i_4 
       (.I0(\reg_file_a_reg[3]_12 [20]),
        .I1(\reg_file_a_reg[2]_13 [20]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[1]_14 [20]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[0]_15 [20]),
        .O(\a_term[20]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[20]_i_5 
       (.I0(\reg_file_a_reg[7]_8 [20]),
        .I1(\reg_file_a_reg[6]_9 [20]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[5]_10 [20]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[4]_11 [20]),
        .O(\a_term[20]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[20]_i_6 
       (.I0(\reg_file_a_reg[11]_4 [20]),
        .I1(\reg_file_a_reg[10]_5 [20]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[9]_6 [20]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[8]_7 [20]),
        .O(\a_term[20]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[20]_i_7 
       (.I0(\reg_file_a_reg[15]_0 [20]),
        .I1(\reg_file_a_reg[14]_1 [20]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[13]_2 [20]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[12]_3 [20]),
        .O(\a_term[20]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[21]_i_4 
       (.I0(\reg_file_a_reg[3]_12 [21]),
        .I1(\reg_file_a_reg[2]_13 [21]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[1]_14 [21]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[0]_15 [21]),
        .O(\a_term[21]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[21]_i_5 
       (.I0(\reg_file_a_reg[7]_8 [21]),
        .I1(\reg_file_a_reg[6]_9 [21]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[5]_10 [21]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[4]_11 [21]),
        .O(\a_term[21]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[21]_i_6 
       (.I0(\reg_file_a_reg[11]_4 [21]),
        .I1(\reg_file_a_reg[10]_5 [21]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[9]_6 [21]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[8]_7 [21]),
        .O(\a_term[21]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[21]_i_7 
       (.I0(\reg_file_a_reg[15]_0 [21]),
        .I1(\reg_file_a_reg[14]_1 [21]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[13]_2 [21]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[12]_3 [21]),
        .O(\a_term[21]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[22]_i_4 
       (.I0(\reg_file_a_reg[3]_12 [22]),
        .I1(\reg_file_a_reg[2]_13 [22]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[1]_14 [22]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[0]_15 [22]),
        .O(\a_term[22]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[22]_i_5 
       (.I0(\reg_file_a_reg[7]_8 [22]),
        .I1(\reg_file_a_reg[6]_9 [22]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[5]_10 [22]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[4]_11 [22]),
        .O(\a_term[22]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[22]_i_6 
       (.I0(\reg_file_a_reg[11]_4 [22]),
        .I1(\reg_file_a_reg[10]_5 [22]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[9]_6 [22]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[8]_7 [22]),
        .O(\a_term[22]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[22]_i_7 
       (.I0(\reg_file_a_reg[15]_0 [22]),
        .I1(\reg_file_a_reg[14]_1 [22]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[13]_2 [22]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[12]_3 [22]),
        .O(\a_term[22]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[23]_i_4 
       (.I0(\reg_file_a_reg[3]_12 [23]),
        .I1(\reg_file_a_reg[2]_13 [23]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[1]_14 [23]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[0]_15 [23]),
        .O(\a_term[23]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[23]_i_5 
       (.I0(\reg_file_a_reg[7]_8 [23]),
        .I1(\reg_file_a_reg[6]_9 [23]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[5]_10 [23]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[4]_11 [23]),
        .O(\a_term[23]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[23]_i_6 
       (.I0(\reg_file_a_reg[11]_4 [23]),
        .I1(\reg_file_a_reg[10]_5 [23]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[9]_6 [23]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[8]_7 [23]),
        .O(\a_term[23]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[23]_i_7 
       (.I0(\reg_file_a_reg[15]_0 [23]),
        .I1(\reg_file_a_reg[14]_1 [23]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[13]_2 [23]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[12]_3 [23]),
        .O(\a_term[23]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[24]_i_4 
       (.I0(\reg_file_a_reg[3]_12 [24]),
        .I1(\reg_file_a_reg[2]_13 [24]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[1]_14 [24]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[0]_15 [24]),
        .O(\a_term[24]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[24]_i_5 
       (.I0(\reg_file_a_reg[7]_8 [24]),
        .I1(\reg_file_a_reg[6]_9 [24]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[5]_10 [24]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[4]_11 [24]),
        .O(\a_term[24]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[24]_i_6 
       (.I0(\reg_file_a_reg[11]_4 [24]),
        .I1(\reg_file_a_reg[10]_5 [24]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[9]_6 [24]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[8]_7 [24]),
        .O(\a_term[24]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[24]_i_7 
       (.I0(\reg_file_a_reg[15]_0 [24]),
        .I1(\reg_file_a_reg[14]_1 [24]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[13]_2 [24]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[12]_3 [24]),
        .O(\a_term[24]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[25]_i_4 
       (.I0(\reg_file_a_reg[3]_12 [25]),
        .I1(\reg_file_a_reg[2]_13 [25]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[1]_14 [25]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[0]_15 [25]),
        .O(\a_term[25]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[25]_i_5 
       (.I0(\reg_file_a_reg[7]_8 [25]),
        .I1(\reg_file_a_reg[6]_9 [25]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[5]_10 [25]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[4]_11 [25]),
        .O(\a_term[25]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[25]_i_6 
       (.I0(\reg_file_a_reg[11]_4 [25]),
        .I1(\reg_file_a_reg[10]_5 [25]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[9]_6 [25]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[8]_7 [25]),
        .O(\a_term[25]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[25]_i_7 
       (.I0(\reg_file_a_reg[15]_0 [25]),
        .I1(\reg_file_a_reg[14]_1 [25]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[13]_2 [25]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[12]_3 [25]),
        .O(\a_term[25]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[26]_i_4 
       (.I0(\reg_file_a_reg[3]_12 [26]),
        .I1(\reg_file_a_reg[2]_13 [26]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[1]_14 [26]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[0]_15 [26]),
        .O(\a_term[26]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[26]_i_5 
       (.I0(\reg_file_a_reg[7]_8 [26]),
        .I1(\reg_file_a_reg[6]_9 [26]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[5]_10 [26]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[4]_11 [26]),
        .O(\a_term[26]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[26]_i_6 
       (.I0(\reg_file_a_reg[11]_4 [26]),
        .I1(\reg_file_a_reg[10]_5 [26]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[9]_6 [26]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[8]_7 [26]),
        .O(\a_term[26]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[26]_i_7 
       (.I0(\reg_file_a_reg[15]_0 [26]),
        .I1(\reg_file_a_reg[14]_1 [26]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[13]_2 [26]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[12]_3 [26]),
        .O(\a_term[26]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[27]_i_4 
       (.I0(\reg_file_a_reg[3]_12 [27]),
        .I1(\reg_file_a_reg[2]_13 [27]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[1]_14 [27]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[0]_15 [27]),
        .O(\a_term[27]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[27]_i_5 
       (.I0(\reg_file_a_reg[7]_8 [27]),
        .I1(\reg_file_a_reg[6]_9 [27]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[5]_10 [27]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[4]_11 [27]),
        .O(\a_term[27]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[27]_i_6 
       (.I0(\reg_file_a_reg[11]_4 [27]),
        .I1(\reg_file_a_reg[10]_5 [27]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[9]_6 [27]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[8]_7 [27]),
        .O(\a_term[27]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[27]_i_7 
       (.I0(\reg_file_a_reg[15]_0 [27]),
        .I1(\reg_file_a_reg[14]_1 [27]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[13]_2 [27]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[12]_3 [27]),
        .O(\a_term[27]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[28]_i_4 
       (.I0(\reg_file_a_reg[3]_12 [28]),
        .I1(\reg_file_a_reg[2]_13 [28]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[1]_14 [28]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[0]_15 [28]),
        .O(\a_term[28]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[28]_i_5 
       (.I0(\reg_file_a_reg[7]_8 [28]),
        .I1(\reg_file_a_reg[6]_9 [28]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[5]_10 [28]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[4]_11 [28]),
        .O(\a_term[28]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[28]_i_6 
       (.I0(\reg_file_a_reg[11]_4 [28]),
        .I1(\reg_file_a_reg[10]_5 [28]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[9]_6 [28]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[8]_7 [28]),
        .O(\a_term[28]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[28]_i_7 
       (.I0(\reg_file_a_reg[15]_0 [28]),
        .I1(\reg_file_a_reg[14]_1 [28]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[13]_2 [28]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[12]_3 [28]),
        .O(\a_term[28]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[29]_i_4 
       (.I0(\reg_file_a_reg[3]_12 [29]),
        .I1(\reg_file_a_reg[2]_13 [29]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[1]_14 [29]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[0]_15 [29]),
        .O(\a_term[29]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[29]_i_5 
       (.I0(\reg_file_a_reg[7]_8 [29]),
        .I1(\reg_file_a_reg[6]_9 [29]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[5]_10 [29]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[4]_11 [29]),
        .O(\a_term[29]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[29]_i_6 
       (.I0(\reg_file_a_reg[11]_4 [29]),
        .I1(\reg_file_a_reg[10]_5 [29]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[9]_6 [29]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[8]_7 [29]),
        .O(\a_term[29]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[29]_i_7 
       (.I0(\reg_file_a_reg[15]_0 [29]),
        .I1(\reg_file_a_reg[14]_1 [29]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[13]_2 [29]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[12]_3 [29]),
        .O(\a_term[29]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[2]_i_4 
       (.I0(\reg_file_a_reg[3]_12 [2]),
        .I1(\reg_file_a_reg[2]_13 [2]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[1]_14 [2]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[0]_15 [2]),
        .O(\a_term[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[2]_i_5 
       (.I0(\reg_file_a_reg[7]_8 [2]),
        .I1(\reg_file_a_reg[6]_9 [2]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[5]_10 [2]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[4]_11 [2]),
        .O(\a_term[2]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[2]_i_6 
       (.I0(\reg_file_a_reg[11]_4 [2]),
        .I1(\reg_file_a_reg[10]_5 [2]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[9]_6 [2]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[8]_7 [2]),
        .O(\a_term[2]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[2]_i_7 
       (.I0(\reg_file_a_reg[15]_0 [2]),
        .I1(\reg_file_a_reg[14]_1 [2]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[13]_2 [2]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[12]_3 [2]),
        .O(\a_term[2]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[30]_i_4 
       (.I0(\reg_file_a_reg[3]_12 [30]),
        .I1(\reg_file_a_reg[2]_13 [30]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[1]_14 [30]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[0]_15 [30]),
        .O(\a_term[30]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[30]_i_5 
       (.I0(\reg_file_a_reg[7]_8 [30]),
        .I1(\reg_file_a_reg[6]_9 [30]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[5]_10 [30]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[4]_11 [30]),
        .O(\a_term[30]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[30]_i_6 
       (.I0(\reg_file_a_reg[11]_4 [30]),
        .I1(\reg_file_a_reg[10]_5 [30]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[9]_6 [30]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[8]_7 [30]),
        .O(\a_term[30]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[30]_i_7 
       (.I0(\reg_file_a_reg[15]_0 [30]),
        .I1(\reg_file_a_reg[14]_1 [30]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[13]_2 [30]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[12]_3 [30]),
        .O(\a_term[30]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[31]_i_4 
       (.I0(\reg_file_a_reg[3]_12 [31]),
        .I1(\reg_file_a_reg[2]_13 [31]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[1]_14 [31]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[0]_15 [31]),
        .O(\a_term[31]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[31]_i_5 
       (.I0(\reg_file_a_reg[7]_8 [31]),
        .I1(\reg_file_a_reg[6]_9 [31]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[5]_10 [31]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[4]_11 [31]),
        .O(\a_term[31]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[31]_i_6 
       (.I0(\reg_file_a_reg[11]_4 [31]),
        .I1(\reg_file_a_reg[10]_5 [31]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[9]_6 [31]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[8]_7 [31]),
        .O(\a_term[31]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[31]_i_7 
       (.I0(\reg_file_a_reg[15]_0 [31]),
        .I1(\reg_file_a_reg[14]_1 [31]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[13]_2 [31]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[12]_3 [31]),
        .O(\a_term[31]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[3]_i_4 
       (.I0(\reg_file_a_reg[3]_12 [3]),
        .I1(\reg_file_a_reg[2]_13 [3]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[1]_14 [3]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[0]_15 [3]),
        .O(\a_term[3]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[3]_i_5 
       (.I0(\reg_file_a_reg[7]_8 [3]),
        .I1(\reg_file_a_reg[6]_9 [3]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[5]_10 [3]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[4]_11 [3]),
        .O(\a_term[3]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[3]_i_6 
       (.I0(\reg_file_a_reg[11]_4 [3]),
        .I1(\reg_file_a_reg[10]_5 [3]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[9]_6 [3]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[8]_7 [3]),
        .O(\a_term[3]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[3]_i_7 
       (.I0(\reg_file_a_reg[15]_0 [3]),
        .I1(\reg_file_a_reg[14]_1 [3]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[13]_2 [3]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[12]_3 [3]),
        .O(\a_term[3]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[4]_i_4 
       (.I0(\reg_file_a_reg[3]_12 [4]),
        .I1(\reg_file_a_reg[2]_13 [4]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[1]_14 [4]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[0]_15 [4]),
        .O(\a_term[4]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[4]_i_5 
       (.I0(\reg_file_a_reg[7]_8 [4]),
        .I1(\reg_file_a_reg[6]_9 [4]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[5]_10 [4]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[4]_11 [4]),
        .O(\a_term[4]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[4]_i_6 
       (.I0(\reg_file_a_reg[11]_4 [4]),
        .I1(\reg_file_a_reg[10]_5 [4]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[9]_6 [4]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[8]_7 [4]),
        .O(\a_term[4]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[4]_i_7 
       (.I0(\reg_file_a_reg[15]_0 [4]),
        .I1(\reg_file_a_reg[14]_1 [4]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[13]_2 [4]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[12]_3 [4]),
        .O(\a_term[4]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[5]_i_4 
       (.I0(\reg_file_a_reg[3]_12 [5]),
        .I1(\reg_file_a_reg[2]_13 [5]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[1]_14 [5]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[0]_15 [5]),
        .O(\a_term[5]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[5]_i_5 
       (.I0(\reg_file_a_reg[7]_8 [5]),
        .I1(\reg_file_a_reg[6]_9 [5]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[5]_10 [5]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[4]_11 [5]),
        .O(\a_term[5]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[5]_i_6 
       (.I0(\reg_file_a_reg[11]_4 [5]),
        .I1(\reg_file_a_reg[10]_5 [5]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[9]_6 [5]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[8]_7 [5]),
        .O(\a_term[5]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[5]_i_7 
       (.I0(\reg_file_a_reg[15]_0 [5]),
        .I1(\reg_file_a_reg[14]_1 [5]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[13]_2 [5]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[12]_3 [5]),
        .O(\a_term[5]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[6]_i_4 
       (.I0(\reg_file_a_reg[3]_12 [6]),
        .I1(\reg_file_a_reg[2]_13 [6]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[1]_14 [6]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[0]_15 [6]),
        .O(\a_term[6]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[6]_i_5 
       (.I0(\reg_file_a_reg[7]_8 [6]),
        .I1(\reg_file_a_reg[6]_9 [6]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[5]_10 [6]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[4]_11 [6]),
        .O(\a_term[6]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[6]_i_6 
       (.I0(\reg_file_a_reg[11]_4 [6]),
        .I1(\reg_file_a_reg[10]_5 [6]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[9]_6 [6]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[8]_7 [6]),
        .O(\a_term[6]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[6]_i_7 
       (.I0(\reg_file_a_reg[15]_0 [6]),
        .I1(\reg_file_a_reg[14]_1 [6]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[13]_2 [6]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[12]_3 [6]),
        .O(\a_term[6]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[7]_i_4 
       (.I0(\reg_file_a_reg[3]_12 [7]),
        .I1(\reg_file_a_reg[2]_13 [7]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[1]_14 [7]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[0]_15 [7]),
        .O(\a_term[7]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[7]_i_5 
       (.I0(\reg_file_a_reg[7]_8 [7]),
        .I1(\reg_file_a_reg[6]_9 [7]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[5]_10 [7]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[4]_11 [7]),
        .O(\a_term[7]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[7]_i_6 
       (.I0(\reg_file_a_reg[11]_4 [7]),
        .I1(\reg_file_a_reg[10]_5 [7]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[9]_6 [7]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[8]_7 [7]),
        .O(\a_term[7]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[7]_i_7 
       (.I0(\reg_file_a_reg[15]_0 [7]),
        .I1(\reg_file_a_reg[14]_1 [7]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[13]_2 [7]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[12]_3 [7]),
        .O(\a_term[7]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[8]_i_4 
       (.I0(\reg_file_a_reg[3]_12 [8]),
        .I1(\reg_file_a_reg[2]_13 [8]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[1]_14 [8]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[0]_15 [8]),
        .O(\a_term[8]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[8]_i_5 
       (.I0(\reg_file_a_reg[7]_8 [8]),
        .I1(\reg_file_a_reg[6]_9 [8]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[5]_10 [8]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[4]_11 [8]),
        .O(\a_term[8]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[8]_i_6 
       (.I0(\reg_file_a_reg[11]_4 [8]),
        .I1(\reg_file_a_reg[10]_5 [8]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[9]_6 [8]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[8]_7 [8]),
        .O(\a_term[8]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[8]_i_7 
       (.I0(\reg_file_a_reg[15]_0 [8]),
        .I1(\reg_file_a_reg[14]_1 [8]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[13]_2 [8]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[12]_3 [8]),
        .O(\a_term[8]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[9]_i_4 
       (.I0(\reg_file_a_reg[3]_12 [9]),
        .I1(\reg_file_a_reg[2]_13 [9]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[1]_14 [9]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[0]_15 [9]),
        .O(\a_term[9]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[9]_i_5 
       (.I0(\reg_file_a_reg[7]_8 [9]),
        .I1(\reg_file_a_reg[6]_9 [9]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[5]_10 [9]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[4]_11 [9]),
        .O(\a_term[9]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[9]_i_6 
       (.I0(\reg_file_a_reg[11]_4 [9]),
        .I1(\reg_file_a_reg[10]_5 [9]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[9]_6 [9]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[8]_7 [9]),
        .O(\a_term[9]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_term[9]_i_7 
       (.I0(\reg_file_a_reg[15]_0 [9]),
        .I1(\reg_file_a_reg[14]_1 [9]),
        .I2(rptr_a_ex[1]),
        .I3(\reg_file_a_reg[13]_2 [9]),
        .I4(rptr_a_ex[0]),
        .I5(\reg_file_a_reg[12]_3 [9]),
        .O(\a_term[9]_i_7_n_0 ));
  MUXF8 \a_term_reg[0]_i_1 
       (.I0(\a_term_reg[0]_i_2_n_0 ),
        .I1(\a_term_reg[0]_i_3_n_0 ),
        .O(\rptr_a_ex_reg[3]_0 [0]),
        .S(rptr_a_ex[3]));
  MUXF7 \a_term_reg[0]_i_2 
       (.I0(\a_term[0]_i_4_n_0 ),
        .I1(\a_term[0]_i_5_n_0 ),
        .O(\a_term_reg[0]_i_2_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF7 \a_term_reg[0]_i_3 
       (.I0(\a_term[0]_i_6_n_0 ),
        .I1(\a_term[0]_i_7_n_0 ),
        .O(\a_term_reg[0]_i_3_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF8 \a_term_reg[10]_i_1 
       (.I0(\a_term_reg[10]_i_2_n_0 ),
        .I1(\a_term_reg[10]_i_3_n_0 ),
        .O(\rptr_a_ex_reg[3]_0 [10]),
        .S(rptr_a_ex[3]));
  MUXF7 \a_term_reg[10]_i_2 
       (.I0(\a_term[10]_i_4_n_0 ),
        .I1(\a_term[10]_i_5_n_0 ),
        .O(\a_term_reg[10]_i_2_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF7 \a_term_reg[10]_i_3 
       (.I0(\a_term[10]_i_6_n_0 ),
        .I1(\a_term[10]_i_7_n_0 ),
        .O(\a_term_reg[10]_i_3_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF8 \a_term_reg[11]_i_1 
       (.I0(\a_term_reg[11]_i_2_n_0 ),
        .I1(\a_term_reg[11]_i_3_n_0 ),
        .O(\rptr_a_ex_reg[3]_0 [11]),
        .S(rptr_a_ex[3]));
  MUXF7 \a_term_reg[11]_i_2 
       (.I0(\a_term[11]_i_4_n_0 ),
        .I1(\a_term[11]_i_5_n_0 ),
        .O(\a_term_reg[11]_i_2_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF7 \a_term_reg[11]_i_3 
       (.I0(\a_term[11]_i_6_n_0 ),
        .I1(\a_term[11]_i_7_n_0 ),
        .O(\a_term_reg[11]_i_3_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF8 \a_term_reg[12]_i_1 
       (.I0(\a_term_reg[12]_i_2_n_0 ),
        .I1(\a_term_reg[12]_i_3_n_0 ),
        .O(\rptr_a_ex_reg[3]_0 [12]),
        .S(rptr_a_ex[3]));
  MUXF7 \a_term_reg[12]_i_2 
       (.I0(\a_term[12]_i_4_n_0 ),
        .I1(\a_term[12]_i_5_n_0 ),
        .O(\a_term_reg[12]_i_2_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF7 \a_term_reg[12]_i_3 
       (.I0(\a_term[12]_i_6_n_0 ),
        .I1(\a_term[12]_i_7_n_0 ),
        .O(\a_term_reg[12]_i_3_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF8 \a_term_reg[13]_i_1 
       (.I0(\a_term_reg[13]_i_2_n_0 ),
        .I1(\a_term_reg[13]_i_3_n_0 ),
        .O(\rptr_a_ex_reg[3]_0 [13]),
        .S(rptr_a_ex[3]));
  MUXF7 \a_term_reg[13]_i_2 
       (.I0(\a_term[13]_i_4_n_0 ),
        .I1(\a_term[13]_i_5_n_0 ),
        .O(\a_term_reg[13]_i_2_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF7 \a_term_reg[13]_i_3 
       (.I0(\a_term[13]_i_6_n_0 ),
        .I1(\a_term[13]_i_7_n_0 ),
        .O(\a_term_reg[13]_i_3_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF8 \a_term_reg[14]_i_1 
       (.I0(\a_term_reg[14]_i_2_n_0 ),
        .I1(\a_term_reg[14]_i_3_n_0 ),
        .O(\rptr_a_ex_reg[3]_0 [14]),
        .S(rptr_a_ex[3]));
  MUXF7 \a_term_reg[14]_i_2 
       (.I0(\a_term[14]_i_4_n_0 ),
        .I1(\a_term[14]_i_5_n_0 ),
        .O(\a_term_reg[14]_i_2_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF7 \a_term_reg[14]_i_3 
       (.I0(\a_term[14]_i_6_n_0 ),
        .I1(\a_term[14]_i_7_n_0 ),
        .O(\a_term_reg[14]_i_3_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF8 \a_term_reg[15]_i_1 
       (.I0(\a_term_reg[15]_i_2_n_0 ),
        .I1(\a_term_reg[15]_i_3_n_0 ),
        .O(\rptr_a_ex_reg[3]_0 [15]),
        .S(rptr_a_ex[3]));
  MUXF7 \a_term_reg[15]_i_2 
       (.I0(\a_term[15]_i_4_n_0 ),
        .I1(\a_term[15]_i_5_n_0 ),
        .O(\a_term_reg[15]_i_2_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF7 \a_term_reg[15]_i_3 
       (.I0(\a_term[15]_i_6_n_0 ),
        .I1(\a_term[15]_i_7_n_0 ),
        .O(\a_term_reg[15]_i_3_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF8 \a_term_reg[16]_i_1 
       (.I0(\a_term_reg[16]_i_2_n_0 ),
        .I1(\a_term_reg[16]_i_3_n_0 ),
        .O(\rptr_a_ex_reg[3]_0 [16]),
        .S(rptr_a_ex[3]));
  MUXF7 \a_term_reg[16]_i_2 
       (.I0(\a_term[16]_i_4_n_0 ),
        .I1(\a_term[16]_i_5_n_0 ),
        .O(\a_term_reg[16]_i_2_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF7 \a_term_reg[16]_i_3 
       (.I0(\a_term[16]_i_6_n_0 ),
        .I1(\a_term[16]_i_7_n_0 ),
        .O(\a_term_reg[16]_i_3_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF8 \a_term_reg[17]_i_1 
       (.I0(\a_term_reg[17]_i_2_n_0 ),
        .I1(\a_term_reg[17]_i_3_n_0 ),
        .O(\rptr_a_ex_reg[3]_0 [17]),
        .S(rptr_a_ex[3]));
  MUXF7 \a_term_reg[17]_i_2 
       (.I0(\a_term[17]_i_4_n_0 ),
        .I1(\a_term[17]_i_5_n_0 ),
        .O(\a_term_reg[17]_i_2_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF7 \a_term_reg[17]_i_3 
       (.I0(\a_term[17]_i_6_n_0 ),
        .I1(\a_term[17]_i_7_n_0 ),
        .O(\a_term_reg[17]_i_3_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF8 \a_term_reg[18]_i_1 
       (.I0(\a_term_reg[18]_i_2_n_0 ),
        .I1(\a_term_reg[18]_i_3_n_0 ),
        .O(\rptr_a_ex_reg[3]_0 [18]),
        .S(rptr_a_ex[3]));
  MUXF7 \a_term_reg[18]_i_2 
       (.I0(\a_term[18]_i_4_n_0 ),
        .I1(\a_term[18]_i_5_n_0 ),
        .O(\a_term_reg[18]_i_2_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF7 \a_term_reg[18]_i_3 
       (.I0(\a_term[18]_i_6_n_0 ),
        .I1(\a_term[18]_i_7_n_0 ),
        .O(\a_term_reg[18]_i_3_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF8 \a_term_reg[19]_i_1 
       (.I0(\a_term_reg[19]_i_2_n_0 ),
        .I1(\a_term_reg[19]_i_3_n_0 ),
        .O(\rptr_a_ex_reg[3]_0 [19]),
        .S(rptr_a_ex[3]));
  MUXF7 \a_term_reg[19]_i_2 
       (.I0(\a_term[19]_i_4_n_0 ),
        .I1(\a_term[19]_i_5_n_0 ),
        .O(\a_term_reg[19]_i_2_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF7 \a_term_reg[19]_i_3 
       (.I0(\a_term[19]_i_6_n_0 ),
        .I1(\a_term[19]_i_7_n_0 ),
        .O(\a_term_reg[19]_i_3_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF8 \a_term_reg[1]_i_1 
       (.I0(\a_term_reg[1]_i_2_n_0 ),
        .I1(\a_term_reg[1]_i_3_n_0 ),
        .O(\rptr_a_ex_reg[3]_0 [1]),
        .S(rptr_a_ex[3]));
  MUXF7 \a_term_reg[1]_i_2 
       (.I0(\a_term[1]_i_4_n_0 ),
        .I1(\a_term[1]_i_5_n_0 ),
        .O(\a_term_reg[1]_i_2_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF7 \a_term_reg[1]_i_3 
       (.I0(\a_term[1]_i_6_n_0 ),
        .I1(\a_term[1]_i_7_n_0 ),
        .O(\a_term_reg[1]_i_3_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF8 \a_term_reg[20]_i_1 
       (.I0(\a_term_reg[20]_i_2_n_0 ),
        .I1(\a_term_reg[20]_i_3_n_0 ),
        .O(\rptr_a_ex_reg[3]_0 [20]),
        .S(rptr_a_ex[3]));
  MUXF7 \a_term_reg[20]_i_2 
       (.I0(\a_term[20]_i_4_n_0 ),
        .I1(\a_term[20]_i_5_n_0 ),
        .O(\a_term_reg[20]_i_2_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF7 \a_term_reg[20]_i_3 
       (.I0(\a_term[20]_i_6_n_0 ),
        .I1(\a_term[20]_i_7_n_0 ),
        .O(\a_term_reg[20]_i_3_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF8 \a_term_reg[21]_i_1 
       (.I0(\a_term_reg[21]_i_2_n_0 ),
        .I1(\a_term_reg[21]_i_3_n_0 ),
        .O(\rptr_a_ex_reg[3]_0 [21]),
        .S(rptr_a_ex[3]));
  MUXF7 \a_term_reg[21]_i_2 
       (.I0(\a_term[21]_i_4_n_0 ),
        .I1(\a_term[21]_i_5_n_0 ),
        .O(\a_term_reg[21]_i_2_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF7 \a_term_reg[21]_i_3 
       (.I0(\a_term[21]_i_6_n_0 ),
        .I1(\a_term[21]_i_7_n_0 ),
        .O(\a_term_reg[21]_i_3_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF8 \a_term_reg[22]_i_1 
       (.I0(\a_term_reg[22]_i_2_n_0 ),
        .I1(\a_term_reg[22]_i_3_n_0 ),
        .O(\rptr_a_ex_reg[3]_0 [22]),
        .S(rptr_a_ex[3]));
  MUXF7 \a_term_reg[22]_i_2 
       (.I0(\a_term[22]_i_4_n_0 ),
        .I1(\a_term[22]_i_5_n_0 ),
        .O(\a_term_reg[22]_i_2_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF7 \a_term_reg[22]_i_3 
       (.I0(\a_term[22]_i_6_n_0 ),
        .I1(\a_term[22]_i_7_n_0 ),
        .O(\a_term_reg[22]_i_3_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF8 \a_term_reg[23]_i_1 
       (.I0(\a_term_reg[23]_i_2_n_0 ),
        .I1(\a_term_reg[23]_i_3_n_0 ),
        .O(\rptr_a_ex_reg[3]_0 [23]),
        .S(rptr_a_ex[3]));
  MUXF7 \a_term_reg[23]_i_2 
       (.I0(\a_term[23]_i_4_n_0 ),
        .I1(\a_term[23]_i_5_n_0 ),
        .O(\a_term_reg[23]_i_2_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF7 \a_term_reg[23]_i_3 
       (.I0(\a_term[23]_i_6_n_0 ),
        .I1(\a_term[23]_i_7_n_0 ),
        .O(\a_term_reg[23]_i_3_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF8 \a_term_reg[24]_i_1 
       (.I0(\a_term_reg[24]_i_2_n_0 ),
        .I1(\a_term_reg[24]_i_3_n_0 ),
        .O(\rptr_a_ex_reg[3]_0 [24]),
        .S(rptr_a_ex[3]));
  MUXF7 \a_term_reg[24]_i_2 
       (.I0(\a_term[24]_i_4_n_0 ),
        .I1(\a_term[24]_i_5_n_0 ),
        .O(\a_term_reg[24]_i_2_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF7 \a_term_reg[24]_i_3 
       (.I0(\a_term[24]_i_6_n_0 ),
        .I1(\a_term[24]_i_7_n_0 ),
        .O(\a_term_reg[24]_i_3_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF8 \a_term_reg[25]_i_1 
       (.I0(\a_term_reg[25]_i_2_n_0 ),
        .I1(\a_term_reg[25]_i_3_n_0 ),
        .O(\rptr_a_ex_reg[3]_0 [25]),
        .S(rptr_a_ex[3]));
  MUXF7 \a_term_reg[25]_i_2 
       (.I0(\a_term[25]_i_4_n_0 ),
        .I1(\a_term[25]_i_5_n_0 ),
        .O(\a_term_reg[25]_i_2_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF7 \a_term_reg[25]_i_3 
       (.I0(\a_term[25]_i_6_n_0 ),
        .I1(\a_term[25]_i_7_n_0 ),
        .O(\a_term_reg[25]_i_3_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF8 \a_term_reg[26]_i_1 
       (.I0(\a_term_reg[26]_i_2_n_0 ),
        .I1(\a_term_reg[26]_i_3_n_0 ),
        .O(\rptr_a_ex_reg[3]_0 [26]),
        .S(rptr_a_ex[3]));
  MUXF7 \a_term_reg[26]_i_2 
       (.I0(\a_term[26]_i_4_n_0 ),
        .I1(\a_term[26]_i_5_n_0 ),
        .O(\a_term_reg[26]_i_2_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF7 \a_term_reg[26]_i_3 
       (.I0(\a_term[26]_i_6_n_0 ),
        .I1(\a_term[26]_i_7_n_0 ),
        .O(\a_term_reg[26]_i_3_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF8 \a_term_reg[27]_i_1 
       (.I0(\a_term_reg[27]_i_2_n_0 ),
        .I1(\a_term_reg[27]_i_3_n_0 ),
        .O(\rptr_a_ex_reg[3]_0 [27]),
        .S(rptr_a_ex[3]));
  MUXF7 \a_term_reg[27]_i_2 
       (.I0(\a_term[27]_i_4_n_0 ),
        .I1(\a_term[27]_i_5_n_0 ),
        .O(\a_term_reg[27]_i_2_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF7 \a_term_reg[27]_i_3 
       (.I0(\a_term[27]_i_6_n_0 ),
        .I1(\a_term[27]_i_7_n_0 ),
        .O(\a_term_reg[27]_i_3_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF8 \a_term_reg[28]_i_1 
       (.I0(\a_term_reg[28]_i_2_n_0 ),
        .I1(\a_term_reg[28]_i_3_n_0 ),
        .O(\rptr_a_ex_reg[3]_0 [28]),
        .S(rptr_a_ex[3]));
  MUXF7 \a_term_reg[28]_i_2 
       (.I0(\a_term[28]_i_4_n_0 ),
        .I1(\a_term[28]_i_5_n_0 ),
        .O(\a_term_reg[28]_i_2_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF7 \a_term_reg[28]_i_3 
       (.I0(\a_term[28]_i_6_n_0 ),
        .I1(\a_term[28]_i_7_n_0 ),
        .O(\a_term_reg[28]_i_3_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF8 \a_term_reg[29]_i_1 
       (.I0(\a_term_reg[29]_i_2_n_0 ),
        .I1(\a_term_reg[29]_i_3_n_0 ),
        .O(\rptr_a_ex_reg[3]_0 [29]),
        .S(rptr_a_ex[3]));
  MUXF7 \a_term_reg[29]_i_2 
       (.I0(\a_term[29]_i_4_n_0 ),
        .I1(\a_term[29]_i_5_n_0 ),
        .O(\a_term_reg[29]_i_2_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF7 \a_term_reg[29]_i_3 
       (.I0(\a_term[29]_i_6_n_0 ),
        .I1(\a_term[29]_i_7_n_0 ),
        .O(\a_term_reg[29]_i_3_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF8 \a_term_reg[2]_i_1 
       (.I0(\a_term_reg[2]_i_2_n_0 ),
        .I1(\a_term_reg[2]_i_3_n_0 ),
        .O(\rptr_a_ex_reg[3]_0 [2]),
        .S(rptr_a_ex[3]));
  MUXF7 \a_term_reg[2]_i_2 
       (.I0(\a_term[2]_i_4_n_0 ),
        .I1(\a_term[2]_i_5_n_0 ),
        .O(\a_term_reg[2]_i_2_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF7 \a_term_reg[2]_i_3 
       (.I0(\a_term[2]_i_6_n_0 ),
        .I1(\a_term[2]_i_7_n_0 ),
        .O(\a_term_reg[2]_i_3_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF8 \a_term_reg[30]_i_1 
       (.I0(\a_term_reg[30]_i_2_n_0 ),
        .I1(\a_term_reg[30]_i_3_n_0 ),
        .O(\rptr_a_ex_reg[3]_0 [30]),
        .S(rptr_a_ex[3]));
  MUXF7 \a_term_reg[30]_i_2 
       (.I0(\a_term[30]_i_4_n_0 ),
        .I1(\a_term[30]_i_5_n_0 ),
        .O(\a_term_reg[30]_i_2_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF7 \a_term_reg[30]_i_3 
       (.I0(\a_term[30]_i_6_n_0 ),
        .I1(\a_term[30]_i_7_n_0 ),
        .O(\a_term_reg[30]_i_3_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF8 \a_term_reg[31]_i_1 
       (.I0(\a_term_reg[31]_i_2_n_0 ),
        .I1(\a_term_reg[31]_i_3_n_0 ),
        .O(\rptr_a_ex_reg[3]_0 [31]),
        .S(rptr_a_ex[3]));
  MUXF7 \a_term_reg[31]_i_2 
       (.I0(\a_term[31]_i_4_n_0 ),
        .I1(\a_term[31]_i_5_n_0 ),
        .O(\a_term_reg[31]_i_2_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF7 \a_term_reg[31]_i_3 
       (.I0(\a_term[31]_i_6_n_0 ),
        .I1(\a_term[31]_i_7_n_0 ),
        .O(\a_term_reg[31]_i_3_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF8 \a_term_reg[3]_i_1 
       (.I0(\a_term_reg[3]_i_2_n_0 ),
        .I1(\a_term_reg[3]_i_3_n_0 ),
        .O(\rptr_a_ex_reg[3]_0 [3]),
        .S(rptr_a_ex[3]));
  MUXF7 \a_term_reg[3]_i_2 
       (.I0(\a_term[3]_i_4_n_0 ),
        .I1(\a_term[3]_i_5_n_0 ),
        .O(\a_term_reg[3]_i_2_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF7 \a_term_reg[3]_i_3 
       (.I0(\a_term[3]_i_6_n_0 ),
        .I1(\a_term[3]_i_7_n_0 ),
        .O(\a_term_reg[3]_i_3_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF8 \a_term_reg[4]_i_1 
       (.I0(\a_term_reg[4]_i_2_n_0 ),
        .I1(\a_term_reg[4]_i_3_n_0 ),
        .O(\rptr_a_ex_reg[3]_0 [4]),
        .S(rptr_a_ex[3]));
  MUXF7 \a_term_reg[4]_i_2 
       (.I0(\a_term[4]_i_4_n_0 ),
        .I1(\a_term[4]_i_5_n_0 ),
        .O(\a_term_reg[4]_i_2_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF7 \a_term_reg[4]_i_3 
       (.I0(\a_term[4]_i_6_n_0 ),
        .I1(\a_term[4]_i_7_n_0 ),
        .O(\a_term_reg[4]_i_3_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF8 \a_term_reg[5]_i_1 
       (.I0(\a_term_reg[5]_i_2_n_0 ),
        .I1(\a_term_reg[5]_i_3_n_0 ),
        .O(\rptr_a_ex_reg[3]_0 [5]),
        .S(rptr_a_ex[3]));
  MUXF7 \a_term_reg[5]_i_2 
       (.I0(\a_term[5]_i_4_n_0 ),
        .I1(\a_term[5]_i_5_n_0 ),
        .O(\a_term_reg[5]_i_2_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF7 \a_term_reg[5]_i_3 
       (.I0(\a_term[5]_i_6_n_0 ),
        .I1(\a_term[5]_i_7_n_0 ),
        .O(\a_term_reg[5]_i_3_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF8 \a_term_reg[6]_i_1 
       (.I0(\a_term_reg[6]_i_2_n_0 ),
        .I1(\a_term_reg[6]_i_3_n_0 ),
        .O(\rptr_a_ex_reg[3]_0 [6]),
        .S(rptr_a_ex[3]));
  MUXF7 \a_term_reg[6]_i_2 
       (.I0(\a_term[6]_i_4_n_0 ),
        .I1(\a_term[6]_i_5_n_0 ),
        .O(\a_term_reg[6]_i_2_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF7 \a_term_reg[6]_i_3 
       (.I0(\a_term[6]_i_6_n_0 ),
        .I1(\a_term[6]_i_7_n_0 ),
        .O(\a_term_reg[6]_i_3_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF8 \a_term_reg[7]_i_1 
       (.I0(\a_term_reg[7]_i_2_n_0 ),
        .I1(\a_term_reg[7]_i_3_n_0 ),
        .O(\rptr_a_ex_reg[3]_0 [7]),
        .S(rptr_a_ex[3]));
  MUXF7 \a_term_reg[7]_i_2 
       (.I0(\a_term[7]_i_4_n_0 ),
        .I1(\a_term[7]_i_5_n_0 ),
        .O(\a_term_reg[7]_i_2_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF7 \a_term_reg[7]_i_3 
       (.I0(\a_term[7]_i_6_n_0 ),
        .I1(\a_term[7]_i_7_n_0 ),
        .O(\a_term_reg[7]_i_3_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF8 \a_term_reg[8]_i_1 
       (.I0(\a_term_reg[8]_i_2_n_0 ),
        .I1(\a_term_reg[8]_i_3_n_0 ),
        .O(\rptr_a_ex_reg[3]_0 [8]),
        .S(rptr_a_ex[3]));
  MUXF7 \a_term_reg[8]_i_2 
       (.I0(\a_term[8]_i_4_n_0 ),
        .I1(\a_term[8]_i_5_n_0 ),
        .O(\a_term_reg[8]_i_2_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF7 \a_term_reg[8]_i_3 
       (.I0(\a_term[8]_i_6_n_0 ),
        .I1(\a_term[8]_i_7_n_0 ),
        .O(\a_term_reg[8]_i_3_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF8 \a_term_reg[9]_i_1 
       (.I0(\a_term_reg[9]_i_2_n_0 ),
        .I1(\a_term_reg[9]_i_3_n_0 ),
        .O(\rptr_a_ex_reg[3]_0 [9]),
        .S(rptr_a_ex[3]));
  MUXF7 \a_term_reg[9]_i_2 
       (.I0(\a_term[9]_i_4_n_0 ),
        .I1(\a_term[9]_i_5_n_0 ),
        .O(\a_term_reg[9]_i_2_n_0 ),
        .S(rptr_a_ex[2]));
  MUXF7 \a_term_reg[9]_i_3 
       (.I0(\a_term[9]_i_6_n_0 ),
        .I1(\a_term[9]_i_7_n_0 ),
        .O(\a_term_reg[9]_i_3_n_0 ),
        .S(rptr_a_ex[2]));
  CARRY4 c_flag_mux_reg_i_2
       (.CI(\mem_held_addr_reg[31]_i_1_n_0 ),
        .CO({NLW_c_flag_mux_reg_i_2_CO_UNCONNECTED[3:1],\mem_held_addr_reg[31]_i_1_0 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_c_flag_mux_reg_i_2_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,1'b0,1'b1}));
  LUT2 #(
    .INIT(4'h8)) 
    \dp_ipsr_7to2[4]_i_5 
       (.I0(Q[0]),
        .I1(au_a_use_pc_ex),
        .O(\pc_reg[4] ));
  (* SOFT_HLUTNM = "soft_lutpair243" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \dp_ipsr_7to2[5]_i_5 
       (.I0(Q[1]),
        .I1(au_a_use_pc_ex),
        .O(\pc_reg[5] ));
  LUT6 #(
    .INIT(64'h3030310100003101)) 
    dp_tbit_reg_i_4
       (.I0(\hold_reg1_reg[24] ),
        .I1(ze_half_wb),
        .I2(\hold_reg1_reg[30] [0]),
        .I3(\rptr_a_ex_reg[3]_0 [16]),
        .I4(\hold_reg1_reg[30] [1]),
        .I5(\rptr_a_ex_reg[3]_0 [0]),
        .O(ze_half_wb_reg_8));
  (* SOFT_HLUTNM = "soft_lutpair225" *) 
  LUT2 #(
    .INIT(4'h8)) 
    dp_tbit_reg_i_8
       (.I0(Q[9]),
        .I1(au_a_use_pc_ex),
        .O(\pc_reg[24] ));
  LUT6 #(
    .INIT(64'hB800B800B8FFB800)) 
    \genblk3[1].ram_block_reg_1_0_i_1__0 
       (.I0(b_reg_0[3]),
        .I1(ls_byte_ex),
        .I2(b_reg_0[11]),
        .I3(\wdata_reg[15] ),
        .I4(\wdata_reg[23]_0 [2]),
        .I5(\wdata_reg[15]_0 ),
        .O(p_1_in2_in[2]));
  LUT6 #(
    .INIT(64'hCA00CA00CAFFCA00)) 
    \genblk3[1].ram_block_reg_1_0_i_2 
       (.I0(b_reg_0[10]),
        .I1(b_reg_0[2]),
        .I2(ls_byte_ex),
        .I3(\wdata_reg[15] ),
        .I4(\wdata_reg[23]_0 [1]),
        .I5(\wdata_reg[15]_0 ),
        .O(p_1_in2_in[1]));
  LUT6 #(
    .INIT(64'hCA00CA00CAFFCA00)) 
    \genblk3[1].ram_block_reg_1_0_i_4 
       (.I0(b_reg_0[8]),
        .I1(b_reg_0[0]),
        .I2(ls_byte_ex),
        .I3(\wdata_reg[15] ),
        .I4(\wdata_reg[23]_0 [0]),
        .I5(\wdata_reg[15]_0 ),
        .O(p_1_in2_in[0]));
  LUT6 #(
    .INIT(64'hB800B800B8FFB800)) 
    \genblk3[1].ram_block_reg_1_1_i_1 
       (.I0(b_reg_0[7]),
        .I1(ls_byte_ex),
        .I2(b_reg_0[15]),
        .I3(\wdata_reg[15] ),
        .I4(\wdata_reg[23]_0 [6]),
        .I5(\wdata_reg[15]_0 ),
        .O(p_1_in2_in[6]));
  LUT6 #(
    .INIT(64'hB800B800B8FFB800)) 
    \genblk3[1].ram_block_reg_1_1_i_2 
       (.I0(b_reg_0[6]),
        .I1(ls_byte_ex),
        .I2(b_reg_0[14]),
        .I3(\wdata_reg[15] ),
        .I4(\wdata_reg[23]_0 [5]),
        .I5(\wdata_reg[15]_0 ),
        .O(p_1_in2_in[5]));
  LUT6 #(
    .INIT(64'hCA00CA00CAFFCA00)) 
    \genblk3[1].ram_block_reg_1_1_i_3 
       (.I0(b_reg_0[13]),
        .I1(b_reg_0[5]),
        .I2(ls_byte_ex),
        .I3(\wdata_reg[15] ),
        .I4(\wdata_reg[23]_0 [4]),
        .I5(\wdata_reg[15]_0 ),
        .O(p_1_in2_in[4]));
  LUT6 #(
    .INIT(64'hCA00CA00CAFFCA00)) 
    \genblk3[1].ram_block_reg_1_1_i_4 
       (.I0(b_reg_0[12]),
        .I1(b_reg_0[4]),
        .I2(ls_byte_ex),
        .I3(\wdata_reg[15] ),
        .I4(\wdata_reg[23]_0 [3]),
        .I5(\wdata_reg[15]_0 ),
        .O(p_1_in2_in[3]));
  LUT6 #(
    .INIT(64'hB800B800B8FFB800)) 
    \genblk3[1].ram_block_reg_2_0_i_1 
       (.I0(b_reg_0[19]),
        .I1(\wdata_reg[23] ),
        .I2(b_reg_0[3]),
        .I3(\wdata_reg[15] ),
        .I4(\wdata_reg[23]_0 [10]),
        .I5(\wdata_reg[15]_0 ),
        .O(p_1_in2_in[10]));
  LUT6 #(
    .INIT(64'hB800B800B8FFB800)) 
    \genblk3[1].ram_block_reg_2_0_i_2 
       (.I0(b_reg_0[18]),
        .I1(\wdata_reg[23] ),
        .I2(b_reg_0[2]),
        .I3(\wdata_reg[15] ),
        .I4(\wdata_reg[23]_0 [9]),
        .I5(\wdata_reg[15]_0 ),
        .O(p_1_in2_in[9]));
  LUT6 #(
    .INIT(64'hB800B800B8FFB800)) 
    \genblk3[1].ram_block_reg_2_0_i_3 
       (.I0(b_reg_0[17]),
        .I1(\wdata_reg[23] ),
        .I2(b_reg_0[1]),
        .I3(\wdata_reg[15] ),
        .I4(\wdata_reg[23]_0 [8]),
        .I5(\wdata_reg[15]_0 ),
        .O(p_1_in2_in[8]));
  LUT6 #(
    .INIT(64'hB800B800B8FFB800)) 
    \genblk3[1].ram_block_reg_2_0_i_4 
       (.I0(b_reg_0[16]),
        .I1(\wdata_reg[23] ),
        .I2(b_reg_0[0]),
        .I3(\wdata_reg[15] ),
        .I4(\wdata_reg[23]_0 [7]),
        .I5(\wdata_reg[15]_0 ),
        .O(p_1_in2_in[7]));
  LUT6 #(
    .INIT(64'hB800B800B8FFB800)) 
    \genblk3[1].ram_block_reg_2_1_i_1 
       (.I0(b_reg_0[23]),
        .I1(\wdata_reg[23] ),
        .I2(b_reg_0[7]),
        .I3(\wdata_reg[15] ),
        .I4(\wdata_reg[23]_0 [14]),
        .I5(\wdata_reg[15]_0 ),
        .O(p_1_in2_in[14]));
  LUT6 #(
    .INIT(64'hB800B800B8FFB800)) 
    \genblk3[1].ram_block_reg_2_1_i_2 
       (.I0(b_reg_0[22]),
        .I1(\wdata_reg[23] ),
        .I2(b_reg_0[6]),
        .I3(\wdata_reg[15] ),
        .I4(\wdata_reg[23]_0 [13]),
        .I5(\wdata_reg[15]_0 ),
        .O(p_1_in2_in[13]));
  LUT6 #(
    .INIT(64'hB800B800B8FFB800)) 
    \genblk3[1].ram_block_reg_2_1_i_3 
       (.I0(b_reg_0[21]),
        .I1(\wdata_reg[23] ),
        .I2(b_reg_0[5]),
        .I3(\wdata_reg[15] ),
        .I4(\wdata_reg[23]_0 [12]),
        .I5(\wdata_reg[15]_0 ),
        .O(p_1_in2_in[12]));
  LUT6 #(
    .INIT(64'hB800B800B8FFB800)) 
    \genblk3[1].ram_block_reg_2_1_i_4 
       (.I0(b_reg_0[20]),
        .I1(\wdata_reg[23] ),
        .I2(b_reg_0[4]),
        .I3(\wdata_reg[15] ),
        .I4(\wdata_reg[23]_0 [11]),
        .I5(\wdata_reg[15]_0 ),
        .O(p_1_in2_in[11]));
  LUT5 #(
    .INIT(32'hAFACA0AC)) 
    \genblk3[1].ram_block_reg_3_0_i_10 
       (.I0(b_reg_0[0]),
        .I1(b_reg_0[24]),
        .I2(ls_byte_ex),
        .I3(ls_half_ex),
        .I4(b_reg_0[8]),
        .O(ls_byte_ex_reg));
  LUT6 #(
    .INIT(64'h5050505000F03030)) 
    \genblk3[1].ram_block_reg_3_0_i_6 
       (.I0(b_reg_0[3]),
        .I1(b_reg_0[27]),
        .I2(\wdata_reg[15] ),
        .I3(b_reg_0[11]),
        .I4(ls_half_ex),
        .I5(ls_byte_ex),
        .O(ls_half_ex_reg_0));
  LUT6 #(
    .INIT(64'h00001D00FF001D00)) 
    \genblk3[1].ram_block_reg_3_0_i_7 
       (.I0(b_reg_0[26]),
        .I1(ls_half_ex),
        .I2(b_reg_0[10]),
        .I3(\wdata_reg[15] ),
        .I4(ls_byte_ex),
        .I5(b_reg_0[2]),
        .O(ls_half_ex_reg));
  (* SOFT_HLUTNM = "soft_lutpair242" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \genblk3[1].ram_block_reg_3_0_i_8 
       (.I0(b_reg_0[1]),
        .I1(ls_byte_ex),
        .I2(b_reg_0[9]),
        .O(ls_byte_ex_reg_2));
  LUT5 #(
    .INIT(32'hFF00D8D8)) 
    \genblk3[1].ram_block_reg_3_1_i_11 
       (.I0(ls_half_ex),
        .I1(b_reg_0[12]),
        .I2(b_reg_0[28]),
        .I3(b_reg_0[4]),
        .I4(ls_byte_ex),
        .O(ls_half_ex_reg_1));
  LUT3 #(
    .INIT(8'hB8)) 
    \genblk3[1].ram_block_reg_3_1_i_13 
       (.I0(z_flag_wf),
        .I1(sel_wf_z),
        .I2(z_flag_mux),
        .O(z_flag));
  LUT3 #(
    .INIT(8'hB8)) 
    \genblk3[1].ram_block_reg_3_1_i_14 
       (.I0(c_flag_wf),
        .I1(sel_wf_c),
        .I2(c_flag_mux),
        .O(c_flag));
  LUT3 #(
    .INIT(8'hB8)) 
    \genblk3[1].ram_block_reg_3_1_i_15 
       (.I0(v_flag_wf),
        .I1(sel_wf_v),
        .I2(v_flag_au),
        .O(v_flag));
  LUT5 #(
    .INIT(32'hAACFAAC0)) 
    \genblk3[1].ram_block_reg_3_1_i_5 
       (.I0(b_reg_0[7]),
        .I1(b_reg_0[15]),
        .I2(ls_half_ex),
        .I3(ls_byte_ex),
        .I4(b_reg_0[31]),
        .O(ls_half_ex_reg_2));
  (* SOFT_HLUTNM = "soft_lutpair242" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \genblk3[1].ram_block_reg_3_1_i_7 
       (.I0(b_reg_0[6]),
        .I1(ls_byte_ex),
        .I2(b_reg_0[14]),
        .O(ls_byte_ex_reg_1));
  LUT5 #(
    .INIT(32'hAFACA0AC)) 
    \genblk3[1].ram_block_reg_3_1_i_9 
       (.I0(b_reg_0[5]),
        .I1(b_reg_0[29]),
        .I2(ls_byte_ex),
        .I3(ls_half_ex),
        .I4(b_reg_0[13]),
        .O(ls_byte_ex_reg_0));
  LUT4 #(
    .INIT(16'hAA0C)) 
    \mem_held_addr[11]_i_2 
       (.I0(Q[4]),
        .I1(\rptr_a_ex_reg[3]_0 [11]),
        .I2(zero_a_ex),
        .I3(au_a_use_pc_ex),
        .O(\pc_reg[30] [0]));
  LUT2 #(
    .INIT(4'h9)) 
    \mem_held_addr[11]_i_6 
       (.I0(\pc_reg[30] [0]),
        .I1(\mem_held_addr_reg[11] ),
        .O(\pc_reg[11] [1]));
  LUT2 #(
    .INIT(4'h9)) 
    \mem_held_addr[11]_i_7 
       (.I0(zero_a_ex_reg_6),
        .I1(\mem_held_addr_reg[31]_1 [0]),
        .O(\pc_reg[11] [0]));
  LUT4 #(
    .INIT(16'hA3A0)) 
    \mem_held_addr[15]_i_2 
       (.I0(Q[6]),
        .I1(zero_a_ex),
        .I2(au_a_use_pc_ex),
        .I3(\rptr_a_ex_reg[3]_0 [15]),
        .O(\pc_reg[30] [2]));
  LUT1 #(
    .INIT(2'h1)) 
    \mem_held_addr[15]_i_5 
       (.I0(zero_a_ex_reg_5),
        .O(\pc_reg[30] [1]));
  LUT2 #(
    .INIT(4'h9)) 
    \mem_held_addr[15]_i_6 
       (.I0(\pc_reg[30] [2]),
        .I1(\mem_held_addr_reg[15] ),
        .O(\pc_reg[15] [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \mem_held_addr[15]_i_9 
       (.I0(zero_a_ex_reg_5),
        .I1(\mem_held_addr_reg[15]_0 ),
        .O(\pc_reg[15] [0]));
  LUT2 #(
    .INIT(4'h9)) 
    \mem_held_addr[19]_i_6 
       (.I0(zero_a_ex_reg_4),
        .I1(\mem_held_addr_reg[31]_1 [1]),
        .O(zero_a_ex_reg_3));
  LUT2 #(
    .INIT(4'h9)) 
    \mem_held_addr[23]_i_6 
       (.I0(zero_a_ex_reg_2),
        .I1(\mem_held_addr_reg[31]_1 [2]),
        .O(zero_a_ex_reg_1));
  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT4 #(
    .INIT(16'h0DFD)) 
    \mem_held_addr[27]_i_10 
       (.I0(\rptr_a_ex_reg[3]_0 [25]),
        .I1(zero_a_ex),
        .I2(au_a_use_pc_ex),
        .I3(Q[10]),
        .O(zero_a_ex_reg_0));
  LUT4 #(
    .INIT(16'hAA0C)) 
    \mem_held_addr[27]_i_2 
       (.I0(Q[12]),
        .I1(\rptr_a_ex_reg[3]_0 [27]),
        .I2(zero_a_ex),
        .I3(au_a_use_pc_ex),
        .O(\pc_reg[30] [5]));
  LUT4 #(
    .INIT(16'hA3A0)) 
    \mem_held_addr[27]_i_3 
       (.I0(Q[11]),
        .I1(zero_a_ex),
        .I2(au_a_use_pc_ex),
        .I3(\rptr_a_ex_reg[3]_0 [26]),
        .O(\pc_reg[30] [4]));
  LUT4 #(
    .INIT(16'hAA0C)) 
    \mem_held_addr[27]_i_5 
       (.I0(Q[9]),
        .I1(\rptr_a_ex_reg[3]_0 [24]),
        .I2(zero_a_ex),
        .I3(au_a_use_pc_ex),
        .O(\pc_reg[30] [3]));
  LUT2 #(
    .INIT(4'h9)) 
    \mem_held_addr[27]_i_6 
       (.I0(\pc_reg[30] [5]),
        .I1(\mem_held_addr_reg[27] ),
        .O(\mem_held_addr[27]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \mem_held_addr[27]_i_8 
       (.I0(zero_a_ex_reg_0),
        .I1(\mem_held_addr_reg[31]_1 [3]),
        .O(\mem_held_addr[27]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \mem_held_addr[27]_i_9 
       (.I0(\pc_reg[30] [3]),
        .I1(\mem_held_addr_reg[27]_0 ),
        .O(\mem_held_addr[27]_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT4 #(
    .INIT(16'h0DFD)) 
    \mem_held_addr[31]_i_11 
       (.I0(\rptr_a_ex_reg[3]_0 [29]),
        .I1(zero_a_ex),
        .I2(au_a_use_pc_ex),
        .I3(Q[14]),
        .O(zero_a_ex_reg));
  LUT4 #(
    .INIT(16'hA3A0)) 
    \mem_held_addr[31]_i_3 
       (.I0(Q[15]),
        .I1(zero_a_ex),
        .I2(au_a_use_pc_ex),
        .I3(\rptr_a_ex_reg[3]_0 [30]),
        .O(\pc_reg[30] [7]));
  LUT4 #(
    .INIT(16'hA3A0)) 
    \mem_held_addr[31]_i_5 
       (.I0(Q[13]),
        .I1(zero_a_ex),
        .I2(au_a_use_pc_ex),
        .I3(\rptr_a_ex_reg[3]_0 [28]),
        .O(\pc_reg[30] [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \mem_held_addr[31]_i_8 
       (.I0(zero_a_ex_reg),
        .I1(\mem_held_addr_reg[31] ),
        .O(\mem_held_addr[31]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \mem_held_addr[31]_i_9 
       (.I0(\pc_reg[30] [6]),
        .I1(\mem_held_addr_reg[31]_0 ),
        .O(\mem_held_addr[31]_i_9_n_0 ));
  CARRY4 \mem_held_addr_reg[27]_i_1 
       (.CI(CO),
        .CO({\mem_held_addr_reg[27]_i_1_n_0 ,\mem_held_addr_reg[27]_i_1_n_1 ,\mem_held_addr_reg[27]_i_1_n_2 ,\mem_held_addr_reg[27]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\pc_reg[30] [5:4],\mem_held_addr_reg[31]_1 [3],\pc_reg[30] [3]}),
        .O(invert_b_ex_reg[3:0]),
        .S({\mem_held_addr[27]_i_6_n_0 ,S,\mem_held_addr[27]_i_8_n_0 ,\mem_held_addr[27]_i_9_n_0 }));
  CARRY4 \mem_held_addr_reg[31]_i_1 
       (.CI(\mem_held_addr_reg[27]_i_1_n_0 ),
        .CO({\mem_held_addr_reg[31]_i_1_n_0 ,\mem_held_addr_reg[31]_i_1_n_1 ,\mem_held_addr_reg[31]_i_1_n_2 ,\mem_held_addr_reg[31]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\mem_held_addr_reg[31]_1 [5],\pc_reg[30] [7],\mem_held_addr_reg[31]_1 [4],\pc_reg[30] [6]}),
        .O(invert_b_ex_reg[7:4]),
        .S({\mem_held_addr_reg[31]_2 ,\mem_held_addr[31]_i_8_n_0 ,\mem_held_addr[31]_i_9_n_0 }));
  (* SOFT_HLUTNM = "soft_lutpair225" *) 
  LUT4 #(
    .INIT(16'h0DFD)) 
    \reg_file_a[15][10]_i_4 
       (.I0(\rptr_a_ex_reg[3]_0 [10]),
        .I1(zero_a_ex),
        .I2(au_a_use_pc_ex),
        .I3(Q[3]),
        .O(zero_a_ex_reg_6));
  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT4 #(
    .INIT(16'h0DFD)) 
    \reg_file_a[15][12]_i_5 
       (.I0(\rptr_a_ex_reg[3]_0 [12]),
        .I1(zero_a_ex),
        .I2(au_a_use_pc_ex),
        .I3(Q[5]),
        .O(zero_a_ex_reg_5));
  LUT6 #(
    .INIT(64'h3030310100003101)) 
    \reg_file_a[15][16]_i_3 
       (.I0(\hold_reg1_reg[16] ),
        .I1(ze_half_wb),
        .I2(\hold_reg1_reg[30] [0]),
        .I3(\rptr_a_ex_reg[3]_0 [24]),
        .I4(\hold_reg1_reg[30] [1]),
        .I5(\rptr_a_ex_reg[3]_0 [8]),
        .O(ze_half_wb_reg_1));
  LUT6 #(
    .INIT(64'h3030310100003101)) 
    \reg_file_a[15][17]_i_3 
       (.I0(\hold_reg1_reg[17] ),
        .I1(ze_half_wb),
        .I2(\hold_reg1_reg[30] [0]),
        .I3(\rptr_a_ex_reg[3]_0 [25]),
        .I4(\hold_reg1_reg[30] [1]),
        .I5(\rptr_a_ex_reg[3]_0 [9]),
        .O(ze_half_wb_reg_2));
  LUT6 #(
    .INIT(64'h3030310100003101)) 
    \reg_file_a[15][18]_i_3 
       (.I0(\hold_reg1_reg[18] ),
        .I1(ze_half_wb),
        .I2(\hold_reg1_reg[30] [0]),
        .I3(\rptr_a_ex_reg[3]_0 [26]),
        .I4(\hold_reg1_reg[30] [1]),
        .I5(\rptr_a_ex_reg[3]_0 [10]),
        .O(ze_half_wb_reg_3));
  LUT6 #(
    .INIT(64'h3030310100003101)) 
    \reg_file_a[15][19]_i_3 
       (.I0(\hold_reg1_reg[19] ),
        .I1(ze_half_wb),
        .I2(\hold_reg1_reg[30] [0]),
        .I3(\rptr_a_ex_reg[3]_0 [27]),
        .I4(\hold_reg1_reg[30] [1]),
        .I5(\rptr_a_ex_reg[3]_0 [11]),
        .O(ze_half_wb_reg_4));
  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT4 #(
    .INIT(16'h0DFD)) 
    \reg_file_a[15][19]_i_4 
       (.I0(\rptr_a_ex_reg[3]_0 [19]),
        .I1(zero_a_ex),
        .I2(au_a_use_pc_ex),
        .I3(Q[7]),
        .O(zero_a_ex_reg_4));
  LUT6 #(
    .INIT(64'h3030310100003101)) 
    \reg_file_a[15][20]_i_3 
       (.I0(\hold_reg1_reg[20] ),
        .I1(ze_half_wb),
        .I2(\hold_reg1_reg[30] [0]),
        .I3(\rptr_a_ex_reg[3]_0 [28]),
        .I4(\hold_reg1_reg[30] [1]),
        .I5(\rptr_a_ex_reg[3]_0 [12]),
        .O(ze_half_wb_reg_5));
  LUT6 #(
    .INIT(64'h3030310100003101)) 
    \reg_file_a[15][21]_i_3 
       (.I0(\hold_reg1_reg[21] ),
        .I1(ze_half_wb),
        .I2(\hold_reg1_reg[30] [0]),
        .I3(\rptr_a_ex_reg[3]_0 [29]),
        .I4(\hold_reg1_reg[30] [1]),
        .I5(\rptr_a_ex_reg[3]_0 [13]),
        .O(ze_half_wb_reg_6));
  LUT6 #(
    .INIT(64'h3030310100003101)) 
    \reg_file_a[15][22]_i_3 
       (.I0(\hold_reg1_reg[22] ),
        .I1(ze_half_wb),
        .I2(\hold_reg1_reg[30] [0]),
        .I3(\rptr_a_ex_reg[3]_0 [30]),
        .I4(\hold_reg1_reg[30] [1]),
        .I5(\rptr_a_ex_reg[3]_0 [14]),
        .O(ze_half_wb_reg_7));
  LUT6 #(
    .INIT(64'h3030310100003101)) 
    \reg_file_a[15][23]_i_3 
       (.I0(\hold_reg1_reg[23] ),
        .I1(ze_half_wb),
        .I2(\hold_reg1_reg[30] [0]),
        .I3(\rptr_a_ex_reg[3]_0 [31]),
        .I4(\hold_reg1_reg[30] [1]),
        .I5(\rptr_a_ex_reg[3]_0 [15]),
        .O(ze_half_wb_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT4 #(
    .INIT(16'h0DFD)) 
    \reg_file_a[15][23]_i_4 
       (.I0(\rptr_a_ex_reg[3]_0 [23]),
        .I1(zero_a_ex),
        .I2(au_a_use_pc_ex),
        .I3(Q[8]),
        .O(zero_a_ex_reg_2));
  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \reg_file_a[15][25]_i_9 
       (.I0(Q[10]),
        .I1(au_a_use_pc_ex),
        .O(\pc_reg[25] ));
  LUT6 #(
    .INIT(64'h3030310100003101)) 
    \reg_file_a[15][26]_i_3 
       (.I0(\hold_reg1_reg[26] ),
        .I1(ze_half_wb),
        .I2(\hold_reg1_reg[30] [0]),
        .I3(\rptr_a_ex_reg[3]_0 [18]),
        .I4(\hold_reg1_reg[30] [1]),
        .I5(\rptr_a_ex_reg[3]_0 [2]),
        .O(ze_half_wb_reg_9));
  LUT6 #(
    .INIT(64'h3030310100003101)) 
    \reg_file_a[15][27]_i_3 
       (.I0(\hold_reg1_reg[27] ),
        .I1(ze_half_wb),
        .I2(\hold_reg1_reg[30] [0]),
        .I3(\rptr_a_ex_reg[3]_0 [19]),
        .I4(\hold_reg1_reg[30] [1]),
        .I5(\rptr_a_ex_reg[3]_0 [3]),
        .O(ze_half_wb_reg_10));
  LUT6 #(
    .INIT(64'h3030310100003101)) 
    \reg_file_a[15][28]_i_3 
       (.I0(\hold_reg1_reg[28] ),
        .I1(ze_half_wb),
        .I2(\hold_reg1_reg[30] [0]),
        .I3(\rptr_a_ex_reg[3]_0 [20]),
        .I4(\hold_reg1_reg[30] [1]),
        .I5(\rptr_a_ex_reg[3]_0 [4]),
        .O(ze_half_wb_reg_11));
  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \reg_file_a[15][28]_i_6 
       (.I0(Q[13]),
        .I1(au_a_use_pc_ex),
        .O(\pc_reg[28] ));
  LUT6 #(
    .INIT(64'h3030310100003101)) 
    \reg_file_a[15][29]_i_3 
       (.I0(\hold_reg1_reg[29] ),
        .I1(ze_half_wb),
        .I2(\hold_reg1_reg[30] [0]),
        .I3(\rptr_a_ex_reg[3]_0 [21]),
        .I4(\hold_reg1_reg[30] [1]),
        .I5(\rptr_a_ex_reg[3]_0 [5]),
        .O(ze_half_wb_reg_12));
  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \reg_file_a[15][29]_i_6 
       (.I0(Q[14]),
        .I1(au_a_use_pc_ex),
        .O(\pc_reg[29] ));
  LUT6 #(
    .INIT(64'h3030310100003101)) 
    \reg_file_a[15][30]_i_3 
       (.I0(\hold_reg1_reg[30]_0 ),
        .I1(ze_half_wb),
        .I2(\hold_reg1_reg[30] [0]),
        .I3(\rptr_a_ex_reg[3]_0 [22]),
        .I4(\hold_reg1_reg[30] [1]),
        .I5(\rptr_a_ex_reg[3]_0 [6]),
        .O(ze_half_wb_reg_13));
  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \reg_file_a[15][30]_i_6 
       (.I0(Q[15]),
        .I1(au_a_use_pc_ex),
        .O(\pc_reg[30]_0 ));
  LUT6 #(
    .INIT(64'h3030310100003101)) 
    \reg_file_a[15][31]_i_4 
       (.I0(\hold_reg1_reg[31] ),
        .I1(ze_half_wb),
        .I2(\hold_reg1_reg[30] [0]),
        .I3(\rptr_a_ex_reg[3]_0 [23]),
        .I4(\hold_reg1_reg[30] [1]),
        .I5(\rptr_a_ex_reg[3]_0 [7]),
        .O(ze_half_wb_reg));
  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \reg_file_a[15][31]_i_7 
       (.I0(Q[16]),
        .I1(au_a_use_pc_ex),
        .O(\pc_reg[31] ));
  (* SOFT_HLUTNM = "soft_lutpair243" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \reg_file_a[15][9]_i_7 
       (.I0(Q[2]),
        .I1(au_a_use_pc_ex),
        .O(\pc_reg[9] ));
  FDRE \reg_file_a_reg[0][0] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[0][0]_0 ),
        .D(rf_wdata[0]),
        .Q(\reg_file_a_reg[0]_15 [0]),
        .R(1'b0));
  FDRE \reg_file_a_reg[0][10] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[0][0]_0 ),
        .D(rf_wdata[10]),
        .Q(\reg_file_a_reg[0]_15 [10]),
        .R(1'b0));
  FDRE \reg_file_a_reg[0][11] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[0][0]_0 ),
        .D(rf_wdata[11]),
        .Q(\reg_file_a_reg[0]_15 [11]),
        .R(1'b0));
  FDRE \reg_file_a_reg[0][12] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[0][0]_0 ),
        .D(rf_wdata[12]),
        .Q(\reg_file_a_reg[0]_15 [12]),
        .R(1'b0));
  FDRE \reg_file_a_reg[0][13] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[0][0]_0 ),
        .D(rf_wdata[13]),
        .Q(\reg_file_a_reg[0]_15 [13]),
        .R(1'b0));
  FDRE \reg_file_a_reg[0][14] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[0][0]_0 ),
        .D(rf_wdata[14]),
        .Q(\reg_file_a_reg[0]_15 [14]),
        .R(1'b0));
  FDRE \reg_file_a_reg[0][15] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[0][0]_0 ),
        .D(rf_wdata[15]),
        .Q(\reg_file_a_reg[0]_15 [15]),
        .R(1'b0));
  FDRE \reg_file_a_reg[0][16] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[0][0]_0 ),
        .D(rf_wdata[16]),
        .Q(\reg_file_a_reg[0]_15 [16]),
        .R(1'b0));
  FDRE \reg_file_a_reg[0][17] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[0][0]_0 ),
        .D(rf_wdata[17]),
        .Q(\reg_file_a_reg[0]_15 [17]),
        .R(1'b0));
  FDRE \reg_file_a_reg[0][18] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[0][0]_0 ),
        .D(rf_wdata[18]),
        .Q(\reg_file_a_reg[0]_15 [18]),
        .R(1'b0));
  FDRE \reg_file_a_reg[0][19] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[0][0]_0 ),
        .D(rf_wdata[19]),
        .Q(\reg_file_a_reg[0]_15 [19]),
        .R(1'b0));
  FDRE \reg_file_a_reg[0][1] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[0][0]_0 ),
        .D(rf_wdata[1]),
        .Q(\reg_file_a_reg[0]_15 [1]),
        .R(1'b0));
  FDRE \reg_file_a_reg[0][20] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[0][0]_0 ),
        .D(rf_wdata[20]),
        .Q(\reg_file_a_reg[0]_15 [20]),
        .R(1'b0));
  FDRE \reg_file_a_reg[0][21] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[0][0]_0 ),
        .D(rf_wdata[21]),
        .Q(\reg_file_a_reg[0]_15 [21]),
        .R(1'b0));
  FDRE \reg_file_a_reg[0][22] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[0][0]_0 ),
        .D(rf_wdata[22]),
        .Q(\reg_file_a_reg[0]_15 [22]),
        .R(1'b0));
  FDRE \reg_file_a_reg[0][23] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[0][0]_0 ),
        .D(rf_wdata[23]),
        .Q(\reg_file_a_reg[0]_15 [23]),
        .R(1'b0));
  FDRE \reg_file_a_reg[0][24] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[0][0]_0 ),
        .D(rf_wdata[24]),
        .Q(\reg_file_a_reg[0]_15 [24]),
        .R(1'b0));
  FDRE \reg_file_a_reg[0][25] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[0][0]_0 ),
        .D(rf_wdata[25]),
        .Q(\reg_file_a_reg[0]_15 [25]),
        .R(1'b0));
  FDRE \reg_file_a_reg[0][26] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[0][0]_0 ),
        .D(rf_wdata[26]),
        .Q(\reg_file_a_reg[0]_15 [26]),
        .R(1'b0));
  FDRE \reg_file_a_reg[0][27] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[0][0]_0 ),
        .D(rf_wdata[27]),
        .Q(\reg_file_a_reg[0]_15 [27]),
        .R(1'b0));
  FDRE \reg_file_a_reg[0][28] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[0][0]_0 ),
        .D(rf_wdata[28]),
        .Q(\reg_file_a_reg[0]_15 [28]),
        .R(1'b0));
  FDRE \reg_file_a_reg[0][29] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[0][0]_0 ),
        .D(rf_wdata[29]),
        .Q(\reg_file_a_reg[0]_15 [29]),
        .R(1'b0));
  FDRE \reg_file_a_reg[0][2] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[0][0]_0 ),
        .D(rf_wdata[2]),
        .Q(\reg_file_a_reg[0]_15 [2]),
        .R(1'b0));
  FDRE \reg_file_a_reg[0][30] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[0][0]_0 ),
        .D(rf_wdata[30]),
        .Q(\reg_file_a_reg[0]_15 [30]),
        .R(1'b0));
  FDRE \reg_file_a_reg[0][31] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[0][0]_0 ),
        .D(rf_wdata[31]),
        .Q(\reg_file_a_reg[0]_15 [31]),
        .R(1'b0));
  FDRE \reg_file_a_reg[0][3] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[0][0]_0 ),
        .D(rf_wdata[3]),
        .Q(\reg_file_a_reg[0]_15 [3]),
        .R(1'b0));
  FDRE \reg_file_a_reg[0][4] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[0][0]_0 ),
        .D(rf_wdata[4]),
        .Q(\reg_file_a_reg[0]_15 [4]),
        .R(1'b0));
  FDRE \reg_file_a_reg[0][5] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[0][0]_0 ),
        .D(rf_wdata[5]),
        .Q(\reg_file_a_reg[0]_15 [5]),
        .R(1'b0));
  FDRE \reg_file_a_reg[0][6] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[0][0]_0 ),
        .D(rf_wdata[6]),
        .Q(\reg_file_a_reg[0]_15 [6]),
        .R(1'b0));
  FDRE \reg_file_a_reg[0][7] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[0][0]_0 ),
        .D(rf_wdata[7]),
        .Q(\reg_file_a_reg[0]_15 [7]),
        .R(1'b0));
  FDRE \reg_file_a_reg[0][8] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[0][0]_0 ),
        .D(rf_wdata[8]),
        .Q(\reg_file_a_reg[0]_15 [8]),
        .R(1'b0));
  FDRE \reg_file_a_reg[0][9] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[0][0]_0 ),
        .D(rf_wdata[9]),
        .Q(\reg_file_a_reg[0]_15 [9]),
        .R(1'b0));
  FDRE \reg_file_a_reg[10][0] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[10][0]_0 ),
        .D(rf_wdata[0]),
        .Q(\reg_file_a_reg[10]_5 [0]),
        .R(1'b0));
  FDRE \reg_file_a_reg[10][10] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[10][0]_0 ),
        .D(rf_wdata[10]),
        .Q(\reg_file_a_reg[10]_5 [10]),
        .R(1'b0));
  FDRE \reg_file_a_reg[10][11] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[10][0]_0 ),
        .D(rf_wdata[11]),
        .Q(\reg_file_a_reg[10]_5 [11]),
        .R(1'b0));
  FDRE \reg_file_a_reg[10][12] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[10][0]_0 ),
        .D(rf_wdata[12]),
        .Q(\reg_file_a_reg[10]_5 [12]),
        .R(1'b0));
  FDRE \reg_file_a_reg[10][13] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[10][0]_0 ),
        .D(rf_wdata[13]),
        .Q(\reg_file_a_reg[10]_5 [13]),
        .R(1'b0));
  FDRE \reg_file_a_reg[10][14] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[10][0]_0 ),
        .D(rf_wdata[14]),
        .Q(\reg_file_a_reg[10]_5 [14]),
        .R(1'b0));
  FDRE \reg_file_a_reg[10][15] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[10][0]_0 ),
        .D(rf_wdata[15]),
        .Q(\reg_file_a_reg[10]_5 [15]),
        .R(1'b0));
  FDRE \reg_file_a_reg[10][16] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[10][0]_0 ),
        .D(rf_wdata[16]),
        .Q(\reg_file_a_reg[10]_5 [16]),
        .R(1'b0));
  FDRE \reg_file_a_reg[10][17] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[10][0]_0 ),
        .D(rf_wdata[17]),
        .Q(\reg_file_a_reg[10]_5 [17]),
        .R(1'b0));
  FDRE \reg_file_a_reg[10][18] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[10][0]_0 ),
        .D(rf_wdata[18]),
        .Q(\reg_file_a_reg[10]_5 [18]),
        .R(1'b0));
  FDRE \reg_file_a_reg[10][19] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[10][0]_0 ),
        .D(rf_wdata[19]),
        .Q(\reg_file_a_reg[10]_5 [19]),
        .R(1'b0));
  FDRE \reg_file_a_reg[10][1] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[10][0]_0 ),
        .D(rf_wdata[1]),
        .Q(\reg_file_a_reg[10]_5 [1]),
        .R(1'b0));
  FDRE \reg_file_a_reg[10][20] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[10][0]_0 ),
        .D(rf_wdata[20]),
        .Q(\reg_file_a_reg[10]_5 [20]),
        .R(1'b0));
  FDRE \reg_file_a_reg[10][21] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[10][0]_0 ),
        .D(rf_wdata[21]),
        .Q(\reg_file_a_reg[10]_5 [21]),
        .R(1'b0));
  FDRE \reg_file_a_reg[10][22] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[10][0]_0 ),
        .D(rf_wdata[22]),
        .Q(\reg_file_a_reg[10]_5 [22]),
        .R(1'b0));
  FDRE \reg_file_a_reg[10][23] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[10][0]_0 ),
        .D(rf_wdata[23]),
        .Q(\reg_file_a_reg[10]_5 [23]),
        .R(1'b0));
  FDRE \reg_file_a_reg[10][24] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[10][0]_0 ),
        .D(rf_wdata[24]),
        .Q(\reg_file_a_reg[10]_5 [24]),
        .R(1'b0));
  FDRE \reg_file_a_reg[10][25] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[10][0]_0 ),
        .D(rf_wdata[25]),
        .Q(\reg_file_a_reg[10]_5 [25]),
        .R(1'b0));
  FDRE \reg_file_a_reg[10][26] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[10][0]_0 ),
        .D(rf_wdata[26]),
        .Q(\reg_file_a_reg[10]_5 [26]),
        .R(1'b0));
  FDRE \reg_file_a_reg[10][27] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[10][0]_0 ),
        .D(rf_wdata[27]),
        .Q(\reg_file_a_reg[10]_5 [27]),
        .R(1'b0));
  FDRE \reg_file_a_reg[10][28] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[10][0]_0 ),
        .D(rf_wdata[28]),
        .Q(\reg_file_a_reg[10]_5 [28]),
        .R(1'b0));
  FDRE \reg_file_a_reg[10][29] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[10][0]_0 ),
        .D(rf_wdata[29]),
        .Q(\reg_file_a_reg[10]_5 [29]),
        .R(1'b0));
  FDRE \reg_file_a_reg[10][2] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[10][0]_0 ),
        .D(rf_wdata[2]),
        .Q(\reg_file_a_reg[10]_5 [2]),
        .R(1'b0));
  FDRE \reg_file_a_reg[10][30] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[10][0]_0 ),
        .D(rf_wdata[30]),
        .Q(\reg_file_a_reg[10]_5 [30]),
        .R(1'b0));
  FDRE \reg_file_a_reg[10][31] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[10][0]_0 ),
        .D(rf_wdata[31]),
        .Q(\reg_file_a_reg[10]_5 [31]),
        .R(1'b0));
  FDRE \reg_file_a_reg[10][3] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[10][0]_0 ),
        .D(rf_wdata[3]),
        .Q(\reg_file_a_reg[10]_5 [3]),
        .R(1'b0));
  FDRE \reg_file_a_reg[10][4] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[10][0]_0 ),
        .D(rf_wdata[4]),
        .Q(\reg_file_a_reg[10]_5 [4]),
        .R(1'b0));
  FDRE \reg_file_a_reg[10][5] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[10][0]_0 ),
        .D(rf_wdata[5]),
        .Q(\reg_file_a_reg[10]_5 [5]),
        .R(1'b0));
  FDRE \reg_file_a_reg[10][6] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[10][0]_0 ),
        .D(rf_wdata[6]),
        .Q(\reg_file_a_reg[10]_5 [6]),
        .R(1'b0));
  FDRE \reg_file_a_reg[10][7] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[10][0]_0 ),
        .D(rf_wdata[7]),
        .Q(\reg_file_a_reg[10]_5 [7]),
        .R(1'b0));
  FDRE \reg_file_a_reg[10][8] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[10][0]_0 ),
        .D(rf_wdata[8]),
        .Q(\reg_file_a_reg[10]_5 [8]),
        .R(1'b0));
  FDRE \reg_file_a_reg[10][9] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[10][0]_0 ),
        .D(rf_wdata[9]),
        .Q(\reg_file_a_reg[10]_5 [9]),
        .R(1'b0));
  FDRE \reg_file_a_reg[11][0] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[11][0]_0 ),
        .D(rf_wdata[0]),
        .Q(\reg_file_a_reg[11]_4 [0]),
        .R(1'b0));
  FDRE \reg_file_a_reg[11][10] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[11][0]_0 ),
        .D(rf_wdata[10]),
        .Q(\reg_file_a_reg[11]_4 [10]),
        .R(1'b0));
  FDRE \reg_file_a_reg[11][11] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[11][0]_0 ),
        .D(rf_wdata[11]),
        .Q(\reg_file_a_reg[11]_4 [11]),
        .R(1'b0));
  FDRE \reg_file_a_reg[11][12] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[11][0]_0 ),
        .D(rf_wdata[12]),
        .Q(\reg_file_a_reg[11]_4 [12]),
        .R(1'b0));
  FDRE \reg_file_a_reg[11][13] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[11][0]_0 ),
        .D(rf_wdata[13]),
        .Q(\reg_file_a_reg[11]_4 [13]),
        .R(1'b0));
  FDRE \reg_file_a_reg[11][14] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[11][0]_0 ),
        .D(rf_wdata[14]),
        .Q(\reg_file_a_reg[11]_4 [14]),
        .R(1'b0));
  FDRE \reg_file_a_reg[11][15] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[11][0]_0 ),
        .D(rf_wdata[15]),
        .Q(\reg_file_a_reg[11]_4 [15]),
        .R(1'b0));
  FDRE \reg_file_a_reg[11][16] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[11][0]_0 ),
        .D(rf_wdata[16]),
        .Q(\reg_file_a_reg[11]_4 [16]),
        .R(1'b0));
  FDRE \reg_file_a_reg[11][17] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[11][0]_0 ),
        .D(rf_wdata[17]),
        .Q(\reg_file_a_reg[11]_4 [17]),
        .R(1'b0));
  FDRE \reg_file_a_reg[11][18] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[11][0]_0 ),
        .D(rf_wdata[18]),
        .Q(\reg_file_a_reg[11]_4 [18]),
        .R(1'b0));
  FDRE \reg_file_a_reg[11][19] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[11][0]_0 ),
        .D(rf_wdata[19]),
        .Q(\reg_file_a_reg[11]_4 [19]),
        .R(1'b0));
  FDRE \reg_file_a_reg[11][1] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[11][0]_0 ),
        .D(rf_wdata[1]),
        .Q(\reg_file_a_reg[11]_4 [1]),
        .R(1'b0));
  FDRE \reg_file_a_reg[11][20] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[11][0]_0 ),
        .D(rf_wdata[20]),
        .Q(\reg_file_a_reg[11]_4 [20]),
        .R(1'b0));
  FDRE \reg_file_a_reg[11][21] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[11][0]_0 ),
        .D(rf_wdata[21]),
        .Q(\reg_file_a_reg[11]_4 [21]),
        .R(1'b0));
  FDRE \reg_file_a_reg[11][22] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[11][0]_0 ),
        .D(rf_wdata[22]),
        .Q(\reg_file_a_reg[11]_4 [22]),
        .R(1'b0));
  FDRE \reg_file_a_reg[11][23] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[11][0]_0 ),
        .D(rf_wdata[23]),
        .Q(\reg_file_a_reg[11]_4 [23]),
        .R(1'b0));
  FDRE \reg_file_a_reg[11][24] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[11][0]_0 ),
        .D(rf_wdata[24]),
        .Q(\reg_file_a_reg[11]_4 [24]),
        .R(1'b0));
  FDRE \reg_file_a_reg[11][25] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[11][0]_0 ),
        .D(rf_wdata[25]),
        .Q(\reg_file_a_reg[11]_4 [25]),
        .R(1'b0));
  FDRE \reg_file_a_reg[11][26] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[11][0]_0 ),
        .D(rf_wdata[26]),
        .Q(\reg_file_a_reg[11]_4 [26]),
        .R(1'b0));
  FDRE \reg_file_a_reg[11][27] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[11][0]_0 ),
        .D(rf_wdata[27]),
        .Q(\reg_file_a_reg[11]_4 [27]),
        .R(1'b0));
  FDRE \reg_file_a_reg[11][28] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[11][0]_0 ),
        .D(rf_wdata[28]),
        .Q(\reg_file_a_reg[11]_4 [28]),
        .R(1'b0));
  FDRE \reg_file_a_reg[11][29] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[11][0]_0 ),
        .D(rf_wdata[29]),
        .Q(\reg_file_a_reg[11]_4 [29]),
        .R(1'b0));
  FDRE \reg_file_a_reg[11][2] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[11][0]_0 ),
        .D(rf_wdata[2]),
        .Q(\reg_file_a_reg[11]_4 [2]),
        .R(1'b0));
  FDRE \reg_file_a_reg[11][30] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[11][0]_0 ),
        .D(rf_wdata[30]),
        .Q(\reg_file_a_reg[11]_4 [30]),
        .R(1'b0));
  FDRE \reg_file_a_reg[11][31] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[11][0]_0 ),
        .D(rf_wdata[31]),
        .Q(\reg_file_a_reg[11]_4 [31]),
        .R(1'b0));
  FDRE \reg_file_a_reg[11][3] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[11][0]_0 ),
        .D(rf_wdata[3]),
        .Q(\reg_file_a_reg[11]_4 [3]),
        .R(1'b0));
  FDRE \reg_file_a_reg[11][4] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[11][0]_0 ),
        .D(rf_wdata[4]),
        .Q(\reg_file_a_reg[11]_4 [4]),
        .R(1'b0));
  FDRE \reg_file_a_reg[11][5] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[11][0]_0 ),
        .D(rf_wdata[5]),
        .Q(\reg_file_a_reg[11]_4 [5]),
        .R(1'b0));
  FDRE \reg_file_a_reg[11][6] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[11][0]_0 ),
        .D(rf_wdata[6]),
        .Q(\reg_file_a_reg[11]_4 [6]),
        .R(1'b0));
  FDRE \reg_file_a_reg[11][7] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[11][0]_0 ),
        .D(rf_wdata[7]),
        .Q(\reg_file_a_reg[11]_4 [7]),
        .R(1'b0));
  FDRE \reg_file_a_reg[11][8] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[11][0]_0 ),
        .D(rf_wdata[8]),
        .Q(\reg_file_a_reg[11]_4 [8]),
        .R(1'b0));
  FDRE \reg_file_a_reg[11][9] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[11][0]_0 ),
        .D(rf_wdata[9]),
        .Q(\reg_file_a_reg[11]_4 [9]),
        .R(1'b0));
  FDRE \reg_file_a_reg[12][0] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[12][0]_0 ),
        .D(rf_wdata[0]),
        .Q(\reg_file_a_reg[12]_3 [0]),
        .R(1'b0));
  FDRE \reg_file_a_reg[12][10] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[12][0]_0 ),
        .D(rf_wdata[10]),
        .Q(\reg_file_a_reg[12]_3 [10]),
        .R(1'b0));
  FDRE \reg_file_a_reg[12][11] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[12][0]_0 ),
        .D(rf_wdata[11]),
        .Q(\reg_file_a_reg[12]_3 [11]),
        .R(1'b0));
  FDRE \reg_file_a_reg[12][12] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[12][0]_0 ),
        .D(rf_wdata[12]),
        .Q(\reg_file_a_reg[12]_3 [12]),
        .R(1'b0));
  FDRE \reg_file_a_reg[12][13] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[12][0]_0 ),
        .D(rf_wdata[13]),
        .Q(\reg_file_a_reg[12]_3 [13]),
        .R(1'b0));
  FDRE \reg_file_a_reg[12][14] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[12][0]_0 ),
        .D(rf_wdata[14]),
        .Q(\reg_file_a_reg[12]_3 [14]),
        .R(1'b0));
  FDRE \reg_file_a_reg[12][15] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[12][0]_0 ),
        .D(rf_wdata[15]),
        .Q(\reg_file_a_reg[12]_3 [15]),
        .R(1'b0));
  FDRE \reg_file_a_reg[12][16] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[12][0]_0 ),
        .D(rf_wdata[16]),
        .Q(\reg_file_a_reg[12]_3 [16]),
        .R(1'b0));
  FDRE \reg_file_a_reg[12][17] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[12][0]_0 ),
        .D(rf_wdata[17]),
        .Q(\reg_file_a_reg[12]_3 [17]),
        .R(1'b0));
  FDRE \reg_file_a_reg[12][18] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[12][0]_0 ),
        .D(rf_wdata[18]),
        .Q(\reg_file_a_reg[12]_3 [18]),
        .R(1'b0));
  FDRE \reg_file_a_reg[12][19] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[12][0]_0 ),
        .D(rf_wdata[19]),
        .Q(\reg_file_a_reg[12]_3 [19]),
        .R(1'b0));
  FDRE \reg_file_a_reg[12][1] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[12][0]_0 ),
        .D(rf_wdata[1]),
        .Q(\reg_file_a_reg[12]_3 [1]),
        .R(1'b0));
  FDRE \reg_file_a_reg[12][20] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[12][0]_0 ),
        .D(rf_wdata[20]),
        .Q(\reg_file_a_reg[12]_3 [20]),
        .R(1'b0));
  FDRE \reg_file_a_reg[12][21] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[12][0]_0 ),
        .D(rf_wdata[21]),
        .Q(\reg_file_a_reg[12]_3 [21]),
        .R(1'b0));
  FDRE \reg_file_a_reg[12][22] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[12][0]_0 ),
        .D(rf_wdata[22]),
        .Q(\reg_file_a_reg[12]_3 [22]),
        .R(1'b0));
  FDRE \reg_file_a_reg[12][23] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[12][0]_0 ),
        .D(rf_wdata[23]),
        .Q(\reg_file_a_reg[12]_3 [23]),
        .R(1'b0));
  FDRE \reg_file_a_reg[12][24] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[12][0]_0 ),
        .D(rf_wdata[24]),
        .Q(\reg_file_a_reg[12]_3 [24]),
        .R(1'b0));
  FDRE \reg_file_a_reg[12][25] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[12][0]_0 ),
        .D(rf_wdata[25]),
        .Q(\reg_file_a_reg[12]_3 [25]),
        .R(1'b0));
  FDRE \reg_file_a_reg[12][26] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[12][0]_0 ),
        .D(rf_wdata[26]),
        .Q(\reg_file_a_reg[12]_3 [26]),
        .R(1'b0));
  FDRE \reg_file_a_reg[12][27] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[12][0]_0 ),
        .D(rf_wdata[27]),
        .Q(\reg_file_a_reg[12]_3 [27]),
        .R(1'b0));
  FDRE \reg_file_a_reg[12][28] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[12][0]_0 ),
        .D(rf_wdata[28]),
        .Q(\reg_file_a_reg[12]_3 [28]),
        .R(1'b0));
  FDRE \reg_file_a_reg[12][29] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[12][0]_0 ),
        .D(rf_wdata[29]),
        .Q(\reg_file_a_reg[12]_3 [29]),
        .R(1'b0));
  FDRE \reg_file_a_reg[12][2] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[12][0]_0 ),
        .D(rf_wdata[2]),
        .Q(\reg_file_a_reg[12]_3 [2]),
        .R(1'b0));
  FDRE \reg_file_a_reg[12][30] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[12][0]_0 ),
        .D(rf_wdata[30]),
        .Q(\reg_file_a_reg[12]_3 [30]),
        .R(1'b0));
  FDRE \reg_file_a_reg[12][31] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[12][0]_0 ),
        .D(rf_wdata[31]),
        .Q(\reg_file_a_reg[12]_3 [31]),
        .R(1'b0));
  FDRE \reg_file_a_reg[12][3] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[12][0]_0 ),
        .D(rf_wdata[3]),
        .Q(\reg_file_a_reg[12]_3 [3]),
        .R(1'b0));
  FDRE \reg_file_a_reg[12][4] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[12][0]_0 ),
        .D(rf_wdata[4]),
        .Q(\reg_file_a_reg[12]_3 [4]),
        .R(1'b0));
  FDRE \reg_file_a_reg[12][5] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[12][0]_0 ),
        .D(rf_wdata[5]),
        .Q(\reg_file_a_reg[12]_3 [5]),
        .R(1'b0));
  FDRE \reg_file_a_reg[12][6] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[12][0]_0 ),
        .D(rf_wdata[6]),
        .Q(\reg_file_a_reg[12]_3 [6]),
        .R(1'b0));
  FDRE \reg_file_a_reg[12][7] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[12][0]_0 ),
        .D(rf_wdata[7]),
        .Q(\reg_file_a_reg[12]_3 [7]),
        .R(1'b0));
  FDRE \reg_file_a_reg[12][8] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[12][0]_0 ),
        .D(rf_wdata[8]),
        .Q(\reg_file_a_reg[12]_3 [8]),
        .R(1'b0));
  FDRE \reg_file_a_reg[12][9] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[12][0]_0 ),
        .D(rf_wdata[9]),
        .Q(\reg_file_a_reg[12]_3 [9]),
        .R(1'b0));
  FDRE \reg_file_a_reg[13][0] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[13][0]_0 ),
        .D(rf_wdata[0]),
        .Q(\reg_file_a_reg[13]_2 [0]),
        .R(1'b0));
  FDRE \reg_file_a_reg[13][10] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[13][0]_0 ),
        .D(rf_wdata[10]),
        .Q(\reg_file_a_reg[13]_2 [10]),
        .R(1'b0));
  FDRE \reg_file_a_reg[13][11] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[13][0]_0 ),
        .D(rf_wdata[11]),
        .Q(\reg_file_a_reg[13]_2 [11]),
        .R(1'b0));
  FDRE \reg_file_a_reg[13][12] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[13][0]_0 ),
        .D(rf_wdata[12]),
        .Q(\reg_file_a_reg[13]_2 [12]),
        .R(1'b0));
  FDRE \reg_file_a_reg[13][13] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[13][0]_0 ),
        .D(rf_wdata[13]),
        .Q(\reg_file_a_reg[13]_2 [13]),
        .R(1'b0));
  FDRE \reg_file_a_reg[13][14] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[13][0]_0 ),
        .D(rf_wdata[14]),
        .Q(\reg_file_a_reg[13]_2 [14]),
        .R(1'b0));
  FDRE \reg_file_a_reg[13][15] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[13][0]_0 ),
        .D(rf_wdata[15]),
        .Q(\reg_file_a_reg[13]_2 [15]),
        .R(1'b0));
  FDRE \reg_file_a_reg[13][16] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[13][0]_0 ),
        .D(rf_wdata[16]),
        .Q(\reg_file_a_reg[13]_2 [16]),
        .R(1'b0));
  FDRE \reg_file_a_reg[13][17] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[13][0]_0 ),
        .D(rf_wdata[17]),
        .Q(\reg_file_a_reg[13]_2 [17]),
        .R(1'b0));
  FDRE \reg_file_a_reg[13][18] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[13][0]_0 ),
        .D(rf_wdata[18]),
        .Q(\reg_file_a_reg[13]_2 [18]),
        .R(1'b0));
  FDRE \reg_file_a_reg[13][19] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[13][0]_0 ),
        .D(rf_wdata[19]),
        .Q(\reg_file_a_reg[13]_2 [19]),
        .R(1'b0));
  FDRE \reg_file_a_reg[13][1] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[13][0]_0 ),
        .D(rf_wdata[1]),
        .Q(\reg_file_a_reg[13]_2 [1]),
        .R(1'b0));
  FDRE \reg_file_a_reg[13][20] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[13][0]_0 ),
        .D(rf_wdata[20]),
        .Q(\reg_file_a_reg[13]_2 [20]),
        .R(1'b0));
  FDRE \reg_file_a_reg[13][21] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[13][0]_0 ),
        .D(rf_wdata[21]),
        .Q(\reg_file_a_reg[13]_2 [21]),
        .R(1'b0));
  FDRE \reg_file_a_reg[13][22] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[13][0]_0 ),
        .D(rf_wdata[22]),
        .Q(\reg_file_a_reg[13]_2 [22]),
        .R(1'b0));
  FDRE \reg_file_a_reg[13][23] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[13][0]_0 ),
        .D(rf_wdata[23]),
        .Q(\reg_file_a_reg[13]_2 [23]),
        .R(1'b0));
  FDRE \reg_file_a_reg[13][24] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[13][0]_0 ),
        .D(rf_wdata[24]),
        .Q(\reg_file_a_reg[13]_2 [24]),
        .R(1'b0));
  FDRE \reg_file_a_reg[13][25] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[13][0]_0 ),
        .D(rf_wdata[25]),
        .Q(\reg_file_a_reg[13]_2 [25]),
        .R(1'b0));
  FDRE \reg_file_a_reg[13][26] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[13][0]_0 ),
        .D(rf_wdata[26]),
        .Q(\reg_file_a_reg[13]_2 [26]),
        .R(1'b0));
  FDRE \reg_file_a_reg[13][27] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[13][0]_0 ),
        .D(rf_wdata[27]),
        .Q(\reg_file_a_reg[13]_2 [27]),
        .R(1'b0));
  FDRE \reg_file_a_reg[13][28] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[13][0]_0 ),
        .D(rf_wdata[28]),
        .Q(\reg_file_a_reg[13]_2 [28]),
        .R(1'b0));
  FDRE \reg_file_a_reg[13][29] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[13][0]_0 ),
        .D(rf_wdata[29]),
        .Q(\reg_file_a_reg[13]_2 [29]),
        .R(1'b0));
  FDRE \reg_file_a_reg[13][2] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[13][0]_0 ),
        .D(rf_wdata[2]),
        .Q(\reg_file_a_reg[13]_2 [2]),
        .R(1'b0));
  FDRE \reg_file_a_reg[13][30] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[13][0]_0 ),
        .D(rf_wdata[30]),
        .Q(\reg_file_a_reg[13]_2 [30]),
        .R(1'b0));
  FDRE \reg_file_a_reg[13][31] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[13][0]_0 ),
        .D(rf_wdata[31]),
        .Q(\reg_file_a_reg[13]_2 [31]),
        .R(1'b0));
  FDRE \reg_file_a_reg[13][3] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[13][0]_0 ),
        .D(rf_wdata[3]),
        .Q(\reg_file_a_reg[13]_2 [3]),
        .R(1'b0));
  FDRE \reg_file_a_reg[13][4] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[13][0]_0 ),
        .D(rf_wdata[4]),
        .Q(\reg_file_a_reg[13]_2 [4]),
        .R(1'b0));
  FDRE \reg_file_a_reg[13][5] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[13][0]_0 ),
        .D(rf_wdata[5]),
        .Q(\reg_file_a_reg[13]_2 [5]),
        .R(1'b0));
  FDRE \reg_file_a_reg[13][6] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[13][0]_0 ),
        .D(rf_wdata[6]),
        .Q(\reg_file_a_reg[13]_2 [6]),
        .R(1'b0));
  FDRE \reg_file_a_reg[13][7] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[13][0]_0 ),
        .D(rf_wdata[7]),
        .Q(\reg_file_a_reg[13]_2 [7]),
        .R(1'b0));
  FDRE \reg_file_a_reg[13][8] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[13][0]_0 ),
        .D(rf_wdata[8]),
        .Q(\reg_file_a_reg[13]_2 [8]),
        .R(1'b0));
  FDRE \reg_file_a_reg[13][9] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[13][0]_0 ),
        .D(rf_wdata[9]),
        .Q(\reg_file_a_reg[13]_2 [9]),
        .R(1'b0));
  FDRE \reg_file_a_reg[14][0] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[14][0]_0 ),
        .D(rf_wdata[0]),
        .Q(\reg_file_a_reg[14]_1 [0]),
        .R(1'b0));
  FDRE \reg_file_a_reg[14][10] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[14][0]_0 ),
        .D(rf_wdata[10]),
        .Q(\reg_file_a_reg[14]_1 [10]),
        .R(1'b0));
  FDRE \reg_file_a_reg[14][11] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[14][0]_0 ),
        .D(rf_wdata[11]),
        .Q(\reg_file_a_reg[14]_1 [11]),
        .R(1'b0));
  FDRE \reg_file_a_reg[14][12] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[14][0]_0 ),
        .D(rf_wdata[12]),
        .Q(\reg_file_a_reg[14]_1 [12]),
        .R(1'b0));
  FDRE \reg_file_a_reg[14][13] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[14][0]_0 ),
        .D(rf_wdata[13]),
        .Q(\reg_file_a_reg[14]_1 [13]),
        .R(1'b0));
  FDRE \reg_file_a_reg[14][14] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[14][0]_0 ),
        .D(rf_wdata[14]),
        .Q(\reg_file_a_reg[14]_1 [14]),
        .R(1'b0));
  FDRE \reg_file_a_reg[14][15] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[14][0]_0 ),
        .D(rf_wdata[15]),
        .Q(\reg_file_a_reg[14]_1 [15]),
        .R(1'b0));
  FDRE \reg_file_a_reg[14][16] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[14][0]_0 ),
        .D(rf_wdata[16]),
        .Q(\reg_file_a_reg[14]_1 [16]),
        .R(1'b0));
  FDRE \reg_file_a_reg[14][17] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[14][0]_0 ),
        .D(rf_wdata[17]),
        .Q(\reg_file_a_reg[14]_1 [17]),
        .R(1'b0));
  FDRE \reg_file_a_reg[14][18] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[14][0]_0 ),
        .D(rf_wdata[18]),
        .Q(\reg_file_a_reg[14]_1 [18]),
        .R(1'b0));
  FDRE \reg_file_a_reg[14][19] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[14][0]_0 ),
        .D(rf_wdata[19]),
        .Q(\reg_file_a_reg[14]_1 [19]),
        .R(1'b0));
  FDRE \reg_file_a_reg[14][1] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[14][0]_0 ),
        .D(rf_wdata[1]),
        .Q(\reg_file_a_reg[14]_1 [1]),
        .R(1'b0));
  FDRE \reg_file_a_reg[14][20] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[14][0]_0 ),
        .D(rf_wdata[20]),
        .Q(\reg_file_a_reg[14]_1 [20]),
        .R(1'b0));
  FDRE \reg_file_a_reg[14][21] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[14][0]_0 ),
        .D(rf_wdata[21]),
        .Q(\reg_file_a_reg[14]_1 [21]),
        .R(1'b0));
  FDRE \reg_file_a_reg[14][22] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[14][0]_0 ),
        .D(rf_wdata[22]),
        .Q(\reg_file_a_reg[14]_1 [22]),
        .R(1'b0));
  FDRE \reg_file_a_reg[14][23] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[14][0]_0 ),
        .D(rf_wdata[23]),
        .Q(\reg_file_a_reg[14]_1 [23]),
        .R(1'b0));
  FDRE \reg_file_a_reg[14][24] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[14][0]_0 ),
        .D(rf_wdata[24]),
        .Q(\reg_file_a_reg[14]_1 [24]),
        .R(1'b0));
  FDRE \reg_file_a_reg[14][25] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[14][0]_0 ),
        .D(rf_wdata[25]),
        .Q(\reg_file_a_reg[14]_1 [25]),
        .R(1'b0));
  FDRE \reg_file_a_reg[14][26] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[14][0]_0 ),
        .D(rf_wdata[26]),
        .Q(\reg_file_a_reg[14]_1 [26]),
        .R(1'b0));
  FDRE \reg_file_a_reg[14][27] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[14][0]_0 ),
        .D(rf_wdata[27]),
        .Q(\reg_file_a_reg[14]_1 [27]),
        .R(1'b0));
  FDRE \reg_file_a_reg[14][28] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[14][0]_0 ),
        .D(rf_wdata[28]),
        .Q(\reg_file_a_reg[14]_1 [28]),
        .R(1'b0));
  FDRE \reg_file_a_reg[14][29] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[14][0]_0 ),
        .D(rf_wdata[29]),
        .Q(\reg_file_a_reg[14]_1 [29]),
        .R(1'b0));
  FDRE \reg_file_a_reg[14][2] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[14][0]_0 ),
        .D(rf_wdata[2]),
        .Q(\reg_file_a_reg[14]_1 [2]),
        .R(1'b0));
  FDRE \reg_file_a_reg[14][30] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[14][0]_0 ),
        .D(rf_wdata[30]),
        .Q(\reg_file_a_reg[14]_1 [30]),
        .R(1'b0));
  FDRE \reg_file_a_reg[14][31] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[14][0]_0 ),
        .D(rf_wdata[31]),
        .Q(\reg_file_a_reg[14]_1 [31]),
        .R(1'b0));
  FDRE \reg_file_a_reg[14][3] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[14][0]_0 ),
        .D(rf_wdata[3]),
        .Q(\reg_file_a_reg[14]_1 [3]),
        .R(1'b0));
  FDRE \reg_file_a_reg[14][4] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[14][0]_0 ),
        .D(rf_wdata[4]),
        .Q(\reg_file_a_reg[14]_1 [4]),
        .R(1'b0));
  FDRE \reg_file_a_reg[14][5] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[14][0]_0 ),
        .D(rf_wdata[5]),
        .Q(\reg_file_a_reg[14]_1 [5]),
        .R(1'b0));
  FDRE \reg_file_a_reg[14][6] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[14][0]_0 ),
        .D(rf_wdata[6]),
        .Q(\reg_file_a_reg[14]_1 [6]),
        .R(1'b0));
  FDRE \reg_file_a_reg[14][7] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[14][0]_0 ),
        .D(rf_wdata[7]),
        .Q(\reg_file_a_reg[14]_1 [7]),
        .R(1'b0));
  FDRE \reg_file_a_reg[14][8] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[14][0]_0 ),
        .D(rf_wdata[8]),
        .Q(\reg_file_a_reg[14]_1 [8]),
        .R(1'b0));
  FDRE \reg_file_a_reg[14][9] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[14][0]_0 ),
        .D(rf_wdata[9]),
        .Q(\reg_file_a_reg[14]_1 [9]),
        .R(1'b0));
  FDRE \reg_file_a_reg[15][0] 
       (.C(HCLK),
        .CE(E),
        .D(rf_wdata[0]),
        .Q(\reg_file_a_reg[15]_0 [0]),
        .R(1'b0));
  FDRE \reg_file_a_reg[15][10] 
       (.C(HCLK),
        .CE(E),
        .D(rf_wdata[10]),
        .Q(\reg_file_a_reg[15]_0 [10]),
        .R(1'b0));
  FDRE \reg_file_a_reg[15][11] 
       (.C(HCLK),
        .CE(E),
        .D(rf_wdata[11]),
        .Q(\reg_file_a_reg[15]_0 [11]),
        .R(1'b0));
  FDRE \reg_file_a_reg[15][12] 
       (.C(HCLK),
        .CE(E),
        .D(rf_wdata[12]),
        .Q(\reg_file_a_reg[15]_0 [12]),
        .R(1'b0));
  FDRE \reg_file_a_reg[15][13] 
       (.C(HCLK),
        .CE(E),
        .D(rf_wdata[13]),
        .Q(\reg_file_a_reg[15]_0 [13]),
        .R(1'b0));
  FDRE \reg_file_a_reg[15][14] 
       (.C(HCLK),
        .CE(E),
        .D(rf_wdata[14]),
        .Q(\reg_file_a_reg[15]_0 [14]),
        .R(1'b0));
  FDRE \reg_file_a_reg[15][15] 
       (.C(HCLK),
        .CE(E),
        .D(rf_wdata[15]),
        .Q(\reg_file_a_reg[15]_0 [15]),
        .R(1'b0));
  FDRE \reg_file_a_reg[15][16] 
       (.C(HCLK),
        .CE(E),
        .D(rf_wdata[16]),
        .Q(\reg_file_a_reg[15]_0 [16]),
        .R(1'b0));
  FDRE \reg_file_a_reg[15][17] 
       (.C(HCLK),
        .CE(E),
        .D(rf_wdata[17]),
        .Q(\reg_file_a_reg[15]_0 [17]),
        .R(1'b0));
  FDRE \reg_file_a_reg[15][18] 
       (.C(HCLK),
        .CE(E),
        .D(rf_wdata[18]),
        .Q(\reg_file_a_reg[15]_0 [18]),
        .R(1'b0));
  FDRE \reg_file_a_reg[15][19] 
       (.C(HCLK),
        .CE(E),
        .D(rf_wdata[19]),
        .Q(\reg_file_a_reg[15]_0 [19]),
        .R(1'b0));
  FDRE \reg_file_a_reg[15][1] 
       (.C(HCLK),
        .CE(E),
        .D(rf_wdata[1]),
        .Q(\reg_file_a_reg[15]_0 [1]),
        .R(1'b0));
  FDRE \reg_file_a_reg[15][20] 
       (.C(HCLK),
        .CE(E),
        .D(rf_wdata[20]),
        .Q(\reg_file_a_reg[15]_0 [20]),
        .R(1'b0));
  FDRE \reg_file_a_reg[15][21] 
       (.C(HCLK),
        .CE(E),
        .D(rf_wdata[21]),
        .Q(\reg_file_a_reg[15]_0 [21]),
        .R(1'b0));
  FDRE \reg_file_a_reg[15][22] 
       (.C(HCLK),
        .CE(E),
        .D(rf_wdata[22]),
        .Q(\reg_file_a_reg[15]_0 [22]),
        .R(1'b0));
  FDRE \reg_file_a_reg[15][23] 
       (.C(HCLK),
        .CE(E),
        .D(rf_wdata[23]),
        .Q(\reg_file_a_reg[15]_0 [23]),
        .R(1'b0));
  FDRE \reg_file_a_reg[15][24] 
       (.C(HCLK),
        .CE(E),
        .D(rf_wdata[24]),
        .Q(\reg_file_a_reg[15]_0 [24]),
        .R(1'b0));
  FDRE \reg_file_a_reg[15][25] 
       (.C(HCLK),
        .CE(E),
        .D(rf_wdata[25]),
        .Q(\reg_file_a_reg[15]_0 [25]),
        .R(1'b0));
  FDRE \reg_file_a_reg[15][26] 
       (.C(HCLK),
        .CE(E),
        .D(rf_wdata[26]),
        .Q(\reg_file_a_reg[15]_0 [26]),
        .R(1'b0));
  FDRE \reg_file_a_reg[15][27] 
       (.C(HCLK),
        .CE(E),
        .D(rf_wdata[27]),
        .Q(\reg_file_a_reg[15]_0 [27]),
        .R(1'b0));
  FDRE \reg_file_a_reg[15][28] 
       (.C(HCLK),
        .CE(E),
        .D(rf_wdata[28]),
        .Q(\reg_file_a_reg[15]_0 [28]),
        .R(1'b0));
  FDRE \reg_file_a_reg[15][29] 
       (.C(HCLK),
        .CE(E),
        .D(rf_wdata[29]),
        .Q(\reg_file_a_reg[15]_0 [29]),
        .R(1'b0));
  FDRE \reg_file_a_reg[15][2] 
       (.C(HCLK),
        .CE(E),
        .D(rf_wdata[2]),
        .Q(\reg_file_a_reg[15]_0 [2]),
        .R(1'b0));
  FDRE \reg_file_a_reg[15][30] 
       (.C(HCLK),
        .CE(E),
        .D(rf_wdata[30]),
        .Q(\reg_file_a_reg[15]_0 [30]),
        .R(1'b0));
  FDRE \reg_file_a_reg[15][31] 
       (.C(HCLK),
        .CE(E),
        .D(rf_wdata[31]),
        .Q(\reg_file_a_reg[15]_0 [31]),
        .R(1'b0));
  FDRE \reg_file_a_reg[15][3] 
       (.C(HCLK),
        .CE(E),
        .D(rf_wdata[3]),
        .Q(\reg_file_a_reg[15]_0 [3]),
        .R(1'b0));
  FDRE \reg_file_a_reg[15][4] 
       (.C(HCLK),
        .CE(E),
        .D(rf_wdata[4]),
        .Q(\reg_file_a_reg[15]_0 [4]),
        .R(1'b0));
  FDRE \reg_file_a_reg[15][5] 
       (.C(HCLK),
        .CE(E),
        .D(rf_wdata[5]),
        .Q(\reg_file_a_reg[15]_0 [5]),
        .R(1'b0));
  FDRE \reg_file_a_reg[15][6] 
       (.C(HCLK),
        .CE(E),
        .D(rf_wdata[6]),
        .Q(\reg_file_a_reg[15]_0 [6]),
        .R(1'b0));
  FDRE \reg_file_a_reg[15][7] 
       (.C(HCLK),
        .CE(E),
        .D(rf_wdata[7]),
        .Q(\reg_file_a_reg[15]_0 [7]),
        .R(1'b0));
  FDRE \reg_file_a_reg[15][8] 
       (.C(HCLK),
        .CE(E),
        .D(rf_wdata[8]),
        .Q(\reg_file_a_reg[15]_0 [8]),
        .R(1'b0));
  FDRE \reg_file_a_reg[15][9] 
       (.C(HCLK),
        .CE(E),
        .D(rf_wdata[9]),
        .Q(\reg_file_a_reg[15]_0 [9]),
        .R(1'b0));
  FDRE \reg_file_a_reg[1][0] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[1][0]_0 ),
        .D(rf_wdata[0]),
        .Q(\reg_file_a_reg[1]_14 [0]),
        .R(1'b0));
  FDRE \reg_file_a_reg[1][10] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[1][0]_0 ),
        .D(rf_wdata[10]),
        .Q(\reg_file_a_reg[1]_14 [10]),
        .R(1'b0));
  FDRE \reg_file_a_reg[1][11] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[1][0]_0 ),
        .D(rf_wdata[11]),
        .Q(\reg_file_a_reg[1]_14 [11]),
        .R(1'b0));
  FDRE \reg_file_a_reg[1][12] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[1][0]_0 ),
        .D(rf_wdata[12]),
        .Q(\reg_file_a_reg[1]_14 [12]),
        .R(1'b0));
  FDRE \reg_file_a_reg[1][13] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[1][0]_0 ),
        .D(rf_wdata[13]),
        .Q(\reg_file_a_reg[1]_14 [13]),
        .R(1'b0));
  FDRE \reg_file_a_reg[1][14] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[1][0]_0 ),
        .D(rf_wdata[14]),
        .Q(\reg_file_a_reg[1]_14 [14]),
        .R(1'b0));
  FDRE \reg_file_a_reg[1][15] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[1][0]_0 ),
        .D(rf_wdata[15]),
        .Q(\reg_file_a_reg[1]_14 [15]),
        .R(1'b0));
  FDRE \reg_file_a_reg[1][16] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[1][0]_0 ),
        .D(rf_wdata[16]),
        .Q(\reg_file_a_reg[1]_14 [16]),
        .R(1'b0));
  FDRE \reg_file_a_reg[1][17] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[1][0]_0 ),
        .D(rf_wdata[17]),
        .Q(\reg_file_a_reg[1]_14 [17]),
        .R(1'b0));
  FDRE \reg_file_a_reg[1][18] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[1][0]_0 ),
        .D(rf_wdata[18]),
        .Q(\reg_file_a_reg[1]_14 [18]),
        .R(1'b0));
  FDRE \reg_file_a_reg[1][19] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[1][0]_0 ),
        .D(rf_wdata[19]),
        .Q(\reg_file_a_reg[1]_14 [19]),
        .R(1'b0));
  FDRE \reg_file_a_reg[1][1] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[1][0]_0 ),
        .D(rf_wdata[1]),
        .Q(\reg_file_a_reg[1]_14 [1]),
        .R(1'b0));
  FDRE \reg_file_a_reg[1][20] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[1][0]_0 ),
        .D(rf_wdata[20]),
        .Q(\reg_file_a_reg[1]_14 [20]),
        .R(1'b0));
  FDRE \reg_file_a_reg[1][21] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[1][0]_0 ),
        .D(rf_wdata[21]),
        .Q(\reg_file_a_reg[1]_14 [21]),
        .R(1'b0));
  FDRE \reg_file_a_reg[1][22] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[1][0]_0 ),
        .D(rf_wdata[22]),
        .Q(\reg_file_a_reg[1]_14 [22]),
        .R(1'b0));
  FDRE \reg_file_a_reg[1][23] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[1][0]_0 ),
        .D(rf_wdata[23]),
        .Q(\reg_file_a_reg[1]_14 [23]),
        .R(1'b0));
  FDRE \reg_file_a_reg[1][24] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[1][0]_0 ),
        .D(rf_wdata[24]),
        .Q(\reg_file_a_reg[1]_14 [24]),
        .R(1'b0));
  FDRE \reg_file_a_reg[1][25] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[1][0]_0 ),
        .D(rf_wdata[25]),
        .Q(\reg_file_a_reg[1]_14 [25]),
        .R(1'b0));
  FDRE \reg_file_a_reg[1][26] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[1][0]_0 ),
        .D(rf_wdata[26]),
        .Q(\reg_file_a_reg[1]_14 [26]),
        .R(1'b0));
  FDRE \reg_file_a_reg[1][27] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[1][0]_0 ),
        .D(rf_wdata[27]),
        .Q(\reg_file_a_reg[1]_14 [27]),
        .R(1'b0));
  FDRE \reg_file_a_reg[1][28] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[1][0]_0 ),
        .D(rf_wdata[28]),
        .Q(\reg_file_a_reg[1]_14 [28]),
        .R(1'b0));
  FDRE \reg_file_a_reg[1][29] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[1][0]_0 ),
        .D(rf_wdata[29]),
        .Q(\reg_file_a_reg[1]_14 [29]),
        .R(1'b0));
  FDRE \reg_file_a_reg[1][2] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[1][0]_0 ),
        .D(rf_wdata[2]),
        .Q(\reg_file_a_reg[1]_14 [2]),
        .R(1'b0));
  FDRE \reg_file_a_reg[1][30] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[1][0]_0 ),
        .D(rf_wdata[30]),
        .Q(\reg_file_a_reg[1]_14 [30]),
        .R(1'b0));
  FDRE \reg_file_a_reg[1][31] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[1][0]_0 ),
        .D(rf_wdata[31]),
        .Q(\reg_file_a_reg[1]_14 [31]),
        .R(1'b0));
  FDRE \reg_file_a_reg[1][3] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[1][0]_0 ),
        .D(rf_wdata[3]),
        .Q(\reg_file_a_reg[1]_14 [3]),
        .R(1'b0));
  FDRE \reg_file_a_reg[1][4] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[1][0]_0 ),
        .D(rf_wdata[4]),
        .Q(\reg_file_a_reg[1]_14 [4]),
        .R(1'b0));
  FDRE \reg_file_a_reg[1][5] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[1][0]_0 ),
        .D(rf_wdata[5]),
        .Q(\reg_file_a_reg[1]_14 [5]),
        .R(1'b0));
  FDRE \reg_file_a_reg[1][6] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[1][0]_0 ),
        .D(rf_wdata[6]),
        .Q(\reg_file_a_reg[1]_14 [6]),
        .R(1'b0));
  FDRE \reg_file_a_reg[1][7] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[1][0]_0 ),
        .D(rf_wdata[7]),
        .Q(\reg_file_a_reg[1]_14 [7]),
        .R(1'b0));
  FDRE \reg_file_a_reg[1][8] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[1][0]_0 ),
        .D(rf_wdata[8]),
        .Q(\reg_file_a_reg[1]_14 [8]),
        .R(1'b0));
  FDRE \reg_file_a_reg[1][9] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[1][0]_0 ),
        .D(rf_wdata[9]),
        .Q(\reg_file_a_reg[1]_14 [9]),
        .R(1'b0));
  FDRE \reg_file_a_reg[2][0] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[2][0]_0 ),
        .D(rf_wdata[0]),
        .Q(\reg_file_a_reg[2]_13 [0]),
        .R(1'b0));
  FDRE \reg_file_a_reg[2][10] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[2][0]_0 ),
        .D(rf_wdata[10]),
        .Q(\reg_file_a_reg[2]_13 [10]),
        .R(1'b0));
  FDRE \reg_file_a_reg[2][11] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[2][0]_0 ),
        .D(rf_wdata[11]),
        .Q(\reg_file_a_reg[2]_13 [11]),
        .R(1'b0));
  FDRE \reg_file_a_reg[2][12] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[2][0]_0 ),
        .D(rf_wdata[12]),
        .Q(\reg_file_a_reg[2]_13 [12]),
        .R(1'b0));
  FDRE \reg_file_a_reg[2][13] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[2][0]_0 ),
        .D(rf_wdata[13]),
        .Q(\reg_file_a_reg[2]_13 [13]),
        .R(1'b0));
  FDRE \reg_file_a_reg[2][14] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[2][0]_0 ),
        .D(rf_wdata[14]),
        .Q(\reg_file_a_reg[2]_13 [14]),
        .R(1'b0));
  FDRE \reg_file_a_reg[2][15] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[2][0]_0 ),
        .D(rf_wdata[15]),
        .Q(\reg_file_a_reg[2]_13 [15]),
        .R(1'b0));
  FDRE \reg_file_a_reg[2][16] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[2][0]_0 ),
        .D(rf_wdata[16]),
        .Q(\reg_file_a_reg[2]_13 [16]),
        .R(1'b0));
  FDRE \reg_file_a_reg[2][17] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[2][0]_0 ),
        .D(rf_wdata[17]),
        .Q(\reg_file_a_reg[2]_13 [17]),
        .R(1'b0));
  FDRE \reg_file_a_reg[2][18] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[2][0]_0 ),
        .D(rf_wdata[18]),
        .Q(\reg_file_a_reg[2]_13 [18]),
        .R(1'b0));
  FDRE \reg_file_a_reg[2][19] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[2][0]_0 ),
        .D(rf_wdata[19]),
        .Q(\reg_file_a_reg[2]_13 [19]),
        .R(1'b0));
  FDRE \reg_file_a_reg[2][1] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[2][0]_0 ),
        .D(rf_wdata[1]),
        .Q(\reg_file_a_reg[2]_13 [1]),
        .R(1'b0));
  FDRE \reg_file_a_reg[2][20] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[2][0]_0 ),
        .D(rf_wdata[20]),
        .Q(\reg_file_a_reg[2]_13 [20]),
        .R(1'b0));
  FDRE \reg_file_a_reg[2][21] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[2][0]_0 ),
        .D(rf_wdata[21]),
        .Q(\reg_file_a_reg[2]_13 [21]),
        .R(1'b0));
  FDRE \reg_file_a_reg[2][22] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[2][0]_0 ),
        .D(rf_wdata[22]),
        .Q(\reg_file_a_reg[2]_13 [22]),
        .R(1'b0));
  FDRE \reg_file_a_reg[2][23] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[2][0]_0 ),
        .D(rf_wdata[23]),
        .Q(\reg_file_a_reg[2]_13 [23]),
        .R(1'b0));
  FDRE \reg_file_a_reg[2][24] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[2][0]_0 ),
        .D(rf_wdata[24]),
        .Q(\reg_file_a_reg[2]_13 [24]),
        .R(1'b0));
  FDRE \reg_file_a_reg[2][25] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[2][0]_0 ),
        .D(rf_wdata[25]),
        .Q(\reg_file_a_reg[2]_13 [25]),
        .R(1'b0));
  FDRE \reg_file_a_reg[2][26] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[2][0]_0 ),
        .D(rf_wdata[26]),
        .Q(\reg_file_a_reg[2]_13 [26]),
        .R(1'b0));
  FDRE \reg_file_a_reg[2][27] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[2][0]_0 ),
        .D(rf_wdata[27]),
        .Q(\reg_file_a_reg[2]_13 [27]),
        .R(1'b0));
  FDRE \reg_file_a_reg[2][28] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[2][0]_0 ),
        .D(rf_wdata[28]),
        .Q(\reg_file_a_reg[2]_13 [28]),
        .R(1'b0));
  FDRE \reg_file_a_reg[2][29] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[2][0]_0 ),
        .D(rf_wdata[29]),
        .Q(\reg_file_a_reg[2]_13 [29]),
        .R(1'b0));
  FDRE \reg_file_a_reg[2][2] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[2][0]_0 ),
        .D(rf_wdata[2]),
        .Q(\reg_file_a_reg[2]_13 [2]),
        .R(1'b0));
  FDRE \reg_file_a_reg[2][30] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[2][0]_0 ),
        .D(rf_wdata[30]),
        .Q(\reg_file_a_reg[2]_13 [30]),
        .R(1'b0));
  FDRE \reg_file_a_reg[2][31] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[2][0]_0 ),
        .D(rf_wdata[31]),
        .Q(\reg_file_a_reg[2]_13 [31]),
        .R(1'b0));
  FDRE \reg_file_a_reg[2][3] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[2][0]_0 ),
        .D(rf_wdata[3]),
        .Q(\reg_file_a_reg[2]_13 [3]),
        .R(1'b0));
  FDRE \reg_file_a_reg[2][4] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[2][0]_0 ),
        .D(rf_wdata[4]),
        .Q(\reg_file_a_reg[2]_13 [4]),
        .R(1'b0));
  FDRE \reg_file_a_reg[2][5] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[2][0]_0 ),
        .D(rf_wdata[5]),
        .Q(\reg_file_a_reg[2]_13 [5]),
        .R(1'b0));
  FDRE \reg_file_a_reg[2][6] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[2][0]_0 ),
        .D(rf_wdata[6]),
        .Q(\reg_file_a_reg[2]_13 [6]),
        .R(1'b0));
  FDRE \reg_file_a_reg[2][7] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[2][0]_0 ),
        .D(rf_wdata[7]),
        .Q(\reg_file_a_reg[2]_13 [7]),
        .R(1'b0));
  FDRE \reg_file_a_reg[2][8] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[2][0]_0 ),
        .D(rf_wdata[8]),
        .Q(\reg_file_a_reg[2]_13 [8]),
        .R(1'b0));
  FDRE \reg_file_a_reg[2][9] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[2][0]_0 ),
        .D(rf_wdata[9]),
        .Q(\reg_file_a_reg[2]_13 [9]),
        .R(1'b0));
  FDRE \reg_file_a_reg[3][0] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[3][0]_0 ),
        .D(rf_wdata[0]),
        .Q(\reg_file_a_reg[3]_12 [0]),
        .R(1'b0));
  FDRE \reg_file_a_reg[3][10] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[3][0]_0 ),
        .D(rf_wdata[10]),
        .Q(\reg_file_a_reg[3]_12 [10]),
        .R(1'b0));
  FDRE \reg_file_a_reg[3][11] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[3][0]_0 ),
        .D(rf_wdata[11]),
        .Q(\reg_file_a_reg[3]_12 [11]),
        .R(1'b0));
  FDRE \reg_file_a_reg[3][12] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[3][0]_0 ),
        .D(rf_wdata[12]),
        .Q(\reg_file_a_reg[3]_12 [12]),
        .R(1'b0));
  FDRE \reg_file_a_reg[3][13] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[3][0]_0 ),
        .D(rf_wdata[13]),
        .Q(\reg_file_a_reg[3]_12 [13]),
        .R(1'b0));
  FDRE \reg_file_a_reg[3][14] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[3][0]_0 ),
        .D(rf_wdata[14]),
        .Q(\reg_file_a_reg[3]_12 [14]),
        .R(1'b0));
  FDRE \reg_file_a_reg[3][15] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[3][0]_0 ),
        .D(rf_wdata[15]),
        .Q(\reg_file_a_reg[3]_12 [15]),
        .R(1'b0));
  FDRE \reg_file_a_reg[3][16] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[3][0]_0 ),
        .D(rf_wdata[16]),
        .Q(\reg_file_a_reg[3]_12 [16]),
        .R(1'b0));
  FDRE \reg_file_a_reg[3][17] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[3][0]_0 ),
        .D(rf_wdata[17]),
        .Q(\reg_file_a_reg[3]_12 [17]),
        .R(1'b0));
  FDRE \reg_file_a_reg[3][18] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[3][0]_0 ),
        .D(rf_wdata[18]),
        .Q(\reg_file_a_reg[3]_12 [18]),
        .R(1'b0));
  FDRE \reg_file_a_reg[3][19] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[3][0]_0 ),
        .D(rf_wdata[19]),
        .Q(\reg_file_a_reg[3]_12 [19]),
        .R(1'b0));
  FDRE \reg_file_a_reg[3][1] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[3][0]_0 ),
        .D(rf_wdata[1]),
        .Q(\reg_file_a_reg[3]_12 [1]),
        .R(1'b0));
  FDRE \reg_file_a_reg[3][20] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[3][0]_0 ),
        .D(rf_wdata[20]),
        .Q(\reg_file_a_reg[3]_12 [20]),
        .R(1'b0));
  FDRE \reg_file_a_reg[3][21] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[3][0]_0 ),
        .D(rf_wdata[21]),
        .Q(\reg_file_a_reg[3]_12 [21]),
        .R(1'b0));
  FDRE \reg_file_a_reg[3][22] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[3][0]_0 ),
        .D(rf_wdata[22]),
        .Q(\reg_file_a_reg[3]_12 [22]),
        .R(1'b0));
  FDRE \reg_file_a_reg[3][23] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[3][0]_0 ),
        .D(rf_wdata[23]),
        .Q(\reg_file_a_reg[3]_12 [23]),
        .R(1'b0));
  FDRE \reg_file_a_reg[3][24] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[3][0]_0 ),
        .D(rf_wdata[24]),
        .Q(\reg_file_a_reg[3]_12 [24]),
        .R(1'b0));
  FDRE \reg_file_a_reg[3][25] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[3][0]_0 ),
        .D(rf_wdata[25]),
        .Q(\reg_file_a_reg[3]_12 [25]),
        .R(1'b0));
  FDRE \reg_file_a_reg[3][26] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[3][0]_0 ),
        .D(rf_wdata[26]),
        .Q(\reg_file_a_reg[3]_12 [26]),
        .R(1'b0));
  FDRE \reg_file_a_reg[3][27] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[3][0]_0 ),
        .D(rf_wdata[27]),
        .Q(\reg_file_a_reg[3]_12 [27]),
        .R(1'b0));
  FDRE \reg_file_a_reg[3][28] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[3][0]_0 ),
        .D(rf_wdata[28]),
        .Q(\reg_file_a_reg[3]_12 [28]),
        .R(1'b0));
  FDRE \reg_file_a_reg[3][29] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[3][0]_0 ),
        .D(rf_wdata[29]),
        .Q(\reg_file_a_reg[3]_12 [29]),
        .R(1'b0));
  FDRE \reg_file_a_reg[3][2] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[3][0]_0 ),
        .D(rf_wdata[2]),
        .Q(\reg_file_a_reg[3]_12 [2]),
        .R(1'b0));
  FDRE \reg_file_a_reg[3][30] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[3][0]_0 ),
        .D(rf_wdata[30]),
        .Q(\reg_file_a_reg[3]_12 [30]),
        .R(1'b0));
  FDRE \reg_file_a_reg[3][31] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[3][0]_0 ),
        .D(rf_wdata[31]),
        .Q(\reg_file_a_reg[3]_12 [31]),
        .R(1'b0));
  FDRE \reg_file_a_reg[3][3] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[3][0]_0 ),
        .D(rf_wdata[3]),
        .Q(\reg_file_a_reg[3]_12 [3]),
        .R(1'b0));
  FDRE \reg_file_a_reg[3][4] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[3][0]_0 ),
        .D(rf_wdata[4]),
        .Q(\reg_file_a_reg[3]_12 [4]),
        .R(1'b0));
  FDRE \reg_file_a_reg[3][5] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[3][0]_0 ),
        .D(rf_wdata[5]),
        .Q(\reg_file_a_reg[3]_12 [5]),
        .R(1'b0));
  FDRE \reg_file_a_reg[3][6] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[3][0]_0 ),
        .D(rf_wdata[6]),
        .Q(\reg_file_a_reg[3]_12 [6]),
        .R(1'b0));
  FDRE \reg_file_a_reg[3][7] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[3][0]_0 ),
        .D(rf_wdata[7]),
        .Q(\reg_file_a_reg[3]_12 [7]),
        .R(1'b0));
  FDRE \reg_file_a_reg[3][8] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[3][0]_0 ),
        .D(rf_wdata[8]),
        .Q(\reg_file_a_reg[3]_12 [8]),
        .R(1'b0));
  FDRE \reg_file_a_reg[3][9] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[3][0]_0 ),
        .D(rf_wdata[9]),
        .Q(\reg_file_a_reg[3]_12 [9]),
        .R(1'b0));
  FDRE \reg_file_a_reg[4][0] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[4][0]_0 ),
        .D(rf_wdata[0]),
        .Q(\reg_file_a_reg[4]_11 [0]),
        .R(1'b0));
  FDRE \reg_file_a_reg[4][10] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[4][0]_0 ),
        .D(rf_wdata[10]),
        .Q(\reg_file_a_reg[4]_11 [10]),
        .R(1'b0));
  FDRE \reg_file_a_reg[4][11] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[4][0]_0 ),
        .D(rf_wdata[11]),
        .Q(\reg_file_a_reg[4]_11 [11]),
        .R(1'b0));
  FDRE \reg_file_a_reg[4][12] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[4][0]_0 ),
        .D(rf_wdata[12]),
        .Q(\reg_file_a_reg[4]_11 [12]),
        .R(1'b0));
  FDRE \reg_file_a_reg[4][13] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[4][0]_0 ),
        .D(rf_wdata[13]),
        .Q(\reg_file_a_reg[4]_11 [13]),
        .R(1'b0));
  FDRE \reg_file_a_reg[4][14] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[4][0]_0 ),
        .D(rf_wdata[14]),
        .Q(\reg_file_a_reg[4]_11 [14]),
        .R(1'b0));
  FDRE \reg_file_a_reg[4][15] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[4][0]_0 ),
        .D(rf_wdata[15]),
        .Q(\reg_file_a_reg[4]_11 [15]),
        .R(1'b0));
  FDRE \reg_file_a_reg[4][16] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[4][0]_0 ),
        .D(rf_wdata[16]),
        .Q(\reg_file_a_reg[4]_11 [16]),
        .R(1'b0));
  FDRE \reg_file_a_reg[4][17] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[4][0]_0 ),
        .D(rf_wdata[17]),
        .Q(\reg_file_a_reg[4]_11 [17]),
        .R(1'b0));
  FDRE \reg_file_a_reg[4][18] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[4][0]_0 ),
        .D(rf_wdata[18]),
        .Q(\reg_file_a_reg[4]_11 [18]),
        .R(1'b0));
  FDRE \reg_file_a_reg[4][19] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[4][0]_0 ),
        .D(rf_wdata[19]),
        .Q(\reg_file_a_reg[4]_11 [19]),
        .R(1'b0));
  FDRE \reg_file_a_reg[4][1] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[4][0]_0 ),
        .D(rf_wdata[1]),
        .Q(\reg_file_a_reg[4]_11 [1]),
        .R(1'b0));
  FDRE \reg_file_a_reg[4][20] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[4][0]_0 ),
        .D(rf_wdata[20]),
        .Q(\reg_file_a_reg[4]_11 [20]),
        .R(1'b0));
  FDRE \reg_file_a_reg[4][21] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[4][0]_0 ),
        .D(rf_wdata[21]),
        .Q(\reg_file_a_reg[4]_11 [21]),
        .R(1'b0));
  FDRE \reg_file_a_reg[4][22] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[4][0]_0 ),
        .D(rf_wdata[22]),
        .Q(\reg_file_a_reg[4]_11 [22]),
        .R(1'b0));
  FDRE \reg_file_a_reg[4][23] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[4][0]_0 ),
        .D(rf_wdata[23]),
        .Q(\reg_file_a_reg[4]_11 [23]),
        .R(1'b0));
  FDRE \reg_file_a_reg[4][24] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[4][0]_0 ),
        .D(rf_wdata[24]),
        .Q(\reg_file_a_reg[4]_11 [24]),
        .R(1'b0));
  FDRE \reg_file_a_reg[4][25] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[4][0]_0 ),
        .D(rf_wdata[25]),
        .Q(\reg_file_a_reg[4]_11 [25]),
        .R(1'b0));
  FDRE \reg_file_a_reg[4][26] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[4][0]_0 ),
        .D(rf_wdata[26]),
        .Q(\reg_file_a_reg[4]_11 [26]),
        .R(1'b0));
  FDRE \reg_file_a_reg[4][27] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[4][0]_0 ),
        .D(rf_wdata[27]),
        .Q(\reg_file_a_reg[4]_11 [27]),
        .R(1'b0));
  FDRE \reg_file_a_reg[4][28] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[4][0]_0 ),
        .D(rf_wdata[28]),
        .Q(\reg_file_a_reg[4]_11 [28]),
        .R(1'b0));
  FDRE \reg_file_a_reg[4][29] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[4][0]_0 ),
        .D(rf_wdata[29]),
        .Q(\reg_file_a_reg[4]_11 [29]),
        .R(1'b0));
  FDRE \reg_file_a_reg[4][2] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[4][0]_0 ),
        .D(rf_wdata[2]),
        .Q(\reg_file_a_reg[4]_11 [2]),
        .R(1'b0));
  FDRE \reg_file_a_reg[4][30] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[4][0]_0 ),
        .D(rf_wdata[30]),
        .Q(\reg_file_a_reg[4]_11 [30]),
        .R(1'b0));
  FDRE \reg_file_a_reg[4][31] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[4][0]_0 ),
        .D(rf_wdata[31]),
        .Q(\reg_file_a_reg[4]_11 [31]),
        .R(1'b0));
  FDRE \reg_file_a_reg[4][3] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[4][0]_0 ),
        .D(rf_wdata[3]),
        .Q(\reg_file_a_reg[4]_11 [3]),
        .R(1'b0));
  FDRE \reg_file_a_reg[4][4] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[4][0]_0 ),
        .D(rf_wdata[4]),
        .Q(\reg_file_a_reg[4]_11 [4]),
        .R(1'b0));
  FDRE \reg_file_a_reg[4][5] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[4][0]_0 ),
        .D(rf_wdata[5]),
        .Q(\reg_file_a_reg[4]_11 [5]),
        .R(1'b0));
  FDRE \reg_file_a_reg[4][6] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[4][0]_0 ),
        .D(rf_wdata[6]),
        .Q(\reg_file_a_reg[4]_11 [6]),
        .R(1'b0));
  FDRE \reg_file_a_reg[4][7] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[4][0]_0 ),
        .D(rf_wdata[7]),
        .Q(\reg_file_a_reg[4]_11 [7]),
        .R(1'b0));
  FDRE \reg_file_a_reg[4][8] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[4][0]_0 ),
        .D(rf_wdata[8]),
        .Q(\reg_file_a_reg[4]_11 [8]),
        .R(1'b0));
  FDRE \reg_file_a_reg[4][9] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[4][0]_0 ),
        .D(rf_wdata[9]),
        .Q(\reg_file_a_reg[4]_11 [9]),
        .R(1'b0));
  FDRE \reg_file_a_reg[5][0] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[5][0]_0 ),
        .D(rf_wdata[0]),
        .Q(\reg_file_a_reg[5]_10 [0]),
        .R(1'b0));
  FDRE \reg_file_a_reg[5][10] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[5][0]_0 ),
        .D(rf_wdata[10]),
        .Q(\reg_file_a_reg[5]_10 [10]),
        .R(1'b0));
  FDRE \reg_file_a_reg[5][11] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[5][0]_0 ),
        .D(rf_wdata[11]),
        .Q(\reg_file_a_reg[5]_10 [11]),
        .R(1'b0));
  FDRE \reg_file_a_reg[5][12] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[5][0]_0 ),
        .D(rf_wdata[12]),
        .Q(\reg_file_a_reg[5]_10 [12]),
        .R(1'b0));
  FDRE \reg_file_a_reg[5][13] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[5][0]_0 ),
        .D(rf_wdata[13]),
        .Q(\reg_file_a_reg[5]_10 [13]),
        .R(1'b0));
  FDRE \reg_file_a_reg[5][14] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[5][0]_0 ),
        .D(rf_wdata[14]),
        .Q(\reg_file_a_reg[5]_10 [14]),
        .R(1'b0));
  FDRE \reg_file_a_reg[5][15] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[5][0]_0 ),
        .D(rf_wdata[15]),
        .Q(\reg_file_a_reg[5]_10 [15]),
        .R(1'b0));
  FDRE \reg_file_a_reg[5][16] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[5][0]_0 ),
        .D(rf_wdata[16]),
        .Q(\reg_file_a_reg[5]_10 [16]),
        .R(1'b0));
  FDRE \reg_file_a_reg[5][17] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[5][0]_0 ),
        .D(rf_wdata[17]),
        .Q(\reg_file_a_reg[5]_10 [17]),
        .R(1'b0));
  FDRE \reg_file_a_reg[5][18] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[5][0]_0 ),
        .D(rf_wdata[18]),
        .Q(\reg_file_a_reg[5]_10 [18]),
        .R(1'b0));
  FDRE \reg_file_a_reg[5][19] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[5][0]_0 ),
        .D(rf_wdata[19]),
        .Q(\reg_file_a_reg[5]_10 [19]),
        .R(1'b0));
  FDRE \reg_file_a_reg[5][1] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[5][0]_0 ),
        .D(rf_wdata[1]),
        .Q(\reg_file_a_reg[5]_10 [1]),
        .R(1'b0));
  FDRE \reg_file_a_reg[5][20] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[5][0]_0 ),
        .D(rf_wdata[20]),
        .Q(\reg_file_a_reg[5]_10 [20]),
        .R(1'b0));
  FDRE \reg_file_a_reg[5][21] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[5][0]_0 ),
        .D(rf_wdata[21]),
        .Q(\reg_file_a_reg[5]_10 [21]),
        .R(1'b0));
  FDRE \reg_file_a_reg[5][22] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[5][0]_0 ),
        .D(rf_wdata[22]),
        .Q(\reg_file_a_reg[5]_10 [22]),
        .R(1'b0));
  FDRE \reg_file_a_reg[5][23] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[5][0]_0 ),
        .D(rf_wdata[23]),
        .Q(\reg_file_a_reg[5]_10 [23]),
        .R(1'b0));
  FDRE \reg_file_a_reg[5][24] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[5][0]_0 ),
        .D(rf_wdata[24]),
        .Q(\reg_file_a_reg[5]_10 [24]),
        .R(1'b0));
  FDRE \reg_file_a_reg[5][25] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[5][0]_0 ),
        .D(rf_wdata[25]),
        .Q(\reg_file_a_reg[5]_10 [25]),
        .R(1'b0));
  FDRE \reg_file_a_reg[5][26] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[5][0]_0 ),
        .D(rf_wdata[26]),
        .Q(\reg_file_a_reg[5]_10 [26]),
        .R(1'b0));
  FDRE \reg_file_a_reg[5][27] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[5][0]_0 ),
        .D(rf_wdata[27]),
        .Q(\reg_file_a_reg[5]_10 [27]),
        .R(1'b0));
  FDRE \reg_file_a_reg[5][28] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[5][0]_0 ),
        .D(rf_wdata[28]),
        .Q(\reg_file_a_reg[5]_10 [28]),
        .R(1'b0));
  FDRE \reg_file_a_reg[5][29] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[5][0]_0 ),
        .D(rf_wdata[29]),
        .Q(\reg_file_a_reg[5]_10 [29]),
        .R(1'b0));
  FDRE \reg_file_a_reg[5][2] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[5][0]_0 ),
        .D(rf_wdata[2]),
        .Q(\reg_file_a_reg[5]_10 [2]),
        .R(1'b0));
  FDRE \reg_file_a_reg[5][30] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[5][0]_0 ),
        .D(rf_wdata[30]),
        .Q(\reg_file_a_reg[5]_10 [30]),
        .R(1'b0));
  FDRE \reg_file_a_reg[5][31] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[5][0]_0 ),
        .D(rf_wdata[31]),
        .Q(\reg_file_a_reg[5]_10 [31]),
        .R(1'b0));
  FDRE \reg_file_a_reg[5][3] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[5][0]_0 ),
        .D(rf_wdata[3]),
        .Q(\reg_file_a_reg[5]_10 [3]),
        .R(1'b0));
  FDRE \reg_file_a_reg[5][4] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[5][0]_0 ),
        .D(rf_wdata[4]),
        .Q(\reg_file_a_reg[5]_10 [4]),
        .R(1'b0));
  FDRE \reg_file_a_reg[5][5] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[5][0]_0 ),
        .D(rf_wdata[5]),
        .Q(\reg_file_a_reg[5]_10 [5]),
        .R(1'b0));
  FDRE \reg_file_a_reg[5][6] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[5][0]_0 ),
        .D(rf_wdata[6]),
        .Q(\reg_file_a_reg[5]_10 [6]),
        .R(1'b0));
  FDRE \reg_file_a_reg[5][7] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[5][0]_0 ),
        .D(rf_wdata[7]),
        .Q(\reg_file_a_reg[5]_10 [7]),
        .R(1'b0));
  FDRE \reg_file_a_reg[5][8] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[5][0]_0 ),
        .D(rf_wdata[8]),
        .Q(\reg_file_a_reg[5]_10 [8]),
        .R(1'b0));
  FDRE \reg_file_a_reg[5][9] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[5][0]_0 ),
        .D(rf_wdata[9]),
        .Q(\reg_file_a_reg[5]_10 [9]),
        .R(1'b0));
  FDRE \reg_file_a_reg[6][0] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[6][0]_0 ),
        .D(rf_wdata[0]),
        .Q(\reg_file_a_reg[6]_9 [0]),
        .R(1'b0));
  FDRE \reg_file_a_reg[6][10] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[6][0]_0 ),
        .D(rf_wdata[10]),
        .Q(\reg_file_a_reg[6]_9 [10]),
        .R(1'b0));
  FDRE \reg_file_a_reg[6][11] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[6][0]_0 ),
        .D(rf_wdata[11]),
        .Q(\reg_file_a_reg[6]_9 [11]),
        .R(1'b0));
  FDRE \reg_file_a_reg[6][12] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[6][0]_0 ),
        .D(rf_wdata[12]),
        .Q(\reg_file_a_reg[6]_9 [12]),
        .R(1'b0));
  FDRE \reg_file_a_reg[6][13] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[6][0]_0 ),
        .D(rf_wdata[13]),
        .Q(\reg_file_a_reg[6]_9 [13]),
        .R(1'b0));
  FDRE \reg_file_a_reg[6][14] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[6][0]_0 ),
        .D(rf_wdata[14]),
        .Q(\reg_file_a_reg[6]_9 [14]),
        .R(1'b0));
  FDRE \reg_file_a_reg[6][15] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[6][0]_0 ),
        .D(rf_wdata[15]),
        .Q(\reg_file_a_reg[6]_9 [15]),
        .R(1'b0));
  FDRE \reg_file_a_reg[6][16] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[6][0]_0 ),
        .D(rf_wdata[16]),
        .Q(\reg_file_a_reg[6]_9 [16]),
        .R(1'b0));
  FDRE \reg_file_a_reg[6][17] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[6][0]_0 ),
        .D(rf_wdata[17]),
        .Q(\reg_file_a_reg[6]_9 [17]),
        .R(1'b0));
  FDRE \reg_file_a_reg[6][18] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[6][0]_0 ),
        .D(rf_wdata[18]),
        .Q(\reg_file_a_reg[6]_9 [18]),
        .R(1'b0));
  FDRE \reg_file_a_reg[6][19] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[6][0]_0 ),
        .D(rf_wdata[19]),
        .Q(\reg_file_a_reg[6]_9 [19]),
        .R(1'b0));
  FDRE \reg_file_a_reg[6][1] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[6][0]_0 ),
        .D(rf_wdata[1]),
        .Q(\reg_file_a_reg[6]_9 [1]),
        .R(1'b0));
  FDRE \reg_file_a_reg[6][20] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[6][0]_0 ),
        .D(rf_wdata[20]),
        .Q(\reg_file_a_reg[6]_9 [20]),
        .R(1'b0));
  FDRE \reg_file_a_reg[6][21] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[6][0]_0 ),
        .D(rf_wdata[21]),
        .Q(\reg_file_a_reg[6]_9 [21]),
        .R(1'b0));
  FDRE \reg_file_a_reg[6][22] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[6][0]_0 ),
        .D(rf_wdata[22]),
        .Q(\reg_file_a_reg[6]_9 [22]),
        .R(1'b0));
  FDRE \reg_file_a_reg[6][23] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[6][0]_0 ),
        .D(rf_wdata[23]),
        .Q(\reg_file_a_reg[6]_9 [23]),
        .R(1'b0));
  FDRE \reg_file_a_reg[6][24] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[6][0]_0 ),
        .D(rf_wdata[24]),
        .Q(\reg_file_a_reg[6]_9 [24]),
        .R(1'b0));
  FDRE \reg_file_a_reg[6][25] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[6][0]_0 ),
        .D(rf_wdata[25]),
        .Q(\reg_file_a_reg[6]_9 [25]),
        .R(1'b0));
  FDRE \reg_file_a_reg[6][26] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[6][0]_0 ),
        .D(rf_wdata[26]),
        .Q(\reg_file_a_reg[6]_9 [26]),
        .R(1'b0));
  FDRE \reg_file_a_reg[6][27] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[6][0]_0 ),
        .D(rf_wdata[27]),
        .Q(\reg_file_a_reg[6]_9 [27]),
        .R(1'b0));
  FDRE \reg_file_a_reg[6][28] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[6][0]_0 ),
        .D(rf_wdata[28]),
        .Q(\reg_file_a_reg[6]_9 [28]),
        .R(1'b0));
  FDRE \reg_file_a_reg[6][29] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[6][0]_0 ),
        .D(rf_wdata[29]),
        .Q(\reg_file_a_reg[6]_9 [29]),
        .R(1'b0));
  FDRE \reg_file_a_reg[6][2] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[6][0]_0 ),
        .D(rf_wdata[2]),
        .Q(\reg_file_a_reg[6]_9 [2]),
        .R(1'b0));
  FDRE \reg_file_a_reg[6][30] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[6][0]_0 ),
        .D(rf_wdata[30]),
        .Q(\reg_file_a_reg[6]_9 [30]),
        .R(1'b0));
  FDRE \reg_file_a_reg[6][31] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[6][0]_0 ),
        .D(rf_wdata[31]),
        .Q(\reg_file_a_reg[6]_9 [31]),
        .R(1'b0));
  FDRE \reg_file_a_reg[6][3] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[6][0]_0 ),
        .D(rf_wdata[3]),
        .Q(\reg_file_a_reg[6]_9 [3]),
        .R(1'b0));
  FDRE \reg_file_a_reg[6][4] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[6][0]_0 ),
        .D(rf_wdata[4]),
        .Q(\reg_file_a_reg[6]_9 [4]),
        .R(1'b0));
  FDRE \reg_file_a_reg[6][5] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[6][0]_0 ),
        .D(rf_wdata[5]),
        .Q(\reg_file_a_reg[6]_9 [5]),
        .R(1'b0));
  FDRE \reg_file_a_reg[6][6] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[6][0]_0 ),
        .D(rf_wdata[6]),
        .Q(\reg_file_a_reg[6]_9 [6]),
        .R(1'b0));
  FDRE \reg_file_a_reg[6][7] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[6][0]_0 ),
        .D(rf_wdata[7]),
        .Q(\reg_file_a_reg[6]_9 [7]),
        .R(1'b0));
  FDRE \reg_file_a_reg[6][8] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[6][0]_0 ),
        .D(rf_wdata[8]),
        .Q(\reg_file_a_reg[6]_9 [8]),
        .R(1'b0));
  FDRE \reg_file_a_reg[6][9] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[6][0]_0 ),
        .D(rf_wdata[9]),
        .Q(\reg_file_a_reg[6]_9 [9]),
        .R(1'b0));
  FDRE \reg_file_a_reg[7][0] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[7][0]_0 ),
        .D(rf_wdata[0]),
        .Q(\reg_file_a_reg[7]_8 [0]),
        .R(1'b0));
  FDRE \reg_file_a_reg[7][10] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[7][0]_0 ),
        .D(rf_wdata[10]),
        .Q(\reg_file_a_reg[7]_8 [10]),
        .R(1'b0));
  FDRE \reg_file_a_reg[7][11] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[7][0]_0 ),
        .D(rf_wdata[11]),
        .Q(\reg_file_a_reg[7]_8 [11]),
        .R(1'b0));
  FDRE \reg_file_a_reg[7][12] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[7][0]_0 ),
        .D(rf_wdata[12]),
        .Q(\reg_file_a_reg[7]_8 [12]),
        .R(1'b0));
  FDRE \reg_file_a_reg[7][13] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[7][0]_0 ),
        .D(rf_wdata[13]),
        .Q(\reg_file_a_reg[7]_8 [13]),
        .R(1'b0));
  FDRE \reg_file_a_reg[7][14] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[7][0]_0 ),
        .D(rf_wdata[14]),
        .Q(\reg_file_a_reg[7]_8 [14]),
        .R(1'b0));
  FDRE \reg_file_a_reg[7][15] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[7][0]_0 ),
        .D(rf_wdata[15]),
        .Q(\reg_file_a_reg[7]_8 [15]),
        .R(1'b0));
  FDRE \reg_file_a_reg[7][16] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[7][0]_0 ),
        .D(rf_wdata[16]),
        .Q(\reg_file_a_reg[7]_8 [16]),
        .R(1'b0));
  FDRE \reg_file_a_reg[7][17] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[7][0]_0 ),
        .D(rf_wdata[17]),
        .Q(\reg_file_a_reg[7]_8 [17]),
        .R(1'b0));
  FDRE \reg_file_a_reg[7][18] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[7][0]_0 ),
        .D(rf_wdata[18]),
        .Q(\reg_file_a_reg[7]_8 [18]),
        .R(1'b0));
  FDRE \reg_file_a_reg[7][19] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[7][0]_0 ),
        .D(rf_wdata[19]),
        .Q(\reg_file_a_reg[7]_8 [19]),
        .R(1'b0));
  FDRE \reg_file_a_reg[7][1] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[7][0]_0 ),
        .D(rf_wdata[1]),
        .Q(\reg_file_a_reg[7]_8 [1]),
        .R(1'b0));
  FDRE \reg_file_a_reg[7][20] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[7][0]_0 ),
        .D(rf_wdata[20]),
        .Q(\reg_file_a_reg[7]_8 [20]),
        .R(1'b0));
  FDRE \reg_file_a_reg[7][21] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[7][0]_0 ),
        .D(rf_wdata[21]),
        .Q(\reg_file_a_reg[7]_8 [21]),
        .R(1'b0));
  FDRE \reg_file_a_reg[7][22] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[7][0]_0 ),
        .D(rf_wdata[22]),
        .Q(\reg_file_a_reg[7]_8 [22]),
        .R(1'b0));
  FDRE \reg_file_a_reg[7][23] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[7][0]_0 ),
        .D(rf_wdata[23]),
        .Q(\reg_file_a_reg[7]_8 [23]),
        .R(1'b0));
  FDRE \reg_file_a_reg[7][24] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[7][0]_0 ),
        .D(rf_wdata[24]),
        .Q(\reg_file_a_reg[7]_8 [24]),
        .R(1'b0));
  FDRE \reg_file_a_reg[7][25] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[7][0]_0 ),
        .D(rf_wdata[25]),
        .Q(\reg_file_a_reg[7]_8 [25]),
        .R(1'b0));
  FDRE \reg_file_a_reg[7][26] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[7][0]_0 ),
        .D(rf_wdata[26]),
        .Q(\reg_file_a_reg[7]_8 [26]),
        .R(1'b0));
  FDRE \reg_file_a_reg[7][27] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[7][0]_0 ),
        .D(rf_wdata[27]),
        .Q(\reg_file_a_reg[7]_8 [27]),
        .R(1'b0));
  FDRE \reg_file_a_reg[7][28] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[7][0]_0 ),
        .D(rf_wdata[28]),
        .Q(\reg_file_a_reg[7]_8 [28]),
        .R(1'b0));
  FDRE \reg_file_a_reg[7][29] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[7][0]_0 ),
        .D(rf_wdata[29]),
        .Q(\reg_file_a_reg[7]_8 [29]),
        .R(1'b0));
  FDRE \reg_file_a_reg[7][2] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[7][0]_0 ),
        .D(rf_wdata[2]),
        .Q(\reg_file_a_reg[7]_8 [2]),
        .R(1'b0));
  FDRE \reg_file_a_reg[7][30] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[7][0]_0 ),
        .D(rf_wdata[30]),
        .Q(\reg_file_a_reg[7]_8 [30]),
        .R(1'b0));
  FDRE \reg_file_a_reg[7][31] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[7][0]_0 ),
        .D(rf_wdata[31]),
        .Q(\reg_file_a_reg[7]_8 [31]),
        .R(1'b0));
  FDRE \reg_file_a_reg[7][3] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[7][0]_0 ),
        .D(rf_wdata[3]),
        .Q(\reg_file_a_reg[7]_8 [3]),
        .R(1'b0));
  FDRE \reg_file_a_reg[7][4] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[7][0]_0 ),
        .D(rf_wdata[4]),
        .Q(\reg_file_a_reg[7]_8 [4]),
        .R(1'b0));
  FDRE \reg_file_a_reg[7][5] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[7][0]_0 ),
        .D(rf_wdata[5]),
        .Q(\reg_file_a_reg[7]_8 [5]),
        .R(1'b0));
  FDRE \reg_file_a_reg[7][6] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[7][0]_0 ),
        .D(rf_wdata[6]),
        .Q(\reg_file_a_reg[7]_8 [6]),
        .R(1'b0));
  FDRE \reg_file_a_reg[7][7] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[7][0]_0 ),
        .D(rf_wdata[7]),
        .Q(\reg_file_a_reg[7]_8 [7]),
        .R(1'b0));
  FDRE \reg_file_a_reg[7][8] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[7][0]_0 ),
        .D(rf_wdata[8]),
        .Q(\reg_file_a_reg[7]_8 [8]),
        .R(1'b0));
  FDRE \reg_file_a_reg[7][9] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[7][0]_0 ),
        .D(rf_wdata[9]),
        .Q(\reg_file_a_reg[7]_8 [9]),
        .R(1'b0));
  FDRE \reg_file_a_reg[8][0] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[8][0]_0 ),
        .D(rf_wdata[0]),
        .Q(\reg_file_a_reg[8]_7 [0]),
        .R(1'b0));
  FDRE \reg_file_a_reg[8][10] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[8][0]_0 ),
        .D(rf_wdata[10]),
        .Q(\reg_file_a_reg[8]_7 [10]),
        .R(1'b0));
  FDRE \reg_file_a_reg[8][11] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[8][0]_0 ),
        .D(rf_wdata[11]),
        .Q(\reg_file_a_reg[8]_7 [11]),
        .R(1'b0));
  FDRE \reg_file_a_reg[8][12] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[8][0]_0 ),
        .D(rf_wdata[12]),
        .Q(\reg_file_a_reg[8]_7 [12]),
        .R(1'b0));
  FDRE \reg_file_a_reg[8][13] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[8][0]_0 ),
        .D(rf_wdata[13]),
        .Q(\reg_file_a_reg[8]_7 [13]),
        .R(1'b0));
  FDRE \reg_file_a_reg[8][14] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[8][0]_0 ),
        .D(rf_wdata[14]),
        .Q(\reg_file_a_reg[8]_7 [14]),
        .R(1'b0));
  FDRE \reg_file_a_reg[8][15] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[8][0]_0 ),
        .D(rf_wdata[15]),
        .Q(\reg_file_a_reg[8]_7 [15]),
        .R(1'b0));
  FDRE \reg_file_a_reg[8][16] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[8][0]_0 ),
        .D(rf_wdata[16]),
        .Q(\reg_file_a_reg[8]_7 [16]),
        .R(1'b0));
  FDRE \reg_file_a_reg[8][17] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[8][0]_0 ),
        .D(rf_wdata[17]),
        .Q(\reg_file_a_reg[8]_7 [17]),
        .R(1'b0));
  FDRE \reg_file_a_reg[8][18] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[8][0]_0 ),
        .D(rf_wdata[18]),
        .Q(\reg_file_a_reg[8]_7 [18]),
        .R(1'b0));
  FDRE \reg_file_a_reg[8][19] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[8][0]_0 ),
        .D(rf_wdata[19]),
        .Q(\reg_file_a_reg[8]_7 [19]),
        .R(1'b0));
  FDRE \reg_file_a_reg[8][1] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[8][0]_0 ),
        .D(rf_wdata[1]),
        .Q(\reg_file_a_reg[8]_7 [1]),
        .R(1'b0));
  FDRE \reg_file_a_reg[8][20] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[8][0]_0 ),
        .D(rf_wdata[20]),
        .Q(\reg_file_a_reg[8]_7 [20]),
        .R(1'b0));
  FDRE \reg_file_a_reg[8][21] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[8][0]_0 ),
        .D(rf_wdata[21]),
        .Q(\reg_file_a_reg[8]_7 [21]),
        .R(1'b0));
  FDRE \reg_file_a_reg[8][22] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[8][0]_0 ),
        .D(rf_wdata[22]),
        .Q(\reg_file_a_reg[8]_7 [22]),
        .R(1'b0));
  FDRE \reg_file_a_reg[8][23] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[8][0]_0 ),
        .D(rf_wdata[23]),
        .Q(\reg_file_a_reg[8]_7 [23]),
        .R(1'b0));
  FDRE \reg_file_a_reg[8][24] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[8][0]_0 ),
        .D(rf_wdata[24]),
        .Q(\reg_file_a_reg[8]_7 [24]),
        .R(1'b0));
  FDRE \reg_file_a_reg[8][25] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[8][0]_0 ),
        .D(rf_wdata[25]),
        .Q(\reg_file_a_reg[8]_7 [25]),
        .R(1'b0));
  FDRE \reg_file_a_reg[8][26] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[8][0]_0 ),
        .D(rf_wdata[26]),
        .Q(\reg_file_a_reg[8]_7 [26]),
        .R(1'b0));
  FDRE \reg_file_a_reg[8][27] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[8][0]_0 ),
        .D(rf_wdata[27]),
        .Q(\reg_file_a_reg[8]_7 [27]),
        .R(1'b0));
  FDRE \reg_file_a_reg[8][28] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[8][0]_0 ),
        .D(rf_wdata[28]),
        .Q(\reg_file_a_reg[8]_7 [28]),
        .R(1'b0));
  FDRE \reg_file_a_reg[8][29] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[8][0]_0 ),
        .D(rf_wdata[29]),
        .Q(\reg_file_a_reg[8]_7 [29]),
        .R(1'b0));
  FDRE \reg_file_a_reg[8][2] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[8][0]_0 ),
        .D(rf_wdata[2]),
        .Q(\reg_file_a_reg[8]_7 [2]),
        .R(1'b0));
  FDRE \reg_file_a_reg[8][30] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[8][0]_0 ),
        .D(rf_wdata[30]),
        .Q(\reg_file_a_reg[8]_7 [30]),
        .R(1'b0));
  FDRE \reg_file_a_reg[8][31] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[8][0]_0 ),
        .D(rf_wdata[31]),
        .Q(\reg_file_a_reg[8]_7 [31]),
        .R(1'b0));
  FDRE \reg_file_a_reg[8][3] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[8][0]_0 ),
        .D(rf_wdata[3]),
        .Q(\reg_file_a_reg[8]_7 [3]),
        .R(1'b0));
  FDRE \reg_file_a_reg[8][4] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[8][0]_0 ),
        .D(rf_wdata[4]),
        .Q(\reg_file_a_reg[8]_7 [4]),
        .R(1'b0));
  FDRE \reg_file_a_reg[8][5] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[8][0]_0 ),
        .D(rf_wdata[5]),
        .Q(\reg_file_a_reg[8]_7 [5]),
        .R(1'b0));
  FDRE \reg_file_a_reg[8][6] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[8][0]_0 ),
        .D(rf_wdata[6]),
        .Q(\reg_file_a_reg[8]_7 [6]),
        .R(1'b0));
  FDRE \reg_file_a_reg[8][7] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[8][0]_0 ),
        .D(rf_wdata[7]),
        .Q(\reg_file_a_reg[8]_7 [7]),
        .R(1'b0));
  FDRE \reg_file_a_reg[8][8] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[8][0]_0 ),
        .D(rf_wdata[8]),
        .Q(\reg_file_a_reg[8]_7 [8]),
        .R(1'b0));
  FDRE \reg_file_a_reg[8][9] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[8][0]_0 ),
        .D(rf_wdata[9]),
        .Q(\reg_file_a_reg[8]_7 [9]),
        .R(1'b0));
  FDRE \reg_file_a_reg[9][0] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[9][0]_0 ),
        .D(rf_wdata[0]),
        .Q(\reg_file_a_reg[9]_6 [0]),
        .R(1'b0));
  FDRE \reg_file_a_reg[9][10] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[9][0]_0 ),
        .D(rf_wdata[10]),
        .Q(\reg_file_a_reg[9]_6 [10]),
        .R(1'b0));
  FDRE \reg_file_a_reg[9][11] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[9][0]_0 ),
        .D(rf_wdata[11]),
        .Q(\reg_file_a_reg[9]_6 [11]),
        .R(1'b0));
  FDRE \reg_file_a_reg[9][12] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[9][0]_0 ),
        .D(rf_wdata[12]),
        .Q(\reg_file_a_reg[9]_6 [12]),
        .R(1'b0));
  FDRE \reg_file_a_reg[9][13] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[9][0]_0 ),
        .D(rf_wdata[13]),
        .Q(\reg_file_a_reg[9]_6 [13]),
        .R(1'b0));
  FDRE \reg_file_a_reg[9][14] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[9][0]_0 ),
        .D(rf_wdata[14]),
        .Q(\reg_file_a_reg[9]_6 [14]),
        .R(1'b0));
  FDRE \reg_file_a_reg[9][15] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[9][0]_0 ),
        .D(rf_wdata[15]),
        .Q(\reg_file_a_reg[9]_6 [15]),
        .R(1'b0));
  FDRE \reg_file_a_reg[9][16] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[9][0]_0 ),
        .D(rf_wdata[16]),
        .Q(\reg_file_a_reg[9]_6 [16]),
        .R(1'b0));
  FDRE \reg_file_a_reg[9][17] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[9][0]_0 ),
        .D(rf_wdata[17]),
        .Q(\reg_file_a_reg[9]_6 [17]),
        .R(1'b0));
  FDRE \reg_file_a_reg[9][18] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[9][0]_0 ),
        .D(rf_wdata[18]),
        .Q(\reg_file_a_reg[9]_6 [18]),
        .R(1'b0));
  FDRE \reg_file_a_reg[9][19] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[9][0]_0 ),
        .D(rf_wdata[19]),
        .Q(\reg_file_a_reg[9]_6 [19]),
        .R(1'b0));
  FDRE \reg_file_a_reg[9][1] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[9][0]_0 ),
        .D(rf_wdata[1]),
        .Q(\reg_file_a_reg[9]_6 [1]),
        .R(1'b0));
  FDRE \reg_file_a_reg[9][20] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[9][0]_0 ),
        .D(rf_wdata[20]),
        .Q(\reg_file_a_reg[9]_6 [20]),
        .R(1'b0));
  FDRE \reg_file_a_reg[9][21] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[9][0]_0 ),
        .D(rf_wdata[21]),
        .Q(\reg_file_a_reg[9]_6 [21]),
        .R(1'b0));
  FDRE \reg_file_a_reg[9][22] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[9][0]_0 ),
        .D(rf_wdata[22]),
        .Q(\reg_file_a_reg[9]_6 [22]),
        .R(1'b0));
  FDRE \reg_file_a_reg[9][23] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[9][0]_0 ),
        .D(rf_wdata[23]),
        .Q(\reg_file_a_reg[9]_6 [23]),
        .R(1'b0));
  FDRE \reg_file_a_reg[9][24] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[9][0]_0 ),
        .D(rf_wdata[24]),
        .Q(\reg_file_a_reg[9]_6 [24]),
        .R(1'b0));
  FDRE \reg_file_a_reg[9][25] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[9][0]_0 ),
        .D(rf_wdata[25]),
        .Q(\reg_file_a_reg[9]_6 [25]),
        .R(1'b0));
  FDRE \reg_file_a_reg[9][26] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[9][0]_0 ),
        .D(rf_wdata[26]),
        .Q(\reg_file_a_reg[9]_6 [26]),
        .R(1'b0));
  FDRE \reg_file_a_reg[9][27] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[9][0]_0 ),
        .D(rf_wdata[27]),
        .Q(\reg_file_a_reg[9]_6 [27]),
        .R(1'b0));
  FDRE \reg_file_a_reg[9][28] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[9][0]_0 ),
        .D(rf_wdata[28]),
        .Q(\reg_file_a_reg[9]_6 [28]),
        .R(1'b0));
  FDRE \reg_file_a_reg[9][29] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[9][0]_0 ),
        .D(rf_wdata[29]),
        .Q(\reg_file_a_reg[9]_6 [29]),
        .R(1'b0));
  FDRE \reg_file_a_reg[9][2] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[9][0]_0 ),
        .D(rf_wdata[2]),
        .Q(\reg_file_a_reg[9]_6 [2]),
        .R(1'b0));
  FDRE \reg_file_a_reg[9][30] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[9][0]_0 ),
        .D(rf_wdata[30]),
        .Q(\reg_file_a_reg[9]_6 [30]),
        .R(1'b0));
  FDRE \reg_file_a_reg[9][31] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[9][0]_0 ),
        .D(rf_wdata[31]),
        .Q(\reg_file_a_reg[9]_6 [31]),
        .R(1'b0));
  FDRE \reg_file_a_reg[9][3] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[9][0]_0 ),
        .D(rf_wdata[3]),
        .Q(\reg_file_a_reg[9]_6 [3]),
        .R(1'b0));
  FDRE \reg_file_a_reg[9][4] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[9][0]_0 ),
        .D(rf_wdata[4]),
        .Q(\reg_file_a_reg[9]_6 [4]),
        .R(1'b0));
  FDRE \reg_file_a_reg[9][5] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[9][0]_0 ),
        .D(rf_wdata[5]),
        .Q(\reg_file_a_reg[9]_6 [5]),
        .R(1'b0));
  FDRE \reg_file_a_reg[9][6] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[9][0]_0 ),
        .D(rf_wdata[6]),
        .Q(\reg_file_a_reg[9]_6 [6]),
        .R(1'b0));
  FDRE \reg_file_a_reg[9][7] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[9][0]_0 ),
        .D(rf_wdata[7]),
        .Q(\reg_file_a_reg[9]_6 [7]),
        .R(1'b0));
  FDRE \reg_file_a_reg[9][8] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[9][0]_0 ),
        .D(rf_wdata[8]),
        .Q(\reg_file_a_reg[9]_6 [8]),
        .R(1'b0));
  FDRE \reg_file_a_reg[9][9] 
       (.C(HCLK),
        .CE(\reg_file_a_reg[9][0]_0 ),
        .D(rf_wdata[9]),
        .Q(\reg_file_a_reg[9]_6 [9]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "512" *) 
  (* RTL_RAM_NAME = "u_r_bank/reg_file_b" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "5" *) 
  RAM32M reg_file_b_reg_0_15_0_5
       (.ADDRA({1'b0,rptr_b_ex}),
        .ADDRB({1'b0,rptr_b_ex}),
        .ADDRC({1'b0,rptr_b_ex}),
        .ADDRD({1'b0,wptr_ex}),
        .DIA(rf_wdata[1:0]),
        .DIB(rf_wdata[3:2]),
        .DIC(rf_wdata[5:4]),
        .DID({1'b0,1'b0}),
        .DOA(b_reg_0[1:0]),
        .DOB(b_reg_0[3:2]),
        .DOC(b_reg_0[5:4]),
        .DOD(NLW_reg_file_b_reg_0_15_0_5_DOD_UNCONNECTED[1:0]),
        .WCLK(HCLK),
        .WE(w_enable_ex));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "512" *) 
  (* RTL_RAM_NAME = "u_r_bank/reg_file_b" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "12" *) 
  (* ram_slice_end = "17" *) 
  RAM32M reg_file_b_reg_0_15_12_17
       (.ADDRA({1'b0,rptr_b_ex}),
        .ADDRB({1'b0,rptr_b_ex}),
        .ADDRC({1'b0,rptr_b_ex}),
        .ADDRD({1'b0,wptr_ex}),
        .DIA(rf_wdata[13:12]),
        .DIB(rf_wdata[15:14]),
        .DIC(rf_wdata[17:16]),
        .DID({1'b0,1'b0}),
        .DOA(b_reg_0[13:12]),
        .DOB(b_reg_0[15:14]),
        .DOC(b_reg_0[17:16]),
        .DOD(NLW_reg_file_b_reg_0_15_12_17_DOD_UNCONNECTED[1:0]),
        .WCLK(HCLK),
        .WE(w_enable_ex));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "512" *) 
  (* RTL_RAM_NAME = "u_r_bank/reg_file_b" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "18" *) 
  (* ram_slice_end = "23" *) 
  RAM32M reg_file_b_reg_0_15_18_23
       (.ADDRA({1'b0,rptr_b_ex}),
        .ADDRB({1'b0,rptr_b_ex}),
        .ADDRC({1'b0,rptr_b_ex}),
        .ADDRD({1'b0,wptr_ex}),
        .DIA(rf_wdata[19:18]),
        .DIB(rf_wdata[21:20]),
        .DIC(rf_wdata[23:22]),
        .DID({1'b0,1'b0}),
        .DOA(b_reg_0[19:18]),
        .DOB(b_reg_0[21:20]),
        .DOC(b_reg_0[23:22]),
        .DOD(NLW_reg_file_b_reg_0_15_18_23_DOD_UNCONNECTED[1:0]),
        .WCLK(HCLK),
        .WE(w_enable_ex));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "512" *) 
  (* RTL_RAM_NAME = "u_r_bank/reg_file_b" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "24" *) 
  (* ram_slice_end = "29" *) 
  RAM32M reg_file_b_reg_0_15_24_29
       (.ADDRA({1'b0,rptr_b_ex}),
        .ADDRB({1'b0,rptr_b_ex}),
        .ADDRC({1'b0,rptr_b_ex}),
        .ADDRD({1'b0,wptr_ex}),
        .DIA(rf_wdata[25:24]),
        .DIB(rf_wdata[27:26]),
        .DIC(rf_wdata[29:28]),
        .DID({1'b0,1'b0}),
        .DOA(b_reg_0[25:24]),
        .DOB(b_reg_0[27:26]),
        .DOC(b_reg_0[29:28]),
        .DOD(NLW_reg_file_b_reg_0_15_24_29_DOD_UNCONNECTED[1:0]),
        .WCLK(HCLK),
        .WE(w_enable_ex));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "512" *) 
  (* RTL_RAM_NAME = "u_r_bank/reg_file_b" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "30" *) 
  (* ram_slice_end = "31" *) 
  RAM32M reg_file_b_reg_0_15_30_31
       (.ADDRA({1'b0,rptr_b_ex}),
        .ADDRB({1'b0,rptr_b_ex}),
        .ADDRC({1'b0,rptr_b_ex}),
        .ADDRD({1'b0,wptr_ex}),
        .DIA(rf_wdata[31:30]),
        .DIB({1'b0,1'b0}),
        .DIC({1'b0,1'b0}),
        .DID({1'b0,1'b0}),
        .DOA(b_reg_0[31:30]),
        .DOB(NLW_reg_file_b_reg_0_15_30_31_DOB_UNCONNECTED[1:0]),
        .DOC(NLW_reg_file_b_reg_0_15_30_31_DOC_UNCONNECTED[1:0]),
        .DOD(NLW_reg_file_b_reg_0_15_30_31_DOD_UNCONNECTED[1:0]),
        .WCLK(HCLK),
        .WE(w_enable_ex));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "512" *) 
  (* RTL_RAM_NAME = "u_r_bank/reg_file_b" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "6" *) 
  (* ram_slice_end = "11" *) 
  RAM32M reg_file_b_reg_0_15_6_11
       (.ADDRA({1'b0,rptr_b_ex}),
        .ADDRB({1'b0,rptr_b_ex}),
        .ADDRC({1'b0,rptr_b_ex}),
        .ADDRD({1'b0,wptr_ex}),
        .DIA(rf_wdata[7:6]),
        .DIB(rf_wdata[9:8]),
        .DIC(rf_wdata[11:10]),
        .DID({1'b0,1'b0}),
        .DOA(b_reg_0[7:6]),
        .DOB(b_reg_0[9:8]),
        .DOC(b_reg_0[11:10]),
        .DOD(NLW_reg_file_b_reg_0_15_6_11_DOD_UNCONNECTED[1:0]),
        .WCLK(HCLK),
        .WE(w_enable_ex));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \rot3[0]_i_1 
       (.I0(\rot3[28]_i_3_n_0 ),
        .I1(\rot3_reg[24] ),
        .I2(\rot3[28]_i_4_n_0 ),
        .I3(\rot3[12]_i_2_n_0 ),
        .I4(\rot3[28]_i_2_n_0 ),
        .I5(\rot3_reg[24]_0 ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \rot3[10]_i_1 
       (.I0(\rot3[14]_i_2_n_0 ),
        .I1(\rot3_reg[24] ),
        .I2(\rot3[30]_i_2_n_0 ),
        .I3(\rot3[22]_i_2_n_0 ),
        .I4(\rot3[18]_i_2_n_0 ),
        .I5(\rot3_reg[24]_0 ),
        .O(D[10]));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \rot3[11]_i_1 
       (.I0(\rot3[15]_i_2_n_0 ),
        .I1(\rot3_reg[24] ),
        .I2(\rot3[31]_i_2_n_0 ),
        .I3(\rot3[23]_i_2_n_0 ),
        .I4(\rot3[19]_i_2_n_0 ),
        .I5(\rot3_reg[24]_0 ),
        .O(D[11]));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \rot3[12]_i_1 
       (.I0(\rot3[16]_i_2_n_0 ),
        .I1(\rot3_reg[24] ),
        .I2(\rot3[12]_i_2_n_0 ),
        .I3(\rot3[24]_i_2_n_0 ),
        .I4(\rot3[20]_i_2_n_0 ),
        .I5(\rot3_reg[24]_0 ),
        .O(D[12]));
  (* SOFT_HLUTNM = "soft_lutpair228" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rot3[12]_i_2 
       (.I0(\rot3[30]_i_7_n_0 ),
        .I1(\rot3_reg[24]_1 ),
        .I2(\rot3[14]_i_3_n_0 ),
        .O(\rot3[12]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \rot3[13]_i_1 
       (.I0(\rot3[17]_i_2_n_0 ),
        .I1(\rot3_reg[24] ),
        .I2(\rot3[13]_i_2_n_0 ),
        .I3(\rot3[25]_i_2_n_0 ),
        .I4(\rot3[21]_i_2_n_0 ),
        .I5(\rot3_reg[24]_0 ),
        .O(D[13]));
  (* SOFT_HLUTNM = "soft_lutpair226" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rot3[13]_i_2 
       (.I0(\rot3[31]_i_7_n_0 ),
        .I1(\rot3_reg[24]_1 ),
        .I2(\rot3[15]_i_3_n_0 ),
        .O(\rot3[13]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \rot3[14]_i_1 
       (.I0(\rot3[18]_i_2_n_0 ),
        .I1(\rot3_reg[24] ),
        .I2(\rot3[14]_i_2_n_0 ),
        .I3(\rot3[26]_i_2_n_0 ),
        .I4(\rot3[22]_i_2_n_0 ),
        .I5(\rot3_reg[24]_0 ),
        .O(D[14]));
  (* SOFT_HLUTNM = "soft_lutpair228" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rot3[14]_i_2 
       (.I0(\rot3[14]_i_3_n_0 ),
        .I1(\rot3_reg[24]_1 ),
        .I2(\rot3[16]_i_3_n_0 ),
        .O(\rot3[14]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFAEE0A22)) 
    \rot3[14]_i_3 
       (.I0(\rptr_a_ex_reg[3]_0 [14]),
        .I1(b_reg_0[0]),
        .I2(\rot3[30]_i_5_0 ),
        .I3(use_imm_ex),
        .I4(\rptr_a_ex_reg[3]_0 [15]),
        .O(\rot3[14]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \rot3[15]_i_1 
       (.I0(\rot3[19]_i_2_n_0 ),
        .I1(\rot3_reg[24] ),
        .I2(\rot3[15]_i_2_n_0 ),
        .I3(\rot3[27]_i_2_n_0 ),
        .I4(\rot3[23]_i_2_n_0 ),
        .I5(\rot3_reg[24]_0 ),
        .O(D[15]));
  (* SOFT_HLUTNM = "soft_lutpair230" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rot3[15]_i_2 
       (.I0(\rot3[15]_i_3_n_0 ),
        .I1(\rot3_reg[24]_1 ),
        .I2(\rot3[17]_i_3_n_0 ),
        .O(\rot3[15]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFAEE0A22)) 
    \rot3[15]_i_3 
       (.I0(\rptr_a_ex_reg[3]_0 [15]),
        .I1(b_reg_0[0]),
        .I2(\rot3[30]_i_5_0 ),
        .I3(use_imm_ex),
        .I4(\rptr_a_ex_reg[3]_0 [16]),
        .O(\rot3[15]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \rot3[16]_i_1 
       (.I0(\rot3[20]_i_2_n_0 ),
        .I1(\rot3_reg[24] ),
        .I2(\rot3[16]_i_2_n_0 ),
        .I3(\rot3[28]_i_5_n_0 ),
        .I4(\rot3[24]_i_2_n_0 ),
        .I5(\rot3_reg[24]_0 ),
        .O(D[16]));
  (* SOFT_HLUTNM = "soft_lutpair232" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rot3[16]_i_2 
       (.I0(\rot3[16]_i_3_n_0 ),
        .I1(\rot3_reg[24]_1 ),
        .I2(\rot3[18]_i_3_n_0 ),
        .O(\rot3[16]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFAEE0A22)) 
    \rot3[16]_i_3 
       (.I0(\rptr_a_ex_reg[3]_0 [16]),
        .I1(b_reg_0[0]),
        .I2(\rot3[30]_i_5_0 ),
        .I3(use_imm_ex),
        .I4(\rptr_a_ex_reg[3]_0 [17]),
        .O(\rot3[16]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \rot3[17]_i_1 
       (.I0(\rot3[21]_i_2_n_0 ),
        .I1(\rot3_reg[24] ),
        .I2(\rot3[17]_i_2_n_0 ),
        .I3(\rot3[29]_i_5_n_0 ),
        .I4(\rot3[25]_i_2_n_0 ),
        .I5(\rot3_reg[24]_0 ),
        .O(D[17]));
  (* SOFT_HLUTNM = "soft_lutpair230" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rot3[17]_i_2 
       (.I0(\rot3[17]_i_3_n_0 ),
        .I1(\rot3_reg[24]_1 ),
        .I2(\rot3[19]_i_3_n_0 ),
        .O(\rot3[17]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFAEE0A22)) 
    \rot3[17]_i_3 
       (.I0(\rptr_a_ex_reg[3]_0 [17]),
        .I1(b_reg_0[0]),
        .I2(\rot3[30]_i_5_0 ),
        .I3(use_imm_ex),
        .I4(\rptr_a_ex_reg[3]_0 [18]),
        .O(\rot3[17]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \rot3[18]_i_1 
       (.I0(\rot3[22]_i_2_n_0 ),
        .I1(\rot3_reg[24] ),
        .I2(\rot3[18]_i_2_n_0 ),
        .I3(\rot3[30]_i_5_n_0 ),
        .I4(\rot3[26]_i_2_n_0 ),
        .I5(\rot3_reg[24]_0 ),
        .O(D[18]));
  (* SOFT_HLUTNM = "soft_lutpair232" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rot3[18]_i_2 
       (.I0(\rot3[18]_i_3_n_0 ),
        .I1(\rot3_reg[24]_1 ),
        .I2(\rot3[20]_i_3_n_0 ),
        .O(\rot3[18]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFAEE0A22)) 
    \rot3[18]_i_3 
       (.I0(\rptr_a_ex_reg[3]_0 [18]),
        .I1(b_reg_0[0]),
        .I2(\rot3[30]_i_5_0 ),
        .I3(use_imm_ex),
        .I4(\rptr_a_ex_reg[3]_0 [19]),
        .O(\rot3[18]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \rot3[19]_i_1 
       (.I0(\rot3[23]_i_2_n_0 ),
        .I1(\rot3_reg[24] ),
        .I2(\rot3[19]_i_2_n_0 ),
        .I3(\rot3[31]_i_5_n_0 ),
        .I4(\rot3[27]_i_2_n_0 ),
        .I5(\rot3_reg[24]_0 ),
        .O(D[19]));
  (* SOFT_HLUTNM = "soft_lutpair234" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rot3[19]_i_2 
       (.I0(\rot3[19]_i_3_n_0 ),
        .I1(\rot3_reg[24]_1 ),
        .I2(\rot3[21]_i_3_n_0 ),
        .O(\rot3[19]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFAEE0A22)) 
    \rot3[19]_i_3 
       (.I0(\rptr_a_ex_reg[3]_0 [19]),
        .I1(b_reg_0[0]),
        .I2(\rot3[30]_i_5_0 ),
        .I3(use_imm_ex),
        .I4(\rptr_a_ex_reg[3]_0 [20]),
        .O(\rot3[19]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \rot3[1]_i_1 
       (.I0(\rot3[29]_i_3_n_0 ),
        .I1(\rot3_reg[24] ),
        .I2(\rot3[29]_i_4_n_0 ),
        .I3(\rot3[13]_i_2_n_0 ),
        .I4(\rot3[29]_i_2_n_0 ),
        .I5(\rot3_reg[24]_0 ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \rot3[20]_i_1 
       (.I0(\rot3[24]_i_2_n_0 ),
        .I1(\rot3_reg[24] ),
        .I2(\rot3[20]_i_2_n_0 ),
        .I3(\rot3[28]_i_4_n_0 ),
        .I4(\rot3[28]_i_5_n_0 ),
        .I5(\rot3_reg[24]_0 ),
        .O(D[20]));
  (* SOFT_HLUTNM = "soft_lutpair236" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rot3[20]_i_2 
       (.I0(\rot3[20]_i_3_n_0 ),
        .I1(\rot3_reg[24]_1 ),
        .I2(\rot3[22]_i_3_n_0 ),
        .O(\rot3[20]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFAEE0A22)) 
    \rot3[20]_i_3 
       (.I0(\rptr_a_ex_reg[3]_0 [20]),
        .I1(b_reg_0[0]),
        .I2(\rot3[30]_i_5_0 ),
        .I3(use_imm_ex),
        .I4(\rptr_a_ex_reg[3]_0 [21]),
        .O(\rot3[20]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \rot3[21]_i_1 
       (.I0(\rot3[25]_i_2_n_0 ),
        .I1(\rot3_reg[24] ),
        .I2(\rot3[21]_i_2_n_0 ),
        .I3(\rot3[29]_i_4_n_0 ),
        .I4(\rot3[29]_i_5_n_0 ),
        .I5(\rot3_reg[24]_0 ),
        .O(D[21]));
  (* SOFT_HLUTNM = "soft_lutpair234" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rot3[21]_i_2 
       (.I0(\rot3[21]_i_3_n_0 ),
        .I1(\rot3_reg[24]_1 ),
        .I2(\rot3[23]_i_3_n_0 ),
        .O(\rot3[21]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFAEE0A22)) 
    \rot3[21]_i_3 
       (.I0(\rptr_a_ex_reg[3]_0 [21]),
        .I1(b_reg_0[0]),
        .I2(\rot3[30]_i_5_0 ),
        .I3(use_imm_ex),
        .I4(\rptr_a_ex_reg[3]_0 [22]),
        .O(\rot3[21]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \rot3[22]_i_1 
       (.I0(\rot3[26]_i_2_n_0 ),
        .I1(\rot3_reg[24] ),
        .I2(\rot3[22]_i_2_n_0 ),
        .I3(\rot3[30]_i_4_n_0 ),
        .I4(\rot3[30]_i_5_n_0 ),
        .I5(\rot3_reg[24]_0 ),
        .O(D[22]));
  (* SOFT_HLUTNM = "soft_lutpair236" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rot3[22]_i_2 
       (.I0(\rot3[22]_i_3_n_0 ),
        .I1(\rot3_reg[24]_1 ),
        .I2(\rot3[24]_i_3_n_0 ),
        .O(\rot3[22]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFAEE0A22)) 
    \rot3[22]_i_3 
       (.I0(\rptr_a_ex_reg[3]_0 [22]),
        .I1(b_reg_0[0]),
        .I2(\rot3[30]_i_5_0 ),
        .I3(use_imm_ex),
        .I4(\rptr_a_ex_reg[3]_0 [23]),
        .O(\rot3[22]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \rot3[23]_i_1 
       (.I0(\rot3[27]_i_2_n_0 ),
        .I1(\rot3_reg[24] ),
        .I2(\rot3[23]_i_2_n_0 ),
        .I3(\rot3[31]_i_4_n_0 ),
        .I4(\rot3[31]_i_5_n_0 ),
        .I5(\rot3_reg[24]_0 ),
        .O(D[23]));
  (* SOFT_HLUTNM = "soft_lutpair239" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rot3[23]_i_2 
       (.I0(\rot3[23]_i_3_n_0 ),
        .I1(\rot3_reg[24]_1 ),
        .I2(\rot3[25]_i_3_n_0 ),
        .O(\rot3[23]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFAEE0A22)) 
    \rot3[23]_i_3 
       (.I0(\rptr_a_ex_reg[3]_0 [23]),
        .I1(b_reg_0[0]),
        .I2(\rot3[30]_i_5_0 ),
        .I3(use_imm_ex),
        .I4(\rptr_a_ex_reg[3]_0 [24]),
        .O(\rot3[23]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8B8FF33CC00)) 
    \rot3[24]_i_1 
       (.I0(\rot3[28]_i_3_n_0 ),
        .I1(\rot3_reg[24] ),
        .I2(\rot3[28]_i_4_n_0 ),
        .I3(\rot3[28]_i_5_n_0 ),
        .I4(\rot3[24]_i_2_n_0 ),
        .I5(\rot3_reg[24]_0 ),
        .O(D[24]));
  (* SOFT_HLUTNM = "soft_lutpair240" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rot3[24]_i_2 
       (.I0(\rot3[24]_i_3_n_0 ),
        .I1(\rot3_reg[24]_1 ),
        .I2(\rot3[26]_i_3_n_0 ),
        .O(\rot3[24]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFAEE0A22)) 
    \rot3[24]_i_3 
       (.I0(\rptr_a_ex_reg[3]_0 [24]),
        .I1(b_reg_0[0]),
        .I2(\rot3[30]_i_5_0 ),
        .I3(use_imm_ex),
        .I4(\rptr_a_ex_reg[3]_0 [25]),
        .O(\rot3[24]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8B8FF33CC00)) 
    \rot3[25]_i_1 
       (.I0(\rot3[29]_i_3_n_0 ),
        .I1(\rot3_reg[24] ),
        .I2(\rot3[29]_i_4_n_0 ),
        .I3(\rot3[29]_i_5_n_0 ),
        .I4(\rot3[25]_i_2_n_0 ),
        .I5(\rot3_reg[24]_0 ),
        .O(D[25]));
  (* SOFT_HLUTNM = "soft_lutpair229" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rot3[25]_i_2 
       (.I0(\rot3[25]_i_3_n_0 ),
        .I1(\rot3_reg[24]_1 ),
        .I2(\rot3[27]_i_3_n_0 ),
        .O(\rot3[25]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFAEE0A22)) 
    \rot3[25]_i_3 
       (.I0(\rptr_a_ex_reg[3]_0 [25]),
        .I1(b_reg_0[0]),
        .I2(\rot3[30]_i_5_0 ),
        .I3(use_imm_ex),
        .I4(\rptr_a_ex_reg[3]_0 [26]),
        .O(\rot3[25]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8B8FF33CC00)) 
    \rot3[26]_i_1 
       (.I0(\rot3[30]_i_3_n_0 ),
        .I1(\rot3_reg[24] ),
        .I2(\rot3[30]_i_4_n_0 ),
        .I3(\rot3[30]_i_5_n_0 ),
        .I4(\rot3[26]_i_2_n_0 ),
        .I5(\rot3_reg[24]_0 ),
        .O(D[26]));
  (* SOFT_HLUTNM = "soft_lutpair240" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rot3[26]_i_2 
       (.I0(\rot3[26]_i_3_n_0 ),
        .I1(\rot3_reg[24]_1 ),
        .I2(\rot3[28]_i_6_n_0 ),
        .O(\rot3[26]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFAEE0A22)) 
    \rot3[26]_i_3 
       (.I0(\rptr_a_ex_reg[3]_0 [26]),
        .I1(b_reg_0[0]),
        .I2(\rot3[30]_i_5_0 ),
        .I3(use_imm_ex),
        .I4(\rptr_a_ex_reg[3]_0 [27]),
        .O(\rot3[26]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8B8FF33CC00)) 
    \rot3[27]_i_1 
       (.I0(\rot3[31]_i_3_n_0 ),
        .I1(\rot3_reg[24] ),
        .I2(\rot3[31]_i_4_n_0 ),
        .I3(\rot3[31]_i_5_n_0 ),
        .I4(\rot3[27]_i_2_n_0 ),
        .I5(\rot3_reg[24]_0 ),
        .O(D[27]));
  (* SOFT_HLUTNM = "soft_lutpair229" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rot3[27]_i_2 
       (.I0(\rot3[27]_i_3_n_0 ),
        .I1(\rot3_reg[24]_1 ),
        .I2(\rot3[29]_i_6_n_0 ),
        .O(\rot3[27]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFAEE0A22)) 
    \rot3[27]_i_3 
       (.I0(\rptr_a_ex_reg[3]_0 [27]),
        .I1(b_reg_0[0]),
        .I2(\rot3[30]_i_5_0 ),
        .I3(use_imm_ex),
        .I4(\rptr_a_ex_reg[3]_0 [28]),
        .O(\rot3[27]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8B8FF33CC00)) 
    \rot3[28]_i_1 
       (.I0(\rot3[28]_i_2_n_0 ),
        .I1(\rot3_reg[24] ),
        .I2(\rot3[28]_i_3_n_0 ),
        .I3(\rot3[28]_i_4_n_0 ),
        .I4(\rot3[28]_i_5_n_0 ),
        .I5(\rot3_reg[24]_0 ),
        .O(D[28]));
  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rot3[28]_i_2 
       (.I0(\rot3[30]_i_9_n_0 ),
        .I1(\rot3_reg[24]_1 ),
        .I2(\rot3[30]_i_6_n_0 ),
        .O(\rot3[28]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair233" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rot3[28]_i_3 
       (.I0(\rot3[30]_i_11_n_0 ),
        .I1(\rot3_reg[24]_1 ),
        .I2(\rot3[30]_i_8_n_0 ),
        .O(\rot3[28]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair237" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rot3[28]_i_4 
       (.I0(\rot3[30]_i_13_n_0 ),
        .I1(\rot3_reg[24]_1 ),
        .I2(\rot3[30]_i_10_n_0 ),
        .O(\rot3[28]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair241" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rot3[28]_i_5 
       (.I0(\rot3[28]_i_6_n_0 ),
        .I1(\rot3_reg[24]_1 ),
        .I2(\rot3[30]_i_12_n_0 ),
        .O(\rot3[28]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hFAEE0A22)) 
    \rot3[28]_i_6 
       (.I0(\rptr_a_ex_reg[3]_0 [28]),
        .I1(b_reg_0[0]),
        .I2(\rot3[30]_i_5_0 ),
        .I3(use_imm_ex),
        .I4(\rptr_a_ex_reg[3]_0 [29]),
        .O(\rot3[28]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8B8FF33CC00)) 
    \rot3[29]_i_1 
       (.I0(\rot3[29]_i_2_n_0 ),
        .I1(\rot3_reg[24] ),
        .I2(\rot3[29]_i_3_n_0 ),
        .I3(\rot3[29]_i_4_n_0 ),
        .I4(\rot3[29]_i_5_n_0 ),
        .I5(\rot3_reg[24]_0 ),
        .O(D[29]));
  (* SOFT_HLUTNM = "soft_lutpair241" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rot3[29]_i_2 
       (.I0(\rot3[31]_i_9_n_0 ),
        .I1(\rot3_reg[24]_1 ),
        .I2(\rot3[31]_i_6_n_0 ),
        .O(\rot3[29]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair231" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rot3[29]_i_3 
       (.I0(\rot3[31]_i_11_n_0 ),
        .I1(\rot3_reg[24]_1 ),
        .I2(\rot3[31]_i_8_n_0 ),
        .O(\rot3[29]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair235" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rot3[29]_i_4 
       (.I0(\rot3[31]_i_13_n_0 ),
        .I1(\rot3_reg[24]_1 ),
        .I2(\rot3[31]_i_10_n_0 ),
        .O(\rot3[29]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair238" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rot3[29]_i_5 
       (.I0(\rot3[29]_i_6_n_0 ),
        .I1(\rot3_reg[24]_1 ),
        .I2(\rot3[31]_i_12_n_0 ),
        .O(\rot3[29]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hFAEE0A22)) 
    \rot3[29]_i_6 
       (.I0(\rptr_a_ex_reg[3]_0 [29]),
        .I1(b_reg_0[0]),
        .I2(\rot3[30]_i_5_0 ),
        .I3(use_imm_ex),
        .I4(\rptr_a_ex_reg[3]_0 [30]),
        .O(\rot3[29]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \rot3[2]_i_1 
       (.I0(\rot3[30]_i_3_n_0 ),
        .I1(\rot3_reg[24] ),
        .I2(\rot3[30]_i_4_n_0 ),
        .I3(\rot3[14]_i_2_n_0 ),
        .I4(\rot3[30]_i_2_n_0 ),
        .I5(\rot3_reg[24]_0 ),
        .O(D[2]));
  LUT6 #(
    .INIT(64'hB8B8B8B8FF33CC00)) 
    \rot3[30]_i_1 
       (.I0(\rot3[30]_i_2_n_0 ),
        .I1(\rot3_reg[24] ),
        .I2(\rot3[30]_i_3_n_0 ),
        .I3(\rot3[30]_i_4_n_0 ),
        .I4(\rot3[30]_i_5_n_0 ),
        .I5(\rot3_reg[24]_0 ),
        .O(D[30]));
  LUT5 #(
    .INIT(32'hFAEE0A22)) 
    \rot3[30]_i_10 
       (.I0(\rptr_a_ex_reg[3]_0 [2]),
        .I1(b_reg_0[0]),
        .I2(\rot3[30]_i_5_0 ),
        .I3(use_imm_ex),
        .I4(\rptr_a_ex_reg[3]_0 [3]),
        .O(\rot3[30]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'hFAEE0A22)) 
    \rot3[30]_i_11 
       (.I0(\rptr_a_ex_reg[3]_0 [4]),
        .I1(b_reg_0[0]),
        .I2(\rot3[30]_i_5_0 ),
        .I3(use_imm_ex),
        .I4(\rptr_a_ex_reg[3]_0 [5]),
        .O(\rot3[30]_i_11_n_0 ));
  LUT5 #(
    .INIT(32'hFAEE0A22)) 
    \rot3[30]_i_12 
       (.I0(\rptr_a_ex_reg[3]_0 [30]),
        .I1(b_reg_0[0]),
        .I2(\rot3[30]_i_5_0 ),
        .I3(use_imm_ex),
        .I4(\rptr_a_ex_reg[3]_0 [31]),
        .O(\rot3[30]_i_12_n_0 ));
  LUT5 #(
    .INIT(32'hFAEE0A22)) 
    \rot3[30]_i_13 
       (.I0(\rptr_a_ex_reg[3]_0 [0]),
        .I1(b_reg_0[0]),
        .I2(\rot3[30]_i_5_0 ),
        .I3(use_imm_ex),
        .I4(\rptr_a_ex_reg[3]_0 [1]),
        .O(\rot3[30]_i_13_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rot3[30]_i_2 
       (.I0(\rot3[30]_i_6_n_0 ),
        .I1(\rot3_reg[24]_1 ),
        .I2(\rot3[30]_i_7_n_0 ),
        .O(\rot3[30]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair233" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rot3[30]_i_3 
       (.I0(\rot3[30]_i_8_n_0 ),
        .I1(\rot3_reg[24]_1 ),
        .I2(\rot3[30]_i_9_n_0 ),
        .O(\rot3[30]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair237" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rot3[30]_i_4 
       (.I0(\rot3[30]_i_10_n_0 ),
        .I1(\rot3_reg[24]_1 ),
        .I2(\rot3[30]_i_11_n_0 ),
        .O(\rot3[30]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair239" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rot3[30]_i_5 
       (.I0(\rot3[30]_i_12_n_0 ),
        .I1(\rot3_reg[24]_1 ),
        .I2(\rot3[30]_i_13_n_0 ),
        .O(\rot3[30]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hFAEE0A22)) 
    \rot3[30]_i_6 
       (.I0(\rptr_a_ex_reg[3]_0 [10]),
        .I1(b_reg_0[0]),
        .I2(\rot3[30]_i_5_0 ),
        .I3(use_imm_ex),
        .I4(\rptr_a_ex_reg[3]_0 [11]),
        .O(\rot3[30]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hFAEE0A22)) 
    \rot3[30]_i_7 
       (.I0(\rptr_a_ex_reg[3]_0 [12]),
        .I1(b_reg_0[0]),
        .I2(\rot3[30]_i_5_0 ),
        .I3(use_imm_ex),
        .I4(\rptr_a_ex_reg[3]_0 [13]),
        .O(\rot3[30]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hFAEE0A22)) 
    \rot3[30]_i_8 
       (.I0(\rptr_a_ex_reg[3]_0 [6]),
        .I1(b_reg_0[0]),
        .I2(\rot3[30]_i_5_0 ),
        .I3(use_imm_ex),
        .I4(\rptr_a_ex_reg[3]_0 [7]),
        .O(\rot3[30]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'hFAEE0A22)) 
    \rot3[30]_i_9 
       (.I0(\rptr_a_ex_reg[3]_0 [8]),
        .I1(b_reg_0[0]),
        .I2(\rot3[30]_i_5_0 ),
        .I3(use_imm_ex),
        .I4(\rptr_a_ex_reg[3]_0 [9]),
        .O(\rot3[30]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8B8FF33CC00)) 
    \rot3[31]_i_1 
       (.I0(\rot3[31]_i_2_n_0 ),
        .I1(\rot3_reg[24] ),
        .I2(\rot3[31]_i_3_n_0 ),
        .I3(\rot3[31]_i_4_n_0 ),
        .I4(\rot3[31]_i_5_n_0 ),
        .I5(\rot3_reg[24]_0 ),
        .O(D[31]));
  LUT5 #(
    .INIT(32'hFAEE0A22)) 
    \rot3[31]_i_10 
       (.I0(\rptr_a_ex_reg[3]_0 [3]),
        .I1(b_reg_0[0]),
        .I2(\rot3[30]_i_5_0 ),
        .I3(use_imm_ex),
        .I4(\rptr_a_ex_reg[3]_0 [4]),
        .O(\rot3[31]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'hFAEE0A22)) 
    \rot3[31]_i_11 
       (.I0(\rptr_a_ex_reg[3]_0 [5]),
        .I1(b_reg_0[0]),
        .I2(\rot3[30]_i_5_0 ),
        .I3(use_imm_ex),
        .I4(\rptr_a_ex_reg[3]_0 [6]),
        .O(\rot3[31]_i_11_n_0 ));
  LUT5 #(
    .INIT(32'hFAEE0A22)) 
    \rot3[31]_i_12 
       (.I0(\rptr_a_ex_reg[3]_0 [31]),
        .I1(b_reg_0[0]),
        .I2(\rot3[30]_i_5_0 ),
        .I3(use_imm_ex),
        .I4(\rptr_a_ex_reg[3]_0 [0]),
        .O(\rot3[31]_i_12_n_0 ));
  LUT5 #(
    .INIT(32'hFAEE0A22)) 
    \rot3[31]_i_13 
       (.I0(\rptr_a_ex_reg[3]_0 [1]),
        .I1(b_reg_0[0]),
        .I2(\rot3[30]_i_5_0 ),
        .I3(use_imm_ex),
        .I4(\rptr_a_ex_reg[3]_0 [2]),
        .O(\rot3[31]_i_13_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair226" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rot3[31]_i_2 
       (.I0(\rot3[31]_i_6_n_0 ),
        .I1(\rot3_reg[24]_1 ),
        .I2(\rot3[31]_i_7_n_0 ),
        .O(\rot3[31]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair231" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rot3[31]_i_3 
       (.I0(\rot3[31]_i_8_n_0 ),
        .I1(\rot3_reg[24]_1 ),
        .I2(\rot3[31]_i_9_n_0 ),
        .O(\rot3[31]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair235" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rot3[31]_i_4 
       (.I0(\rot3[31]_i_10_n_0 ),
        .I1(\rot3_reg[24]_1 ),
        .I2(\rot3[31]_i_11_n_0 ),
        .O(\rot3[31]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair238" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \rot3[31]_i_5 
       (.I0(\rot3[31]_i_12_n_0 ),
        .I1(\rot3_reg[24]_1 ),
        .I2(\rot3[31]_i_13_n_0 ),
        .O(\rot3[31]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hFAEE0A22)) 
    \rot3[31]_i_6 
       (.I0(\rptr_a_ex_reg[3]_0 [11]),
        .I1(b_reg_0[0]),
        .I2(\rot3[30]_i_5_0 ),
        .I3(use_imm_ex),
        .I4(\rptr_a_ex_reg[3]_0 [12]),
        .O(\rot3[31]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hFAEE0A22)) 
    \rot3[31]_i_7 
       (.I0(\rptr_a_ex_reg[3]_0 [13]),
        .I1(b_reg_0[0]),
        .I2(\rot3[30]_i_5_0 ),
        .I3(use_imm_ex),
        .I4(\rptr_a_ex_reg[3]_0 [14]),
        .O(\rot3[31]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hFAEE0A22)) 
    \rot3[31]_i_8 
       (.I0(\rptr_a_ex_reg[3]_0 [7]),
        .I1(b_reg_0[0]),
        .I2(\rot3[30]_i_5_0 ),
        .I3(use_imm_ex),
        .I4(\rptr_a_ex_reg[3]_0 [8]),
        .O(\rot3[31]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'hFAEE0A22)) 
    \rot3[31]_i_9 
       (.I0(\rptr_a_ex_reg[3]_0 [9]),
        .I1(b_reg_0[0]),
        .I2(\rot3[30]_i_5_0 ),
        .I3(use_imm_ex),
        .I4(\rptr_a_ex_reg[3]_0 [10]),
        .O(\rot3[31]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \rot3[3]_i_1 
       (.I0(\rot3[31]_i_3_n_0 ),
        .I1(\rot3_reg[24] ),
        .I2(\rot3[31]_i_4_n_0 ),
        .I3(\rot3[15]_i_2_n_0 ),
        .I4(\rot3[31]_i_2_n_0 ),
        .I5(\rot3_reg[24]_0 ),
        .O(D[3]));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \rot3[4]_i_1 
       (.I0(\rot3[28]_i_2_n_0 ),
        .I1(\rot3_reg[24] ),
        .I2(\rot3[28]_i_3_n_0 ),
        .I3(\rot3[16]_i_2_n_0 ),
        .I4(\rot3[12]_i_2_n_0 ),
        .I5(\rot3_reg[24]_0 ),
        .O(D[4]));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \rot3[5]_i_1 
       (.I0(\rot3[29]_i_2_n_0 ),
        .I1(\rot3_reg[24] ),
        .I2(\rot3[29]_i_3_n_0 ),
        .I3(\rot3[17]_i_2_n_0 ),
        .I4(\rot3[13]_i_2_n_0 ),
        .I5(\rot3_reg[24]_0 ),
        .O(D[5]));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \rot3[6]_i_1 
       (.I0(\rot3[30]_i_2_n_0 ),
        .I1(\rot3_reg[24] ),
        .I2(\rot3[30]_i_3_n_0 ),
        .I3(\rot3[18]_i_2_n_0 ),
        .I4(\rot3[14]_i_2_n_0 ),
        .I5(\rot3_reg[24]_0 ),
        .O(D[6]));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \rot3[7]_i_1 
       (.I0(\rot3[31]_i_2_n_0 ),
        .I1(\rot3_reg[24] ),
        .I2(\rot3[31]_i_3_n_0 ),
        .I3(\rot3[19]_i_2_n_0 ),
        .I4(\rot3[15]_i_2_n_0 ),
        .I5(\rot3_reg[24]_0 ),
        .O(D[7]));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \rot3[8]_i_1 
       (.I0(\rot3[12]_i_2_n_0 ),
        .I1(\rot3_reg[24] ),
        .I2(\rot3[28]_i_2_n_0 ),
        .I3(\rot3[20]_i_2_n_0 ),
        .I4(\rot3[16]_i_2_n_0 ),
        .I5(\rot3_reg[24]_0 ),
        .O(D[8]));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \rot3[9]_i_1 
       (.I0(\rot3[13]_i_2_n_0 ),
        .I1(\rot3_reg[24] ),
        .I2(\rot3[29]_i_2_n_0 ),
        .I3(\rot3[21]_i_2_n_0 ),
        .I4(\rot3[17]_i_2_n_0 ),
        .I5(\rot3_reg[24]_0 ),
        .O(D[9]));
  FDRE \rptr_a_ex_reg[0] 
       (.C(HCLK),
        .CE(1'b1),
        .D(\rptr_a_ex_reg[3]_1 [0]),
        .Q(rptr_a_ex[0]),
        .R(1'b0));
  FDRE \rptr_a_ex_reg[1] 
       (.C(HCLK),
        .CE(1'b1),
        .D(\rptr_a_ex_reg[3]_1 [1]),
        .Q(rptr_a_ex[1]),
        .R(1'b0));
  FDRE \rptr_a_ex_reg[2] 
       (.C(HCLK),
        .CE(1'b1),
        .D(\rptr_a_ex_reg[3]_1 [2]),
        .Q(rptr_a_ex[2]),
        .R(1'b0));
  FDRE \rptr_a_ex_reg[3] 
       (.C(HCLK),
        .CE(1'b1),
        .D(\rptr_a_ex_reg[3]_1 [3]),
        .Q(rptr_a_ex[3]),
        .R(1'b0));
  FDRE \rptr_b_ex_reg[0] 
       (.C(HCLK),
        .CE(1'b1),
        .D(nxt_rptr_b_ex[0]),
        .Q(rptr_b_ex[0]),
        .R(1'b0));
  FDRE \rptr_b_ex_reg[1] 
       (.C(HCLK),
        .CE(1'b1),
        .D(nxt_rptr_b_ex[1]),
        .Q(rptr_b_ex[1]),
        .R(1'b0));
  FDRE \rptr_b_ex_reg[2] 
       (.C(HCLK),
        .CE(1'b1),
        .D(nxt_rptr_b_ex[2]),
        .Q(rptr_b_ex[2]),
        .R(1'b0));
  FDRE \rptr_b_ex_reg[3] 
       (.C(HCLK),
        .CE(1'b1),
        .D(nxt_rptr_b_ex[3]),
        .Q(rptr_b_ex[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "cm1_shifter" *) 
module design_1_CORTEXM1_AXI_0_1_cm1_shifter
   (m_ext_ex2_reg_0,
    \hold_reg1_reg[6] ,
    \hold_reg1_reg[7] ,
    \hold_reg1_reg[8] ,
    \hold_reg1_reg[11] ,
    \hold_reg1_reg[12] ,
    \hold_reg1_reg[13] ,
    \hold_reg1_reg[14] ,
    \hold_reg1_reg[15] ,
    \hold_reg1_reg[18] ,
    \hold_reg1_reg[19] ,
    \hold_reg1_reg[20] ,
    \hold_reg1_reg[21] ,
    \hold_reg1_reg[22] ,
    \hold_reg1_reg[26] ,
    \hold_reg1_reg[27] ,
    \rf_mux_ctl_ex_reg[2] ,
    \rot3_reg[0]_0 ,
    m_ext_ex2_reg_1,
    m_ext_ex2_reg_2,
    m_ext_ex2_reg_3,
    m_ext_ex2_reg_4,
    m_ext_ex2_reg_5,
    m_ext_ex2_reg_6,
    m_ext_ex2_reg_7,
    m_ext_ex2_reg_8,
    m_ext_ex2_reg_9,
    m_ext_ex2_reg_10,
    m_ext_ex2_reg_11,
    m_ext_ex2_reg_12,
    m_ext_ex2_reg_13,
    m_ext_ex2_reg_14,
    m_ext_ex2_reg_15,
    m_ext_ex2_reg_16,
    m_ext_ex2_reg_17,
    m_invert,
    HCLK,
    r_amt4_ex2_reg_0,
    m_ext,
    r_amt4_ex2_reg_1,
    c_flag_mux_reg,
    carry_in_ex,
    c_flag_mux_reg_0,
    c_flag_mux_i_4_0,
    Q,
    \reg_file_a[15][27]_i_2 ,
    \reg_file_a[15][27]_i_2_0 ,
    rf0_mux_ctl_ex,
    z_flag_mux_reg,
    rf_mux_ctl_ex,
    primask_i_5,
    \m_amt_ex2_reg[4]_0 ,
    D);
  output m_ext_ex2_reg_0;
  output \hold_reg1_reg[6] ;
  output \hold_reg1_reg[7] ;
  output \hold_reg1_reg[8] ;
  output \hold_reg1_reg[11] ;
  output \hold_reg1_reg[12] ;
  output \hold_reg1_reg[13] ;
  output \hold_reg1_reg[14] ;
  output \hold_reg1_reg[15] ;
  output \hold_reg1_reg[18] ;
  output \hold_reg1_reg[19] ;
  output \hold_reg1_reg[20] ;
  output \hold_reg1_reg[21] ;
  output \hold_reg1_reg[22] ;
  output \hold_reg1_reg[26] ;
  output \hold_reg1_reg[27] ;
  output \rf_mux_ctl_ex_reg[2] ;
  output \rot3_reg[0]_0 ;
  output m_ext_ex2_reg_1;
  output m_ext_ex2_reg_2;
  output m_ext_ex2_reg_3;
  output m_ext_ex2_reg_4;
  output m_ext_ex2_reg_5;
  output m_ext_ex2_reg_6;
  output m_ext_ex2_reg_7;
  output m_ext_ex2_reg_8;
  output m_ext_ex2_reg_9;
  output m_ext_ex2_reg_10;
  output m_ext_ex2_reg_11;
  output m_ext_ex2_reg_12;
  output m_ext_ex2_reg_13;
  output m_ext_ex2_reg_14;
  output m_ext_ex2_reg_15;
  output m_ext_ex2_reg_16;
  output m_ext_ex2_reg_17;
  input m_invert;
  input HCLK;
  input r_amt4_ex2_reg_0;
  input m_ext;
  input r_amt4_ex2_reg_1;
  input c_flag_mux_reg;
  input carry_in_ex;
  input c_flag_mux_reg_0;
  input c_flag_mux_i_4_0;
  input [14:0]Q;
  input \reg_file_a[15][27]_i_2 ;
  input [14:0]\reg_file_a[15][27]_i_2_0 ;
  input [1:0]rf0_mux_ctl_ex;
  input z_flag_mux_reg;
  input [0:0]rf_mux_ctl_ex;
  input primask_i_5;
  input [4:0]\m_amt_ex2_reg[4]_0 ;
  input [31:0]D;

  wire [31:0]D;
  wire HCLK;
  wire [14:0]Q;
  wire c_flag_mux_i_4_0;
  wire c_flag_mux_i_9_n_0;
  wire c_flag_mux_reg;
  wire c_flag_mux_reg_0;
  wire carry_in_ex;
  wire \dp_ipsr_1to0[1]_i_25_n_0 ;
  wire \dp_ipsr_7to2[2]_i_6_n_0 ;
  wire \dp_ipsr_7to2[3]_i_5_n_0 ;
  wire \dp_ipsr_7to2[4]_i_6_n_0 ;
  wire \dp_ipsr_7to2[5]_i_6_n_0 ;
  wire \dp_ipsr_7to2[6]_i_6_n_0 ;
  wire \dp_ipsr_7to2[6]_i_7_n_0 ;
  wire \dp_ipsr_7to2[7]_i_6_n_0 ;
  wire \dp_ipsr_7to2[7]_i_7_n_0 ;
  wire \hold_reg1_reg[11] ;
  wire \hold_reg1_reg[12] ;
  wire \hold_reg1_reg[13] ;
  wire \hold_reg1_reg[14] ;
  wire \hold_reg1_reg[15] ;
  wire \hold_reg1_reg[18] ;
  wire \hold_reg1_reg[19] ;
  wire \hold_reg1_reg[20] ;
  wire \hold_reg1_reg[21] ;
  wire \hold_reg1_reg[22] ;
  wire \hold_reg1_reg[26] ;
  wire \hold_reg1_reg[27] ;
  wire \hold_reg1_reg[6] ;
  wire \hold_reg1_reg[7] ;
  wire \hold_reg1_reg[8] ;
  wire [4:0]m_amt_ex2;
  wire [4:0]\m_amt_ex2_reg[4]_0 ;
  wire m_ext;
  wire m_ext_ex2;
  wire m_ext_ex2_reg_0;
  wire m_ext_ex2_reg_1;
  wire m_ext_ex2_reg_10;
  wire m_ext_ex2_reg_11;
  wire m_ext_ex2_reg_12;
  wire m_ext_ex2_reg_13;
  wire m_ext_ex2_reg_14;
  wire m_ext_ex2_reg_15;
  wire m_ext_ex2_reg_16;
  wire m_ext_ex2_reg_17;
  wire m_ext_ex2_reg_2;
  wire m_ext_ex2_reg_3;
  wire m_ext_ex2_reg_4;
  wire m_ext_ex2_reg_5;
  wire m_ext_ex2_reg_6;
  wire m_ext_ex2_reg_7;
  wire m_ext_ex2_reg_8;
  wire m_ext_ex2_reg_9;
  wire m_invert;
  wire m_invert_ex2;
  wire primask_i_5;
  wire r_amt4_ex2;
  wire r_amt4_ex2_reg_0;
  wire r_amt4_ex2_reg_1;
  wire \reg_file_a[15][10]_i_8_n_0 ;
  wire \reg_file_a[15][11]_i_7_n_0 ;
  wire \reg_file_a[15][11]_i_8_n_0 ;
  wire \reg_file_a[15][12]_i_8_n_0 ;
  wire \reg_file_a[15][12]_i_9_n_0 ;
  wire \reg_file_a[15][13]_i_8_n_0 ;
  wire \reg_file_a[15][13]_i_9_n_0 ;
  wire \reg_file_a[15][14]_i_8_n_0 ;
  wire \reg_file_a[15][14]_i_9_n_0 ;
  wire \reg_file_a[15][15]_i_7_n_0 ;
  wire \reg_file_a[15][15]_i_8_n_0 ;
  wire \reg_file_a[15][17]_i_8_n_0 ;
  wire \reg_file_a[15][18]_i_7_n_0 ;
  wire \reg_file_a[15][18]_i_8_n_0 ;
  wire \reg_file_a[15][19]_i_6_n_0 ;
  wire \reg_file_a[15][19]_i_7_n_0 ;
  wire \reg_file_a[15][20]_i_7_n_0 ;
  wire \reg_file_a[15][20]_i_8_n_0 ;
  wire \reg_file_a[15][21]_i_7_n_0 ;
  wire \reg_file_a[15][21]_i_8_n_0 ;
  wire \reg_file_a[15][22]_i_7_n_0 ;
  wire \reg_file_a[15][22]_i_8_n_0 ;
  wire \reg_file_a[15][23]_i_7_n_0 ;
  wire \reg_file_a[15][24]_i_4_n_0 ;
  wire \reg_file_a[15][25]_i_10_n_0 ;
  wire \reg_file_a[15][26]_i_6_n_0 ;
  wire \reg_file_a[15][26]_i_7_n_0 ;
  wire \reg_file_a[15][27]_i_2 ;
  wire [14:0]\reg_file_a[15][27]_i_2_0 ;
  wire \reg_file_a[15][27]_i_6_n_0 ;
  wire \reg_file_a[15][27]_i_7_n_0 ;
  wire \reg_file_a[15][28]_i_7_n_0 ;
  wire \reg_file_a[15][29]_i_7_n_0 ;
  wire \reg_file_a[15][30]_i_7_n_0 ;
  wire \reg_file_a[15][31]_i_8_n_0 ;
  wire \reg_file_a[15][8]_i_7_n_0 ;
  wire \reg_file_a[15][8]_i_8_n_0 ;
  wire \reg_file_a[15][9]_i_8_n_0 ;
  wire [1:0]rf0_mux_ctl_ex;
  wire [0:0]rf_mux_ctl_ex;
  wire \rf_mux_ctl_ex_reg[2] ;
  wire [31:0]rot3;
  wire \rot3_reg[0]_0 ;
  wire z_flag_mux_i_24_n_0;
  wire z_flag_mux_i_25_n_0;
  wire z_flag_mux_i_46_n_0;
  wire z_flag_mux_i_47_n_0;
  wire z_flag_mux_i_48_n_0;
  wire z_flag_mux_i_49_n_0;
  wire z_flag_mux_i_50_n_0;
  wire z_flag_mux_i_51_n_0;
  wire z_flag_mux_i_52_n_0;
  wire z_flag_mux_i_53_n_0;
  wire z_flag_mux_i_69_n_0;
  wire z_flag_mux_reg;

  LUT5 #(
    .INIT(32'hB8BBB888)) 
    c_flag_mux_i_4
       (.I0(m_ext_ex2),
        .I1(c_flag_mux_reg),
        .I2(carry_in_ex),
        .I3(c_flag_mux_reg_0),
        .I4(c_flag_mux_i_9_n_0),
        .O(m_ext_ex2_reg_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    c_flag_mux_i_9
       (.I0(rot3[16]),
        .I1(rot3[0]),
        .I2(c_flag_mux_i_4_0),
        .I3(rot3[15]),
        .I4(r_amt4_ex2),
        .I5(rot3[31]),
        .O(c_flag_mux_i_9_n_0));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \dp_ipsr_1to0[0]_i_4 
       (.I0(m_ext_ex2),
        .I1(m_invert_ex2),
        .I2(rot3[16]),
        .I3(r_amt4_ex2),
        .I4(rot3[0]),
        .O(m_ext_ex2_reg_17));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \dp_ipsr_1to0[1]_i_21 
       (.I0(m_ext_ex2),
        .I1(\dp_ipsr_1to0[1]_i_25_n_0 ),
        .I2(rot3[17]),
        .I3(r_amt4_ex2),
        .I4(rot3[1]),
        .O(m_ext_ex2_reg_13));
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
    \dp_ipsr_1to0[1]_i_25 
       (.I0(m_invert_ex2),
        .I1(m_amt_ex2[4]),
        .I2(m_amt_ex2[3]),
        .I3(m_amt_ex2[0]),
        .I4(m_amt_ex2[1]),
        .I5(m_amt_ex2[2]),
        .O(\dp_ipsr_1to0[1]_i_25_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \dp_ipsr_7to2[2]_i_5 
       (.I0(m_ext_ex2),
        .I1(\dp_ipsr_7to2[2]_i_6_n_0 ),
        .I2(rot3[18]),
        .I3(r_amt4_ex2),
        .I4(rot3[2]),
        .O(m_ext_ex2_reg_7));
  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \dp_ipsr_7to2[2]_i_6 
       (.I0(m_invert_ex2),
        .I1(m_amt_ex2[4]),
        .I2(m_amt_ex2[3]),
        .I3(m_amt_ex2[2]),
        .I4(m_amt_ex2[1]),
        .O(\dp_ipsr_7to2[2]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \dp_ipsr_7to2[3]_i_4 
       (.I0(m_ext_ex2),
        .I1(\dp_ipsr_7to2[3]_i_5_n_0 ),
        .I2(rot3[19]),
        .I3(r_amt4_ex2),
        .I4(rot3[3]),
        .O(m_ext_ex2_reg_8));
  LUT6 #(
    .INIT(64'h56AAAAAAAAAAAAAA)) 
    \dp_ipsr_7to2[3]_i_5 
       (.I0(m_invert_ex2),
        .I1(m_amt_ex2[1]),
        .I2(m_amt_ex2[0]),
        .I3(m_amt_ex2[3]),
        .I4(m_amt_ex2[4]),
        .I5(m_amt_ex2[2]),
        .O(\dp_ipsr_7to2[3]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hEB28EBEBEB282828)) 
    \dp_ipsr_7to2[4]_i_4 
       (.I0(m_ext_ex2),
        .I1(m_invert_ex2),
        .I2(\dp_ipsr_7to2[4]_i_6_n_0 ),
        .I3(rot3[20]),
        .I4(r_amt4_ex2),
        .I5(rot3[4]),
        .O(m_ext_ex2_reg_14));
  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \dp_ipsr_7to2[4]_i_6 
       (.I0(m_amt_ex2[3]),
        .I1(m_amt_ex2[4]),
        .I2(m_amt_ex2[2]),
        .O(\dp_ipsr_7to2[4]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \dp_ipsr_7to2[5]_i_4 
       (.I0(m_ext_ex2),
        .I1(\dp_ipsr_7to2[5]_i_6_n_0 ),
        .I2(rot3[21]),
        .I3(r_amt4_ex2),
        .I4(rot3[5]),
        .O(m_ext_ex2_reg_15));
  LUT6 #(
    .INIT(64'h6A6A6AAA6AAA6AAA)) 
    \dp_ipsr_7to2[5]_i_6 
       (.I0(m_invert_ex2),
        .I1(m_amt_ex2[4]),
        .I2(m_amt_ex2[3]),
        .I3(m_amt_ex2[2]),
        .I4(m_amt_ex2[0]),
        .I5(m_amt_ex2[1]),
        .O(\dp_ipsr_7to2[5]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAAFF3000AA003000)) 
    \dp_ipsr_7to2[6]_i_5 
       (.I0(Q[0]),
        .I1(\reg_file_a[15][27]_i_2 ),
        .I2(\reg_file_a[15][27]_i_2_0 [0]),
        .I3(rf0_mux_ctl_ex[1]),
        .I4(rf0_mux_ctl_ex[0]),
        .I5(\dp_ipsr_7to2[6]_i_6_n_0 ),
        .O(\hold_reg1_reg[6] ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \dp_ipsr_7to2[6]_i_6 
       (.I0(m_ext_ex2),
        .I1(\dp_ipsr_7to2[6]_i_7_n_0 ),
        .I2(rot3[22]),
        .I3(r_amt4_ex2),
        .I4(rot3[6]),
        .O(\dp_ipsr_7to2[6]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT5 #(
    .INIT(32'h1EF0F0F0)) 
    \dp_ipsr_7to2[6]_i_7 
       (.I0(m_amt_ex2[2]),
        .I1(m_amt_ex2[1]),
        .I2(m_invert_ex2),
        .I3(m_amt_ex2[3]),
        .I4(m_amt_ex2[4]),
        .O(\dp_ipsr_7to2[6]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAAFF3000AA003000)) 
    \dp_ipsr_7to2[7]_i_5 
       (.I0(Q[1]),
        .I1(\reg_file_a[15][27]_i_2 ),
        .I2(\reg_file_a[15][27]_i_2_0 [1]),
        .I3(rf0_mux_ctl_ex[1]),
        .I4(rf0_mux_ctl_ex[0]),
        .I5(\dp_ipsr_7to2[7]_i_6_n_0 ),
        .O(\hold_reg1_reg[7] ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \dp_ipsr_7to2[7]_i_6 
       (.I0(m_ext_ex2),
        .I1(\dp_ipsr_7to2[7]_i_7_n_0 ),
        .I2(rot3[23]),
        .I3(r_amt4_ex2),
        .I4(rot3[7]),
        .O(\dp_ipsr_7to2[7]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h5556AAAAAAAAAAAA)) 
    \dp_ipsr_7to2[7]_i_7 
       (.I0(m_invert_ex2),
        .I1(m_amt_ex2[0]),
        .I2(m_amt_ex2[1]),
        .I3(m_amt_ex2[2]),
        .I4(m_amt_ex2[4]),
        .I5(m_amt_ex2[3]),
        .O(\dp_ipsr_7to2[7]_i_7_n_0 ));
  FDCE \m_amt_ex2_reg[0] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(r_amt4_ex2_reg_0),
        .D(\m_amt_ex2_reg[4]_0 [0]),
        .Q(m_amt_ex2[0]));
  FDCE \m_amt_ex2_reg[1] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(r_amt4_ex2_reg_0),
        .D(\m_amt_ex2_reg[4]_0 [1]),
        .Q(m_amt_ex2[1]));
  FDCE \m_amt_ex2_reg[2] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(r_amt4_ex2_reg_0),
        .D(\m_amt_ex2_reg[4]_0 [2]),
        .Q(m_amt_ex2[2]));
  FDCE \m_amt_ex2_reg[3] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(r_amt4_ex2_reg_0),
        .D(\m_amt_ex2_reg[4]_0 [3]),
        .Q(m_amt_ex2[3]));
  FDCE \m_amt_ex2_reg[4] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(r_amt4_ex2_reg_0),
        .D(\m_amt_ex2_reg[4]_0 [4]),
        .Q(m_amt_ex2[4]));
  FDCE m_ext_ex2_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(r_amt4_ex2_reg_0),
        .D(m_ext),
        .Q(m_ext_ex2));
  FDCE m_invert_ex2_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(r_amt4_ex2_reg_0),
        .D(m_invert),
        .Q(m_invert_ex2));
  LUT6 #(
    .INIT(64'h00000000FFE200E2)) 
    primask_i_12
       (.I0(rot3[0]),
        .I1(r_amt4_ex2),
        .I2(rot3[16]),
        .I3(m_invert_ex2),
        .I4(m_ext_ex2),
        .I5(primask_i_5),
        .O(\rot3_reg[0]_0 ));
  FDCE r_amt4_ex2_reg
       (.C(HCLK),
        .CE(1'b1),
        .CLR(r_amt4_ex2_reg_0),
        .D(r_amt4_ex2_reg_1),
        .Q(r_amt4_ex2));
  LUT6 #(
    .INIT(64'hEB28EBEBEB282828)) 
    \reg_file_a[15][10]_i_7 
       (.I0(m_ext_ex2),
        .I1(m_invert_ex2),
        .I2(\reg_file_a[15][10]_i_8_n_0 ),
        .I3(rot3[26]),
        .I4(r_amt4_ex2),
        .I5(rot3[10]),
        .O(m_ext_ex2_reg_9));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT4 #(
    .INIT(16'hAA80)) 
    \reg_file_a[15][10]_i_8 
       (.I0(m_amt_ex2[4]),
        .I1(m_amt_ex2[2]),
        .I2(m_amt_ex2[1]),
        .I3(m_amt_ex2[3]),
        .O(\reg_file_a[15][10]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hCA00CAF0CA00CA00)) 
    \reg_file_a[15][11]_i_5 
       (.I0(\reg_file_a[15][11]_i_7_n_0 ),
        .I1(Q[3]),
        .I2(rf0_mux_ctl_ex[1]),
        .I3(rf0_mux_ctl_ex[0]),
        .I4(\reg_file_a[15][27]_i_2 ),
        .I5(\reg_file_a[15][27]_i_2_0 [3]),
        .O(\hold_reg1_reg[11] ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \reg_file_a[15][11]_i_7 
       (.I0(m_ext_ex2),
        .I1(\reg_file_a[15][11]_i_8_n_0 ),
        .I2(rot3[27]),
        .I3(r_amt4_ex2),
        .I4(rot3[11]),
        .O(\reg_file_a[15][11]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h5566AAAA5666AAAA)) 
    \reg_file_a[15][11]_i_8 
       (.I0(m_invert_ex2),
        .I1(m_amt_ex2[3]),
        .I2(m_amt_ex2[1]),
        .I3(m_amt_ex2[2]),
        .I4(m_amt_ex2[4]),
        .I5(m_amt_ex2[0]),
        .O(\reg_file_a[15][11]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAAFF3000AA003000)) 
    \reg_file_a[15][12]_i_6 
       (.I0(Q[4]),
        .I1(\reg_file_a[15][27]_i_2 ),
        .I2(\reg_file_a[15][27]_i_2_0 [4]),
        .I3(rf0_mux_ctl_ex[1]),
        .I4(rf0_mux_ctl_ex[0]),
        .I5(\reg_file_a[15][12]_i_8_n_0 ),
        .O(\hold_reg1_reg[12] ));
  LUT6 #(
    .INIT(64'hEB28EBEBEB282828)) 
    \reg_file_a[15][12]_i_8 
       (.I0(m_ext_ex2),
        .I1(m_invert_ex2),
        .I2(\reg_file_a[15][12]_i_9_n_0 ),
        .I3(rot3[28]),
        .I4(r_amt4_ex2),
        .I5(rot3[12]),
        .O(\reg_file_a[15][12]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \reg_file_a[15][12]_i_9 
       (.I0(m_amt_ex2[4]),
        .I1(m_amt_ex2[2]),
        .I2(m_amt_ex2[3]),
        .O(\reg_file_a[15][12]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hCA00CAF0CA00CA00)) 
    \reg_file_a[15][13]_i_6 
       (.I0(\reg_file_a[15][13]_i_8_n_0 ),
        .I1(Q[5]),
        .I2(rf0_mux_ctl_ex[1]),
        .I3(rf0_mux_ctl_ex[0]),
        .I4(\reg_file_a[15][27]_i_2 ),
        .I5(\reg_file_a[15][27]_i_2_0 [5]),
        .O(\hold_reg1_reg[13] ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \reg_file_a[15][13]_i_8 
       (.I0(m_ext_ex2),
        .I1(\reg_file_a[15][13]_i_9_n_0 ),
        .I2(rot3[29]),
        .I3(r_amt4_ex2),
        .I4(rot3[13]),
        .O(\reg_file_a[15][13]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0015FFEAFFFF0000)) 
    \reg_file_a[15][13]_i_9 
       (.I0(m_amt_ex2[3]),
        .I1(m_amt_ex2[1]),
        .I2(m_amt_ex2[0]),
        .I3(m_amt_ex2[2]),
        .I4(m_invert_ex2),
        .I5(m_amt_ex2[4]),
        .O(\reg_file_a[15][13]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hCA00CAF0CA00CA00)) 
    \reg_file_a[15][14]_i_6 
       (.I0(\reg_file_a[15][14]_i_8_n_0 ),
        .I1(Q[6]),
        .I2(rf0_mux_ctl_ex[1]),
        .I3(rf0_mux_ctl_ex[0]),
        .I4(\reg_file_a[15][27]_i_2 ),
        .I5(\reg_file_a[15][27]_i_2_0 [6]),
        .O(\hold_reg1_reg[14] ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \reg_file_a[15][14]_i_8 
       (.I0(m_ext_ex2),
        .I1(\reg_file_a[15][14]_i_9_n_0 ),
        .I2(rot3[30]),
        .I3(r_amt4_ex2),
        .I4(rot3[14]),
        .O(\reg_file_a[15][14]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT5 #(
    .INIT(32'h6666666A)) 
    \reg_file_a[15][14]_i_9 
       (.I0(m_invert_ex2),
        .I1(m_amt_ex2[4]),
        .I2(m_amt_ex2[1]),
        .I3(m_amt_ex2[2]),
        .I4(m_amt_ex2[3]),
        .O(\reg_file_a[15][14]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hCA00CAF0CA00CA00)) 
    \reg_file_a[15][15]_i_5 
       (.I0(\reg_file_a[15][15]_i_7_n_0 ),
        .I1(Q[7]),
        .I2(rf0_mux_ctl_ex[1]),
        .I3(rf0_mux_ctl_ex[0]),
        .I4(\reg_file_a[15][27]_i_2 ),
        .I5(\reg_file_a[15][27]_i_2_0 [7]),
        .O(\hold_reg1_reg[15] ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \reg_file_a[15][15]_i_7 
       (.I0(m_ext_ex2),
        .I1(\reg_file_a[15][15]_i_8_n_0 ),
        .I2(rot3[31]),
        .I3(r_amt4_ex2),
        .I4(rot3[15]),
        .O(\reg_file_a[15][15]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h55555556AAAAAAAA)) 
    \reg_file_a[15][15]_i_8 
       (.I0(m_invert_ex2),
        .I1(m_amt_ex2[0]),
        .I2(m_amt_ex2[1]),
        .I3(m_amt_ex2[2]),
        .I4(m_amt_ex2[3]),
        .I5(m_amt_ex2[4]),
        .O(\reg_file_a[15][15]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hEB28EBEBEB282828)) 
    \reg_file_a[15][16]_i_6 
       (.I0(m_ext_ex2),
        .I1(m_invert_ex2),
        .I2(m_amt_ex2[4]),
        .I3(rot3[0]),
        .I4(r_amt4_ex2),
        .I5(rot3[16]),
        .O(m_ext_ex2_reg_16));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \reg_file_a[15][17]_i_7 
       (.I0(m_ext_ex2),
        .I1(\reg_file_a[15][17]_i_8_n_0 ),
        .I2(rot3[1]),
        .I3(r_amt4_ex2),
        .I4(rot3[17]),
        .O(m_ext_ex2_reg_1));
  LUT6 #(
    .INIT(64'h5666666666666666)) 
    \reg_file_a[15][17]_i_8 
       (.I0(m_invert_ex2),
        .I1(m_amt_ex2[4]),
        .I2(m_amt_ex2[0]),
        .I3(m_amt_ex2[1]),
        .I4(m_amt_ex2[3]),
        .I5(m_amt_ex2[2]),
        .O(\reg_file_a[15][17]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hCA00CAF0CA00CA00)) 
    \reg_file_a[15][18]_i_6 
       (.I0(\reg_file_a[15][18]_i_7_n_0 ),
        .I1(Q[8]),
        .I2(rf0_mux_ctl_ex[1]),
        .I3(rf0_mux_ctl_ex[0]),
        .I4(\reg_file_a[15][27]_i_2 ),
        .I5(\reg_file_a[15][27]_i_2_0 [8]),
        .O(\hold_reg1_reg[18] ));
  LUT6 #(
    .INIT(64'hEB28EBEBEB282828)) 
    \reg_file_a[15][18]_i_7 
       (.I0(m_ext_ex2),
        .I1(m_invert_ex2),
        .I2(\reg_file_a[15][18]_i_8_n_0 ),
        .I3(rot3[2]),
        .I4(r_amt4_ex2),
        .I5(rot3[18]),
        .O(\reg_file_a[15][18]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT4 #(
    .INIT(16'hFF80)) 
    \reg_file_a[15][18]_i_8 
       (.I0(m_amt_ex2[2]),
        .I1(m_amt_ex2[3]),
        .I2(m_amt_ex2[1]),
        .I3(m_amt_ex2[4]),
        .O(\reg_file_a[15][18]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hCA00CAF0CA00CA00)) 
    \reg_file_a[15][19]_i_5 
       (.I0(\reg_file_a[15][19]_i_6_n_0 ),
        .I1(Q[9]),
        .I2(rf0_mux_ctl_ex[1]),
        .I3(rf0_mux_ctl_ex[0]),
        .I4(\reg_file_a[15][27]_i_2 ),
        .I5(\reg_file_a[15][27]_i_2_0 [9]),
        .O(\hold_reg1_reg[19] ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \reg_file_a[15][19]_i_6 
       (.I0(m_ext_ex2),
        .I1(\reg_file_a[15][19]_i_7_n_0 ),
        .I2(rot3[3]),
        .I3(r_amt4_ex2),
        .I4(rot3[19]),
        .O(\reg_file_a[15][19]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h55565A5A5A5A5A5A)) 
    \reg_file_a[15][19]_i_7 
       (.I0(m_invert_ex2),
        .I1(m_amt_ex2[1]),
        .I2(m_amt_ex2[4]),
        .I3(m_amt_ex2[0]),
        .I4(m_amt_ex2[3]),
        .I5(m_amt_ex2[2]),
        .O(\reg_file_a[15][19]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hCA00CAF0CA00CA00)) 
    \reg_file_a[15][20]_i_6 
       (.I0(\reg_file_a[15][20]_i_7_n_0 ),
        .I1(Q[10]),
        .I2(rf0_mux_ctl_ex[1]),
        .I3(rf0_mux_ctl_ex[0]),
        .I4(\reg_file_a[15][27]_i_2 ),
        .I5(\reg_file_a[15][27]_i_2_0 [10]),
        .O(\hold_reg1_reg[20] ));
  LUT6 #(
    .INIT(64'hEB28EBEBEB282828)) 
    \reg_file_a[15][20]_i_7 
       (.I0(m_ext_ex2),
        .I1(m_invert_ex2),
        .I2(\reg_file_a[15][20]_i_8_n_0 ),
        .I3(rot3[4]),
        .I4(r_amt4_ex2),
        .I5(rot3[20]),
        .O(\reg_file_a[15][20]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT3 #(
    .INIT(8'hF8)) 
    \reg_file_a[15][20]_i_8 
       (.I0(m_amt_ex2[3]),
        .I1(m_amt_ex2[2]),
        .I2(m_amt_ex2[4]),
        .O(\reg_file_a[15][20]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAAFF3000AA003000)) 
    \reg_file_a[15][21]_i_6 
       (.I0(Q[11]),
        .I1(\reg_file_a[15][27]_i_2 ),
        .I2(\reg_file_a[15][27]_i_2_0 [11]),
        .I3(rf0_mux_ctl_ex[1]),
        .I4(rf0_mux_ctl_ex[0]),
        .I5(\reg_file_a[15][21]_i_7_n_0 ),
        .O(\hold_reg1_reg[21] ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \reg_file_a[15][21]_i_7 
       (.I0(m_ext_ex2),
        .I1(\reg_file_a[15][21]_i_8_n_0 ),
        .I2(rot3[5]),
        .I3(r_amt4_ex2),
        .I4(rot3[21]),
        .O(\reg_file_a[15][21]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h5566566656665666)) 
    \reg_file_a[15][21]_i_8 
       (.I0(m_invert_ex2),
        .I1(m_amt_ex2[4]),
        .I2(m_amt_ex2[2]),
        .I3(m_amt_ex2[3]),
        .I4(m_amt_ex2[0]),
        .I5(m_amt_ex2[1]),
        .O(\reg_file_a[15][21]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hCA00CAF0CA00CA00)) 
    \reg_file_a[15][22]_i_6 
       (.I0(\reg_file_a[15][22]_i_7_n_0 ),
        .I1(Q[12]),
        .I2(rf0_mux_ctl_ex[1]),
        .I3(rf0_mux_ctl_ex[0]),
        .I4(\reg_file_a[15][27]_i_2 ),
        .I5(\reg_file_a[15][27]_i_2_0 [12]),
        .O(\hold_reg1_reg[22] ));
  LUT6 #(
    .INIT(64'hEB28EBEBEB282828)) 
    \reg_file_a[15][22]_i_7 
       (.I0(m_ext_ex2),
        .I1(m_invert_ex2),
        .I2(\reg_file_a[15][22]_i_8_n_0 ),
        .I3(rot3[6]),
        .I4(r_amt4_ex2),
        .I5(rot3[22]),
        .O(\reg_file_a[15][22]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT4 #(
    .INIT(16'hFAF8)) 
    \reg_file_a[15][22]_i_8 
       (.I0(m_amt_ex2[3]),
        .I1(m_amt_ex2[2]),
        .I2(m_amt_ex2[4]),
        .I3(m_amt_ex2[1]),
        .O(\reg_file_a[15][22]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \reg_file_a[15][23]_i_6 
       (.I0(m_ext_ex2),
        .I1(\reg_file_a[15][23]_i_7_n_0 ),
        .I2(rot3[7]),
        .I3(r_amt4_ex2),
        .I4(rot3[23]),
        .O(m_ext_ex2_reg_2));
  LUT6 #(
    .INIT(64'h555555565555AAAA)) 
    \reg_file_a[15][23]_i_7 
       (.I0(m_invert_ex2),
        .I1(m_amt_ex2[0]),
        .I2(m_amt_ex2[1]),
        .I3(m_amt_ex2[2]),
        .I4(m_amt_ex2[4]),
        .I5(m_amt_ex2[3]),
        .O(\reg_file_a[15][23]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hEB28EBEBEB282828)) 
    \reg_file_a[15][24]_i_3 
       (.I0(m_ext_ex2),
        .I1(m_invert_ex2),
        .I2(\reg_file_a[15][24]_i_4_n_0 ),
        .I3(rot3[8]),
        .I4(r_amt4_ex2),
        .I5(rot3[24]),
        .O(m_ext_ex2_reg_11));
  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \reg_file_a[15][24]_i_4 
       (.I0(m_amt_ex2[4]),
        .I1(m_amt_ex2[3]),
        .O(\reg_file_a[15][24]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h5555555555556AAA)) 
    \reg_file_a[15][25]_i_10 
       (.I0(m_invert_ex2),
        .I1(m_amt_ex2[0]),
        .I2(m_amt_ex2[1]),
        .I3(m_amt_ex2[2]),
        .I4(m_amt_ex2[4]),
        .I5(m_amt_ex2[3]),
        .O(\reg_file_a[15][25]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \reg_file_a[15][25]_i_5 
       (.I0(m_ext_ex2),
        .I1(\reg_file_a[15][25]_i_10_n_0 ),
        .I2(rot3[9]),
        .I3(r_amt4_ex2),
        .I4(rot3[25]),
        .O(m_ext_ex2_reg_12));
  LUT6 #(
    .INIT(64'hCA00CA00CAF0CA00)) 
    \reg_file_a[15][26]_i_5 
       (.I0(\reg_file_a[15][26]_i_6_n_0 ),
        .I1(Q[13]),
        .I2(rf0_mux_ctl_ex[1]),
        .I3(rf0_mux_ctl_ex[0]),
        .I4(\reg_file_a[15][27]_i_2_0 [13]),
        .I5(\reg_file_a[15][27]_i_2 ),
        .O(\hold_reg1_reg[26] ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \reg_file_a[15][26]_i_6 
       (.I0(m_ext_ex2),
        .I1(\reg_file_a[15][26]_i_7_n_0 ),
        .I2(rot3[10]),
        .I3(r_amt4_ex2),
        .I4(rot3[26]),
        .O(\reg_file_a[15][26]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT5 #(
    .INIT(32'h0111FEEE)) 
    \reg_file_a[15][26]_i_7 
       (.I0(m_amt_ex2[4]),
        .I1(m_amt_ex2[3]),
        .I2(m_amt_ex2[1]),
        .I3(m_amt_ex2[2]),
        .I4(m_invert_ex2),
        .O(\reg_file_a[15][26]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hCA00CA00CAF0CA00)) 
    \reg_file_a[15][27]_i_5 
       (.I0(\reg_file_a[15][27]_i_6_n_0 ),
        .I1(Q[14]),
        .I2(rf0_mux_ctl_ex[1]),
        .I3(rf0_mux_ctl_ex[0]),
        .I4(\reg_file_a[15][27]_i_2_0 [14]),
        .I5(\reg_file_a[15][27]_i_2 ),
        .O(\hold_reg1_reg[27] ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \reg_file_a[15][27]_i_6 
       (.I0(m_ext_ex2),
        .I1(\reg_file_a[15][27]_i_7_n_0 ),
        .I2(rot3[11]),
        .I3(r_amt4_ex2),
        .I4(rot3[27]),
        .O(\reg_file_a[15][27]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h555555555555666A)) 
    \reg_file_a[15][27]_i_7 
       (.I0(m_invert_ex2),
        .I1(m_amt_ex2[2]),
        .I2(m_amt_ex2[0]),
        .I3(m_amt_ex2[1]),
        .I4(m_amt_ex2[4]),
        .I5(m_amt_ex2[3]),
        .O(\reg_file_a[15][27]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \reg_file_a[15][28]_i_5 
       (.I0(m_ext_ex2),
        .I1(\reg_file_a[15][28]_i_7_n_0 ),
        .I2(rot3[12]),
        .I3(r_amt4_ex2),
        .I4(rot3[28]),
        .O(m_ext_ex2_reg_5));
  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT4 #(
    .INIT(16'h5556)) 
    \reg_file_a[15][28]_i_7 
       (.I0(m_invert_ex2),
        .I1(m_amt_ex2[4]),
        .I2(m_amt_ex2[3]),
        .I3(m_amt_ex2[2]),
        .O(\reg_file_a[15][28]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \reg_file_a[15][29]_i_5 
       (.I0(m_ext_ex2),
        .I1(\reg_file_a[15][29]_i_7_n_0 ),
        .I2(rot3[13]),
        .I3(r_amt4_ex2),
        .I4(rot3[29]),
        .O(m_ext_ex2_reg_6));
  LUT6 #(
    .INIT(64'h00000111FFFFFEEE)) 
    \reg_file_a[15][29]_i_7 
       (.I0(m_amt_ex2[4]),
        .I1(m_amt_ex2[3]),
        .I2(m_amt_ex2[1]),
        .I3(m_amt_ex2[0]),
        .I4(m_amt_ex2[2]),
        .I5(m_invert_ex2),
        .O(\reg_file_a[15][29]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hBE82BEBEBE828282)) 
    \reg_file_a[15][30]_i_5 
       (.I0(m_ext_ex2),
        .I1(m_invert_ex2),
        .I2(\reg_file_a[15][30]_i_7_n_0 ),
        .I3(rot3[14]),
        .I4(r_amt4_ex2),
        .I5(rot3[30]),
        .O(m_ext_ex2_reg_3));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    \reg_file_a[15][30]_i_7 
       (.I0(m_amt_ex2[2]),
        .I1(m_amt_ex2[3]),
        .I2(m_amt_ex2[1]),
        .I3(m_amt_ex2[4]),
        .O(\reg_file_a[15][30]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \reg_file_a[15][31]_i_6 
       (.I0(m_ext_ex2),
        .I1(\reg_file_a[15][31]_i_8_n_0 ),
        .I2(rot3[15]),
        .I3(r_amt4_ex2),
        .I4(rot3[31]),
        .O(m_ext_ex2_reg_4));
  LUT6 #(
    .INIT(64'h5555555555555556)) 
    \reg_file_a[15][31]_i_8 
       (.I0(m_invert_ex2),
        .I1(m_amt_ex2[0]),
        .I2(m_amt_ex2[2]),
        .I3(m_amt_ex2[3]),
        .I4(m_amt_ex2[1]),
        .I5(m_amt_ex2[4]),
        .O(\reg_file_a[15][31]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAAFF3000AA003000)) 
    \reg_file_a[15][8]_i_5 
       (.I0(Q[2]),
        .I1(\reg_file_a[15][27]_i_2 ),
        .I2(\reg_file_a[15][27]_i_2_0 [2]),
        .I3(rf0_mux_ctl_ex[1]),
        .I4(rf0_mux_ctl_ex[0]),
        .I5(\reg_file_a[15][8]_i_7_n_0 ),
        .O(\hold_reg1_reg[8] ));
  LUT6 #(
    .INIT(64'hEB28EBEBEB282828)) 
    \reg_file_a[15][8]_i_7 
       (.I0(m_ext_ex2),
        .I1(m_invert_ex2),
        .I2(\reg_file_a[15][8]_i_8_n_0 ),
        .I3(rot3[24]),
        .I4(r_amt4_ex2),
        .I5(rot3[8]),
        .O(\reg_file_a[15][8]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \reg_file_a[15][8]_i_8 
       (.I0(m_amt_ex2[4]),
        .I1(m_amt_ex2[3]),
        .O(\reg_file_a[15][8]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \reg_file_a[15][9]_i_5 
       (.I0(m_ext_ex2),
        .I1(\reg_file_a[15][9]_i_8_n_0 ),
        .I2(rot3[25]),
        .I3(r_amt4_ex2),
        .I4(rot3[9]),
        .O(m_ext_ex2_reg_10));
  LUT6 #(
    .INIT(64'h56666666AAAAAAAA)) 
    \reg_file_a[15][9]_i_8 
       (.I0(m_invert_ex2),
        .I1(m_amt_ex2[3]),
        .I2(m_amt_ex2[2]),
        .I3(m_amt_ex2[1]),
        .I4(m_amt_ex2[0]),
        .I5(m_amt_ex2[4]),
        .O(\reg_file_a[15][9]_i_8_n_0 ));
  FDCE \rot3_reg[0] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(r_amt4_ex2_reg_0),
        .D(D[0]),
        .Q(rot3[0]));
  FDCE \rot3_reg[10] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(r_amt4_ex2_reg_0),
        .D(D[10]),
        .Q(rot3[10]));
  FDCE \rot3_reg[11] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(r_amt4_ex2_reg_0),
        .D(D[11]),
        .Q(rot3[11]));
  FDCE \rot3_reg[12] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(r_amt4_ex2_reg_0),
        .D(D[12]),
        .Q(rot3[12]));
  FDCE \rot3_reg[13] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(r_amt4_ex2_reg_0),
        .D(D[13]),
        .Q(rot3[13]));
  FDCE \rot3_reg[14] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(r_amt4_ex2_reg_0),
        .D(D[14]),
        .Q(rot3[14]));
  FDCE \rot3_reg[15] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(r_amt4_ex2_reg_0),
        .D(D[15]),
        .Q(rot3[15]));
  FDCE \rot3_reg[16] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(r_amt4_ex2_reg_0),
        .D(D[16]),
        .Q(rot3[16]));
  FDCE \rot3_reg[17] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(r_amt4_ex2_reg_0),
        .D(D[17]),
        .Q(rot3[17]));
  FDCE \rot3_reg[18] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(r_amt4_ex2_reg_0),
        .D(D[18]),
        .Q(rot3[18]));
  FDCE \rot3_reg[19] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(r_amt4_ex2_reg_0),
        .D(D[19]),
        .Q(rot3[19]));
  FDCE \rot3_reg[1] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(r_amt4_ex2_reg_0),
        .D(D[1]),
        .Q(rot3[1]));
  FDCE \rot3_reg[20] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(r_amt4_ex2_reg_0),
        .D(D[20]),
        .Q(rot3[20]));
  FDCE \rot3_reg[21] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(r_amt4_ex2_reg_0),
        .D(D[21]),
        .Q(rot3[21]));
  FDCE \rot3_reg[22] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(r_amt4_ex2_reg_0),
        .D(D[22]),
        .Q(rot3[22]));
  FDCE \rot3_reg[23] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(r_amt4_ex2_reg_0),
        .D(D[23]),
        .Q(rot3[23]));
  FDCE \rot3_reg[24] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(r_amt4_ex2_reg_0),
        .D(D[24]),
        .Q(rot3[24]));
  FDCE \rot3_reg[25] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(r_amt4_ex2_reg_0),
        .D(D[25]),
        .Q(rot3[25]));
  FDCE \rot3_reg[26] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(r_amt4_ex2_reg_0),
        .D(D[26]),
        .Q(rot3[26]));
  FDCE \rot3_reg[27] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(r_amt4_ex2_reg_0),
        .D(D[27]),
        .Q(rot3[27]));
  FDCE \rot3_reg[28] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(r_amt4_ex2_reg_0),
        .D(D[28]),
        .Q(rot3[28]));
  FDCE \rot3_reg[29] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(r_amt4_ex2_reg_0),
        .D(D[29]),
        .Q(rot3[29]));
  FDCE \rot3_reg[2] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(r_amt4_ex2_reg_0),
        .D(D[2]),
        .Q(rot3[2]));
  FDCE \rot3_reg[30] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(r_amt4_ex2_reg_0),
        .D(D[30]),
        .Q(rot3[30]));
  FDCE \rot3_reg[31] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(r_amt4_ex2_reg_0),
        .D(D[31]),
        .Q(rot3[31]));
  FDCE \rot3_reg[3] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(r_amt4_ex2_reg_0),
        .D(D[3]),
        .Q(rot3[3]));
  FDCE \rot3_reg[4] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(r_amt4_ex2_reg_0),
        .D(D[4]),
        .Q(rot3[4]));
  FDCE \rot3_reg[5] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(r_amt4_ex2_reg_0),
        .D(D[5]),
        .Q(rot3[5]));
  FDCE \rot3_reg[6] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(r_amt4_ex2_reg_0),
        .D(D[6]),
        .Q(rot3[6]));
  FDCE \rot3_reg[7] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(r_amt4_ex2_reg_0),
        .D(D[7]),
        .Q(rot3[7]));
  FDCE \rot3_reg[8] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(r_amt4_ex2_reg_0),
        .D(D[8]),
        .Q(rot3[8]));
  FDCE \rot3_reg[9] 
       (.C(HCLK),
        .CE(1'b1),
        .CLR(r_amt4_ex2_reg_0),
        .D(D[9]),
        .Q(rot3[9]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    z_flag_mux_i_24
       (.I0(z_flag_mux_i_46_n_0),
        .I1(z_flag_mux_i_47_n_0),
        .I2(\reg_file_a[15][18]_i_7_n_0 ),
        .I3(\reg_file_a[15][19]_i_6_n_0 ),
        .I4(z_flag_mux_i_48_n_0),
        .I5(z_flag_mux_i_49_n_0),
        .O(z_flag_mux_i_24_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    z_flag_mux_i_25
       (.I0(z_flag_mux_i_50_n_0),
        .I1(z_flag_mux_i_51_n_0),
        .I2(m_ext_ex2_reg_7),
        .I3(m_ext_ex2_reg_8),
        .I4(z_flag_mux_i_52_n_0),
        .I5(z_flag_mux_i_53_n_0),
        .O(z_flag_mux_i_25_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    z_flag_mux_i_46
       (.I0(\reg_file_a[15][26]_i_6_n_0 ),
        .I1(\reg_file_a[15][27]_i_6_n_0 ),
        .I2(m_ext_ex2_reg_11),
        .I3(m_ext_ex2_reg_12),
        .O(z_flag_mux_i_46_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    z_flag_mux_i_47
       (.I0(m_ext_ex2_reg_3),
        .I1(m_ext_ex2_reg_4),
        .I2(m_ext_ex2_reg_5),
        .I3(m_ext_ex2_reg_6),
        .O(z_flag_mux_i_47_n_0));
  LUT6 #(
    .INIT(64'hFFFFFEAEAAAAFEAE)) 
    z_flag_mux_i_48
       (.I0(m_ext_ex2_reg_1),
        .I1(rot3[16]),
        .I2(r_amt4_ex2),
        .I3(rot3[0]),
        .I4(z_flag_mux_i_69_n_0),
        .I5(m_ext_ex2),
        .O(z_flag_mux_i_48_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    z_flag_mux_i_49
       (.I0(\reg_file_a[15][22]_i_7_n_0 ),
        .I1(m_ext_ex2_reg_2),
        .I2(\reg_file_a[15][20]_i_7_n_0 ),
        .I3(\reg_file_a[15][21]_i_7_n_0 ),
        .O(z_flag_mux_i_49_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    z_flag_mux_i_50
       (.I0(m_ext_ex2_reg_9),
        .I1(\reg_file_a[15][11]_i_7_n_0 ),
        .I2(\reg_file_a[15][8]_i_7_n_0 ),
        .I3(m_ext_ex2_reg_10),
        .O(z_flag_mux_i_50_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    z_flag_mux_i_51
       (.I0(\reg_file_a[15][14]_i_8_n_0 ),
        .I1(\reg_file_a[15][15]_i_7_n_0 ),
        .I2(\reg_file_a[15][12]_i_8_n_0 ),
        .I3(\reg_file_a[15][13]_i_8_n_0 ),
        .O(z_flag_mux_i_51_n_0));
  LUT6 #(
    .INIT(64'hFFFFFEAEAAAAFEAE)) 
    z_flag_mux_i_52
       (.I0(m_ext_ex2_reg_13),
        .I1(rot3[0]),
        .I2(r_amt4_ex2),
        .I3(rot3[16]),
        .I4(m_invert_ex2),
        .I5(m_ext_ex2),
        .O(z_flag_mux_i_52_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    z_flag_mux_i_53
       (.I0(\dp_ipsr_7to2[6]_i_6_n_0 ),
        .I1(\dp_ipsr_7to2[7]_i_6_n_0 ),
        .I2(m_ext_ex2_reg_14),
        .I3(m_ext_ex2_reg_15),
        .O(z_flag_mux_i_53_n_0));
  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT2 #(
    .INIT(4'h6)) 
    z_flag_mux_i_69
       (.I0(m_invert_ex2),
        .I1(m_amt_ex2[4]),
        .O(z_flag_mux_i_69_n_0));
  LUT6 #(
    .INIT(64'h0000005503000000)) 
    z_flag_mux_i_7
       (.I0(z_flag_mux_reg),
        .I1(z_flag_mux_i_24_n_0),
        .I2(z_flag_mux_i_25_n_0),
        .I3(rf_mux_ctl_ex),
        .I4(rf0_mux_ctl_ex[0]),
        .I5(rf0_mux_ctl_ex[1]),
        .O(\rf_mux_ctl_ex_reg[2] ));
endmodule
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (strong1, weak0) GSR = GSR_int;
    assign (strong1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

endmodule
`endif
