   1              		.cpu cortex-m1
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"xuartlite.c"
  12              		.text
  13              		.section	.text.Xil_In32,"ax",%progbits
  14              		.align	1
  15              		.arch armv6s-m
  16              		.syntax unified
  17              		.code	16
  18              		.thumb_func
  19              		.fpu softvfp
  21              	Xil_In32:
  22              		@ args = 0, pretend = 0, frame = 8
  23              		@ frame_needed = 1, uses_anonymous_args = 0
  24 0000 80B5     		push	{r7, lr}
  25 0002 82B0     		sub	sp, sp, #8
  26 0004 00AF     		add	r7, sp, #0
  27 0006 7860     		str	r0, [r7, #4]
  28 0008 7B68     		ldr	r3, [r7, #4]
  29 000a 1B68     		ldr	r3, [r3]
  30 000c 1800     		movs	r0, r3
  31 000e BD46     		mov	sp, r7
  32 0010 02B0     		add	sp, sp, #8
  33              		@ sp needed
  34 0012 80BD     		pop	{r7, pc}
  36              		.section	.text.Xil_Out32,"ax",%progbits
  37              		.align	1
  38              		.syntax unified
  39              		.code	16
  40              		.thumb_func
  41              		.fpu softvfp
  43              	Xil_Out32:
  44              		@ args = 0, pretend = 0, frame = 16
  45              		@ frame_needed = 1, uses_anonymous_args = 0
  46 0000 80B5     		push	{r7, lr}
  47 0002 84B0     		sub	sp, sp, #16
  48 0004 00AF     		add	r7, sp, #0
  49 0006 7860     		str	r0, [r7, #4]
  50 0008 3960     		str	r1, [r7]
  51 000a 7B68     		ldr	r3, [r7, #4]
  52 000c FB60     		str	r3, [r7, #12]
  53 000e FB68     		ldr	r3, [r7, #12]
  54 0010 3A68     		ldr	r2, [r7]
  55 0012 1A60     		str	r2, [r3]
  56 0014 C046     		nop
  57 0016 BD46     		mov	sp, r7
  58 0018 04B0     		add	sp, sp, #16
  59              		@ sp needed
  60 001a 80BD     		pop	{r7, pc}
  62              		.section	.rodata
  63              		.align	2
  64              	.LC1:
  65 0000 2E2E2F73 		.ascii	"../src/uartlite_v3_2/src/xuartlite.c\000"
  65      72632F75 
  65      6172746C 
  65      6974655F 
  65      76335F32 
  66              		.section	.text.XUartLite_CfgInitialize,"ax",%progbits
  67              		.align	1
  68              		.global	XUartLite_CfgInitialize
  69              		.syntax unified
  70              		.code	16
  71              		.thumb_func
  72              		.fpu softvfp
  74              	XUartLite_CfgInitialize:
  75              		@ args = 0, pretend = 0, frame = 16
  76              		@ frame_needed = 1, uses_anonymous_args = 0
  77 0000 80B5     		push	{r7, lr}
  78 0002 84B0     		sub	sp, sp, #16
  79 0004 00AF     		add	r7, sp, #0
  80 0006 F860     		str	r0, [r7, #12]
  81 0008 B960     		str	r1, [r7, #8]
  82 000a 7A60     		str	r2, [r7, #4]
  83 000c FB68     		ldr	r3, [r7, #12]
  84 000e 002B     		cmp	r3, #0
  85 0010 2DD0     		beq	.L5
  86 0012 1D4B     		ldr	r3, .L8
  87 0014 0022     		movs	r2, #0
  88 0016 1A60     		str	r2, [r3]
  89 0018 FB68     		ldr	r3, [r7, #12]
  90 001a 0022     		movs	r2, #0
  91 001c 5A62     		str	r2, [r3, #36]
  92 001e FB68     		ldr	r3, [r7, #12]
  93 0020 0022     		movs	r2, #0
  94 0022 DA62     		str	r2, [r3, #44]
  95 0024 FB68     		ldr	r3, [r7, #12]
  96 0026 0022     		movs	r2, #0
  97 0028 9A62     		str	r2, [r3, #40]
  98 002a FB68     		ldr	r3, [r7, #12]
  99 002c 0022     		movs	r2, #0
 100 002e 1A63     		str	r2, [r3, #48]
 101 0030 FB68     		ldr	r3, [r7, #12]
 102 0032 0022     		movs	r2, #0
 103 0034 9A63     		str	r2, [r3, #56]
 104 0036 FB68     		ldr	r3, [r7, #12]
 105 0038 0022     		movs	r2, #0
 106 003a 5A63     		str	r2, [r3, #52]
 107 003c FB68     		ldr	r3, [r7, #12]
 108 003e 134A     		ldr	r2, .L8+4
 109 0040 1A62     		str	r2, [r3, #32]
 110 0042 FB68     		ldr	r3, [r7, #12]
 111 0044 7A68     		ldr	r2, [r7, #4]
 112 0046 DA61     		str	r2, [r3, #28]
 113 0048 FB68     		ldr	r3, [r7, #12]
 114 004a 114A     		ldr	r2, .L8+8
 115 004c DA63     		str	r2, [r3, #60]
 116 004e FB68     		ldr	r3, [r7, #12]
 117 0050 0F4A     		ldr	r2, .L8+8
 118 0052 5A64     		str	r2, [r3, #68]
 119 0054 FB68     		ldr	r3, [r7, #12]
 120 0056 DB69     		ldr	r3, [r3, #28]
 121 0058 0C33     		adds	r3, r3, #12
 122 005a 0021     		movs	r1, #0
 123 005c 1800     		movs	r0, r3
 124 005e FFF7FEFF 		bl	Xil_Out32
 125 0062 FB68     		ldr	r3, [r7, #12]
 126 0064 1800     		movs	r0, r3
 127 0066 FFF7FEFF 		bl	XUartLite_ClearStats
 128 006a 0023     		movs	r3, #0
 129 006c 08E0     		b	.L7
 130              	.L5:
 131 006e 094B     		ldr	r3, .L8+12
 132 0070 8B21     		movs	r1, #139
 133 0072 1800     		movs	r0, r3
 134 0074 FFF7FEFF 		bl	Xil_Assert
 135 0078 034B     		ldr	r3, .L8
 136 007a 0122     		movs	r2, #1
 137 007c 1A60     		str	r2, [r3]
 138 007e 0023     		movs	r3, #0
 139              	.L7:
 140 0080 1800     		movs	r0, r3
 141 0082 BD46     		mov	sp, r7
 142 0084 04B0     		add	sp, sp, #16
 143              		@ sp needed
 144 0086 80BD     		pop	{r7, pc}
 145              	.L9:
 146              		.align	2
 147              	.L8:
 148 0088 00000000 		.word	Xil_AssertStatus
 149 008c 11111111 		.word	286331153
 150 0090 00000000 		.word	StubHandler
 151 0094 00000000 		.word	.LC1
 153              		.section	.text.XUartLite_Send,"ax",%progbits
 154              		.align	1
 155              		.global	XUartLite_Send
 156              		.syntax unified
 157              		.code	16
 158              		.thumb_func
 159              		.fpu softvfp
 161              	XUartLite_Send:
 162              		@ args = 0, pretend = 0, frame = 24
 163              		@ frame_needed = 1, uses_anonymous_args = 0
 164 0000 80B5     		push	{r7, lr}
 165 0002 86B0     		sub	sp, sp, #24
 166 0004 00AF     		add	r7, sp, #0
 167 0006 F860     		str	r0, [r7, #12]
 168 0008 B960     		str	r1, [r7, #8]
 169 000a 7A60     		str	r2, [r7, #4]
 170 000c FB68     		ldr	r3, [r7, #12]
 171 000e 002B     		cmp	r3, #0
 172 0010 06D0     		beq	.L11
 173 0012 384B     		ldr	r3, .L23
 174 0014 0022     		movs	r2, #0
 175 0016 1A60     		str	r2, [r3]
 176 0018 BB68     		ldr	r3, [r7, #8]
 177 001a 002B     		cmp	r3, #0
 178 001c 13D0     		beq	.L14
 179 001e 09E0     		b	.L20
 180              	.L11:
 181 0020 354B     		ldr	r3, .L23+4
 182 0022 DA21     		movs	r1, #218
 183 0024 1800     		movs	r0, r3
 184 0026 FFF7FEFF 		bl	Xil_Assert
 185 002a 324B     		ldr	r3, .L23
 186 002c 0122     		movs	r2, #1
 187 002e 1A60     		str	r2, [r3]
 188 0030 0023     		movs	r3, #0
 189 0032 5BE0     		b	.L13
 190              	.L20:
 191 0034 2F4B     		ldr	r3, .L23
 192 0036 0022     		movs	r2, #0
 193 0038 1A60     		str	r2, [r3]
 194 003a FB68     		ldr	r3, [r7, #12]
 195 003c 1B6A     		ldr	r3, [r3, #32]
 196 003e 2F4A     		ldr	r2, .L23+8
 197 0040 9342     		cmp	r3, r2
 198 0042 11D1     		bne	.L16
 199 0044 09E0     		b	.L21
 200              	.L14:
 201 0046 2C4B     		ldr	r3, .L23+4
 202 0048 DB21     		movs	r1, #219
 203 004a 1800     		movs	r0, r3
 204 004c FFF7FEFF 		bl	Xil_Assert
 205 0050 284B     		ldr	r3, .L23
 206 0052 0122     		movs	r2, #1
 207 0054 1A60     		str	r2, [r3]
 208 0056 0023     		movs	r3, #0
 209 0058 48E0     		b	.L13
 210              	.L21:
 211 005a 264B     		ldr	r3, .L23
 212 005c 0022     		movs	r2, #0
 213 005e 1A60     		str	r2, [r3]
 214 0060 7B68     		ldr	r3, [r7, #4]
 215 0062 002B     		cmp	r3, #0
 216 0064 39DB     		blt	.L18
 217 0066 09E0     		b	.L22
 218              	.L16:
 219 0068 234B     		ldr	r3, .L23+4
 220 006a DC21     		movs	r1, #220
 221 006c 1800     		movs	r0, r3
 222 006e FFF7FEFF 		bl	Xil_Assert
 223 0072 204B     		ldr	r3, .L23
 224 0074 0122     		movs	r2, #1
 225 0076 1A60     		str	r2, [r3]
 226 0078 0023     		movs	r3, #0
 227 007a 37E0     		b	.L13
 228              	.L22:
 229 007c 1D4B     		ldr	r3, .L23
 230 007e 0022     		movs	r2, #0
 231 0080 1A60     		str	r2, [r3]
 232 0082 FB68     		ldr	r3, [r7, #12]
 233 0084 DB69     		ldr	r3, [r3, #28]
 234 0086 0833     		adds	r3, r3, #8
 235 0088 1800     		movs	r0, r3
 236 008a FFF7FEFF 		bl	Xil_In32
 237 008e 0300     		movs	r3, r0
 238 0090 7B61     		str	r3, [r7, #20]
 239 0092 FB68     		ldr	r3, [r7, #12]
 240 0094 DB69     		ldr	r3, [r3, #28]
 241 0096 0C33     		adds	r3, r3, #12
 242 0098 0021     		movs	r1, #0
 243 009a 1800     		movs	r0, r3
 244 009c FFF7FEFF 		bl	Xil_Out32
 245 00a0 FB68     		ldr	r3, [r7, #12]
 246 00a2 7A68     		ldr	r2, [r7, #4]
 247 00a4 9A62     		str	r2, [r3, #40]
 248 00a6 FB68     		ldr	r3, [r7, #12]
 249 00a8 7A68     		ldr	r2, [r7, #4]
 250 00aa DA62     		str	r2, [r3, #44]
 251 00ac FB68     		ldr	r3, [r7, #12]
 252 00ae BA68     		ldr	r2, [r7, #8]
 253 00b0 5A62     		str	r2, [r3, #36]
 254 00b2 7B69     		ldr	r3, [r7, #20]
 255 00b4 1022     		movs	r2, #16
 256 00b6 1340     		ands	r3, r2
 257 00b8 7B61     		str	r3, [r7, #20]
 258 00ba FB68     		ldr	r3, [r7, #12]
 259 00bc DB69     		ldr	r3, [r3, #28]
 260 00be 0C33     		adds	r3, r3, #12
 261 00c0 7A69     		ldr	r2, [r7, #20]
 262 00c2 1100     		movs	r1, r2
 263 00c4 1800     		movs	r0, r3
 264 00c6 FFF7FEFF 		bl	Xil_Out32
 265 00ca FB68     		ldr	r3, [r7, #12]
 266 00cc 1800     		movs	r0, r3
 267 00ce FFF7FEFF 		bl	XUartLite_SendBuffer
 268 00d2 0300     		movs	r3, r0
 269 00d4 3B61     		str	r3, [r7, #16]
 270 00d6 3B69     		ldr	r3, [r7, #16]
 271 00d8 08E0     		b	.L13
 272              	.L18:
 273 00da 074B     		ldr	r3, .L23+4
 274 00dc DD21     		movs	r1, #221
 275 00de 1800     		movs	r0, r3
 276 00e0 FFF7FEFF 		bl	Xil_Assert
 277 00e4 034B     		ldr	r3, .L23
 278 00e6 0122     		movs	r2, #1
 279 00e8 1A60     		str	r2, [r3]
 280 00ea 0023     		movs	r3, #0
 281              	.L13:
 282 00ec 1800     		movs	r0, r3
 283 00ee BD46     		mov	sp, r7
 284 00f0 06B0     		add	sp, sp, #24
 285              		@ sp needed
 286 00f2 80BD     		pop	{r7, pc}
 287              	.L24:
 288              		.align	2
 289              	.L23:
 290 00f4 00000000 		.word	Xil_AssertStatus
 291 00f8 00000000 		.word	.LC1
 292 00fc 11111111 		.word	286331153
 294              		.section	.text.XUartLite_Recv,"ax",%progbits
 295              		.align	1
 296              		.global	XUartLite_Recv
 297              		.syntax unified
 298              		.code	16
 299              		.thumb_func
 300              		.fpu softvfp
 302              	XUartLite_Recv:
 303              		@ args = 0, pretend = 0, frame = 24
 304              		@ frame_needed = 1, uses_anonymous_args = 0
 305 0000 80B5     		push	{r7, lr}
 306 0002 86B0     		sub	sp, sp, #24
 307 0004 00AF     		add	r7, sp, #0
 308 0006 F860     		str	r0, [r7, #12]
 309 0008 B960     		str	r1, [r7, #8]
 310 000a 7A60     		str	r2, [r7, #4]
 311 000c FB68     		ldr	r3, [r7, #12]
 312 000e 002B     		cmp	r3, #0
 313 0010 06D0     		beq	.L26
 314 0012 3D4B     		ldr	r3, .L38
 315 0014 0022     		movs	r2, #0
 316 0016 1A60     		str	r2, [r3]
 317 0018 BB68     		ldr	r3, [r7, #8]
 318 001a 002B     		cmp	r3, #0
 319 001c 16D0     		beq	.L29
 320 001e 0CE0     		b	.L35
 321              	.L26:
 322 0020 2E23     		movs	r3, #46
 323 0022 FF33     		adds	r3, r3, #255
 324 0024 1A00     		movs	r2, r3
 325 0026 394B     		ldr	r3, .L38+4
 326 0028 1100     		movs	r1, r2
 327 002a 1800     		movs	r0, r3
 328 002c FFF7FEFF 		bl	Xil_Assert
 329 0030 354B     		ldr	r3, .L38
 330 0032 0122     		movs	r2, #1
 331 0034 1A60     		str	r2, [r3]
 332 0036 0023     		movs	r3, #0
 333 0038 62E0     		b	.L28
 334              	.L35:
 335 003a 334B     		ldr	r3, .L38
 336 003c 0022     		movs	r2, #0
 337 003e 1A60     		str	r2, [r3]
 338 0040 FB68     		ldr	r3, [r7, #12]
 339 0042 1B6A     		ldr	r3, [r3, #32]
 340 0044 324A     		ldr	r2, .L38+8
 341 0046 9342     		cmp	r3, r2
 342 0048 13D1     		bne	.L31
 343 004a 0BE0     		b	.L36
 344              	.L29:
 345 004c 9723     		movs	r3, #151
 346 004e 5A00     		lsls	r2, r3, #1
 347 0050 2E4B     		ldr	r3, .L38+4
 348 0052 1100     		movs	r1, r2
 349 0054 1800     		movs	r0, r3
 350 0056 FFF7FEFF 		bl	Xil_Assert
 351 005a 2B4B     		ldr	r3, .L38
 352 005c 0122     		movs	r2, #1
 353 005e 1A60     		str	r2, [r3]
 354 0060 0023     		movs	r3, #0
 355 0062 4DE0     		b	.L28
 356              	.L36:
 357 0064 284B     		ldr	r3, .L38
 358 0066 0022     		movs	r2, #0
 359 0068 1A60     		str	r2, [r3]
 360 006a 7B68     		ldr	r3, [r7, #4]
 361 006c 002B     		cmp	r3, #0
 362 006e 3CDB     		blt	.L33
 363 0070 0CE0     		b	.L37
 364              	.L31:
 365 0072 3023     		movs	r3, #48
 366 0074 FF33     		adds	r3, r3, #255
 367 0076 1A00     		movs	r2, r3
 368 0078 244B     		ldr	r3, .L38+4
 369 007a 1100     		movs	r1, r2
 370 007c 1800     		movs	r0, r3
 371 007e FFF7FEFF 		bl	Xil_Assert
 372 0082 214B     		ldr	r3, .L38
 373 0084 0122     		movs	r2, #1
 374 0086 1A60     		str	r2, [r3]
 375 0088 0023     		movs	r3, #0
 376 008a 39E0     		b	.L28
 377              	.L37:
 378 008c 1E4B     		ldr	r3, .L38
 379 008e 0022     		movs	r2, #0
 380 0090 1A60     		str	r2, [r3]
 381 0092 FB68     		ldr	r3, [r7, #12]
 382 0094 DB69     		ldr	r3, [r3, #28]
 383 0096 0833     		adds	r3, r3, #8
 384 0098 1800     		movs	r0, r3
 385 009a FFF7FEFF 		bl	Xil_In32
 386 009e 0300     		movs	r3, r0
 387 00a0 7B61     		str	r3, [r7, #20]
 388 00a2 FB68     		ldr	r3, [r7, #12]
 389 00a4 DB69     		ldr	r3, [r3, #28]
 390 00a6 0C33     		adds	r3, r3, #12
 391 00a8 0021     		movs	r1, #0
 392 00aa 1800     		movs	r0, r3
 393 00ac FFF7FEFF 		bl	Xil_Out32
 394 00b0 FB68     		ldr	r3, [r7, #12]
 395 00b2 7A68     		ldr	r2, [r7, #4]
 396 00b4 5A63     		str	r2, [r3, #52]
 397 00b6 FB68     		ldr	r3, [r7, #12]
 398 00b8 7A68     		ldr	r2, [r7, #4]
 399 00ba 9A63     		str	r2, [r3, #56]
 400 00bc FB68     		ldr	r3, [r7, #12]
 401 00be BA68     		ldr	r2, [r7, #8]
 402 00c0 1A63     		str	r2, [r3, #48]
 403 00c2 7B69     		ldr	r3, [r7, #20]
 404 00c4 1022     		movs	r2, #16
 405 00c6 1340     		ands	r3, r2
 406 00c8 7B61     		str	r3, [r7, #20]
 407 00ca FB68     		ldr	r3, [r7, #12]
 408 00cc DB69     		ldr	r3, [r3, #28]
 409 00ce 0C33     		adds	r3, r3, #12
 410 00d0 7A69     		ldr	r2, [r7, #20]
 411 00d2 1100     		movs	r1, r2
 412 00d4 1800     		movs	r0, r3
 413 00d6 FFF7FEFF 		bl	Xil_Out32
 414 00da FB68     		ldr	r3, [r7, #12]
 415 00dc 1800     		movs	r0, r3
 416 00de FFF7FEFF 		bl	XUartLite_ReceiveBuffer
 417 00e2 0300     		movs	r3, r0
 418 00e4 3B61     		str	r3, [r7, #16]
 419 00e6 3B69     		ldr	r3, [r7, #16]
 420 00e8 0AE0     		b	.L28
 421              	.L33:
 422 00ea 9823     		movs	r3, #152
 423 00ec 5A00     		lsls	r2, r3, #1
 424 00ee 074B     		ldr	r3, .L38+4
 425 00f0 1100     		movs	r1, r2
 426 00f2 1800     		movs	r0, r3
 427 00f4 FFF7FEFF 		bl	Xil_Assert
 428 00f8 034B     		ldr	r3, .L38
 429 00fa 0122     		movs	r2, #1
 430 00fc 1A60     		str	r2, [r3]
 431 00fe 0023     		movs	r3, #0
 432              	.L28:
 433 0100 1800     		movs	r0, r3
 434 0102 BD46     		mov	sp, r7
 435 0104 06B0     		add	sp, sp, #24
 436              		@ sp needed
 437 0106 80BD     		pop	{r7, pc}
 438              	.L39:
 439              		.align	2
 440              	.L38:
 441 0108 00000000 		.word	Xil_AssertStatus
 442 010c 00000000 		.word	.LC1
 443 0110 11111111 		.word	286331153
 445              		.section	.text.XUartLite_ResetFifos,"ax",%progbits
 446              		.align	1
 447              		.global	XUartLite_ResetFifos
 448              		.syntax unified
 449              		.code	16
 450              		.thumb_func
 451              		.fpu softvfp
 453              	XUartLite_ResetFifos:
 454              		@ args = 0, pretend = 0, frame = 16
 455              		@ frame_needed = 1, uses_anonymous_args = 0
 456 0000 80B5     		push	{r7, lr}
 457 0002 84B0     		sub	sp, sp, #16
 458 0004 00AF     		add	r7, sp, #0
 459 0006 7860     		str	r0, [r7, #4]
 460 0008 7B68     		ldr	r3, [r7, #4]
 461 000a 002B     		cmp	r3, #0
 462 000c 08D0     		beq	.L41
 463 000e 1F4B     		ldr	r3, .L47
 464 0010 0022     		movs	r2, #0
 465 0012 1A60     		str	r2, [r3]
 466 0014 7B68     		ldr	r3, [r7, #4]
 467 0016 1B6A     		ldr	r3, [r3, #32]
 468 0018 1D4A     		ldr	r2, .L47+4
 469 001a 9342     		cmp	r3, r2
 470 001c 26D1     		bne	.L44
 471 001e 0AE0     		b	.L46
 472              	.L41:
 473 0020 B523     		movs	r3, #181
 474 0022 5A00     		lsls	r2, r3, #1
 475 0024 1B4B     		ldr	r3, .L47+8
 476 0026 1100     		movs	r1, r2
 477 0028 1800     		movs	r0, r3
 478 002a FFF7FEFF 		bl	Xil_Assert
 479 002e 174B     		ldr	r3, .L47
 480 0030 0122     		movs	r2, #1
 481 0032 1A60     		str	r2, [r3]
 482 0034 26E0     		b	.L40
 483              	.L46:
 484 0036 154B     		ldr	r3, .L47
 485 0038 0022     		movs	r2, #0
 486 003a 1A60     		str	r2, [r3]
 487 003c 7B68     		ldr	r3, [r7, #4]
 488 003e DB69     		ldr	r3, [r3, #28]
 489 0040 0833     		adds	r3, r3, #8
 490 0042 1800     		movs	r0, r3
 491 0044 FFF7FEFF 		bl	Xil_In32
 492 0048 0300     		movs	r3, r0
 493 004a FB60     		str	r3, [r7, #12]
 494 004c FB68     		ldr	r3, [r7, #12]
 495 004e 1022     		movs	r2, #16
 496 0050 1340     		ands	r3, r2
 497 0052 FB60     		str	r3, [r7, #12]
 498 0054 7B68     		ldr	r3, [r7, #4]
 499 0056 DB69     		ldr	r3, [r3, #28]
 500 0058 0C33     		adds	r3, r3, #12
 501 005a 1A00     		movs	r2, r3
 502 005c FB68     		ldr	r3, [r7, #12]
 503 005e 0321     		movs	r1, #3
 504 0060 0B43     		orrs	r3, r1
 505 0062 1900     		movs	r1, r3
 506 0064 1000     		movs	r0, r2
 507 0066 FFF7FEFF 		bl	Xil_Out32
 508 006a 0BE0     		b	.L40
 509              	.L44:
 510 006c 6C23     		movs	r3, #108
 511 006e FF33     		adds	r3, r3, #255
 512 0070 1A00     		movs	r2, r3
 513 0072 084B     		ldr	r3, .L47+8
 514 0074 1100     		movs	r1, r2
 515 0076 1800     		movs	r0, r3
 516 0078 FFF7FEFF 		bl	Xil_Assert
 517 007c 034B     		ldr	r3, .L47
 518 007e 0122     		movs	r2, #1
 519 0080 1A60     		str	r2, [r3]
 520 0082 C046     		nop
 521              	.L40:
 522 0084 BD46     		mov	sp, r7
 523 0086 04B0     		add	sp, sp, #16
 524              		@ sp needed
 525 0088 80BD     		pop	{r7, pc}
 526              	.L48:
 527 008a C046     		.align	2
 528              	.L47:
 529 008c 00000000 		.word	Xil_AssertStatus
 530 0090 11111111 		.word	286331153
 531 0094 00000000 		.word	.LC1
 533              		.section	.text.XUartLite_IsSending,"ax",%progbits
 534              		.align	1
 535              		.global	XUartLite_IsSending
 536              		.syntax unified
 537              		.code	16
 538              		.thumb_func
 539              		.fpu softvfp
 541              	XUartLite_IsSending:
 542              		@ args = 0, pretend = 0, frame = 16
 543              		@ frame_needed = 1, uses_anonymous_args = 0
 544 0000 80B5     		push	{r7, lr}
 545 0002 84B0     		sub	sp, sp, #16
 546 0004 00AF     		add	r7, sp, #0
 547 0006 7860     		str	r0, [r7, #4]
 548 0008 7B68     		ldr	r3, [r7, #4]
 549 000a 002B     		cmp	r3, #0
 550 000c 11D0     		beq	.L50
 551 000e 114B     		ldr	r3, .L53
 552 0010 0022     		movs	r2, #0
 553 0012 1A60     		str	r2, [r3]
 554 0014 7B68     		ldr	r3, [r7, #4]
 555 0016 DB69     		ldr	r3, [r3, #28]
 556 0018 0833     		adds	r3, r3, #8
 557 001a 1800     		movs	r0, r3
 558 001c FFF7FEFF 		bl	Xil_In32
 559 0020 0300     		movs	r3, r0
 560 0022 FB60     		str	r3, [r7, #12]
 561 0024 FB68     		ldr	r3, [r7, #12]
 562 0026 0422     		movs	r2, #4
 563 0028 1340     		ands	r3, r2
 564 002a 5A42     		rsbs	r2, r3, #0
 565 002c 5341     		adcs	r3, r3, r2
 566 002e DBB2     		uxtb	r3, r3
 567 0030 0BE0     		b	.L52
 568              	.L50:
 569 0032 9623     		movs	r3, #150
 570 0034 FF33     		adds	r3, r3, #255
 571 0036 1A00     		movs	r2, r3
 572 0038 074B     		ldr	r3, .L53+4
 573 003a 1100     		movs	r1, r2
 574 003c 1800     		movs	r0, r3
 575 003e FFF7FEFF 		bl	Xil_Assert
 576 0042 044B     		ldr	r3, .L53
 577 0044 0122     		movs	r2, #1
 578 0046 1A60     		str	r2, [r3]
 579 0048 0023     		movs	r3, #0
 580              	.L52:
 581 004a 1800     		movs	r0, r3
 582 004c BD46     		mov	sp, r7
 583 004e 04B0     		add	sp, sp, #16
 584              		@ sp needed
 585 0050 80BD     		pop	{r7, pc}
 586              	.L54:
 587 0052 C046     		.align	2
 588              	.L53:
 589 0054 00000000 		.word	Xil_AssertStatus
 590 0058 00000000 		.word	.LC1
 592              		.section	.text.StubHandler,"ax",%progbits
 593              		.align	1
 594              		.syntax unified
 595              		.code	16
 596              		.thumb_func
 597              		.fpu softvfp
 599              	StubHandler:
 600              		@ args = 0, pretend = 0, frame = 8
 601              		@ frame_needed = 1, uses_anonymous_args = 0
 602 0000 80B5     		push	{r7, lr}
 603 0002 82B0     		sub	sp, sp, #8
 604 0004 00AF     		add	r7, sp, #0
 605 0006 7860     		str	r0, [r7, #4]
 606 0008 3960     		str	r1, [r7]
 607 000a BC23     		movs	r3, #188
 608 000c FF33     		adds	r3, r3, #255
 609 000e 1A00     		movs	r2, r3
 610 0010 054B     		ldr	r3, .L57
 611 0012 1100     		movs	r1, r2
 612 0014 1800     		movs	r0, r3
 613 0016 FFF7FEFF 		bl	Xil_Assert
 614 001a 044B     		ldr	r3, .L57+4
 615 001c 0122     		movs	r2, #1
 616 001e 1A60     		str	r2, [r3]
 617 0020 C046     		nop
 618 0022 BD46     		mov	sp, r7
 619 0024 02B0     		add	sp, sp, #8
 620              		@ sp needed
 621 0026 80BD     		pop	{r7, pc}
 622              	.L58:
 623              		.align	2
 624              	.L57:
 625 0028 00000000 		.word	.LC1
 626 002c 00000000 		.word	Xil_AssertStatus
 628              		.section	.text.XUartLite_SendBuffer,"ax",%progbits
 629              		.align	1
 630              		.global	XUartLite_SendBuffer
 631              		.syntax unified
 632              		.code	16
 633              		.thumb_func
 634              		.fpu softvfp
 636              	XUartLite_SendBuffer:
 637              		@ args = 0, pretend = 0, frame = 16
 638              		@ frame_needed = 1, uses_anonymous_args = 0
 639 0000 90B5     		push	{r4, r7, lr}
 640 0002 85B0     		sub	sp, sp, #20
 641 0004 00AF     		add	r7, sp, #0
 642 0006 7860     		str	r0, [r7, #4]
 643 0008 0023     		movs	r3, #0
 644 000a FB60     		str	r3, [r7, #12]
 645 000c 7B68     		ldr	r3, [r7, #4]
 646 000e DB69     		ldr	r3, [r3, #28]
 647 0010 0833     		adds	r3, r3, #8
 648 0012 1800     		movs	r0, r3
 649 0014 FFF7FEFF 		bl	Xil_In32
 650 0018 0200     		movs	r2, r0
 651 001a 0B24     		movs	r4, #11
 652 001c 3B19     		adds	r3, r7, r4
 653 001e 1A70     		strb	r2, [r3]
 654 0020 7B68     		ldr	r3, [r7, #4]
 655 0022 DB69     		ldr	r3, [r3, #28]
 656 0024 0833     		adds	r3, r3, #8
 657 0026 1800     		movs	r0, r3
 658 0028 FFF7FEFF 		bl	Xil_In32
 659 002c 0200     		movs	r2, r0
 660 002e 3B19     		adds	r3, r7, r4
 661 0030 1A70     		strb	r2, [r3]
 662 0032 7B68     		ldr	r3, [r7, #4]
 663 0034 DB69     		ldr	r3, [r3, #28]
 664 0036 0C33     		adds	r3, r3, #12
 665 0038 0021     		movs	r1, #0
 666 003a 1800     		movs	r0, r3
 667 003c FFF7FEFF 		bl	Xil_Out32
 668 0040 0A23     		movs	r3, #10
 669 0042 FB18     		adds	r3, r7, r3
 670 0044 3A19     		adds	r2, r7, r4
 671 0046 1278     		ldrb	r2, [r2]
 672 0048 1A70     		strb	r2, [r3]
 673 004a 17E0     		b	.L60
 674              	.L62:
 675 004c 7B68     		ldr	r3, [r7, #4]
 676 004e DB69     		ldr	r3, [r3, #28]
 677 0050 181D     		adds	r0, r3, #4
 678 0052 7B68     		ldr	r3, [r7, #4]
 679 0054 5A6A     		ldr	r2, [r3, #36]
 680 0056 FB68     		ldr	r3, [r7, #12]
 681 0058 D318     		adds	r3, r2, r3
 682 005a 1B78     		ldrb	r3, [r3]
 683 005c 1900     		movs	r1, r3
 684 005e FFF7FEFF 		bl	Xil_Out32
 685 0062 FB68     		ldr	r3, [r7, #12]
 686 0064 0133     		adds	r3, r3, #1
 687 0066 FB60     		str	r3, [r7, #12]
 688 0068 7B68     		ldr	r3, [r7, #4]
 689 006a DB69     		ldr	r3, [r3, #28]
 690 006c 0833     		adds	r3, r3, #8
 691 006e 1800     		movs	r0, r3
 692 0070 FFF7FEFF 		bl	Xil_In32
 693 0074 0200     		movs	r2, r0
 694 0076 0B23     		movs	r3, #11
 695 0078 FB18     		adds	r3, r7, r3
 696 007a 1A70     		strb	r2, [r3]
 697              	.L60:
 698 007c 0B23     		movs	r3, #11
 699 007e FB18     		adds	r3, r7, r3
 700 0080 1B78     		ldrb	r3, [r3]
 701 0082 0822     		movs	r2, #8
 702 0084 1340     		ands	r3, r2
 703 0086 04D1     		bne	.L61
 704 0088 7B68     		ldr	r3, [r7, #4]
 705 008a DB6A     		ldr	r3, [r3, #44]
 706 008c FA68     		ldr	r2, [r7, #12]
 707 008e 9A42     		cmp	r2, r3
 708 0090 DCD3     		bcc	.L62
 709              	.L61:
 710 0092 7B68     		ldr	r3, [r7, #4]
 711 0094 5A6A     		ldr	r2, [r3, #36]
 712 0096 FB68     		ldr	r3, [r7, #12]
 713 0098 D218     		adds	r2, r2, r3
 714 009a 7B68     		ldr	r3, [r7, #4]
 715 009c 5A62     		str	r2, [r3, #36]
 716 009e 7B68     		ldr	r3, [r7, #4]
 717 00a0 DA6A     		ldr	r2, [r3, #44]
 718 00a2 FB68     		ldr	r3, [r7, #12]
 719 00a4 D21A     		subs	r2, r2, r3
 720 00a6 7B68     		ldr	r3, [r7, #4]
 721 00a8 DA62     		str	r2, [r3, #44]
 722 00aa 7B68     		ldr	r3, [r7, #4]
 723 00ac 9A68     		ldr	r2, [r3, #8]
 724 00ae FB68     		ldr	r3, [r7, #12]
 725 00b0 D218     		adds	r2, r2, r3
 726 00b2 7B68     		ldr	r3, [r7, #4]
 727 00b4 9A60     		str	r2, [r3, #8]
 728 00b6 0A20     		movs	r0, #10
 729 00b8 3B18     		adds	r3, r7, r0
 730 00ba 3A18     		adds	r2, r7, r0
 731 00bc 1278     		ldrb	r2, [r2]
 732 00be 1021     		movs	r1, #16
 733 00c0 0A40     		ands	r2, r1
 734 00c2 1A70     		strb	r2, [r3]
 735 00c4 7B68     		ldr	r3, [r7, #4]
 736 00c6 DB69     		ldr	r3, [r3, #28]
 737 00c8 0C33     		adds	r3, r3, #12
 738 00ca 1A00     		movs	r2, r3
 739 00cc 3B18     		adds	r3, r7, r0
 740 00ce 1B78     		ldrb	r3, [r3]
 741 00d0 1900     		movs	r1, r3
 742 00d2 1000     		movs	r0, r2
 743 00d4 FFF7FEFF 		bl	Xil_Out32
 744 00d8 FB68     		ldr	r3, [r7, #12]
 745 00da 1800     		movs	r0, r3
 746 00dc BD46     		mov	sp, r7
 747 00de 05B0     		add	sp, sp, #20
 748              		@ sp needed
 749 00e0 90BD     		pop	{r4, r7, pc}
 751              		.section	.text.XUartLite_ReceiveBuffer,"ax",%progbits
 752              		.align	1
 753              		.global	XUartLite_ReceiveBuffer
 754              		.syntax unified
 755              		.code	16
 756              		.thumb_func
 757              		.fpu softvfp
 759              	XUartLite_ReceiveBuffer:
 760              		@ args = 0, pretend = 0, frame = 16
 761              		@ frame_needed = 1, uses_anonymous_args = 0
 762 0000 90B5     		push	{r4, r7, lr}
 763 0002 85B0     		sub	sp, sp, #20
 764 0004 00AF     		add	r7, sp, #0
 765 0006 7860     		str	r0, [r7, #4]
 766 0008 0023     		movs	r3, #0
 767 000a FB60     		str	r3, [r7, #12]
 768 000c 7B68     		ldr	r3, [r7, #4]
 769 000e DB69     		ldr	r3, [r3, #28]
 770 0010 0833     		adds	r3, r3, #8
 771 0012 1800     		movs	r0, r3
 772 0014 FFF7FEFF 		bl	Xil_In32
 773 0018 0200     		movs	r2, r0
 774 001a 0B23     		movs	r3, #11
 775 001c FB18     		adds	r3, r7, r3
 776 001e 1A70     		strb	r2, [r3]
 777 0020 7B68     		ldr	r3, [r7, #4]
 778 0022 DB69     		ldr	r3, [r3, #28]
 779 0024 0C33     		adds	r3, r3, #12
 780 0026 0021     		movs	r1, #0
 781 0028 1800     		movs	r0, r3
 782 002a FFF7FEFF 		bl	Xil_Out32
 783 002e 3BE0     		b	.L65
 784              	.L70:
 785 0030 7B68     		ldr	r3, [r7, #4]
 786 0032 DB69     		ldr	r3, [r3, #28]
 787 0034 0833     		adds	r3, r3, #8
 788 0036 1800     		movs	r0, r3
 789 0038 FFF7FEFF 		bl	Xil_In32
 790 003c 0200     		movs	r2, r0
 791 003e 0A24     		movs	r4, #10
 792 0040 3B19     		adds	r3, r7, r4
 793 0042 1A70     		strb	r2, [r3]
 794 0044 3B19     		adds	r3, r7, r4
 795 0046 1B78     		ldrb	r3, [r3]
 796 0048 0122     		movs	r2, #1
 797 004a 1340     		ands	r3, r2
 798 004c 32D0     		beq	.L72
 799 004e 7B68     		ldr	r3, [r7, #4]
 800 0050 DB69     		ldr	r3, [r3, #28]
 801 0052 1800     		movs	r0, r3
 802 0054 FFF7FEFF 		bl	Xil_In32
 803 0058 7B68     		ldr	r3, [r7, #4]
 804 005a 1A6B     		ldr	r2, [r3, #48]
 805 005c FB68     		ldr	r3, [r7, #12]
 806 005e 591C     		adds	r1, r3, #1
 807 0060 F960     		str	r1, [r7, #12]
 808 0062 D318     		adds	r3, r2, r3
 809 0064 C2B2     		uxtb	r2, r0
 810 0066 1A70     		strb	r2, [r3]
 811 0068 3B19     		adds	r3, r7, r4
 812 006a 1B78     		ldrb	r3, [r3]
 813 006c 2022     		movs	r2, #32
 814 006e 1340     		ands	r3, r2
 815 0070 04D0     		beq	.L67
 816 0072 7B68     		ldr	r3, [r7, #4]
 817 0074 1B69     		ldr	r3, [r3, #16]
 818 0076 5A1C     		adds	r2, r3, #1
 819 0078 7B68     		ldr	r3, [r7, #4]
 820 007a 1A61     		str	r2, [r3, #16]
 821              	.L67:
 822 007c 0A23     		movs	r3, #10
 823 007e FB18     		adds	r3, r7, r3
 824 0080 1B78     		ldrb	r3, [r3]
 825 0082 5BB2     		sxtb	r3, r3
 826 0084 002B     		cmp	r3, #0
 827 0086 04DA     		bge	.L68
 828 0088 7B68     		ldr	r3, [r7, #4]
 829 008a 5B69     		ldr	r3, [r3, #20]
 830 008c 5A1C     		adds	r2, r3, #1
 831 008e 7B68     		ldr	r3, [r7, #4]
 832 0090 5A61     		str	r2, [r3, #20]
 833              	.L68:
 834 0092 0A23     		movs	r3, #10
 835 0094 FB18     		adds	r3, r7, r3
 836 0096 1B78     		ldrb	r3, [r3]
 837 0098 4022     		movs	r2, #64
 838 009a 1340     		ands	r3, r2
 839 009c 04D0     		beq	.L65
 840 009e 7B68     		ldr	r3, [r7, #4]
 841 00a0 9B69     		ldr	r3, [r3, #24]
 842 00a2 5A1C     		adds	r2, r3, #1
 843 00a4 7B68     		ldr	r3, [r7, #4]
 844 00a6 9A61     		str	r2, [r3, #24]
 845              	.L65:
 846 00a8 7B68     		ldr	r3, [r7, #4]
 847 00aa 9B6B     		ldr	r3, [r3, #56]
 848 00ac FA68     		ldr	r2, [r7, #12]
 849 00ae 9A42     		cmp	r2, r3
 850 00b0 BED3     		bcc	.L70
 851 00b2 00E0     		b	.L69
 852              	.L72:
 853 00b4 C046     		nop
 854              	.L69:
 855 00b6 7B68     		ldr	r3, [r7, #4]
 856 00b8 1A6B     		ldr	r2, [r3, #48]
 857 00ba FB68     		ldr	r3, [r7, #12]
 858 00bc D218     		adds	r2, r2, r3
 859 00be 7B68     		ldr	r3, [r7, #4]
 860 00c0 1A63     		str	r2, [r3, #48]
 861 00c2 7B68     		ldr	r3, [r7, #4]
 862 00c4 9A6B     		ldr	r2, [r3, #56]
 863 00c6 FB68     		ldr	r3, [r7, #12]
 864 00c8 D21A     		subs	r2, r2, r3
 865 00ca 7B68     		ldr	r3, [r7, #4]
 866 00cc 9A63     		str	r2, [r3, #56]
 867 00ce 7B68     		ldr	r3, [r7, #4]
 868 00d0 DA68     		ldr	r2, [r3, #12]
 869 00d2 FB68     		ldr	r3, [r7, #12]
 870 00d4 D218     		adds	r2, r2, r3
 871 00d6 7B68     		ldr	r3, [r7, #4]
 872 00d8 DA60     		str	r2, [r3, #12]
 873 00da 0B20     		movs	r0, #11
 874 00dc 3B18     		adds	r3, r7, r0
 875 00de 3A18     		adds	r2, r7, r0
 876 00e0 1278     		ldrb	r2, [r2]
 877 00e2 1021     		movs	r1, #16
 878 00e4 0A40     		ands	r2, r1
 879 00e6 1A70     		strb	r2, [r3]
 880 00e8 7B68     		ldr	r3, [r7, #4]
 881 00ea DB69     		ldr	r3, [r3, #28]
 882 00ec 0C33     		adds	r3, r3, #12
 883 00ee 1A00     		movs	r2, r3
 884 00f0 3B18     		adds	r3, r7, r0
 885 00f2 1B78     		ldrb	r3, [r3]
 886 00f4 1900     		movs	r1, r3
 887 00f6 1000     		movs	r0, r2
 888 00f8 FFF7FEFF 		bl	Xil_Out32
 889 00fc FB68     		ldr	r3, [r7, #12]
 890 00fe 1800     		movs	r0, r3
 891 0100 BD46     		mov	sp, r7
 892 0102 05B0     		add	sp, sp, #20
 893              		@ sp needed
 894 0104 90BD     		pop	{r4, r7, pc}
 896              		.ident	"GCC: (GNU Tools for Arm Embedded Processors 9-2019-q4-major) 9.2.1 20191025 (release) [ARM
DEFINED SYMBOLS
                            *ABS*:00000000 xuartlite.c
C:\Users\george\AppData\Local\Temp\ccMCZrOj.s:14     .text.Xil_In32:00000000 $t
C:\Users\george\AppData\Local\Temp\ccMCZrOj.s:21     .text.Xil_In32:00000000 Xil_In32
C:\Users\george\AppData\Local\Temp\ccMCZrOj.s:37     .text.Xil_Out32:00000000 $t
C:\Users\george\AppData\Local\Temp\ccMCZrOj.s:43     .text.Xil_Out32:00000000 Xil_Out32
C:\Users\george\AppData\Local\Temp\ccMCZrOj.s:63     .rodata:00000000 $d
C:\Users\george\AppData\Local\Temp\ccMCZrOj.s:67     .text.XUartLite_CfgInitialize:00000000 $t
C:\Users\george\AppData\Local\Temp\ccMCZrOj.s:74     .text.XUartLite_CfgInitialize:00000000 XUartLite_CfgInitialize
C:\Users\george\AppData\Local\Temp\ccMCZrOj.s:148    .text.XUartLite_CfgInitialize:00000088 $d
C:\Users\george\AppData\Local\Temp\ccMCZrOj.s:599    .text.StubHandler:00000000 StubHandler
C:\Users\george\AppData\Local\Temp\ccMCZrOj.s:154    .text.XUartLite_Send:00000000 $t
C:\Users\george\AppData\Local\Temp\ccMCZrOj.s:161    .text.XUartLite_Send:00000000 XUartLite_Send
C:\Users\george\AppData\Local\Temp\ccMCZrOj.s:636    .text.XUartLite_SendBuffer:00000000 XUartLite_SendBuffer
C:\Users\george\AppData\Local\Temp\ccMCZrOj.s:290    .text.XUartLite_Send:000000f4 $d
C:\Users\george\AppData\Local\Temp\ccMCZrOj.s:295    .text.XUartLite_Recv:00000000 $t
C:\Users\george\AppData\Local\Temp\ccMCZrOj.s:302    .text.XUartLite_Recv:00000000 XUartLite_Recv
C:\Users\george\AppData\Local\Temp\ccMCZrOj.s:759    .text.XUartLite_ReceiveBuffer:00000000 XUartLite_ReceiveBuffer
C:\Users\george\AppData\Local\Temp\ccMCZrOj.s:441    .text.XUartLite_Recv:00000108 $d
C:\Users\george\AppData\Local\Temp\ccMCZrOj.s:446    .text.XUartLite_ResetFifos:00000000 $t
C:\Users\george\AppData\Local\Temp\ccMCZrOj.s:453    .text.XUartLite_ResetFifos:00000000 XUartLite_ResetFifos
C:\Users\george\AppData\Local\Temp\ccMCZrOj.s:529    .text.XUartLite_ResetFifos:0000008c $d
C:\Users\george\AppData\Local\Temp\ccMCZrOj.s:534    .text.XUartLite_IsSending:00000000 $t
C:\Users\george\AppData\Local\Temp\ccMCZrOj.s:541    .text.XUartLite_IsSending:00000000 XUartLite_IsSending
C:\Users\george\AppData\Local\Temp\ccMCZrOj.s:589    .text.XUartLite_IsSending:00000054 $d
C:\Users\george\AppData\Local\Temp\ccMCZrOj.s:593    .text.StubHandler:00000000 $t
C:\Users\george\AppData\Local\Temp\ccMCZrOj.s:625    .text.StubHandler:00000028 $d
C:\Users\george\AppData\Local\Temp\ccMCZrOj.s:629    .text.XUartLite_SendBuffer:00000000 $t
C:\Users\george\AppData\Local\Temp\ccMCZrOj.s:752    .text.XUartLite_ReceiveBuffer:00000000 $t

UNDEFINED SYMBOLS
XUartLite_ClearStats
Xil_Assert
Xil_AssertStatus
