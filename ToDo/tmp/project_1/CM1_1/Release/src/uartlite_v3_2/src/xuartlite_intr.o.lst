   1              		.cpu cortex-m1
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"xuartlite_intr.c"
  12              		.text
  13              		.section	.text.Xil_In32,"ax",%progbits
  14              		.align	1
  15              		.arch armv6s-m
  16              		.syntax unified
  17              		.code	16
  18              		.thumb_func
  19              		.fpu softvfp
  21              	Xil_In32:
  22              		@ args = 0, pretend = 0, frame = 8
  23              		@ frame_needed = 1, uses_anonymous_args = 0
  24 0000 80B5     		push	{r7, lr}
  25 0002 82B0     		sub	sp, sp, #8
  26 0004 00AF     		add	r7, sp, #0
  27 0006 7860     		str	r0, [r7, #4]
  28 0008 7B68     		ldr	r3, [r7, #4]
  29 000a 1B68     		ldr	r3, [r3]
  30 000c 1800     		movs	r0, r3
  31 000e BD46     		mov	sp, r7
  32 0010 02B0     		add	sp, sp, #8
  33              		@ sp needed
  34 0012 80BD     		pop	{r7, pc}
  36              		.section	.text.Xil_Out32,"ax",%progbits
  37              		.align	1
  38              		.syntax unified
  39              		.code	16
  40              		.thumb_func
  41              		.fpu softvfp
  43              	Xil_Out32:
  44              		@ args = 0, pretend = 0, frame = 16
  45              		@ frame_needed = 1, uses_anonymous_args = 0
  46 0000 80B5     		push	{r7, lr}
  47 0002 84B0     		sub	sp, sp, #16
  48 0004 00AF     		add	r7, sp, #0
  49 0006 7860     		str	r0, [r7, #4]
  50 0008 3960     		str	r1, [r7]
  51 000a 7B68     		ldr	r3, [r7, #4]
  52 000c FB60     		str	r3, [r7, #12]
  53 000e FB68     		ldr	r3, [r7, #12]
  54 0010 3A68     		ldr	r2, [r7]
  55 0012 1A60     		str	r2, [r3]
  56 0014 C046     		nop
  57 0016 BD46     		mov	sp, r7
  58 0018 04B0     		add	sp, sp, #16
  59              		@ sp needed
  60 001a 80BD     		pop	{r7, pc}
  62              		.section	.rodata
  63              		.align	2
  64              	.LC1:
  65 0000 2E2E2F73 		.ascii	"../src/uartlite_v3_2/src/xuartlite_intr.c\000"
  65      72632F75 
  65      6172746C 
  65      6974655F 
  65      76335F32 
  66              		.section	.text.XUartLite_SetRecvHandler,"ax",%progbits
  67              		.align	1
  68              		.global	XUartLite_SetRecvHandler
  69              		.syntax unified
  70              		.code	16
  71              		.thumb_func
  72              		.fpu softvfp
  74              	XUartLite_SetRecvHandler:
  75              		@ args = 0, pretend = 0, frame = 16
  76              		@ frame_needed = 1, uses_anonymous_args = 0
  77 0000 80B5     		push	{r7, lr}
  78 0002 84B0     		sub	sp, sp, #16
  79 0004 00AF     		add	r7, sp, #0
  80 0006 F860     		str	r0, [r7, #12]
  81 0008 B960     		str	r1, [r7, #8]
  82 000a 7A60     		str	r2, [r7, #4]
  83 000c FB68     		ldr	r3, [r7, #12]
  84 000e 002B     		cmp	r3, #0
  85 0010 06D0     		beq	.L5
  86 0012 1C4B     		ldr	r3, .L14
  87 0014 0022     		movs	r2, #0
  88 0016 1A60     		str	r2, [r3]
  89 0018 BB68     		ldr	r3, [r7, #8]
  90 001a 002B     		cmp	r3, #0
  91 001c 12D0     		beq	.L8
  92 001e 08E0     		b	.L12
  93              	.L5:
  94 0020 194B     		ldr	r3, .L14+4
  95 0022 6421     		movs	r1, #100
  96 0024 1800     		movs	r0, r3
  97 0026 FFF7FEFF 		bl	Xil_Assert
  98 002a 164B     		ldr	r3, .L14
  99 002c 0122     		movs	r2, #1
 100 002e 1A60     		str	r2, [r3]
 101 0030 24E0     		b	.L4
 102              	.L12:
 103 0032 144B     		ldr	r3, .L14
 104 0034 0022     		movs	r2, #0
 105 0036 1A60     		str	r2, [r3]
 106 0038 FB68     		ldr	r3, [r7, #12]
 107 003a 1B6A     		ldr	r3, [r3, #32]
 108 003c 134A     		ldr	r2, .L14+8
 109 003e 9342     		cmp	r3, r2
 110 0040 13D1     		bne	.L10
 111 0042 08E0     		b	.L13
 112              	.L8:
 113 0044 104B     		ldr	r3, .L14+4
 114 0046 6521     		movs	r1, #101
 115 0048 1800     		movs	r0, r3
 116 004a FFF7FEFF 		bl	Xil_Assert
 117 004e 0D4B     		ldr	r3, .L14
 118 0050 0122     		movs	r2, #1
 119 0052 1A60     		str	r2, [r3]
 120 0054 12E0     		b	.L4
 121              	.L13:
 122 0056 0B4B     		ldr	r3, .L14
 123 0058 0022     		movs	r2, #0
 124 005a 1A60     		str	r2, [r3]
 125 005c FB68     		ldr	r3, [r7, #12]
 126 005e BA68     		ldr	r2, [r7, #8]
 127 0060 DA63     		str	r2, [r3, #60]
 128 0062 FB68     		ldr	r3, [r7, #12]
 129 0064 7A68     		ldr	r2, [r7, #4]
 130 0066 1A64     		str	r2, [r3, #64]
 131 0068 08E0     		b	.L4
 132              	.L10:
 133 006a 074B     		ldr	r3, .L14+4
 134 006c 6621     		movs	r1, #102
 135 006e 1800     		movs	r0, r3
 136 0070 FFF7FEFF 		bl	Xil_Assert
 137 0074 034B     		ldr	r3, .L14
 138 0076 0122     		movs	r2, #1
 139 0078 1A60     		str	r2, [r3]
 140 007a C046     		nop
 141              	.L4:
 142 007c BD46     		mov	sp, r7
 143 007e 04B0     		add	sp, sp, #16
 144              		@ sp needed
 145 0080 80BD     		pop	{r7, pc}
 146              	.L15:
 147 0082 C046     		.align	2
 148              	.L14:
 149 0084 00000000 		.word	Xil_AssertStatus
 150 0088 00000000 		.word	.LC1
 151 008c 11111111 		.word	286331153
 153              		.section	.text.XUartLite_SetSendHandler,"ax",%progbits
 154              		.align	1
 155              		.global	XUartLite_SetSendHandler
 156              		.syntax unified
 157              		.code	16
 158              		.thumb_func
 159              		.fpu softvfp
 161              	XUartLite_SetSendHandler:
 162              		@ args = 0, pretend = 0, frame = 16
 163              		@ frame_needed = 1, uses_anonymous_args = 0
 164 0000 80B5     		push	{r7, lr}
 165 0002 84B0     		sub	sp, sp, #16
 166 0004 00AF     		add	r7, sp, #0
 167 0006 F860     		str	r0, [r7, #12]
 168 0008 B960     		str	r1, [r7, #8]
 169 000a 7A60     		str	r2, [r7, #4]
 170 000c FB68     		ldr	r3, [r7, #12]
 171 000e 002B     		cmp	r3, #0
 172 0010 06D0     		beq	.L17
 173 0012 1C4B     		ldr	r3, .L26
 174 0014 0022     		movs	r2, #0
 175 0016 1A60     		str	r2, [r3]
 176 0018 BB68     		ldr	r3, [r7, #8]
 177 001a 002B     		cmp	r3, #0
 178 001c 12D0     		beq	.L20
 179 001e 08E0     		b	.L24
 180              	.L17:
 181 0020 194B     		ldr	r3, .L26+4
 182 0022 8521     		movs	r1, #133
 183 0024 1800     		movs	r0, r3
 184 0026 FFF7FEFF 		bl	Xil_Assert
 185 002a 164B     		ldr	r3, .L26
 186 002c 0122     		movs	r2, #1
 187 002e 1A60     		str	r2, [r3]
 188 0030 24E0     		b	.L16
 189              	.L24:
 190 0032 144B     		ldr	r3, .L26
 191 0034 0022     		movs	r2, #0
 192 0036 1A60     		str	r2, [r3]
 193 0038 FB68     		ldr	r3, [r7, #12]
 194 003a 1B6A     		ldr	r3, [r3, #32]
 195 003c 134A     		ldr	r2, .L26+8
 196 003e 9342     		cmp	r3, r2
 197 0040 13D1     		bne	.L22
 198 0042 08E0     		b	.L25
 199              	.L20:
 200 0044 104B     		ldr	r3, .L26+4
 201 0046 8621     		movs	r1, #134
 202 0048 1800     		movs	r0, r3
 203 004a FFF7FEFF 		bl	Xil_Assert
 204 004e 0D4B     		ldr	r3, .L26
 205 0050 0122     		movs	r2, #1
 206 0052 1A60     		str	r2, [r3]
 207 0054 12E0     		b	.L16
 208              	.L25:
 209 0056 0B4B     		ldr	r3, .L26
 210 0058 0022     		movs	r2, #0
 211 005a 1A60     		str	r2, [r3]
 212 005c FB68     		ldr	r3, [r7, #12]
 213 005e BA68     		ldr	r2, [r7, #8]
 214 0060 5A64     		str	r2, [r3, #68]
 215 0062 FB68     		ldr	r3, [r7, #12]
 216 0064 7A68     		ldr	r2, [r7, #4]
 217 0066 9A64     		str	r2, [r3, #72]
 218 0068 08E0     		b	.L16
 219              	.L22:
 220 006a 074B     		ldr	r3, .L26+4
 221 006c 8721     		movs	r1, #135
 222 006e 1800     		movs	r0, r3
 223 0070 FFF7FEFF 		bl	Xil_Assert
 224 0074 034B     		ldr	r3, .L26
 225 0076 0122     		movs	r2, #1
 226 0078 1A60     		str	r2, [r3]
 227 007a C046     		nop
 228              	.L16:
 229 007c BD46     		mov	sp, r7
 230 007e 04B0     		add	sp, sp, #16
 231              		@ sp needed
 232 0080 80BD     		pop	{r7, pc}
 233              	.L27:
 234 0082 C046     		.align	2
 235              	.L26:
 236 0084 00000000 		.word	Xil_AssertStatus
 237 0088 00000000 		.word	.LC1
 238 008c 11111111 		.word	286331153
 240              		.section	.text.XUartLite_InterruptHandler,"ax",%progbits
 241              		.align	1
 242              		.global	XUartLite_InterruptHandler
 243              		.syntax unified
 244              		.code	16
 245              		.thumb_func
 246              		.fpu softvfp
 248              	XUartLite_InterruptHandler:
 249              		@ args = 0, pretend = 0, frame = 16
 250              		@ frame_needed = 1, uses_anonymous_args = 0
 251 0000 80B5     		push	{r7, lr}
 252 0002 84B0     		sub	sp, sp, #16
 253 0004 00AF     		add	r7, sp, #0
 254 0006 7860     		str	r0, [r7, #4]
 255 0008 7B68     		ldr	r3, [r7, #4]
 256 000a 002B     		cmp	r3, #0
 257 000c 0FD0     		beq	.L29
 258 000e 164B     		ldr	r3, .L34
 259 0010 0022     		movs	r2, #0
 260 0012 1A60     		str	r2, [r3]
 261 0014 7B68     		ldr	r3, [r7, #4]
 262 0016 DB69     		ldr	r3, [r3, #28]
 263 0018 0833     		adds	r3, r3, #8
 264 001a 1800     		movs	r0, r3
 265 001c FFF7FEFF 		bl	Xil_In32
 266 0020 0300     		movs	r3, r0
 267 0022 FB60     		str	r3, [r7, #12]
 268 0024 FB68     		ldr	r3, [r7, #12]
 269 0026 0322     		movs	r2, #3
 270 0028 1340     		ands	r3, r2
 271 002a 0DD0     		beq	.L32
 272 002c 08E0     		b	.L33
 273              	.L29:
 274 002e 0F4B     		ldr	r3, .L34+4
 275 0030 A221     		movs	r1, #162
 276 0032 1800     		movs	r0, r3
 277 0034 FFF7FEFF 		bl	Xil_Assert
 278 0038 0B4B     		ldr	r3, .L34
 279 003a 0122     		movs	r2, #1
 280 003c 1A60     		str	r2, [r3]
 281 003e 0FE0     		b	.L28
 282              	.L33:
 283 0040 7B68     		ldr	r3, [r7, #4]
 284 0042 1800     		movs	r0, r3
 285 0044 FFF7FEFF 		bl	ReceiveDataHandler
 286              	.L32:
 287 0048 FB68     		ldr	r3, [r7, #12]
 288 004a 0422     		movs	r2, #4
 289 004c 1340     		ands	r3, r2
 290 004e 07D0     		beq	.L28
 291 0050 7B68     		ldr	r3, [r7, #4]
 292 0052 9B6A     		ldr	r3, [r3, #40]
 293 0054 002B     		cmp	r3, #0
 294 0056 03D0     		beq	.L28
 295 0058 7B68     		ldr	r3, [r7, #4]
 296 005a 1800     		movs	r0, r3
 297 005c FFF7FEFF 		bl	SendDataHandler
 298              	.L28:
 299 0060 BD46     		mov	sp, r7
 300 0062 04B0     		add	sp, sp, #16
 301              		@ sp needed
 302 0064 80BD     		pop	{r7, pc}
 303              	.L35:
 304 0066 C046     		.align	2
 305              	.L34:
 306 0068 00000000 		.word	Xil_AssertStatus
 307 006c 00000000 		.word	.LC1
 309              		.section	.text.ReceiveDataHandler,"ax",%progbits
 310              		.align	1
 311              		.syntax unified
 312              		.code	16
 313              		.thumb_func
 314              		.fpu softvfp
 316              	ReceiveDataHandler:
 317              		@ args = 0, pretend = 0, frame = 8
 318              		@ frame_needed = 1, uses_anonymous_args = 0
 319 0000 80B5     		push	{r7, lr}
 320 0002 82B0     		sub	sp, sp, #8
 321 0004 00AF     		add	r7, sp, #0
 322 0006 7860     		str	r0, [r7, #4]
 323 0008 7B68     		ldr	r3, [r7, #4]
 324 000a 9B6B     		ldr	r3, [r3, #56]
 325 000c 002B     		cmp	r3, #0
 326 000e 03D0     		beq	.L37
 327 0010 7B68     		ldr	r3, [r7, #4]
 328 0012 1800     		movs	r0, r3
 329 0014 FFF7FEFF 		bl	XUartLite_ReceiveBuffer
 330              	.L37:
 331 0018 7B68     		ldr	r3, [r7, #4]
 332 001a 9B6B     		ldr	r3, [r3, #56]
 333 001c 002B     		cmp	r3, #0
 334 001e 0AD1     		bne	.L38
 335 0020 7B68     		ldr	r3, [r7, #4]
 336 0022 DA6B     		ldr	r2, [r3, #60]
 337 0024 7B68     		ldr	r3, [r7, #4]
 338 0026 186C     		ldr	r0, [r3, #64]
 339 0028 7B68     		ldr	r3, [r7, #4]
 340 002a 596B     		ldr	r1, [r3, #52]
 341 002c 7B68     		ldr	r3, [r7, #4]
 342 002e 9B6B     		ldr	r3, [r3, #56]
 343 0030 CB1A     		subs	r3, r1, r3
 344 0032 1900     		movs	r1, r3
 345 0034 9047     		blx	r2
 346              	.L38:
 347 0036 7B68     		ldr	r3, [r7, #4]
 348 0038 5B68     		ldr	r3, [r3, #4]
 349 003a 5A1C     		adds	r2, r3, #1
 350 003c 7B68     		ldr	r3, [r7, #4]
 351 003e 5A60     		str	r2, [r3, #4]
 352 0040 C046     		nop
 353 0042 BD46     		mov	sp, r7
 354 0044 02B0     		add	sp, sp, #8
 355              		@ sp needed
 356 0046 80BD     		pop	{r7, pc}
 358              		.section	.text.SendDataHandler,"ax",%progbits
 359              		.align	1
 360              		.syntax unified
 361              		.code	16
 362              		.thumb_func
 363              		.fpu softvfp
 365              	SendDataHandler:
 366              		@ args = 0, pretend = 0, frame = 16
 367              		@ frame_needed = 1, uses_anonymous_args = 0
 368 0000 80B5     		push	{r7, lr}
 369 0002 84B0     		sub	sp, sp, #16
 370 0004 00AF     		add	r7, sp, #0
 371 0006 7860     		str	r0, [r7, #4]
 372 0008 7B68     		ldr	r3, [r7, #4]
 373 000a DB6A     		ldr	r3, [r3, #44]
 374 000c 002B     		cmp	r3, #0
 375 000e 0DD1     		bne	.L40
 376 0010 7B68     		ldr	r3, [r7, #4]
 377 0012 9B6A     		ldr	r3, [r3, #40]
 378 0014 FB60     		str	r3, [r7, #12]
 379 0016 7B68     		ldr	r3, [r7, #4]
 380 0018 0022     		movs	r2, #0
 381 001a 9A62     		str	r2, [r3, #40]
 382 001c 7B68     		ldr	r3, [r7, #4]
 383 001e 5A6C     		ldr	r2, [r3, #68]
 384 0020 7B68     		ldr	r3, [r7, #4]
 385 0022 9B6C     		ldr	r3, [r3, #72]
 386 0024 F968     		ldr	r1, [r7, #12]
 387 0026 1800     		movs	r0, r3
 388 0028 9047     		blx	r2
 389 002a 03E0     		b	.L41
 390              	.L40:
 391 002c 7B68     		ldr	r3, [r7, #4]
 392 002e 1800     		movs	r0, r3
 393 0030 FFF7FEFF 		bl	XUartLite_SendBuffer
 394              	.L41:
 395 0034 7B68     		ldr	r3, [r7, #4]
 396 0036 1B68     		ldr	r3, [r3]
 397 0038 5A1C     		adds	r2, r3, #1
 398 003a 7B68     		ldr	r3, [r7, #4]
 399 003c 1A60     		str	r2, [r3]
 400 003e C046     		nop
 401 0040 BD46     		mov	sp, r7
 402 0042 04B0     		add	sp, sp, #16
 403              		@ sp needed
 404 0044 80BD     		pop	{r7, pc}
 406              		.section	.text.XUartLite_DisableInterrupt,"ax",%progbits
 407              		.align	1
 408              		.global	XUartLite_DisableInterrupt
 409              		.syntax unified
 410              		.code	16
 411              		.thumb_func
 412              		.fpu softvfp
 414              	XUartLite_DisableInterrupt:
 415              		@ args = 0, pretend = 0, frame = 8
 416              		@ frame_needed = 1, uses_anonymous_args = 0
 417 0000 80B5     		push	{r7, lr}
 418 0002 82B0     		sub	sp, sp, #8
 419 0004 00AF     		add	r7, sp, #0
 420 0006 7860     		str	r0, [r7, #4]
 421 0008 7B68     		ldr	r3, [r7, #4]
 422 000a 002B     		cmp	r3, #0
 423 000c 08D0     		beq	.L43
 424 000e 174B     		ldr	r3, .L49
 425 0010 0022     		movs	r2, #0
 426 0012 1A60     		str	r2, [r3]
 427 0014 7B68     		ldr	r3, [r7, #4]
 428 0016 1B6A     		ldr	r3, [r3, #32]
 429 0018 154A     		ldr	r2, .L49+4
 430 001a 9342     		cmp	r3, r2
 431 001c 17D1     		bne	.L46
 432 001e 0BE0     		b	.L48
 433              	.L43:
 434 0020 2223     		movs	r3, #34
 435 0022 FF33     		adds	r3, r3, #255
 436 0024 1A00     		movs	r2, r3
 437 0026 134B     		ldr	r3, .L49+8
 438 0028 1100     		movs	r1, r2
 439 002a 1800     		movs	r0, r3
 440 002c FFF7FEFF 		bl	Xil_Assert
 441 0030 0E4B     		ldr	r3, .L49
 442 0032 0122     		movs	r2, #1
 443 0034 1A60     		str	r2, [r3]
 444 0036 15E0     		b	.L42
 445              	.L48:
 446 0038 0C4B     		ldr	r3, .L49
 447 003a 0022     		movs	r2, #0
 448 003c 1A60     		str	r2, [r3]
 449 003e 7B68     		ldr	r3, [r7, #4]
 450 0040 DB69     		ldr	r3, [r3, #28]
 451 0042 0C33     		adds	r3, r3, #12
 452 0044 0021     		movs	r1, #0
 453 0046 1800     		movs	r0, r3
 454 0048 FFF7FEFF 		bl	Xil_Out32
 455 004c 0AE0     		b	.L42
 456              	.L46:
 457 004e 9123     		movs	r3, #145
 458 0050 5A00     		lsls	r2, r3, #1
 459 0052 084B     		ldr	r3, .L49+8
 460 0054 1100     		movs	r1, r2
 461 0056 1800     		movs	r0, r3
 462 0058 FFF7FEFF 		bl	Xil_Assert
 463 005c 034B     		ldr	r3, .L49
 464 005e 0122     		movs	r2, #1
 465 0060 1A60     		str	r2, [r3]
 466 0062 C046     		nop
 467              	.L42:
 468 0064 BD46     		mov	sp, r7
 469 0066 02B0     		add	sp, sp, #8
 470              		@ sp needed
 471 0068 80BD     		pop	{r7, pc}
 472              	.L50:
 473 006a C046     		.align	2
 474              	.L49:
 475 006c 00000000 		.word	Xil_AssertStatus
 476 0070 11111111 		.word	286331153
 477 0074 00000000 		.word	.LC1
 479              		.section	.text.XUartLite_EnableInterrupt,"ax",%progbits
 480              		.align	1
 481              		.global	XUartLite_EnableInterrupt
 482              		.syntax unified
 483              		.code	16
 484              		.thumb_func
 485              		.fpu softvfp
 487              	XUartLite_EnableInterrupt:
 488              		@ args = 0, pretend = 0, frame = 8
 489              		@ frame_needed = 1, uses_anonymous_args = 0
 490 0000 80B5     		push	{r7, lr}
 491 0002 82B0     		sub	sp, sp, #8
 492 0004 00AF     		add	r7, sp, #0
 493 0006 7860     		str	r0, [r7, #4]
 494 0008 7B68     		ldr	r3, [r7, #4]
 495 000a 002B     		cmp	r3, #0
 496 000c 08D0     		beq	.L52
 497 000e 174B     		ldr	r3, .L58
 498 0010 0022     		movs	r2, #0
 499 0012 1A60     		str	r2, [r3]
 500 0014 7B68     		ldr	r3, [r7, #4]
 501 0016 1B6A     		ldr	r3, [r3, #32]
 502 0018 154A     		ldr	r2, .L58+4
 503 001a 9342     		cmp	r3, r2
 504 001c 17D1     		bne	.L55
 505 001e 0BE0     		b	.L57
 506              	.L52:
 507 0020 4023     		movs	r3, #64
 508 0022 FF33     		adds	r3, r3, #255
 509 0024 1A00     		movs	r2, r3
 510 0026 134B     		ldr	r3, .L58+8
 511 0028 1100     		movs	r1, r2
 512 002a 1800     		movs	r0, r3
 513 002c FFF7FEFF 		bl	Xil_Assert
 514 0030 0E4B     		ldr	r3, .L58
 515 0032 0122     		movs	r2, #1
 516 0034 1A60     		str	r2, [r3]
 517 0036 15E0     		b	.L51
 518              	.L57:
 519 0038 0C4B     		ldr	r3, .L58
 520 003a 0022     		movs	r2, #0
 521 003c 1A60     		str	r2, [r3]
 522 003e 7B68     		ldr	r3, [r7, #4]
 523 0040 DB69     		ldr	r3, [r3, #28]
 524 0042 0C33     		adds	r3, r3, #12
 525 0044 1021     		movs	r1, #16
 526 0046 1800     		movs	r0, r3
 527 0048 FFF7FEFF 		bl	Xil_Out32
 528 004c 0AE0     		b	.L51
 529              	.L55:
 530 004e A023     		movs	r3, #160
 531 0050 5A00     		lsls	r2, r3, #1
 532 0052 084B     		ldr	r3, .L58+8
 533 0054 1100     		movs	r1, r2
 534 0056 1800     		movs	r0, r3
 535 0058 FFF7FEFF 		bl	Xil_Assert
 536 005c 034B     		ldr	r3, .L58
 537 005e 0122     		movs	r2, #1
 538 0060 1A60     		str	r2, [r3]
 539 0062 C046     		nop
 540              	.L51:
 541 0064 BD46     		mov	sp, r7
 542 0066 02B0     		add	sp, sp, #8
 543              		@ sp needed
 544 0068 80BD     		pop	{r7, pc}
 545              	.L59:
 546 006a C046     		.align	2
 547              	.L58:
 548 006c 00000000 		.word	Xil_AssertStatus
 549 0070 11111111 		.word	286331153
 550 0074 00000000 		.word	.LC1
 552              		.ident	"GCC: (GNU Tools for Arm Embedded Processors 9-2019-q4-major) 9.2.1 20191025 (release) [ARM
DEFINED SYMBOLS
                            *ABS*:00000000 xuartlite_intr.c
C:\Users\jl241\AppData\Local\Temp\cc5MjQIz.s:14     .text.Xil_In32:00000000 $t
C:\Users\jl241\AppData\Local\Temp\cc5MjQIz.s:21     .text.Xil_In32:00000000 Xil_In32
C:\Users\jl241\AppData\Local\Temp\cc5MjQIz.s:37     .text.Xil_Out32:00000000 $t
C:\Users\jl241\AppData\Local\Temp\cc5MjQIz.s:43     .text.Xil_Out32:00000000 Xil_Out32
C:\Users\jl241\AppData\Local\Temp\cc5MjQIz.s:63     .rodata:00000000 $d
C:\Users\jl241\AppData\Local\Temp\cc5MjQIz.s:67     .text.XUartLite_SetRecvHandler:00000000 $t
C:\Users\jl241\AppData\Local\Temp\cc5MjQIz.s:74     .text.XUartLite_SetRecvHandler:00000000 XUartLite_SetRecvHandler
C:\Users\jl241\AppData\Local\Temp\cc5MjQIz.s:149    .text.XUartLite_SetRecvHandler:00000084 $d
C:\Users\jl241\AppData\Local\Temp\cc5MjQIz.s:154    .text.XUartLite_SetSendHandler:00000000 $t
C:\Users\jl241\AppData\Local\Temp\cc5MjQIz.s:161    .text.XUartLite_SetSendHandler:00000000 XUartLite_SetSendHandler
C:\Users\jl241\AppData\Local\Temp\cc5MjQIz.s:236    .text.XUartLite_SetSendHandler:00000084 $d
C:\Users\jl241\AppData\Local\Temp\cc5MjQIz.s:241    .text.XUartLite_InterruptHandler:00000000 $t
C:\Users\jl241\AppData\Local\Temp\cc5MjQIz.s:248    .text.XUartLite_InterruptHandler:00000000 XUartLite_InterruptHandler
C:\Users\jl241\AppData\Local\Temp\cc5MjQIz.s:316    .text.ReceiveDataHandler:00000000 ReceiveDataHandler
C:\Users\jl241\AppData\Local\Temp\cc5MjQIz.s:365    .text.SendDataHandler:00000000 SendDataHandler
C:\Users\jl241\AppData\Local\Temp\cc5MjQIz.s:306    .text.XUartLite_InterruptHandler:00000068 $d
C:\Users\jl241\AppData\Local\Temp\cc5MjQIz.s:310    .text.ReceiveDataHandler:00000000 $t
C:\Users\jl241\AppData\Local\Temp\cc5MjQIz.s:359    .text.SendDataHandler:00000000 $t
C:\Users\jl241\AppData\Local\Temp\cc5MjQIz.s:407    .text.XUartLite_DisableInterrupt:00000000 $t
C:\Users\jl241\AppData\Local\Temp\cc5MjQIz.s:414    .text.XUartLite_DisableInterrupt:00000000 XUartLite_DisableInterrupt
C:\Users\jl241\AppData\Local\Temp\cc5MjQIz.s:475    .text.XUartLite_DisableInterrupt:0000006c $d
C:\Users\jl241\AppData\Local\Temp\cc5MjQIz.s:480    .text.XUartLite_EnableInterrupt:00000000 $t
C:\Users\jl241\AppData\Local\Temp\cc5MjQIz.s:487    .text.XUartLite_EnableInterrupt:00000000 XUartLite_EnableInterrupt
C:\Users\jl241\AppData\Local\Temp\cc5MjQIz.s:548    .text.XUartLite_EnableInterrupt:0000006c $d

UNDEFINED SYMBOLS
Xil_Assert
Xil_AssertStatus
XUartLite_ReceiveBuffer
XUartLite_SendBuffer
